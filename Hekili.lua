
HekiliDB = {
["namespaces"] = {
},
["profileKeys"] = {
["这一世我摸鱼 - 国王之谷"] = "Default",
["Beppan - Tichondrius"] = "Default",
["这一世我无敌 - 国王之谷"] = "Default",
["Rage - 金色平原"] = "Default",
["一键扫荡 - 国王之谷"] = "Default",
["Veneno - Tichondrius"] = "Default",
["Zehir - Tichondrius"] = "Default",
["Shado - 国王之谷"] = "Default",
["Lolth - 国王之谷"] = "Default",
["鉄観音 - 国王之谷"] = "Default",
["福音 - 萨格拉斯"] = "Default",
["Imvb - 国王之谷"] = "Default",
["效果拔群 - 国王之谷"] = "Default",
["Laofuzi - 国王之谷"] = "Default",
["Rage - 暗影之月"] = "Default",
["Tempest - 国王之谷"] = "Default",
["Are - 国王之谷"] = "Default",
["我要穿越 - 国王之谷"] = "Default",
["那能一样吗 - 国王之谷"] = "Default",
["Laperte - Tichondrius"] = "Default",
["这一世我咸鱼 - 雏龙之翼"] = "Default",
["Azuth - 暗影之月"] = "Default",
["Pazuru - Tichondrius"] = "Default",
["Typ - Tichondrius"] = "Default",
["Typhoon - 国王之谷"] = "Default",
["Diabo - Tichondrius"] = "Default",
["落英神剑掌 - 国王之谷"] = "Default",
["假行僧 - 国王之谷"] = "Default",
["你压力大吗 - 国王之谷"] = "Default",
["桀桀 - 萨格拉斯"] = "Default",
["Zxcvb - 国王之谷"] = "Default",
["Zealot - 国王之谷"] = "Default",
["Epic - 国王之谷"] = "Default",
["Wokao - Tichondrius"] = "Default",
["歌丹恩丶石戒 - 金色平原"] = "Default",
["这一世做咸鱼 - 国王之谷"] = "Default",
["Voodo - Tichondrius"] = "Default",
["Tempos - Tichondrius"] = "Default",
["Aqei - Tichondrius"] = "Default",
},
["profiles"] = {
["Default"] = {
["displays"] = {
["Interrupts"] = {
["rel"] = "CENTER",
},
["Cooldowns"] = {
["rel"] = "CENTER",
},
["Primary"] = {
["keybindings"] = {
["enabled"] = false,
},
["rel"] = "CENTER",
["y"] = -346.8412780761719,
["x"] = -1217.53125,
},
["Defensives"] = {
["rel"] = "CENTER",
},
["AOE"] = {
["rel"] = "CENTER",
},
},
["iconStore"] = {
["minimapPos"] = 292.269037631008,
},
["toggles"] = {
["interrupts"] = {
["value"] = false,
},
["cooldowns"] = {
["value"] = false,
},
["defensives"] = {
["value"] = false,
},
},
["runOnce"] = {
["forceReloadClassDefaultOptions_20220306_103"] = true,
["removeOldThrottles_20241115"] = true,
["forceReloadClassDefaultOptions_20220306_105"] = true,
["forceReloadClassDefaultOptions_20220306_252"] = true,
["forceReloadClassDefaultOptions_20220306_71"] = true,
["forceReloadClassDefaultOptions_20220306_257"] = true,
["forceReloadClassDefaultOptions_20220306_577"] = true,
["forceSpellFlashBrightness_20221030"] = true,
["forceEnableAllClassesOnceDueToBug_20220225"] = true,
["forceReloadClassDefaultOptions_20220306_256"] = true,
["forceReloadClassDefaultOptions_20220306_102"] = true,
["forceReloadClassDefaultOptions_20220306_269"] = true,
["forceReloadAllDefaultPriorities_20220228"] = true,
["forceReloadClassDefaultOptions_20220306_270"] = true,
["forceReloadClassDefaultOptions_20220306_258"] = true,
["forceReloadClassDefaultOptions_20220306_65"] = true,
["forceReloadClassDefaultOptions_20220306_70"] = true,
["forceReloadClassDefaultOptions_20220306_66"] = true,
["forceReloadClassDefaultOptions_20220306_251"] = true,
["forceReloadClassDefaultOptions_20220306_73"] = true,
["forceReloadClassDefaultOptions_20220306_581"] = true,
["forceReloadClassDefaultOptions_20220306_268"] = true,
["forceReloadClassDefaultOptions_20220306_72"] = true,
["fixHavocPriorityVersion_20240805"] = true,
["forceReloadClassDefaultOptions_20220306_104"] = true,
["forceReloadClassDefaultOptions_20220306_250"] = true,
["resetAberrantPackageDates_20190728_1"] = true,
},
["specs"] = {
[270] = {
["settings"] = {
["aoe_rsk"] = false,
["single_zen_pulse"] = false,
["save_faeline"] = false,
},
},
[66] = {
["settings"] = {
["bosp_filter"] = false,
["wog_health"] = 40,
["sentinel_def"] = false,
["ds_damage"] = 60,
["loh_health"] = 30,
["goak_damage"] = 40,
["ad_damage"] = 40,
},
},
[256] = {
["settings"] = {
["sw_death_protection"] = 50,
},
},
[70] = {
["settings"] = {
["sov_damage"] = 20,
["check_wake_range"] = false,
},
},
[103] = {
["settings"] = {
["vigil_damage"] = 50,
["solo_prowl"] = false,
["regrowth"] = true,
["lazy_swipe"] = false,
["frenzy_cp"] = 2,
["rip_duration"] = 9,
["allow_crit_prediction"] = true,
},
},
[105] = {
["settings"] = {
["healing_mode"] = false,
},
},
[257] = {
["abilities"] = {
["halo"] = {
["disabled"] = true,
},
},
["settings"] = {
["sw_death_protection"] = 50,
},
},
[577] = {
["settings"] = {
["fel_rush_charges"] = 0,
["retreat_filler"] = false,
["demon_blades_acknowledged"] = false,
["throw_glaive_charges"] = 0,
["retreat_and_return"] = "off",
},
},
[258] = {
["settings"] = {
["pad_void_bolt"] = true,
["pad_ascended_blast"] = true,
["sw_death_protection"] = 50,
["hold_crash"] = 0,
},
["nameplates"] = true,
},
[252] = {
["settings"] = {
["dnd_while_moving"] = true,
["dps_shell"] = false,
},
},
[250] = {
["settings"] = {
["death_strike_pool_amount"] = 80,
["save_blood_shield"] = false,
["dnd_while_moving"] = false,
["vb_damage"] = 50,
["ibf_damage"] = 40,
["rt_damage"] = 30,
},
["abilities"] = {
["death_strike"] = {
["disabled"] = true,
},
["vampiric_blood"] = {
["toggle"] = "essences",
},
},
},
[581] = {
["settings"] = {
["infernal_charges"] = 1,
["brand_charges"] = 0,
},
},
[102] = {
["settings"] = {
["vigil_damage"] = 50,
["starlord_cancel"] = false,
},
},
[71] = {
["settings"] = {
["shockwave_interrupt"] = true,
["spell_reflection_filter"] = true,
["heroic_charge"] = false,
},
},
[104] = {
["settings"] = {
["vigil_damage"] = 50,
["catweave_bear"] = false,
["ironfur_damage_threshold"] = 5,
["maul_rage"] = 20,
["max_ironfur"] = 1,
},
},
[73] = {
["package"] = "Protection Warrior Tank",
["abilities"] = {
["ignore_pain"] = {
["toggle"] = "none",
},
["shield_charge"] = {
["disabled"] = true,
},
["avatar"] = {
["disabled"] = true,
},
["champions_spear"] = {
["disabled"] = true,
},
["impending_victory"] = {
["disabled"] = true,
},
["thunderous_roar"] = {
["disabled"] = true,
},
["fireblood"] = {
["disabled"] = true,
},
},
["settings"] = {
["shield_wall_amount"] = 20,
["rallying_cry_amount"] = 25,
["shockwave_interrupt"] = true,
["spell_reflection_filter"] = true,
["victory_rush_health"] = 75,
["stack_shield_block"] = false,
["stance_weaving"] = false,
["shield_wall_health"] = 75,
["last_stand_amount"] = 25,
["last_stand_health"] = 70,
["rallying_cry_health"] = 80,
["reserve_rage"] = 35,
},
},
[268] = {
["settings"] = {
["vivify_percent"] = 65,
["max_damage"] = true,
["purify_stagger_maxhp"] = 6,
["purify_for_celestial"] = true,
["purify_for_niuzao"] = true,
["bof_percent"] = 50,
["eh_percent"] = 65,
["purify_stagger_currhp"] = 12,
},
},
[269] = {
["settings"] = {
["sef_one_charge"] = false,
["tok_damage"] = 1,
["cjl_capacitor_toggle"] = "none",
["dynamic_strike_of_the_windlord"] = false,
["allow_fsk"] = false,
["use_diffuse"] = false,
["check_sck_range"] = false,
["check_wdp_range"] = false,
},
},
[251] = {
["settings"] = {
["dnd_while_moving"] = true,
["ams_usage"] = "damage",
},
},
[72] = {
["settings"] = {
["check_ww_range"] = false,
["charge_min_range"] = 10,
["spell_reflection_filter"] = true,
["shockwave_interrupt"] = true,
["t30_bloodthirst_crit"] = 95,
["heroic_charge"] = false,
},
},
},
["notifications"] = {
["enabled"] = false,
},
["packs"] = {
["Windwalker"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewrwithin/profiles/PreRaids/PR_Monk_Windwalker.simc",
["builtIn"] = true,
["date"] = 20250912,
["spec"] = 269,
["desc"] = "2025-09-12: Xuen fixes\n2025-08-22: Sync with SimC",
["lists"] = {
["fallback"] = {
{
["enabled"] = true,
["action"] = "spinning_crane_kick",
["description"] = "Fallback",
["criteria"] = "chi > 5 & combo_strike",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi > 3",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi > 5",
["action"] = "tiger_palm",
},
},
["default_cleave"] = {
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
["description"] = "2-4 targets",
["criteria"] = "buff.storm_earth_and_fire.remains > 13 & combo_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.gale_force.enabled & cooldown.invoke_xuen_the_white_tiger.remains > 10 & set_bonus.tww3_2pc & ! talent.flurry_strikes.enabled",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tww3_2pc & talent.celestial_conduit.enabled & variable.small_hotjs_active & ! talent.flurry_strikes.enabled",
["action"] = "slicing_winds",
},
{
["enabled"] = true,
["criteria"] = "buff.dance_of_chiji.stack = 2 & combo_strike",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "variable.small_hotjs_active & buff.dance_of_chiji.stack < 2",
["action"] = "whirling_dragon_punch",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up & active_enemies < 4 & cooldown.fists_of_fury.remains > 4",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "cooldown.whirling_dragon_punch.remains < 2 & cooldown.fists_of_fury.remains > 1 & buff.dance_of_chiji.stack < 2",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.stack = 2 & active_enemies > 3",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( energy > 55 & talent.inner_peace.enabled || energy > 60 & ! talent.inner_peace.enabled ) & combo_strike & chi.max - chi >= 2 & buff.teachings_of_the_monastery.stack < buff.teachings_of_the_monastery.max_stack & ( talent.energy_burst.enabled & ! buff.bok_proc.up || ! talent.energy_burst.enabled ) & ! buff.ordered_elements.up || ( talent.energy_burst.enabled & ! buff.bok_proc.up || ! talent.energy_burst.enabled ) & ! buff.ordered_elements.up & ! cooldown.fists_of_fury.remains & chi < 3 || ( prev.strike_of_the_windlord || cooldown.strike_of_the_windlord.remains ) & cooldown.celestial_conduit.remains < 2 & buff.ordered_elements.up & chi < 5 & combo_strike || ( ! variable.small_hotjs_active || ! buff.heart_of_the_jade_serpent_cdr_celestial.up ) & combo_strike & chi.deficit >= 2 & ! buff.ordered_elements.up",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "! variable.small_hotjs_active & ! buff.heart_of_the_jade_serpent_cdr_celestial.up",
["action"] = "touch_of_death",
},
{
["enabled"] = true,
["criteria"] = "variable.small_hotjs_active & buff.dance_of_chiji.stack < 2",
["action"] = "whirling_dragon_punch",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.dance_of_chiji.stack < 2",
["action"] = "whirling_dragon_punch",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.small_hotjs_active || buff.heart_of_the_jade_serpent_cdr_celestial.up",
["action"] = "slicing_winds",
},
{
["enabled"] = true,
["criteria"] = "buff.storm_earth_and_fire.up & debuff.gale_force.remains < 5 & cooldown.strike_of_the_windlord.remains & ( ! buff.heart_of_the_jade_serpent_cdr.up || debuff.gale_force.remains < 5 ) & ( talent.xuens_bond.enabled || ! talent.xuens_bond.enabled & buff.invokers_delight.up ) || boss & fight_remains < 15 || buff.invokers_delight.up & cooldown.strike_of_the_windlord.remains & buff.storm_earth_and_fire.remains < 8",
["action"] = "celestial_conduit",
},
{
["enabled"] = true,
["criteria"] = "buff.invoke_xuen_the_white_tiger.down & prev.tiger_palm & time < 5 || variable.small_hotjs_active & buff.pressure_point.up & cooldown.fists_of_fury.remains & ( talent.glory_of_the_dawn.enabled || active_enemies < 3 )",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.heart_of_the_jade_serpent_cdr_celestial.up || variable.small_hotjs_active",
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.heart_of_the_jade_serpent_cdr_celestial.up",
["action"] = "whirling_dragon_punch",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.gale_force.enabled & buff.invokers_delight.up & ( buff.bloodlust.up || ! buff.heart_of_the_jade_serpent_cdr_celestial.up )",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & buff.bloodlust.up",
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & buff.bloodlust.up & active_enemies < 3",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 8 & ( active_enemies < 3 || talent.shadowboxing_treads.enabled )",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.storm_earth_and_fire.remains > 2 & talent.flurry_strikes.enabled & ! talent.xuens_battlegear.enabled & set_bonus.tww3_4pc",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "! talent.revolving_whirl.enabled || talent.revolving_whirl.enabled & buff.dance_of_chiji.stack < 2 & active_enemies > 2 || active_enemies < 3",
["action"] = "whirling_dragon_punch",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "time > 5 & ( cooldown.invoke_xuen_the_white_tiger.remains > 15 || talent.flurry_strikes.enabled ) & ( cooldown.fists_of_fury.remains < 2 || cooldown.celestial_conduit.remains < 10 )",
["action"] = "strike_of_the_windlord",
},
{
["action"] = "slicing_winds",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.the_emperors_capacitor.stack > 19 & combo_strike & talent.power_of_the_thunder_king.enabled & cooldown.invoke_xuen_the_white_tiger.remains > 10",
["action"] = "crackling_jade_lightning",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.stack = 2",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled & active_enemies < 5 & buff.wisdom_of_the_wall_flurry.up & active_enemies < 4",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "( talent.flurry_strikes.enabled || talent.xuens_battlegear.enabled || ! talent.xuens_battlegear.enabled & ( cooldown.strike_of_the_windlord.remains > 1 || variable.small_hotjs_active || buff.heart_of_the_jade_serpent_cdr_celestial.up ) ) & ( talent.flurry_strikes.enabled || talent.xuens_battlegear.enabled & ( cooldown.invoke_xuen_the_white_tiger.remains > 5 || cooldown.invoke_xuen_the_white_tiger.remains > 9 ) || cooldown.invoke_xuen_the_white_tiger.remains > 10 )",
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled & active_enemies < 5 & buff.wisdom_of_the_wall_flurry.up",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up & buff.chi_energy.stack > 29",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "chi > 4 & ( active_enemies < 3 || talent.glory_of_the_dawn.enabled ) || chi > 2 & energy > 50 & ( active_enemies < 3 || talent.glory_of_the_dawn.enabled ) || cooldown.fists_of_fury.remains > 2 & ( active_enemies < 3 || talent.glory_of_the_dawn.enabled )",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.shadowboxing_treads.enabled & talent.courageous_impulse.enabled & combo_strike & buff.bok_proc.stack = 2",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 4 & ! talent.knowledge_of_the_broken_temple.enabled & talent.shadowboxing_treads.enabled & active_enemies < 3",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.shadowboxing_treads.enabled & talent.courageous_impulse.enabled & combo_strike & buff.bok_proc.up",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled & active_enemies < 5",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi.deficit >= 2 & ( ! buff.ordered_elements.up || energy.time_to_max <= gcd.max * 3 )",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains & buff.teachings_of_the_monastery.stack > 3 & cooldown.rising_sun_kick.remains",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.Singularly_Focused_Jade.enabled || talent.jadefire_harmony.enabled",
["action"] = "jadefire_stomp",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains & ( buff.teachings_of_the_monastery.stack > 3 || buff.ordered_elements.up ) & ( talent.shadowboxing_treads.enabled || buff.bok_proc.up || buff.ordered_elements.up )",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ! buff.ordered_elements.up & talent.crane_vortex.enabled & active_enemies > 2 & chi > 4",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.ordered_elements.up",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( buff.ordered_elements.up || buff.bok_proc.up & chi.deficit >= 1 & talent.energy_burst.enabled ) & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains & ( chi > 2 || energy > 60 || buff.bok_proc.up )",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "debuff.acclamation.stack",
["action"] = "jadefire_stomp",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & chi.deficit >= 1",
["action"] = "tiger_palm",
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & talent.hit_combo.enabled",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.ordered_elements.up & ! talent.hit_combo.enabled & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ! cooldown.fists_of_fury.remains & prev.tiger_palm",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "prev.tiger_palm & chi < 3 & ! cooldown.fists_of_fury.remains",
["action"] = "tiger_palm",
},
},
["default_st"] = {
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["description"] = "1 target",
["criteria"] = "combo_strike & buff.pressure_point.up & variable.small_hotjs_active",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tww3_2pc & talent.celestial_conduit.enabled & variable.small_hotjs_active",
["action"] = "slicing_winds",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ! cooldown.celestial_conduit.remains & buff.pressure_point.up & chi < 5 & time < 10",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( buff.pressure_point.up & ! variable.small_hotjs_active & buff.heart_of_the_jade_serpent_cdr_celestial.up || buff.invokers_delight.up || buff.bloodlust.up || buff.pressure_point.up & cooldown.fists_of_fury.remains )",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "chi < 5 & combo_strike & ! variable.small_hotjs_active & ! buff.heart_of_the_jade_serpent_cdr_celestial.up & energy.time_to_max <= gcd.max * 3",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.storm_earth_and_fire.remains > 2 & talent.flurry_strikes.enabled & set_bonus.tww3_4pc",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.storm_earth_and_fire.remains & talent.flurry_strikes.enabled & set_bonus.tww3_4pc & ! buff.bloodlust.up",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "! buff.heart_of_the_jade_serpent_cdr_celestial.up & ! buff.dance_of_chiji.stack = 2 & ! set_bonus.tww3_2pc",
["action"] = "whirling_dragon_punch",
},
{
["enabled"] = true,
["criteria"] = "buff.storm_earth_and_fire.up & ( ! buff.heart_of_the_jade_serpent_cdr.up || debuff.gale_force.remains < 5 ) & cooldown.strike_of_the_windlord.remains & ( talent.xuens_bond.enabled || ! talent.xuens_bond.enabled & buff.invokers_delight.up ) || buff.invokers_delight.up & cooldown.strike_of_the_windlord.remains & buff.storm_earth_and_fire.remains < 8 || boss & fight_remains < 10",
["action"] = "celestial_conduit",
},
{
["enabled"] = true,
["criteria"] = "chi < 5 & combo_strike & variable.small_hotjs_active & ! buff.heart_of_the_jade_serpent_cdr_celestial.up & energy.time_to_max <= gcd.max * 3 & ! buff.invokers_delight.up & ! buff.bloodlust.up & ! buff.storm_earth_and_fire.up",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.heart_of_the_jade_serpent_cdr_celestial.up || variable.small_hotjs_active",
["action"] = "fists_of_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.dance_of_chiji.stack = 2 & combo_strike & ( ! set_bonus.tww3_2pc || ! buff.bloodlust.up ) & ! talent.flurry_strikes.enabled",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "( energy > 55 & talent.inner_peace.enabled || energy > 60 & ! talent.inner_peace.enabled ) & combo_strike & chi.max - chi >= 2 & buff.teachings_of_the_monastery.stack < buff.teachings_of_the_monastery.max_stack & ( talent.energy_burst.enabled & ! buff.bok_proc.up || ! talent.energy_burst.enabled ) & ! buff.ordered_elements.up || ( talent.energy_burst.enabled & ! buff.bok_proc.up || ! talent.energy_burst.enabled ) & ! buff.ordered_elements.up & ! cooldown.fists_of_fury.remains & chi < 3 || ( prev.strike_of_the_windlord || ! buff.heart_of_the_jade_serpent_cdr_celestial.up ) & combo_strike & chi.deficit >= 2 & ! buff.ordered_elements.up",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["action"] = "touch_of_death",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( buff.invoke_xuen_the_white_tiger.down & prev.tiger_palm & time < 5 || buff.storm_earth_and_fire.up & talent.ordered_elements.enabled )",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "! buff.heart_of_the_jade_serpent_cdr_celestial.up & talent.celestial_conduit.enabled & ! buff.invokers_delight.up & ! buff.heart_of_the_jade_serpent_cdr_celestial.up & cooldown.fists_of_fury.remains < 5 & cooldown.invoke_xuen_the_white_tiger.remains > 15 & ( cooldown.slicing_winds.remains < 23 || ! set_bonus.tww3_2pc ) || boss & fight_remains < 12",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "talent.gale_force.enabled & cooldown.invoke_xuen_the_white_tiger.remains > 10",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "time > 5 & talent.flurry_strikes.enabled",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "time > 15 & set_bonus.tww3_2pc & cooldown.invoke_xuen_the_white_tiger.remains > 15 & ( cooldown.slicing_winds.remains < 23 || ! set_bonus.tww3_2pc )",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "buff.dance_of_chiji.stack = 2 & combo_strike & ! talent.flurry_strikes.enabled",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack > 3 & buff.ordered_elements.up & cooldown.rising_sun_kick.remains > 1 & cooldown.fists_of_fury.remains > 2 & ! set_bonus.tww3_2pc",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack > 4 & cooldown.rising_sun_kick.remains > 1 & cooldown.fists_of_fury.remains > 2 & ! set_bonus.tww3_2pc",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tww3_2pc",
["action"] = "whirling_dragon_punch",
},
{
["enabled"] = true,
["criteria"] = "! buff.heart_of_the_jade_serpent_cdr_celestial.up & ! buff.dance_of_chiji.stack = 2 || buff.ordered_elements.up || talent.knowledge_of_the_broken_temple.enabled",
["action"] = "whirling_dragon_punch",
},
{
["enabled"] = true,
["criteria"] = "buff.the_emperors_capacitor.stack > 19 & ! variable.small_hotjs_active & ! buff.heart_of_the_jade_serpent_cdr_celestial.up & combo_strike & fight_remains > 20 & cooldown.invoke_xuen_the_white_tiger.remains > 15",
["action"] = "crackling_jade_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.the_emperors_capacitor.stack > 20 & ! variable.small_hotjs_active & ! buff.heart_of_the_jade_serpent_cdr_celestial.up & combo_strike & fight_remains > 20 & cooldown.invoke_xuen_the_white_tiger.remains < 20 & cooldown.invoke_xuen_the_white_tiger.remains > 2",
["action"] = "crackling_jade_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.the_emperors_capacitor.stack > 10 & fight_remains < 5 || buff.storm_earth_and_fire.remains < 2 & buff.the_emperors_capacitor.stack > 15 & buff.storm_earth_and_fire.up",
["action"] = "crackling_jade_lightning",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_die > 10 & ! set_bonus.tww3_4pc || talent.flurry_strikes.enabled",
["action"] = "slicing_winds",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( chi > 4 || chi > 2 & energy > 50 || cooldown.fists_of_fury.remains > 2 )",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "( talent.xuens_battlegear.enabled || ! talent.xuens_battlegear.enabled & ( cooldown.strike_of_the_windlord.remains > 1 || variable.small_hotjs_active || buff.heart_of_the_jade_serpent_cdr_celestial.up ) ) & ( talent.xuens_battlegear.enabled & cooldown.invoke_xuen_the_white_tiger.remains > 5 || cooldown.invoke_xuen_the_white_tiger.remains > 10 ) & ( ! buff.invokers_delight.up || buff.invokers_delight.up & cooldown.strike_of_the_windlord.remains > 4 & cooldown.celestial_conduit.remains ) || fight_remains < 5 || talent.flurry_strikes.enabled",
["action"] = "fists_of_fury",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled & buff.wisdom_of_the_wall_flurry.up",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi < 5 & set_bonus.tww3_2pc",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "buff.dance_of_chiji.stack = 2 & combo_strike",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & talent.energy_burst.enabled & buff.bok_proc.up & chi < 5 & ( variable.small_hotjs_active || buff.heart_of_the_jade_serpent_cdr_celestial.up )",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.bloodlust.up & variable.small_hotjs_active & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi.deficit >= 2 & energy.time_to_max <= gcd.max * 3",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack > 7 & talent.memory_of_the_monastery.enabled & ! buff.memory_of_the_monastery.up & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "( buff.dance_of_chiji.stack = 2 || buff.dance_of_chiji.remains < 2 & buff.dance_of_chiji.up ) & combo_strike & ! buff.ordered_elements.up",
["action"] = "spinning_crane_kick",
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.dance_of_chiji.stack = 2 & combo_strike",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.courageous_impulse.enabled & combo_strike & buff.bok_proc.stack = 2",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.dance_of_chiji.up & set_bonus.tww3_2pc & combo_strike",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & cooldown.rising_sun_kick.remains > 1 & cooldown.fists_of_fury.remains > 2",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up & ( buff.ordered_elements.up || energy.time_to_max >= gcd.max * 3 & talent.sequenced_strikes.enabled & talent.energy_burst.enabled || ! talent.sequenced_strikes.enabled || ! talent.energy_burst.enabled || buff.dance_of_chiji.remains <= gcd.max * 3 )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "talent.Singularly_Focused_Jade.enabled || talent.jadefire_harmony.enabled",
["action"] = "jadefire_stomp",
},
{
["enabled"] = true,
["criteria"] = "! buff.ordered_elements.up",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( buff.ordered_elements.up || buff.bok_proc.up & chi.deficit >= 1 & talent.energy_burst.enabled ) & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains & ( chi > 2 || energy > 60 || buff.bok_proc.up )",
["action"] = "blackout_kick",
},
{
["action"] = "jadefire_stomp",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & chi.deficit >= 1",
["action"] = "tiger_palm",
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & talent.hit_combo.enabled",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.ordered_elements.up & ! talent.hit_combo.enabled & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "prev.tiger_palm & chi < 3 & ! cooldown.fists_of_fury.remains",
["action"] = "tiger_palm",
},
},
["default"] = {
{
["action"] = "spear_hand_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "potion",
["description"] = "Potion",
["criteria"] = "buff.invoke_xuen_the_white_tiger.up & buff.storm_earth_and_fire.up",
},
{
["enabled"] = true,
["criteria"] = "! talent.invoke_xuen_the_white_tiger.enabled & buff.storm_earth_and_fire.up",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains <= 30",
["action"] = "potion",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.heart_of_the_jade_serpent_cdr.up || buff.heart_of_the_jade_serpent_tww3_tier.up",
["var_name"] = "small_hotjs_active",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "fight_remains > 6 & ( cooldown.rising_sun_kick.remains || active_enemies > 2 || ! talent.ordered_elements.enabled ) & ( buff.invoke_xuen_the_white_tiger.remains > 15 || ( talent.celestial_conduit.enabled || ! talent.last_emperors_capacitor.enabled ) & buff.bloodlust.up & ( cooldown.strike_of_the_windlord.remains < 5 || ! talent.strike_of_the_windlord.enabled ) & talent.sequenced_strikes.enabled || buff.invokers_delight.remains > 15 || ( cooldown.strike_of_the_windlord.remains < 5 || ! talent.strike_of_the_windlord.enabled ) & cooldown.storm_earth_and_fire.full_recharge_time < cooldown.invoke_xuen_the_white_tiger.remains & cooldown.fists_of_fury.remains < 5 & ( ! talent.last_emperors_capacitor.enabled || talent.celestial_conduit.enabled ) || talent.last_emperors_capacitor.enabled & buff.the_emperors_capacitor.stack > 17 & cooldown.invoke_xuen_the_white_tiger.remains > cooldown.storm_earth_and_fire.full_recharge_time ) || boss & fight_remains < 30 & cooldown.invoke_xuen_the_white_tiger.remains > 10 & ( cooldown.rising_sun_kick.remains || active_enemies > 1 ) || buff.invokers_delight.remains > 15 & ( cooldown.rising_sun_kick.remains || active_enemies > 2 || ! talent.ordered_elements.enabled ) || buff.bloodlust.up & ( cooldown.rising_sun_kick.remains || active_enemies > 2 || ! talent.ordered_elements.enabled ) & talent.celestial_conduit.enabled & time > 10",
["var_name"] = "sef_condition",
["description"] = "Define Variables for CD Management",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1 & ( time < 10 || talent.xuens_bond.enabled & talent.celestial_conduit.enabled ) || active_enemies > 1 & cooldown.storm_earth_and_fire.ready & fight_remains > 14 & ( active_enemies > 2 || debuff.acclamation.up || ! talent.ordered_elements.enabled & time < 5 ) & ( chi > 2 & talent.ordered_elements.enabled || chi > 5 || chi > 3 & energy < 50 || energy < 50 & active_enemies = 1 || prev.tiger_palm & ! talent.ordered_elements.enabled & time < 5 ) || time > 50 & ( fight_remains > 10 & talent.xuens_bond.enabled || fight_remains > 20 ) || buff.storm_earth_and_fire.remains > 5 || boss & fight_remains < 30",
["var_name"] = "xuen_condition",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["use_off_gcd"] = 1,
["description"] = "Use Trinkets",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Opener",
["criteria"] = "time < 4 & active_enemies < 3",
["list_name"] = "normal_opener",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Use Cooldowns",
["strict"] = 1,
["criteria"] = "talent.storm_earth_and_fire.enabled",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Default Priority",
["strict"] = 1,
["criteria"] = "active_enemies >= 5",
["list_name"] = "default_aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 1 & active_enemies < 5",
["list_name"] = "default_cleave",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies < 2",
["list_name"] = "default_st",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "fallback",
},
{
["enabled"] = true,
["criteria"] = "chi < chi.max & energy < 55",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "buff.storm_earth_and_fire.down",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "buff.storm_earth_and_fire.down",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.storm_earth_and_fire.down",
["action"] = "haymaker",
},
{
["enabled"] = true,
["criteria"] = "buff.storm_earth_and_fire.down",
["action"] = "arcane_pulse",
},
},
["default_aoe"] = {
{
["enabled"] = true,
["action"] = "tiger_palm",
["description"] = ">=5 Targets",
["criteria"] = "( energy > 55 & talent.inner_peace.enabled || energy > 60 & ! talent.inner_peace.enabled ) & combo_strike & chi.max - chi >= 2 & buff.teachings_of_the_monastery.stack < buff.teachings_of_the_monastery.max_stack & ( talent.energy_burst.enabled & ! buff.bok_proc.up ) & ! buff.ordered_elements.up || ( talent.energy_burst.enabled & ! buff.bok_proc.up ) & ! buff.ordered_elements.up & ! cooldown.fists_of_fury.remains & chi < 3 || ( prev.strike_of_the_windlord || cooldown.strike_of_the_windlord.remains ) & cooldown.celestial_conduit.remains < 2 & buff.ordered_elements.up & chi < 5 & combo_strike",
},
{
["enabled"] = true,
["criteria"] = "! variable.small_hotjs_active & ! buff.heart_of_the_jade_serpent_cdr_celestial.up",
["action"] = "touch_of_death",
},
{
["enabled"] = true,
["criteria"] = "talent.gale_force.enabled & cooldown.invoke_xuen_the_white_tiger.remains > 10 & set_bonus.tww3_2pc & ! talent.flurry_strikes.enabled",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tww3_2pc & talent.celestial_conduit.enabled & variable.small_hotjs_active & ! talent.flurry_strikes.enabled",
["action"] = "slicing_winds",
},
{
["enabled"] = true,
["criteria"] = "buff.dance_of_chiji.stack = 2 & combo_strike",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.chi_energy.stack > 29 & cooldown.fists_of_fury.remains < 5",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.dance_of_chiji.stack < 2",
["action"] = "whirling_dragon_punch",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.storm_earth_and_fire.remains > 2 & talent.flurry_strikes.enabled & energy.time_to_max <= gcd.max * 3 & cooldown.fists_of_fury.remains & ( ! talent.xuens_battlegear.enabled || chi < 6 ) & set_bonus.tww3_4pc",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "variable.small_hotjs_active || buff.heart_of_the_jade_serpent_cdr_celestial.up",
["action"] = "slicing_winds",
},
{
["enabled"] = true,
["criteria"] = "buff.storm_earth_and_fire.up & cooldown.strike_of_the_windlord.remains & ( ! variable.small_hotjs_active || debuff.gale_force.remains < 5 ) & ( talent.xuens_bond.enabled || ! talent.xuens_bond.enabled & buff.invokers_delight.up ) || boss & fight_remains < 15 || buff.invokers_delight.up & cooldown.strike_of_the_windlord.remains & buff.storm_earth_and_fire.remains < 8",
["action"] = "celestial_conduit",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.heart_of_the_jade_serpent_cdr_celestial.up || variable.small_hotjs_active",
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "cooldown.whirling_dragon_punch.remains < 2 & cooldown.fists_of_fury.remains > 1 & buff.dance_of_chiji.stack < 2 || ! buff.storm_earth_and_fire.up & buff.pressure_point.up",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.storm_earth_and_fire.remains > 2 & talent.flurry_strikes.enabled & energy.time_to_max <= gcd.max * 3 & set_bonus.tww3_4pc",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "! talent.revolving_whirl.enabled || talent.revolving_whirl.enabled & buff.dance_of_chiji.stack < 2 & active_enemies > 2",
["action"] = "whirling_dragon_punch",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.bok_proc.up & chi < 2 & talent.energy_burst.enabled & energy < 55",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "( time > 5 || buff.invokers_delight.up & buff.storm_earth_and_fire.up ) & ( cooldown.invoke_xuen_the_white_tiger.remains > 15 || talent.flurry_strikes.enabled )",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["action"] = "slicing_winds",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 8 & talent.shadowboxing_treads.enabled",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.the_emperors_capacitor.stack > 19 & combo_strike & talent.power_of_the_thunder_king.enabled & cooldown.invoke_xuen_the_white_tiger.remains > 10",
["action"] = "crackling_jade_lightning",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( talent.flurry_strikes.enabled || talent.xuens_battlegear.enabled & ( cooldown.invoke_xuen_the_white_tiger.remains > 5 || cooldown.invoke_xuen_the_white_tiger.remains > 9 ) || cooldown.invoke_xuen_the_white_tiger.remains > 10 )",
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled & buff.wisdom_of_the_wall_flurry.up & chi < 6",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi > 5",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up & buff.chi_energy.stack > 29 & cooldown.fists_of_fury.remains < 5",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up & cooldown.fists_of_fury.remains > 2",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.storm_earth_and_fire.remains > 2 & talent.flurry_strikes.enabled & active_enemies > 5 & set_bonus.tww3_4pc",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "talent.shadowboxing_treads.enabled & talent.courageous_impulse.enabled & combo_strike & buff.bok_proc.stack = 2",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & talent.crane_vortex.enabled & active_enemies > 2",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled & buff.ordered_elements.up",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi.deficit >= 2 & ( ! buff.ordered_elements.up || energy.time_to_max <= gcd.max * 3 )",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "talent.Singularly_Focused_Jade.enabled || talent.jadefire_harmony.enabled",
["action"] = "jadefire_stomp",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ! buff.ordered_elements.up & talent.crane_vortex.enabled & active_enemies > 2 & chi > 4",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains & ( buff.teachings_of_the_monastery.stack > 3 || buff.ordered_elements.up ) & ( talent.shadowboxing_treads.enabled || buff.bok_proc.up )",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ! cooldown.fists_of_fury.remains & chi < 3",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.shadowboxing_treads.enabled & talent.courageous_impulse.enabled & combo_strike & buff.bok_proc.up",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( chi > 3 || energy > 55 )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( buff.ordered_elements.up || buff.bok_proc.up & chi.deficit >= 1 & talent.energy_burst.enabled ) & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains & ( chi > 2 || energy > 60 || buff.bok_proc.up )",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "debuff.acclamation.stack",
["action"] = "jadefire_stomp",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & chi.deficit >= 1",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "! buff.ordered_elements.up",
["action"] = "chi_burst",
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & talent.hit_combo.enabled",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.ordered_elements.up & ! talent.hit_combo.enabled & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "prev.tiger_palm & chi < 3 & ! cooldown.fists_of_fury.remains",
["action"] = "tiger_palm",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "fight_remains > 14 & cooldown.invoke_xuen_the_white_tiger.remains > 0 & ( chi < 5 & ! talent.ordered_elements.enabled || chi < 3 ) & ( combo_strike || ! talent.hit_combo.enabled )",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tww3_2pc & talent.celestial_conduit.enabled & cooldown.strike_of_the_windlord.remains < 3 & ( fight_remains > 12 || ! talent.xuens_bond.enabled & fight_remains > 8 ) & ( chi > 2 & talent.ordered_elements.enabled || chi > 5 || chi > 3 & energy < 50 || energy < 50 & active_enemies = 1 || prev.tiger_palm & ! talent.ordered_elements.enabled & time < 5 )",
["action"] = "invoke_xuen_the_white_tiger",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! set_bonus.tww3_2pc || ! talent.celestial_conduit.enabled & variable.xuen_condition",
["action"] = "invoke_xuen_the_white_tiger",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.flurry_strikes.enabled & cooldown.invoke_xuen_the_white_tiger.remains & buff.bloodlust.up & cooldown.rising_sun_kick.remains",
["action"] = "storm_earth_and_fire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.sef_condition",
["action"] = "storm_earth_and_fire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & talent.flurry_strikes.enabled & boss & fight_remains < 60 & cooldown.invoke_xuen_the_white_tiger.remains > fight_remains & cooldown.rising_sun_kick.remains & buff.the_emperors_capacitor.stack > 15",
["action"] = "storm_earth_and_fire",
["cycle_targets"] = 1,
},
{
["action"] = "touch_of_karma",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.invoke_xuen_the_white_tiger.remains > 15 || ! talent.invoke_xuen_the_white_tiger.enabled & ( ! talent.storm_earth_and_fire.enabled & ( cooldown.strike_of_the_windlord.ready || ! talent.strike_of_the_windlord.enabled & cooldown.fists_of_fury.ready ) || buff.storm_earth_and_fire.remains > 10 ) || boss & fight_remains < 20",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "buff.invoke_xuen_the_white_tiger.remains > 15 || ! talent.invoke_xuen_the_white_tiger.enabled & ( ! talent.storm_earth_and_fire.enabled & ( cooldown.strike_of_the_windlord.ready || ! talent.strike_of_the_windlord.enabled & cooldown.fists_of_fury.ready ) || buff.storm_earth_and_fire.remains > 10 ) || boss & fight_remains < 20",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.invoke_xuen_the_white_tiger.remains > 15 || ! talent.invoke_xuen_the_white_tiger.enabled & ( ! talent.storm_earth_and_fire.enabled & ( cooldown.strike_of_the_windlord.ready || ! talent.strike_of_the_windlord.enabled & cooldown.fists_of_fury.ready ) || buff.storm_earth_and_fire.remains > 10 ) || boss & fight_remains < 20",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "buff.invoke_xuen_the_white_tiger.remains > 15 || ! talent.invoke_xuen_the_white_tiger.enabled & ( ! talent.storm_earth_and_fire.enabled & ( cooldown.strike_of_the_windlord.ready || ! talent.strike_of_the_windlord.enabled & cooldown.fists_of_fury.ready ) || buff.storm_earth_and_fire.remains > 10 ) || boss & fight_remains < 20",
["action"] = "berserking",
},
},
["trinkets"] = {
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "Double on Use Stats",
["criteria"] = "trinket.t1.has_use_buff & trinket.t2.has_use_buff & buff.invoke_xuen_the_white_tiger.up & invoke_xuen_count % 2 || boss & fight_remains < 20",
},
{
["enabled"] = true,
["criteria"] = "trinket.t1.has_use_buff & trinket.t2.has_use_buff & buff.invoke_xuen_the_white_tiger.up || boss & fight_remains < 20",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "Trinket 1 On use Stats",
["criteria"] = "trinket.t1.has_use_buff & ! trinket.t2.has_use_buff & buff.invoke_xuen_the_white_tiger.up || boss & fight_remains < 20",
},
{
["enabled"] = true,
["criteria"] = "trinket.t1.has_use_buff & ! trinket.t2.has_use_buff & cooldown.invoke_xuen_the_white_tiger.remains > 30 || boss & fight_remains < 20",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "Trinket 2 On use Stats",
["criteria"] = "! trinket.t1.has_use_buff & trinket.t2.has_use_buff & cooldown.invoke_xuen_the_white_tiger.remains > 30 || boss & fight_remains < 20",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t1.has_use_buff & trinket.t2.has_use_buff & buff.invoke_xuen_the_white_tiger.up || boss & fight_remains < 20",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "No Stat on Use",
["criteria"] = "! trinket.t1.has_use_buff & ! trinket.t2.has_use_buff",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t1.has_use_buff & ! trinket.t2.has_use_buff",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["description"] = "Use Weapon",
["action"] = "main_hand",
["slot"] = "main_hand",
},
},
["normal_opener"] = {
{
["enabled"] = true,
["action"] = "tiger_palm",
["description"] = "normal opener",
["criteria"] = "chi < 6 & combo_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.ordered_elements.enabled",
["action"] = "rising_sun_kick",
},
},
["precombat"] = {
{
["enabled"] = true,
["name"] = "imperfect_ascendancy_serum",
["action"] = "imperfect_ascendancy_serum",
},
},
},
["version"] = 20250912,
["warnings"] = "The import for 'trinkets' required some automated changes.\nLine 1: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 1: Converted operations in 'trinket.t1.has_use_buff&trinket.t2.has_use_buff&buff.invoke_xuen_the_white_tiger.up&invoke_xuen_count%%2||boss&fight_remains<20' to 'trinket.t1.has_use_buff&trinket.t2.has_use_buff&buff.invoke_xuen_the_white_tiger.up&invoke_xuen_count%2||boss&fight_remains<20'.\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\n\nImported 9 action lists.\n",
["profile"] = "## Upstream: https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/monk_windwalker.simc\n## SimulationCraft Commit Sync: 65d756b\n## Date: 2025-09-12\n\nactions.precombat+=/use_item,name=imperfect_ascendancy_serum\n## [Hekili] Implemented in MonkWindwalker.lua\n## actions.precombat+=/variable,name=invoke_xuen_count,op=set,value=0\n\n## [Hekili] Out of scope for the addon.\n## Move to target\n## actions+=/roll,if=movement.distance>5\n## actions+=/chi_torpedo,if=movement.distance>5\n## actions+=/flying_serpent_kick,if=movement.distance>5\nactions+=/spear_hand_strike\n# Potion\nactions+=/potion,if=buff.invoke_xuen_the_white_tiger.up&buff.storm_earth_and_fire.up\nactions+=/potion,if=!talent.invoke_xuen_the_white_tiger&buff.storm_earth_and_fire.up\nactions+=/potion,if=boss&fight_remains<=30\n\n## [Hekili] External PI not supported in addon.\n## Enable PI if available\n## actions+=/variable,name=has_external_pi,value=cooldown.invoke_power_infusion_0.duration>0\nactions+=/variable,name=small_hotjs_active,value=buff.heart_of_the_jade_serpent_cdr.up||buff.heart_of_the_jade_serpent_tww3_tier.up\n## [Hekili] Handled internally.\n## actions+=/variable,name=invoke_xuen_count,op=add,value=1,if=prev.invoke_xuen_the_white_tiger\n# Define Variables for CD Management\n## [Hekili] Remove fight styles.\nactions+=/variable,name=sef_condition,value=fight_remains>6&(cooldown.rising_sun_kick.remains||active_enemies>2||!talent.ordered_elements)&(buff.invoke_xuen_the_white_tiger.remains>15||(talent.celestial_conduit||!talent.last_emperors_capacitor)&buff.bloodlust.up&(cooldown.strike_of_the_windlord.remains<5||!talent.strike_of_the_windlord)&talent.sequenced_strikes||buff.invokers_delight.remains>15||(cooldown.strike_of_the_windlord.remains<5||!talent.strike_of_the_windlord)&cooldown.storm_earth_and_fire.full_recharge_time<cooldown.invoke_xuen_the_white_tiger.remains&cooldown.fists_of_fury.remains<5&(!talent.last_emperors_capacitor||talent.celestial_conduit)||talent.last_emperors_capacitor&buff.the_emperors_capacitor.stack>17&cooldown.invoke_xuen_the_white_tiger.remains>cooldown.storm_earth_and_fire.full_recharge_time)||boss&fight_remains<30&cooldown.invoke_xuen_the_white_tiger.remains>10&(cooldown.rising_sun_kick.remains||active_enemies>1)||buff.invokers_delight.remains>15&(cooldown.rising_sun_kick.remains||active_enemies>2||!talent.ordered_elements)||buff.bloodlust.up&(cooldown.rising_sun_kick.remains||active_enemies>2||!talent.ordered_elements)&talent.celestial_conduit&time>10\n## [Hekili] Remove fight styles.\n## actions+=/variable,name=xuen_condition,value=(fight_style.DungeonSlice&active_enemies=1&(time<10||talent.xuens_bond&talent.celestial_conduit)||!fight_style.dungeonslice||active_enemies>1)&cooldown.storm_earth_and_fire.ready&(target.time_to_die>14&!fight_style.dungeonroute||target.time_to_die>22)&(active_enemies>2||debuff.acclamation.up||!talent.ordered_elements&time<5)&(chi>2&talent.ordered_elements||chi>5||chi>3&energy<50||energy<50&active_enemies=1||prev.tiger_palm&!talent.ordered_elements&time<5)||fight_remains<30||fight_style.dungeonroute&talent.celestial_conduit&target.time_to_die>14\nactions+=/variable,name=xuen_condition,value=active_enemies=1&(time<10||talent.xuens_bond&talent.celestial_conduit)||active_enemies>1&cooldown.storm_earth_and_fire.ready&fight_remains>14&(active_enemies>2||debuff.acclamation.up||!talent.ordered_elements&time<5)&(chi>2&talent.ordered_elements||chi>5||chi>3&energy<50||energy<50&active_enemies=1||prev.tiger_palm&!talent.ordered_elements&time<5)||time>50&(fight_remains>10&talent.xuens_bond||fight_remains>20)||buff.storm_earth_and_fire.remains>5||boss&fight_remains<30\n## [Hekili] Fight styles (intentionally) not supported.\n## actions+=/variable,name=xuen_dungeonslice_condition,value=active_enemies=1&(time<10||talent.xuens_bond&talent.celestial_conduit&target.time_to_die>14)||active_enemies>1&cooldown.storm_earth_and_fire.ready&target.time_to_die>14&(active_enemies>2||debuff.acclamation.up||!talent.ordered_elements&time<5)&((chi>2&!talent.ordered_elements||talent.ordered_elements||!talent.ordered_elements&energy<50)||talent.sequenced_strikes&talent.energy_burst&talent.revolving_whirl)||fight_remains<30||active_enemies>3&target.time_to_die>5||fight_style.dungeonslice&time>50&target.time_to_die>1&talent.xuens_bond\n## actions+=/variable,name=xuen_dungeonroute_condition,value=cooldown.storm_earth_and_fire.ready&(active_enemies>1&cooldown.storm_earth_and_fire.ready&target.time_to_die>22&(active_enemies>2||debuff.acclamation.up||!talent.ordered_elements&time<5)&((chi>2&!talent.ordered_elements||talent.ordered_elements||!talent.ordered_elements&energy<50)||talent.sequenced_strikes&talent.energy_burst&talent.revolving_whirl)||fight_remains<30||active_enemies>3&target.time_to_die>15||time>50&(target.time_to_die>10&talent.xuens_bond||target.time_to_die>20))||buff.storm_earth_and_fire.remains>5\n## actions+=/variable,name=sef_dungeonroute_condition,value=time<50&target.time_to_die>10&(buff.bloodlust.up||active_enemies>2||cooldown.strike_of_the_windlord.remains<2||talent.last_emperors_capacitor&buff.the_emperors_capacitor.stack>17)||target.time_to_die>10&(cooldown.storm_earth_and_fire.full_recharge_time<cooldown.invoke_xuen_the_white_tiger.remains||cooldown.invoke_xuen_the_white_tiger.remains<30&(cooldown.storm_earth_and_fire.full_recharge_time<30||cooldown.storm_earth_and_fire.full_recharge_time<40&talent.flurry_strikes))&(talent.sequenced_strikes&talent.energy_burst&talent.revolving_whirl||talent.flurry_strikes||chi>3||energy<50)&(active_enemies>2||!talent.ordered_elements||cooldown.rising_sun_kick.remains)&!talent.flurry_strikes||target.time_to_die>10&talent.flurry_strikes&(active_enemies>2||!talent.ordered_elements||cooldown.rising_sun_kick.remains)&(talent.last_emperors_capacitor&buff.the_emperors_capacitor.stack>17&cooldown.storm_earth_and_fire.full_recharge_time<cooldown.invoke_xuen_the_white_tiger.remains&cooldown.invoke_xuen_the_white_tiger.remains>15||!talent.last_emperors_capacitor&cooldown.storm_earth_and_fire.full_recharge_time<cooldown.invoke_xuen_the_white_tiger.remains&cooldown.invoke_xuen_the_white_tiger.remains>15)\n\n# Use Trinkets\nactions+=/call_action_list,name=trinkets,use_off_gcd=1\n# Opener\nactions+=/call_action_list,name=normal_opener,if=time<4&active_enemies<3\n# Use Cooldowns\nactions+=/call_action_list,name=cooldowns,strict=1,if=talent.storm_earth_and_fire\n# Default Priority\nactions+=/call_action_list,name=default_aoe,strict=1,if=active_enemies>=5\nactions+=/call_action_list,name=default_cleave,strict=1,if=active_enemies>1&active_enemies<5\nactions+=/call_action_list,name=default_st,strict=1,if=active_enemies<2\nactions+=/call_action_list,name=fallback\nactions+=/arcane_torrent,if=chi<chi.max&energy<55\nactions+=/bag_of_tricks,if=buff.storm_earth_and_fire.down\nactions+=/lights_judgment,if=buff.storm_earth_and_fire.down\nactions+=/haymaker,if=buff.storm_earth_and_fire.down\n## actions+=/rocket_barrage,if=buff.storm_earth_and_fire.down\nactions+=/arcane_pulse,if=buff.storm_earth_and_fire.down\n\n## [Hekili] External PI not supported.\n## Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=123904/invoke-xuen-the-white-tiger'>Invoke Xuen, the White Tiger</a> is active.\n## actions.cooldowns=invoke_external_buff,name=power_infusion,if=buff.invoke_xuen_the_white_tiger.up&(!buff.bloodlust.up||buff.bloodlust.up&cooldown.strike_of_the_windlord.remains)\n## [Hekili] Fight style not really supported.\n## actions.cooldowns+=/storm_earth_and_fire,cycle_targets=1,if=fight_style.dungeonroute&buff.invokers_delight.remains>15&(active_enemies>2||!talent.ordered_elements||cooldown.rising_sun_kick.remains)\n## [Hekili] Remove fight style condition.\nactions.cooldowns+=/tiger_palm,if=fight_remains>14&cooldown.invoke_xuen_the_white_tiger.remains>0&(chi<5&!talent.ordered_elements||chi<3)&(combo_strike||!talent.hit_combo)\nactions.cooldowns+=/invoke_xuen_the_white_tiger,cycle_targets=1,if=set_bonus.tww3_2pc&talent.celestial_conduit&cooldown.strike_of_the_windlord.remains<3&(fight_remains>12||!talent.xuens_bond&fight_remains>8)&(chi>2&talent.ordered_elements||chi>5||chi>3&energy<50||energy<50&active_enemies=1||prev.tiger_palm&!talent.ordered_elements&time<5)\n## [Hekili] Remove fight styles and split condition in 2.\n## actions.cooldowns+=/invoke_xuen_the_white_tiger,cycle_targets=1,if=(target.time_to_die>12||!talent.xuens_bond&target.time_to_die>8)&set_bonus.tww3_2pc&talent.celestial_conduit&cooldown.strike_of_the_windlord.remains<3&(chi>2&talent.ordered_elements||chi>5||chi>3&energy<50||energy<50&active_enemies=1||prev.tiger_palm&!talent.ordered_elements&time<5)||(!set_bonus.tww3_2pc||!talent.celestial_conduit||!fight_style.patchwerk)&(variable.xuen_condition&!fight_style.dungeonslice&!fight_style.dungeonroute||variable.xuen_dungeonslice_condition&fight_style.Dungeonslice||variable.xuen_dungeonroute_condition&fight_style.dungeonroute)\nactions.cooldowns+=/invoke_xuen_the_white_tiger,cycle_targets=1,if=!set_bonus.tww3_2pc||!talent.celestial_conduit&variable.xuen_condition\n## [Hekili] Remove fight styles and split condition in 3.\n## actions.cooldowns+=/storm_earth_and_fire,cycle_targets=1,if=talent.flurry_strikes&cooldown.invoke_xuen_the_white_tiger.remains&buff.bloodlust.up&cooldown.rising_sun_kick.remains||variable.sef_condition&!fight_style.dungeonroute||variable.sef_dungeonroute_condition&fight_style.dungeonroute||fight_style.patchwerk&active_enemies=1&talent.flurry_strikes&fight_remains<60&cooldown.invoke_xuen_the_white_tiger.remains>fight_remains&cooldown.rising_sun_kick.remains&buff.the_emperors_capacitor.stack>15\nactions.cooldowns+=/storm_earth_and_fire,cycle_targets=1,if=talent.flurry_strikes&cooldown.invoke_xuen_the_white_tiger.remains&buff.bloodlust.up&cooldown.rising_sun_kick.remains\nactions.cooldowns+=/storm_earth_and_fire,cycle_targets=1,if=variable.sef_condition\nactions.cooldowns+=/storm_earth_and_fire,cycle_targets=1,if=active_enemies=1&talent.flurry_strikes&boss&fight_remains<60&cooldown.invoke_xuen_the_white_tiger.remains>fight_remains&cooldown.rising_sun_kick.remains&buff.the_emperors_capacitor.stack>15\nactions.cooldowns+=/touch_of_karma\nactions.cooldowns+=/ancestral_call,if=buff.invoke_xuen_the_white_tiger.remains>15||!talent.invoke_xuen_the_white_tiger&(!talent.storm_earth_and_fire&(cooldown.strike_of_the_windlord.ready||!talent.strike_of_the_windlord&cooldown.fists_of_fury.ready)||buff.storm_earth_and_fire.remains>10)||boss&fight_remains<20\nactions.cooldowns+=/blood_fury,if=buff.invoke_xuen_the_white_tiger.remains>15||!talent.invoke_xuen_the_white_tiger&(!talent.storm_earth_and_fire&(cooldown.strike_of_the_windlord.ready||!talent.strike_of_the_windlord&cooldown.fists_of_fury.ready)||buff.storm_earth_and_fire.remains>10)||boss&fight_remains<20\nactions.cooldowns+=/fireblood,if=buff.invoke_xuen_the_white_tiger.remains>15||!talent.invoke_xuen_the_white_tiger&(!talent.storm_earth_and_fire&(cooldown.strike_of_the_windlord.ready||!talent.strike_of_the_windlord&cooldown.fists_of_fury.ready)||buff.storm_earth_and_fire.remains>10)||boss&fight_remains<20\nactions.cooldowns+=/berserking,if=buff.invoke_xuen_the_white_tiger.remains>15||!talent.invoke_xuen_the_white_tiger&(!talent.storm_earth_and_fire&(cooldown.strike_of_the_windlord.ready||!talent.strike_of_the_windlord&cooldown.fists_of_fury.ready)||buff.storm_earth_and_fire.remains>10)||boss&fight_remains<20\n\n# >=5 Targets\nactions.default_aoe=tiger_palm,if=(energy>55&talent.inner_peace||energy>60&!talent.inner_peace)&combo_strike&chi.max-chi>=2&buff.teachings_of_the_monastery.stack<buff.teachings_of_the_monastery.max_stack&(talent.energy_burst&!buff.bok_proc.up)&!buff.ordered_elements.up||(talent.energy_burst&!buff.bok_proc.up)&!buff.ordered_elements.up&!cooldown.fists_of_fury.remains&chi<3||(prev.strike_of_the_windlord||cooldown.strike_of_the_windlord.remains)&cooldown.celestial_conduit.remains<2&buff.ordered_elements.up&chi<5&combo_strike\nactions.default_aoe+=/touch_of_death,if=!variable.small_hotjs_active&!buff.heart_of_the_jade_serpent_cdr_celestial.up\nactions.default_aoe+=/strike_of_the_windlord,if=talent.gale_force&cooldown.invoke_xuen_the_white_tiger.remains>10&set_bonus.tww3_2pc&!talent.flurry_strikes\nactions.default_aoe+=/slicing_winds,if=set_bonus.tww3_2pc&talent.celestial_conduit&variable.small_hotjs_active&!talent.flurry_strikes\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=buff.dance_of_chiji.stack=2&combo_strike\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.chi_energy.stack>29&cooldown.fists_of_fury.remains<5\nactions.default_aoe+=/whirling_dragon_punch,cycle_targets=1,if=buff.dance_of_chiji.stack<2\nactions.default_aoe+=/tiger_palm,if=combo_strike&buff.storm_earth_and_fire.remains>2&talent.flurry_strikes&energy.time_to_max<=gcd.max*3&cooldown.fists_of_fury.remains&(!talent.xuens_battlegear||chi<6)&set_bonus.tww3_4pc\nactions.default_aoe+=/slicing_winds,if=variable.small_hotjs_active||buff.heart_of_the_jade_serpent_cdr_celestial.up\n## [Hekili] -fight_style\n## actions.default_aoe+=/celestial_conduit,if=buff.storm_earth_and_fire.up&cooldown.strike_of_the_windlord.remains&(!variable.small_hotjs_active||debuff.gale_force.remains<5)&(talent.xuens_bond||!talent.xuens_bond&buff.invokers_delight.up)||fight_remains<15||fight_style.dungeonroute&buff.invokers_delight.up&cooldown.strike_of_the_windlord.remains&buff.storm_earth_and_fire.remains<8\nactions.default_aoe+=/celestial_conduit,if=buff.storm_earth_and_fire.up&cooldown.strike_of_the_windlord.remains&(!variable.small_hotjs_active||debuff.gale_force.remains<5)&(talent.xuens_bond||!talent.xuens_bond&buff.invokers_delight.up)||boss&fight_remains<15||buff.invokers_delight.up&cooldown.strike_of_the_windlord.remains&buff.storm_earth_and_fire.remains<8\nactions.default_aoe+=/fists_of_fury,cycle_targets=1,if=combo_strike&buff.heart_of_the_jade_serpent_cdr_celestial.up||variable.small_hotjs_active\nactions.default_aoe+=/rising_sun_kick,cycle_targets=1,if=cooldown.whirling_dragon_punch.remains<2&cooldown.fists_of_fury.remains>1&buff.dance_of_chiji.stack<2||!buff.storm_earth_and_fire.up&buff.pressure_point.up\nactions.default_aoe+=/tiger_palm,if=combo_strike&buff.storm_earth_and_fire.remains>2&talent.flurry_strikes&energy.time_to_max<=gcd.max*3&set_bonus.tww3_4pc\nactions.default_aoe+=/whirling_dragon_punch,cycle_targets=1,if=!talent.revolving_whirl||talent.revolving_whirl&buff.dance_of_chiji.stack<2&active_enemies>2\nactions.default_aoe+=/blackout_kick,if=combo_strike&buff.bok_proc.up&chi<2&talent.energy_burst&energy<55\nactions.default_aoe+=/strike_of_the_windlord,cycle_targets=1,if=(time>5||buff.invokers_delight.up&buff.storm_earth_and_fire.up)&(cooldown.invoke_xuen_the_white_tiger.remains>15||talent.flurry_strikes)\nactions.default_aoe+=/slicing_winds\nactions.default_aoe+=/blackout_kick,if=buff.teachings_of_the_monastery.stack=8&talent.shadowboxing_treads\nactions.default_aoe+=/crackling_jade_lightning,cycle_targets=1,if=buff.the_emperors_capacitor.stack>19&combo_strike&talent.power_of_the_thunder_king&cooldown.invoke_xuen_the_white_tiger.remains>10\n## [Hekili] -fight_style\n## actions.default_aoe+=/fists_of_fury,cycle_targets=1,if=(talent.flurry_strikes||talent.xuens_battlegear&(cooldown.invoke_xuen_the_white_tiger.remains>5&fight_style.patchwerk||cooldown.invoke_xuen_the_white_tiger.remains>9)||cooldown.invoke_xuen_the_white_tiger.remains>10)\nactions.default_aoe+=/fists_of_fury,cycle_targets=1,if=(talent.flurry_strikes||talent.xuens_battlegear&(cooldown.invoke_xuen_the_white_tiger.remains>5||cooldown.invoke_xuen_the_white_tiger.remains>9)||cooldown.invoke_xuen_the_white_tiger.remains>10)\nactions.default_aoe+=/tiger_palm,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes&buff.wisdom_of_the_wall_flurry.up&chi<6\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&chi>5\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.dance_of_chiji.up&buff.chi_energy.stack>29&cooldown.fists_of_fury.remains<5\nactions.default_aoe+=/rising_sun_kick,if=buff.pressure_point.up&cooldown.fists_of_fury.remains>2\nactions.default_aoe+=/tiger_palm,if=combo_strike&buff.storm_earth_and_fire.remains>2&talent.flurry_strikes&active_enemies>5&set_bonus.tww3_4pc\nactions.default_aoe+=/blackout_kick,if=talent.shadowboxing_treads&talent.courageous_impulse&combo_strike&buff.bok_proc.stack=2\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.dance_of_chiji.up\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.ordered_elements.up&talent.crane_vortex&active_enemies>2\nactions.default_aoe+=/tiger_palm,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes&buff.ordered_elements.up\nactions.default_aoe+=/tiger_palm,if=combo_strike&chi.deficit>=2&(!buff.ordered_elements.up||energy.time_to_max<=gcd.max*3)\nactions.default_aoe+=/jadefire_stomp,cycle_targets=1,if=talent.Singularly_Focused_Jade||talent.jadefire_harmony\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&!buff.ordered_elements.up&talent.crane_vortex&active_enemies>2&chi>4\nactions.default_aoe+=/blackout_kick,if=combo_strike&cooldown.fists_of_fury.remains&(buff.teachings_of_the_monastery.stack>3||buff.ordered_elements.up)&(talent.shadowboxing_treads||buff.bok_proc.up)\nactions.default_aoe+=/blackout_kick,if=combo_strike&!cooldown.fists_of_fury.remains&chi<3\nactions.default_aoe+=/blackout_kick,if=talent.shadowboxing_treads&talent.courageous_impulse&combo_strike&buff.bok_proc.up\nactions.default_aoe+=/spinning_crane_kick,if=combo_strike&(chi>3||energy>55)\nactions.default_aoe+=/blackout_kick,if=combo_strike&(buff.ordered_elements.up||buff.bok_proc.up&chi.deficit>=1&talent.energy_burst)&cooldown.fists_of_fury.remains\nactions.default_aoe+=/blackout_kick,if=combo_strike&cooldown.fists_of_fury.remains&(chi>2||energy>60||buff.bok_proc.up)\nactions.default_aoe+=/jadefire_stomp,target_if=max:debuff.acclamation.stack\nactions.default_aoe+=/tiger_palm,if=combo_strike&buff.ordered_elements.up&chi.deficit>=1\nactions.default_aoe+=/chi_burst,if=!buff.ordered_elements.up\nactions.default_aoe+=/chi_burst\nactions.default_aoe+=/spinning_crane_kick,if=combo_strike&buff.ordered_elements.up&talent.hit_combo\nactions.default_aoe+=/blackout_kick,if=buff.ordered_elements.up&!talent.hit_combo&cooldown.fists_of_fury.remains\nactions.default_aoe+=/tiger_palm,if=prev.tiger_palm&chi<3&!cooldown.fists_of_fury.remains\n\n# 2-4 targets\nactions.default_cleave=rising_sun_kick,cycle_targets=1,if=buff.storm_earth_and_fire.remains>13&combo_strike\nactions.default_cleave+=/strike_of_the_windlord,if=talent.gale_force&cooldown.invoke_xuen_the_white_tiger.remains>10&set_bonus.tww3_2pc&!talent.flurry_strikes\nactions.default_cleave+=/slicing_winds,if=set_bonus.tww3_2pc&talent.celestial_conduit&variable.small_hotjs_active&!talent.flurry_strikes\nactions.default_cleave+=/spinning_crane_kick,if=buff.dance_of_chiji.stack=2&combo_strike\nactions.default_cleave+=/whirling_dragon_punch,cycle_targets=1,if=variable.small_hotjs_active&buff.dance_of_chiji.stack<2\nactions.default_cleave+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up&active_enemies<4&cooldown.fists_of_fury.remains>4\nactions.default_cleave+=/rising_sun_kick,cycle_targets=1,if=cooldown.whirling_dragon_punch.remains<2&cooldown.fists_of_fury.remains>1&buff.dance_of_chiji.stack<2\nactions.default_cleave+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.dance_of_chiji.stack=2&active_enemies>3\nactions.default_cleave+=/tiger_palm,if=combo_strike&(energy>55&talent.inner_peace||energy>60&!talent.inner_peace)&combo_strike&chi.max-chi>=2&buff.teachings_of_the_monastery.stack<buff.teachings_of_the_monastery.max_stack&(talent.energy_burst&!buff.bok_proc.up||!talent.energy_burst)&!buff.ordered_elements.up||(talent.energy_burst&!buff.bok_proc.up||!talent.energy_burst)&!buff.ordered_elements.up&!cooldown.fists_of_fury.remains&chi<3||(prev.strike_of_the_windlord||cooldown.strike_of_the_windlord.remains)&cooldown.celestial_conduit.remains<2&buff.ordered_elements.up&chi<5&combo_strike||(!variable.small_hotjs_active||!buff.heart_of_the_jade_serpent_cdr_celestial.up)&combo_strike&chi.deficit>=2&!buff.ordered_elements.up\nactions.default_cleave+=/touch_of_death,if=!variable.small_hotjs_active&!buff.heart_of_the_jade_serpent_cdr_celestial.up\nactions.default_cleave+=/whirling_dragon_punch,cycle_targets=1,if=variable.small_hotjs_active&buff.dance_of_chiji.stack<2\nactions.default_cleave+=/whirling_dragon_punch,cycle_targets=1,if=buff.dance_of_chiji.stack<2\nactions.default_cleave+=/slicing_winds,if=variable.small_hotjs_active||buff.heart_of_the_jade_serpent_cdr_celestial.up\n## [Hekili] -fight_style\n## actions.default_cleave+=/celestial_conduit,if=buff.storm_earth_and_fire.up&debuff.gale_force.remains<5&cooldown.strike_of_the_windlord.remains&(!buff.heart_of_the_jade_serpent_cdr.up||debuff.gale_force.remains<5)&(talent.xuens_bond||!talent.xuens_bond&buff.invokers_delight.up)||fight_remains<15||fight_style.dungeonroute&buff.invokers_delight.up&cooldown.strike_of_the_windlord.remains&buff.storm_earth_and_fire.remains<8||fight_remains<10\nactions.default_cleave+=/celestial_conduit,if=buff.storm_earth_and_fire.up&debuff.gale_force.remains<5&cooldown.strike_of_the_windlord.remains&(!buff.heart_of_the_jade_serpent_cdr.up||debuff.gale_force.remains<5)&(talent.xuens_bond||!talent.xuens_bond&buff.invokers_delight.up)||boss&fight_remains<15||buff.invokers_delight.up&cooldown.strike_of_the_windlord.remains&buff.storm_earth_and_fire.remains<8\nactions.default_cleave+=/rising_sun_kick,cycle_targets=1,if=buff.invoke_xuen_the_white_tiger.down&prev.tiger_palm&time<5||variable.small_hotjs_active&buff.pressure_point.up&cooldown.fists_of_fury.remains&(talent.glory_of_the_dawn||active_enemies<3)\nactions.default_cleave+=/fists_of_fury,cycle_targets=1,if=combo_strike&buff.heart_of_the_jade_serpent_cdr_celestial.up||variable.small_hotjs_active\nactions.default_cleave+=/whirling_dragon_punch,cycle_targets=1,if=buff.heart_of_the_jade_serpent_cdr_celestial.up\nactions.default_cleave+=/strike_of_the_windlord,cycle_targets=1,if=talent.gale_force&buff.invokers_delight.up&(buff.bloodlust.up||!buff.heart_of_the_jade_serpent_cdr_celestial.up)\nactions.default_cleave+=/fists_of_fury,cycle_targets=1,if=buff.power_infusion.up&buff.bloodlust.up\nactions.default_cleave+=/rising_sun_kick,cycle_targets=1,if=buff.power_infusion.up&buff.bloodlust.up&active_enemies<3\nactions.default_cleave+=/blackout_kick,if=buff.teachings_of_the_monastery.stack=8&(active_enemies<3||talent.shadowboxing_treads)\nactions.default_cleave+=/tiger_palm,if=combo_strike&buff.storm_earth_and_fire.remains>2&talent.flurry_strikes&!talent.xuens_battlegear&set_bonus.tww3_4pc\nactions.default_cleave+=/whirling_dragon_punch,cycle_targets=1,if=!talent.revolving_whirl||talent.revolving_whirl&buff.dance_of_chiji.stack<2&active_enemies>2||active_enemies<3\nactions.default_cleave+=/strike_of_the_windlord,if=time>5&(cooldown.invoke_xuen_the_white_tiger.remains>15||talent.flurry_strikes)&(cooldown.fists_of_fury.remains<2||cooldown.celestial_conduit.remains<10)\nactions.default_cleave+=/slicing_winds\nactions.default_cleave+=/crackling_jade_lightning,cycle_targets=1,if=buff.the_emperors_capacitor.stack>19&combo_strike&talent.power_of_the_thunder_king&cooldown.invoke_xuen_the_white_tiger.remains>10\nactions.default_cleave+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.dance_of_chiji.stack=2\nactions.default_cleave+=/tiger_palm,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes&active_enemies<5&buff.wisdom_of_the_wall_flurry.up&active_enemies<4\n## [Hekili] -fight_style\n## actions.default_cleave+=/fists_of_fury,cycle_targets=1,if=(talent.flurry_strikes||talent.xuens_battlegear||!talent.xuens_battlegear&(cooldown.strike_of_the_windlord.remains>1||variable.small_hotjs_active||buff.heart_of_the_jade_serpent_cdr_celestial.up))&(talent.flurry_strikes||talent.xuens_battlegear&(cooldown.invoke_xuen_the_white_tiger.remains>5&fight_style.patchwerk||cooldown.invoke_xuen_the_white_tiger.remains>9)||cooldown.invoke_xuen_the_white_tiger.remains>10)\nactions.default_cleave+=/fists_of_fury,cycle_targets=1,if=(talent.flurry_strikes||talent.xuens_battlegear||!talent.xuens_battlegear&(cooldown.strike_of_the_windlord.remains>1||variable.small_hotjs_active||buff.heart_of_the_jade_serpent_cdr_celestial.up))&(talent.flurry_strikes||talent.xuens_battlegear&(cooldown.invoke_xuen_the_white_tiger.remains>5||cooldown.invoke_xuen_the_white_tiger.remains>9)||cooldown.invoke_xuen_the_white_tiger.remains>10)\nactions.default_cleave+=/tiger_palm,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes&active_enemies<5&buff.wisdom_of_the_wall_flurry.up\nactions.default_cleave+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.dance_of_chiji.up&buff.chi_energy.stack>29\nactions.default_cleave+=/rising_sun_kick,cycle_targets=1,if=chi>4&(active_enemies<3||talent.glory_of_the_dawn)||chi>2&energy>50&(active_enemies<3||talent.glory_of_the_dawn)||cooldown.fists_of_fury.remains>2&(active_enemies<3||talent.glory_of_the_dawn)\nactions.default_cleave+=/blackout_kick,if=talent.shadowboxing_treads&talent.courageous_impulse&combo_strike&buff.bok_proc.stack=2\nactions.default_cleave+=/blackout_kick,if=buff.teachings_of_the_monastery.stack=4&!talent.knowledge_of_the_broken_temple&talent.shadowboxing_treads&active_enemies<3\nactions.default_cleave+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.dance_of_chiji.up\nactions.default_cleave+=/blackout_kick,if=talent.shadowboxing_treads&talent.courageous_impulse&combo_strike&buff.bok_proc.up\nactions.default_cleave+=/tiger_palm,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes&active_enemies<5\nactions.default_cleave+=/tiger_palm,if=combo_strike&chi.deficit>=2&(!buff.ordered_elements.up||energy.time_to_max<=gcd.max*3)\nactions.default_cleave+=/blackout_kick,if=combo_strike&cooldown.fists_of_fury.remains&buff.teachings_of_the_monastery.stack>3&cooldown.rising_sun_kick.remains\nactions.default_cleave+=/jadefire_stomp,if=talent.Singularly_Focused_Jade||talent.jadefire_harmony\nactions.default_cleave+=/blackout_kick,if=combo_strike&cooldown.fists_of_fury.remains&(buff.teachings_of_the_monastery.stack>3||buff.ordered_elements.up)&(talent.shadowboxing_treads||buff.bok_proc.up||buff.ordered_elements.up)\nactions.default_cleave+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&!buff.ordered_elements.up&talent.crane_vortex&active_enemies>2&chi>4\nactions.default_cleave+=/chi_burst,if=!buff.ordered_elements.up\nactions.default_cleave+=/blackout_kick,if=combo_strike&(buff.ordered_elements.up||buff.bok_proc.up&chi.deficit>=1&talent.energy_burst)&cooldown.fists_of_fury.remains\nactions.default_cleave+=/blackout_kick,if=combo_strike&cooldown.fists_of_fury.remains&(chi>2||energy>60||buff.bok_proc.up)\nactions.default_cleave+=/jadefire_stomp,target_if=max:debuff.acclamation.stack\nactions.default_cleave+=/tiger_palm,if=combo_strike&buff.ordered_elements.up&chi.deficit>=1\nactions.default_cleave+=/chi_burst\nactions.default_cleave+=/spinning_crane_kick,if=combo_strike&buff.ordered_elements.up&talent.hit_combo\nactions.default_cleave+=/blackout_kick,if=buff.ordered_elements.up&!talent.hit_combo&cooldown.fists_of_fury.remains\nactions.default_cleave+=/blackout_kick,if=combo_strike&!cooldown.fists_of_fury.remains&prev.tiger_palm\nactions.default_cleave+=/tiger_palm,if=prev.tiger_palm&chi<3&!cooldown.fists_of_fury.remains\n\n# 1 target\nactions.default_st=rising_sun_kick,if=combo_strike&buff.pressure_point.up&variable.small_hotjs_active\nactions.default_st+=/slicing_winds,if=set_bonus.tww3_2pc&talent.celestial_conduit&variable.small_hotjs_active\nactions.default_st+=/tiger_palm,if=combo_strike&!cooldown.celestial_conduit.remains&buff.pressure_point.up&chi<5&time<10\nactions.default_st+=/rising_sun_kick,if=combo_strike&(buff.pressure_point.up&!variable.small_hotjs_active&buff.heart_of_the_jade_serpent_cdr_celestial.up||buff.invokers_delight.up||buff.bloodlust.up||buff.pressure_point.up&cooldown.fists_of_fury.remains)\nactions.default_st+=/tiger_palm,cycle_targets=1,if=chi<5&combo_strike&!variable.small_hotjs_active&!buff.heart_of_the_jade_serpent_cdr_celestial.up&energy.time_to_max<=gcd.max*3\nactions.default_st+=/tiger_palm,if=combo_strike&buff.storm_earth_and_fire.remains>2&talent.flurry_strikes&set_bonus.tww3_4pc\nactions.default_st+=/tiger_palm,if=combo_strike&buff.storm_earth_and_fire.remains&talent.flurry_strikes&set_bonus.tww3_4pc&!buff.bloodlust.up\nactions.default_st+=/whirling_dragon_punch,if=!buff.heart_of_the_jade_serpent_cdr_celestial.up&!buff.dance_of_chiji.stack=2&!set_bonus.tww3_2pc\n## [Hekili] -fight_style\n## actions.default_st+=/celestial_conduit,if=buff.storm_earth_and_fire.up&(!buff.heart_of_the_jade_serpent_cdr.up||debuff.gale_force.remains<5)&cooldown.strike_of_the_windlord.remains&(talent.xuens_bond||!talent.xuens_bond&buff.invokers_delight.up)||fight_remains<15||fight_style.dungeonroute&buff.invokers_delight.up&cooldown.strike_of_the_windlord.remains&buff.storm_earth_and_fire.remains<8||fight_remains<10\nactions.default_st+=/celestial_conduit,if=buff.storm_earth_and_fire.up&(!buff.heart_of_the_jade_serpent_cdr.up||debuff.gale_force.remains<5)&cooldown.strike_of_the_windlord.remains&(talent.xuens_bond||!talent.xuens_bond&buff.invokers_delight.up)||buff.invokers_delight.up&cooldown.strike_of_the_windlord.remains&buff.storm_earth_and_fire.remains<8||boss&fight_remains<10\nactions.default_st+=/tiger_palm,cycle_targets=1,if=chi<5&combo_strike&variable.small_hotjs_active&!buff.heart_of_the_jade_serpent_cdr_celestial.up&energy.time_to_max<=gcd.max*3&!buff.invokers_delight.up&!buff.bloodlust.up&!buff.storm_earth_and_fire.up\nactions.default_st+=/fists_of_fury,if=combo_strike&buff.heart_of_the_jade_serpent_cdr_celestial.up||variable.small_hotjs_active\nactions.default_st+=/spinning_crane_kick,if=buff.dance_of_chiji.stack=2&combo_strike&(!set_bonus.tww3_2pc||!buff.bloodlust.up)&!talent.flurry_strikes\nactions.default_st+=/tiger_palm,cycle_targets=1,if=(energy>55&talent.inner_peace||energy>60&!talent.inner_peace)&combo_strike&chi.max-chi>=2&buff.teachings_of_the_monastery.stack<buff.teachings_of_the_monastery.max_stack&(talent.energy_burst&!buff.bok_proc.up||!talent.energy_burst)&!buff.ordered_elements.up||(talent.energy_burst&!buff.bok_proc.up||!talent.energy_burst)&!buff.ordered_elements.up&!cooldown.fists_of_fury.remains&chi<3||(prev.strike_of_the_windlord||!buff.heart_of_the_jade_serpent_cdr_celestial.up)&combo_strike&chi.deficit>=2&!buff.ordered_elements.up\nactions.default_st+=/touch_of_death\nactions.default_st+=/rising_sun_kick,if=combo_strike&(buff.invoke_xuen_the_white_tiger.down&prev.tiger_palm&time<5||buff.storm_earth_and_fire.up&talent.ordered_elements)\nactions.default_st+=/strike_of_the_windlord,if=!buff.heart_of_the_jade_serpent_cdr_celestial.up&talent.celestial_conduit&!buff.invokers_delight.up&!buff.heart_of_the_jade_serpent_cdr_celestial.up&cooldown.fists_of_fury.remains<5&cooldown.invoke_xuen_the_white_tiger.remains>15&(cooldown.slicing_winds.remains<23||!set_bonus.tww3_2pc)||boss&fight_remains<12\nactions.default_st+=/strike_of_the_windlord,if=talent.gale_force&cooldown.invoke_xuen_the_white_tiger.remains>10\nactions.default_st+=/strike_of_the_windlord,if=time>5&talent.flurry_strikes\nactions.default_st+=/strike_of_the_windlord,if=time>15&set_bonus.tww3_2pc&cooldown.invoke_xuen_the_white_tiger.remains>15&(cooldown.slicing_winds.remains<23||!set_bonus.tww3_2pc)\nactions.default_st+=/spinning_crane_kick,if=buff.dance_of_chiji.stack=2&combo_strike&!talent.flurry_strikes\nactions.default_st+=/blackout_kick,if=buff.teachings_of_the_monastery.stack>3&buff.ordered_elements.up&cooldown.rising_sun_kick.remains>1&cooldown.fists_of_fury.remains>2&!set_bonus.tww3_2pc\nactions.default_st+=/blackout_kick,if=buff.teachings_of_the_monastery.stack>4&cooldown.rising_sun_kick.remains>1&cooldown.fists_of_fury.remains>2&!set_bonus.tww3_2pc\nactions.default_st+=/whirling_dragon_punch,if=set_bonus.tww3_2pc\nactions.default_st+=/whirling_dragon_punch,if=!buff.heart_of_the_jade_serpent_cdr_celestial.up&!buff.dance_of_chiji.stack=2||buff.ordered_elements.up||talent.knowledge_of_the_broken_temple\n## [Hekili] Removed fight styles and split in 3.\n## actions.default_st+=/crackling_jade_lightning,if=buff.the_emperors_capacitor.stack>19&!variable.small_hotjs_active&!buff.heart_of_the_jade_serpent_cdr_celestial.up&combo_strike&(!fight_style.dungeonslice||target.time_to_die>20)&cooldown.invoke_xuen_the_white_tiger.remains>15||buff.the_emperors_capacitor.stack>20&!variable.small_hotjs_active&!buff.heart_of_the_jade_serpent_cdr_celestial.up&combo_strike&(!fight_style.dungeonslice||target.time_to_die>20)&cooldown.invoke_xuen_the_white_tiger.remains<20&cooldown.invoke_xuen_the_white_tiger.remains>2||buff.the_emperors_capacitor.stack>10&fight_remains<5||buff.storm_earth_and_fire.remains<2&buff.the_emperors_capacitor.stack>15&buff.storm_earth_and_fire.up\nactions.default_st+=/crackling_jade_lightning,if=buff.the_emperors_capacitor.stack>19&!variable.small_hotjs_active&!buff.heart_of_the_jade_serpent_cdr_celestial.up&combo_strike&fight_remains>20&cooldown.invoke_xuen_the_white_tiger.remains>15\nactions.default_st+=/crackling_jade_lightning,if=buff.the_emperors_capacitor.stack>20&!variable.small_hotjs_active&!buff.heart_of_the_jade_serpent_cdr_celestial.up&combo_strike&fight_remains>20&cooldown.invoke_xuen_the_white_tiger.remains<20&cooldown.invoke_xuen_the_white_tiger.remains>2\nactions.default_st+=/crackling_jade_lightning,if=buff.the_emperors_capacitor.stack>10&fight_remains<5||buff.storm_earth_and_fire.remains<2&buff.the_emperors_capacitor.stack>15&buff.storm_earth_and_fire.up\nactions.default_st+=/slicing_winds,if=target.time_to_die>10&!set_bonus.tww3_4pc||talent.flurry_strikes\nactions.default_st+=/rising_sun_kick,if=combo_strike&(chi>4||chi>2&energy>50||cooldown.fists_of_fury.remains>2)\nactions.default_st+=/fists_of_fury,if=(talent.xuens_battlegear||!talent.xuens_battlegear&(cooldown.strike_of_the_windlord.remains>1||variable.small_hotjs_active||buff.heart_of_the_jade_serpent_cdr_celestial.up))&(talent.xuens_battlegear&cooldown.invoke_xuen_the_white_tiger.remains>5||cooldown.invoke_xuen_the_white_tiger.remains>10)&(!buff.invokers_delight.up||buff.invokers_delight.up&cooldown.strike_of_the_windlord.remains>4&cooldown.celestial_conduit.remains)||fight_remains<5||talent.flurry_strikes\nactions.default_st+=/tiger_palm,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes&buff.wisdom_of_the_wall_flurry.up\nactions.default_st+=/tiger_palm,if=combo_strike&chi<5&set_bonus.tww3_2pc\nactions.default_st+=/spinning_crane_kick,if=buff.dance_of_chiji.stack=2&combo_strike\nactions.default_st+=/blackout_kick,if=combo_strike&talent.energy_burst&buff.bok_proc.up&chi<5&(variable.small_hotjs_active||buff.heart_of_the_jade_serpent_cdr_celestial.up)\nactions.default_st+=/spinning_crane_kick,if=combo_strike&buff.bloodlust.up&variable.small_hotjs_active&buff.dance_of_chiji.up\nactions.default_st+=/tiger_palm,if=combo_strike&chi.deficit>=2&energy.time_to_max<=gcd.max*3\nactions.default_st+=/blackout_kick,if=buff.teachings_of_the_monastery.stack>7&talent.memory_of_the_monastery&!buff.memory_of_the_monastery.up&cooldown.fists_of_fury.remains\nactions.default_st+=/spinning_crane_kick,if=(buff.dance_of_chiji.stack=2||buff.dance_of_chiji.remains<2&buff.dance_of_chiji.up)&combo_strike&!buff.ordered_elements.up\nactions.default_st+=/whirling_dragon_punch\nactions.default_st+=/spinning_crane_kick,if=buff.dance_of_chiji.stack=2&combo_strike\nactions.default_st+=/blackout_kick,if=talent.courageous_impulse&combo_strike&buff.bok_proc.stack=2\nactions.default_st+=/spinning_crane_kick,if=buff.dance_of_chiji.up&set_bonus.tww3_2pc&combo_strike\nactions.default_st+=/blackout_kick,if=combo_strike&buff.ordered_elements.up&cooldown.rising_sun_kick.remains>1&cooldown.fists_of_fury.remains>2\nactions.default_st+=/tiger_palm,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes\nactions.default_st+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up&(buff.ordered_elements.up||energy.time_to_max>=gcd.max*3&talent.sequenced_strikes&talent.energy_burst||!talent.sequenced_strikes||!talent.energy_burst||buff.dance_of_chiji.remains<=gcd.max*3)\nactions.default_st+=/tiger_palm,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes\nactions.default_st+=/jadefire_stomp,if=talent.Singularly_Focused_Jade||talent.jadefire_harmony\nactions.default_st+=/chi_burst,if=!buff.ordered_elements.up\nactions.default_st+=/blackout_kick,if=combo_strike&(buff.ordered_elements.up||buff.bok_proc.up&chi.deficit>=1&talent.energy_burst)&cooldown.fists_of_fury.remains\nactions.default_st+=/blackout_kick,if=combo_strike&cooldown.fists_of_fury.remains&(chi>2||energy>60||buff.bok_proc.up)\nactions.default_st+=/jadefire_stomp\nactions.default_st+=/tiger_palm,if=combo_strike&buff.ordered_elements.up&chi.deficit>=1\nactions.default_st+=/chi_burst\nactions.default_st+=/spinning_crane_kick,if=combo_strike&buff.ordered_elements.up&talent.hit_combo\nactions.default_st+=/blackout_kick,if=buff.ordered_elements.up&!talent.hit_combo&cooldown.fists_of_fury.remains\nactions.default_st+=/tiger_palm,if=prev.tiger_palm&chi<3&!cooldown.fists_of_fury.remains\n\n# Fallback\nactions.fallback=spinning_crane_kick,if=chi>5&combo_strike\nactions.fallback+=/blackout_kick,if=combo_strike&chi>3\nactions.fallback+=/tiger_palm,if=combo_strike&chi>5\n\n# normal opener\nactions.normal_opener=tiger_palm,if=chi<6&combo_strike\nactions.normal_opener+=/rising_sun_kick,if=talent.ordered_elements\n\n# Double on Use Stats\nactions.trinkets=use_item,slot=trinket1,if=trinket.1.has_use_buff&trinket.2.has_use_buff&buff.invoke_xuen_the_white_tiger.up&invoke_xuen_count%%2||boss&fight_remains<20\nactions.trinkets+=/use_item,slot=trinket2,if=trinket.1.has_use_buff&trinket.2.has_use_buff&buff.invoke_xuen_the_white_tiger.up||boss&fight_remains<20\n# Trinket 1 On use Stats\nactions.trinkets+=/use_item,slot=trinket1,if=trinket.1.has_use_buff&!trinket.2.has_use_buff&buff.invoke_xuen_the_white_tiger.up||boss&fight_remains<20\nactions.trinkets+=/use_item,slot=trinket2,if=trinket.1.has_use_buff&!trinket.2.has_use_buff&cooldown.invoke_xuen_the_white_tiger.remains>30||boss&fight_remains<20\n# Trinket 2 On use Stats\nactions.trinkets+=/use_item,slot=trinket1,if=!trinket.1.has_use_buff&trinket.2.has_use_buff&cooldown.invoke_xuen_the_white_tiger.remains>30||boss&fight_remains<20\nactions.trinkets+=/use_item,slot=trinket2,if=!trinket.1.has_use_buff&trinket.2.has_use_buff&buff.invoke_xuen_the_white_tiger.up||boss&fight_remains<20\n# No Stat on Use\nactions.trinkets+=/use_item,slot=trinket1,if=!trinket.1.has_use_buff&!trinket.2.has_use_buff\nactions.trinkets+=/use_item,slot=trinket2,if=!trinket.1.has_use_buff&!trinket.2.has_use_buff\n# Use Weapon\nactions.trinkets+=/use_item,slot=main_hand",
["basedOn"] = "Windwalker",
["author"] = "SimC",
},
["Shadow"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/priest_shadow.simc",
["builtIn"] = true,
["date"] = 20250823,
["author"] = "SimC",
["desc"] = "-- The War Within Season 3\n2025-08-23: APL Sync, have fun pressing flash heal\n2025-08-10: Tweak Shadow Crash\n2025-08-08: Fix Void Torrent channels\n2025-08-05: First APL",
["lists"] = {
["main"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_dot.vampiric_touch = active_enemies || action.shadow_crash.in_flight",
["criteria"] = "active_enemies < 3",
["var_name"] = "dots_up",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 30 || target.time_to_die > 15 & ( ! variable.holding_crash || active_enemies > 2 )",
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["description"] = "Use Shadowfiend and Mindbender on cooldown as long as Vampiric Touch and Shadow Word: Pain are active and sync with Dark Ascension",
["criteria"] = "( dot.shadow_word_pain.ticking & variable.dots_up || action.shadow_crash.in_flight ) & ( ! cooldown.halo.up || ! talent.power_surge.enabled ) & ( boss & fight_remains < 30 || target.time_to_die > 15 ) & ( ! talent.dark_ascension.enabled || cooldown.dark_ascension.remains < gcd.max || boss & fight_remains < 15 )",
["action"] = "mindbender",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["criteria"] = "priest.force_devour_matter & talent.devour_matter.enabled",
["description"] = "High Priority Shadow Word: Death when you are forcing the bonus from Devour Matter",
},
{
["enabled"] = true,
["action"] = "void_blast",
["cycle_targets"] = 1,
["criteria"] = "( dot.devouring_plague.remains >= execute_time || buff.entropic_rift.remains <= gcd.max || action.void_torrent.channeling & talent.void_empowerment.enabled ) & ( insanity.deficit >= 16 || cooldown.mind_blast.full_recharge_time <= gcd.max || buff.entropic_rift.remains <= gcd.max )",
["description"] = "Blast more burst :wicked:",
},
{
["enabled"] = true,
["action"] = "devouring_plague",
["cycle_targets"] = 1,
["criteria"] = "buff.voidform.up & talent.perfected_form.enabled & buff.voidform.remains <= gcd.max & talent.void_eruption.enabled",
["description"] = "Do not let Voidform Expire if you can avoid it.",
},
{
["enabled"] = true,
["action"] = "void_bolt",
["cycle_targets"] = 1,
["criteria"] = "insanity.deficit > 16 & cooldown.void_bolt.remains / gcd.max <= 0.1",
["description"] = "Use Voidbolt on the enemy with the largest time to die. We do no care about dots because Voidbolt is only accessible inside voidform which guarantees maximum effect",
},
{
["enabled"] = true,
["action"] = "devouring_plague",
["cycle_targets"] = 1,
["criteria"] = "active_dot.devouring_plague <= 1 & dot.devouring_plague.remains <= gcd.max & ( ! talent.void_eruption.enabled || cooldown.void_eruption.remains >= gcd.max * 3 ) || insanity.deficit <= 35 || buff.mind_devourer.up || buff.entropic_rift.up || buff.power_surge.up & buff.tww3_archon_4pc_helper.stack < 4 & buff.ascension.up",
["description"] = "Do not overcap on insanity",
},
{
["enabled"] = true,
["action"] = "void_torrent",
["cycle_targets"] = 1,
["interrupt_if"] = "talent.entropic_rift.disabled",
["interrupt_immediate"] = "1",
["criteria"] = "! variable.holding_crash & ( dot.devouring_plague.remains >= 2.5 & ( cooldown.dark_ascension.remains >= 12 || ! talent.dark_ascension.enabled || ! talent.void_blast.enabled ) || cooldown.void_eruption.remains <= 3 & talent.void_eruption.enabled )",
["description"] = "Use Void Torrent if it will get near full Mastery Value",
},
{
["enabled"] = true,
["description"] = "Use Void Volley if it would expire soon",
["criteria"] = "buff.void_volley.remains <= 5 || buff.entropic_rift.up & action.void_blast.usable_in > buff.entropic_rift.remains || target.time_to_die <= 5",
["action"] = "void_volley",
},
{
["enabled"] = true,
["action"] = "mind_flay",
["cycle_targets"] = 1,
["criteria"] = "buff.mind_flay_insanity.up",
["description"] = "MFI is a good button",
},
{
["enabled"] = true,
["action"] = "shadow_crash",
["cycle_targets"] = 1,
["criteria"] = "! variable.holding_crash & ! action.shadow_crash.in_flight",
["description"] = "Use Shadow Crash as long as you are not holding for adds and Vampiric Touch is within pandemic range",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["criteria"] = "refreshable & target.time_to_die > 12 & ( dot.vampiric_touch.ticking || ! variable.dots_up ) & ( variable.max_vts > 0 || active_enemies = 1 ) & ( action.shadow_crash.usable_in >= dot.vampiric_touch.remains || variable.holding_crash || ! action.shadow_crash.enabled ) & ( ! action.shadow_crash.in_flight )",
["description"] = "Put out Vampiric Touch on enemies that will live at least 12s and Shadow Crash is not available soon",
},
{
["enabled"] = true,
["action"] = "mind_blast",
["cycle_targets"] = 1,
["criteria"] = "( ! buff.mind_devourer.react || ! talent.mind_devourer.enabled || cooldown.void_eruption.up & talent.void_eruption.enabled )",
["description"] = "Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption",
},
{
["action"] = "void_volley",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.voidform.up & talent.void_eruption.enabled || buff.power_surge.up || talent.distorted_reality.enabled",
["action"] = "devouring_plague",
},
{
["enabled"] = true,
["criteria"] = "spell_targets > 1",
["action"] = "halo",
},
{
["enabled"] = true,
["description"] = "Healing spell action list for proccing Twist of Fate. Set priest.twist_of_fate_heal_rppm=<rppm> to make this be used. actions.main+=/call_action_list,name=heal_for_tof,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up&(talent.rhapsody||talent.divine_star||talent.halo)",
["criteria"] = "! variable.holding_crash & raid_event.adds.in >= 30 & talent.descending_darkness.enabled & raid_event.movement.in >= 30",
["action"] = "shadow_crash",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["criteria"] = "target.health.pct < 20 || talent.deathspeaker.enabled & target.health.pct < 35",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["criteria"] = "talent.inescapable_torment.enabled & pet.fiend.active",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mind_flay",
["cycle_targets"] = 1,
["interrupt_if"] = "ticks>=2",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["action"] = "divine_star",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Use Shadow Crash while moving as a low-priority action when adds will not spawn in 20 seconds.",
["criteria"] = "raid_event.adds.in > 20",
["action"] = "shadow_crash",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["criteria"] = "target.health.pct < 20",
["description"] = "Use Shadow Word: Death while moving as a low-priority action in execute",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["criteria"] = "dot.devouring_plague.remains",
["description"] = "Use Shadow Word: Death while moving as a low-priority action",
},
{
["enabled"] = true,
["description"] = "Use Shadow Word: Pain while moving as a low-priority action",
["action"] = "shadow_word_pain",
},
},
["cds"] = {
{
["enabled"] = true,
["criteria"] = "( buff.voidform.up & buff.power_infusion.up || buff.dark_ascension.up ) & ( fight_remains >= 320 || buff.bloodlust.up ) || boss & fight_remains <= 30",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & ( buff.voidform.up || buff.dark_ascension.up ) || boss & fight_remains <= 8",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & ( buff.voidform.up || buff.dark_ascension.up ) || boss & fight_remains <= 12",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & ( buff.voidform.up || buff.dark_ascension.up ) || boss & fight_remains <= 15",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & ( buff.voidform.up || buff.dark_ascension.up ) || boss & fight_remains <= 15",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["description"] = "Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=194249/voidform'>Voidform</a> or <a href='https://www.wowhead.com/spell=391109/dark-ascension'>Dark Ascension</a> is active. Chain directly after your own <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a>. Use Flash Heal to proc Nexus-King's Command trinket",
["criteria"] = "equipped.nexuskings_command & buff.oathbound.up & ( ! buff.boon_of_the_oathsworn.up || buff.boon_of_the_oathsworn.remains < 3 ) & ( ( talent.void_eruption.enabled & ( buff.voidform.up || cooldown.void_eruption.up ) ) || ( talent.dark_ascension.enabled & cooldown.dark_ascension.up ) || ( talent.power_surge.enabled & cooldown.halo.up ) || ( talent.entropic_rift.enabled & cooldown.void_torrent.up ) )",
["action"] = "flash_heal",
},
{
["enabled"] = true,
["description"] = "Sync Power Infusion with Voidform or Dark Ascension",
["criteria"] = "( buff.voidform.up || buff.dark_ascension.up & ( fight_remains <= 80 || fight_remains >= 140 ) ) & ( ! buff.power_infusion.up || set_bonus.tww2_4pc & buff.power_infusion.remains <= 15 )",
["action"] = "power_infusion",
},
{
["enabled"] = true,
["description"] = "Make sure Mindbender is active before popping Dark Ascension unless you have insignificant talent points or too many targets",
["criteria"] = "talent.power_surge.enabled & ( pet.fiend.active & cooldown.fiend.remains >= 4 & talent.mindbender.enabled || ! talent.mindbender.enabled & ! cooldown.fiend.up || active_enemies > 2 & ! talent.inescapable_torment.enabled || ! talent.dark_ascension.enabled ) & ( cooldown.mind_blast.charges = 0 || ! cooldown.void_torrent.up || ! talent.void_eruption.enabled || cooldown.void_eruption.remains >= gcd.max * 4 || buff.mind_devourer.up & talent.mind_devourer.enabled )",
["action"] = "halo",
},
{
["enabled"] = true,
["description"] = "Make sure Mindbender is active before popping Void Eruption and dump charges of Mind Blast if Mind Devourer is not active and you are not Archon",
["criteria"] = "( pet.fiend.active & cooldown.fiend.remains >= 4 || ! talent.mindbender.enabled & ! cooldown.fiend.up || active_enemies > 2 & ! talent.inescapable_torment.enabled ) & ( cooldown.mind_blast.charges = 0 || time > 15 || buff.mind_devourer.up & talent.mind_devourer.enabled || buff.power_surge.up )",
["action"] = "void_eruption",
},
{
["enabled"] = true,
["description"] = "Use Dark Ascension when you have enough Insanity to cast Devouring Plague.",
["criteria"] = "( pet.fiend.active & cooldown.fiend.remains >= 4 || ! talent.mindbender.enabled & ! cooldown.fiend.up || active_enemies > 2 & ! talent.inescapable_torment.enabled ) & ( active_dot.devouring_plague >= 1 || insanity >= ( 20 - ( 5 * talent.minds_eye.enabled ) + ( 5 * talent.distorted_reality.enabled ) - ( pet.fiend.active * 2 ) ) )",
["action"] = "dark_ascension",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["description"] = "Use Desperate Prayer to heal up should Shadow Word: Death or other damage bring you below 75%",
["criteria"] = "health.pct <= 75",
["action"] = "desperate_prayer",
},
},
["aoe_variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >? 12",
["default"] = "12",
["var_name"] = "max_vts",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["default"] = "1",
["var_name"] = "is_vt_possible",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["criteria"] = "target.time_to_die >= 18",
["var_name"] = "is_vt_possible",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_dot.vampiric_touch + 8 * ( action.shadow_crash.in_flight & action.shadow_crash.enabled ) ) >= variable.max_vts || ! variable.is_vt_possible",
["description"] = "TODO: Revamp to fix undesired behavior with unstacked fights",
["var_name"] = "dots_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( variable.max_vts - active_dot.vampiric_touch ) < 4 & raid_event.adds.in > 15 || raid_event.adds.in < 10 & raid_event.adds.count > ( variable.max_vts - active_dot.vampiric_touch )",
["criteria"] = "variable.holding_crash & action.shadow_crash.enabled & raid_event.adds.exists",
["var_name"] = "holding_crash",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_dot.vampiric_touch + 8 * ! variable.holding_crash ) >= variable.max_vts || ! variable.is_vt_possible",
["var_name"] = "manual_vts_applied",
},
},
["precombat"] = {
{
["action"] = "power_word_fortitude",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.shadowform.up",
["action"] = "shadowform",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.is.signet_of_the_priory ) & ( trinket.t1.cooldown.duration >= 20 )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.is.signet_of_the_priory ) & ( trinket.t2.cooldown.duration >= 20 )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "dr_force_prio",
["default"] = "1",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "me_force_prio",
["default"] = "1",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "max_vts",
["default"] = "12",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "is_vt_possible",
["default"] = "0",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "pooling_mindblasts",
["default"] = "0",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 4 & ( fight_remains >= 120 || active_enemies <= 2 ) & ! talent.power_surge.enabled",
["action"] = "halo",
},
{
["enabled"] = true,
["action"] = "shadow_crash",
["criteria"] = "active_enemies <= 12",
["line_cd"] = "5",
},
{
["enabled"] = true,
["criteria"] = "! talent.shadow_crash.enabled || active_enemies > 8",
["action"] = "vampiric_touch",
},
},
["aoe"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "aoe_variables",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["criteria"] = "( variable.max_vts > 0 & ! variable.manual_vts_applied & ! action.shadow_crash.in_flight ) & ! buff.entropic_rift.up",
["description"] = "High Priority action to put out Vampiric Touch on enemies that will live at least 18 seconds, up to 12 targets manually while prepping AoE",
},
{
["enabled"] = true,
["description"] = "Use Shadow Crash to apply Vampiric Touch to as many adds as possible while being efficient with Vampiric Touch refresh windows",
["criteria"] = "! variable.holding_crash",
["action"] = "shadow_crash",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "hyperthread_wristwraps",
["use_off_gcd"] = 1,
["action"] = "hyperthread_wristwraps",
["criteria"] = "talent.void_blast.enabled & hyperthread_wristwraps.void_blast >= 2 & ! cooldown.mind_blast.up || ! talent.void_blast.enabled & ( ( hyperthread_wristwraps.void_bolt >= 1 || ! talent.void_eruption.enabled ) & hyperthread_wristwraps.void_torrent >= 1 )",
},
{
["enabled"] = true,
["name"] = "aberrant_spellforge",
["use_off_gcd"] = 1,
["action"] = "aberrant_spellforge",
["criteria"] = "gcd.remains > 0 & buff.aberrant_spellforge.stack <= 4",
},
{
["enabled"] = true,
["name"] = "neural_synapse_enhancer",
["use_off_gcd"] = 1,
["action"] = "neural_synapse_enhancer",
["criteria"] = "( buff.power_surge.up || buff.entropic_rift.up || variable.trinket_1_buffs || variable.trinket_2_buffs ) & ( buff.voidform.up || cooldown.void_eruption.remains >= 40 || buff.dark_ascension.up )",
},
{
["enabled"] = true,
["name"] = "flarendos_pilot_light",
["use_off_gcd"] = 1,
["action"] = "flarendos_pilot_light",
["criteria"] = "gcd.remains > 0 & ( buff.voidform.up || buff.power_infusion.remains >= 10 || buff.dark_ascension.up ) || boss & fight_remains < 20",
},
{
["enabled"] = true,
["name"] = "geargrinders_spare_keys",
["use_off_gcd"] = 1,
["action"] = "geargrinders_spare_keys",
["criteria"] = "gcd.remains > 0",
},
{
["enabled"] = true,
["criteria"] = "( buff.power_infusion.remains >= 10 & buff.spymasters_report.stack >= 36 & fight_remains > 240 ) & ( buff.voidform.up || buff.dark_ascension.up || ! talent.dark_ascension.enabled & ! talent.void_eruption.enabled ) || ( ( buff.power_infusion.remains >= 10 & buff.bloodlust.up & buff.spymasters_report.stack >= 10 ) || buff.power_infusion.remains >= 10 & ( boss & fight_remains < 120 ) ) & ( buff.voidform.up || buff.dark_ascension.up || ! talent.dark_ascension.enabled & ! talent.void_eruption.enabled ) || ( boss & fight_remains <= 20 || buff.dark_ascension.up & boss & fight_remains <= 60 || buff.entropic_rift.up & talent.entropic_rift.enabled & boss & fight_remains <= 30 ) & ! buff.spymasters_web.up",
["name"] = "spymasters_web",
["action"] = "spymasters_web",
},
{
["enabled"] = true,
["criteria"] = "( buff.voidform.up || buff.power_infusion.remains >= 10 || buff.dark_ascension.up || ( talent.void_eruption.enabled & cooldown.void_eruption.remains > 10 ) || equipped.neural_synapse_enhancer & buff.entropic_rift.up ) || boss & fight_remains < 20",
["name"] = "prized_gladiators_badge_of_ferocity",
["action"] = "prized_gladiators_badge_of_ferocity",
},
{
["enabled"] = true,
["criteria"] = "( buff.voidform.up || buff.power_infusion.remains >= 10 || buff.dark_ascension.up || equipped.neural_synapse_enhancer & buff.entropic_rift.up ) || boss & fight_remains < 20",
["action"] = "use_items",
},
},
["default"] = {
{
["action"] = "silence",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "false",
["var_name"] = "holding_crash",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.void_eruption.remains <= gcd.max * 3 & talent.void_eruption.enabled || cooldown.dark_ascension.up & talent.dark_ascension.enabled ) || talent.void_torrent.enabled & talent.psychic_link.enabled & cooldown.void_torrent.remains <= 4 & ! variable.holding_crash & ! buff.voidform.up",
["var_name"] = "pool_for_cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 2",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "main",
},
},
["heal_for_tof"] = {
{
["enabled"] = true,
["description"] = "Use Halo to acquire Twist of Fate if an ally can be healed for it and it is not currently up.",
["action"] = "halo",
},
{
["enabled"] = true,
["description"] = "Use Divine Star to acquire Twist of Fate if an ally can be healed for it and it is not currently up.",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "Use Holy Nova when Rhapsody is fully stacked to acquire Twist of Fate if an ally can be healed for it and it is not currently up.",
["criteria"] = "buff.rhapsody.stack = 20 & talent.rhapsody.enabled",
["action"] = "holy_nova",
},
},
},
["version"] = 20250823,
["warnings"] = "The import for 'trinkets' required some automated changes.\nLine 1: Converted 'hyperthread_wristwraps.void_blast.count' to 'hyperthread_wristwraps.void_blast' (1x).\nLine 1: Converted 'hyperthread_wristwraps.void_bolt.count' to 'hyperthread_wristwraps.void_bolt' (1x).\nLine 1: Converted 'hyperthread_wristwraps.void_torrent.count' to 'hyperthread_wristwraps.void_torrent' (1x).\n\nThe import for 'main' required some automated changes.\nLine 7: Converted operations in 'insanity.deficit>16&cooldown.void_bolt.remains%gcd.max<=0.1' to 'insanity.deficit>16&cooldown.void_bolt.remains/gcd.max<=0.1'.\nThe following auras were used in the action list but were not found in the addon database:\n - twist_of_fate_can_trigger_on_ally_heal\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 3: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 3: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 3: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 3: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 3: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.is.signet_of_the_priory' to 'trinket.t1.is.signet_of_the_priory' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 4: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 4: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 4: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 4: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 4: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.is.signet_of_the_priory' to 'trinket.t2.is.signet_of_the_priory' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nImported 8 action lists.\n",
["profile"] = "## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/priest_shadow.simc\n## SimulationCraft Commit Sync: bd9a80c\n## Date: 2025-08-10\n\nactions.precombat+=/power_word_fortitude\nactions.precombat+=/shadowform,if=!buff.shadowform.up\nactions.precombat+=/variable,name=trinket_1_buffs,value=(trinket.1.has_buff.intellect||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit||trinket.1.is.signet_of_the_priory)&(trinket.1.cooldown.duration>=20)\nactions.precombat+=/variable,name=trinket_2_buffs,value=(trinket.2.has_buff.intellect||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit||trinket.2.is.signet_of_the_priory)&(trinket.2.cooldown.duration>=20)\nactions.precombat+=/variable,name=dr_force_prio,default=1,op=reset\nactions.precombat+=/variable,name=me_force_prio,default=1,op=reset\nactions.precombat+=/variable,name=max_vts,default=12,op=reset\nactions.precombat+=/variable,name=is_vt_possible,default=0,op=reset\nactions.precombat+=/variable,name=pooling_mindblasts,default=0,op=reset\n## actions.precombat+=/use_item,name=ingenious_mana_battery\nactions.precombat+=/arcane_torrent\n## actions.precombat+=/use_item,name=aberrant_spellforge\nactions.precombat+=/halo,if=active_enemies<=4&(fight_remains>=120||active_enemies<=2)&!talent.power_surge\n## [Syrif] - Even with startsCombat = true, this spell doesnt like to start combat. time_since prevents double-cast\nactions.precombat+=/shadow_crash,line_cd=5,if=active_enemies<=12\nactions.precombat+=/vampiric_touch,if=!talent.shadow_crash.enabled||active_enemies>8\n\nactions+=/silence\nactions+=/variable,name=holding_crash,op=set,value=false\nactions+=/variable,name=pool_for_cds,op=set,value=(cooldown.void_eruption.remains<=gcd.max*3&talent.void_eruption||cooldown.dark_ascension.up&talent.dark_ascension)||talent.void_torrent&talent.psychic_link&cooldown.void_torrent.remains<=4&!variable.holding_crash&!buff.voidform.up\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>2\nactions+=/run_action_list,name=main\n\nactions.aoe+=/call_action_list,name=aoe_variables\n# High Priority action to put out Vampiric Touch on enemies that will live at least 18 seconds, up to 12 targets manually while prepping AoE\nactions.aoe+=/vampiric_touch,cycle_targets=1,if=(variable.max_vts>0&!variable.manual_vts_applied&!action.shadow_crash.in_flight)&!buff.entropic_rift.up\n# Use Shadow Crash to apply Vampiric Touch to as many adds as possible while being efficient with Vampiric Touch refresh windows\nactions.aoe+=/shadow_crash,if=!variable.holding_crash\n\nactions.aoe_variables+=/variable,name=max_vts,op=set,default=12,value=active_enemies>?12\nactions.aoe_variables+=/variable,name=is_vt_possible,op=set,value=0,default=1\nactions.aoe_variables+=/variable,name=is_vt_possible,op=set,value=1,if=target.time_to_die>=18\n# TODO: Revamp to fix undesired behavior with unstacked fights\nactions.aoe_variables+=/variable,name=dots_up,op=set,value=(active_dot.vampiric_touch+8*(action.shadow_crash.in_flight&action.shadow_crash.enabled))>=variable.max_vts||!variable.is_vt_possible\nactions.aoe_variables+=/variable,name=holding_crash,op=set,value=(variable.max_vts-active_dot.vampiric_touch)<4&raid_event.adds.in>15||raid_event.adds.in<10&raid_event.adds.count>(variable.max_vts-active_dot.vampiric_touch),if=variable.holding_crash&action.shadow_crash.enabled&raid_event.adds.exists\nactions.aoe_variables+=/variable,name=manual_vts_applied,op=set,value=(active_dot.vampiric_touch+8*!variable.holding_crash)>=variable.max_vts||!variable.is_vt_possible\n\n## TODO: Add holding condition for weird fight times to potion with execute\nactions.cds+=/potion,if=(buff.voidform.up&buff.power_infusion.up||buff.dark_ascension.up)&(fight_remains>=320||buff.bloodlust.up)||boss&fight_remains<=30\nactions.cds+=/fireblood,if=buff.power_infusion.up&(buff.voidform.up||buff.dark_ascension.up)||boss&fight_remains<=8\nactions.cds+=/berserking,if=buff.power_infusion.up&(buff.voidform.up||buff.dark_ascension.up)||boss&fight_remains<=12\nactions.cds+=/blood_fury,if=buff.power_infusion.up&(buff.voidform.up||buff.dark_ascension.up)||boss&fight_remains<=15\nactions.cds+=/ancestral_call,if=buff.power_infusion.up&(buff.voidform.up||buff.dark_ascension.up)||boss&fight_remains<=15\n# Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=194249/voidform'>Voidform</a> or <a href='https://www.wowhead.com/spell=391109/dark-ascension'>Dark Ascension</a> is active. Chain directly after your own <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a>.\n## [Hekili] Nobody gonna do this.\n## actions.cds+=/cancel_buff,name=power_infusion,if=cooldown.power_infusion.up&cooldown.power_infusion.duration>0&set_bonus.tww2_4pc&buff.power_infusion.remains<=2\n## ## actions.cds+=/invoke_external_buff,name=power_infusion,if=(buff.voidform.up||buff.dark_ascension.up||set_bonus.tww2_4pc)&!buff.power_infusion.up\n## actions.cds+=/invoke_external_buff,name=bloodlust,if=buff.power_infusion.up&boss&fight_remains<120||boss&fight_remains<=40\n# Use Flash Heal to proc Nexus-King's Command trinket\nactions.cds+=/flash_heal,if=equipped.nexuskings_command&buff.oathbound.up&(!buff.boon_of_the_oathsworn.up||buff.boon_of_the_oathsworn.remains<3)&((talent.void_eruption&(buff.voidform.up||cooldown.void_eruption.up))||(talent.dark_ascension&cooldown.dark_ascension.up)||(talent.power_surge&cooldown.halo.up)||(talent.entropic_rift&cooldown.void_torrent.up))\n# Sync Power Infusion with Voidform or Dark Ascension\nactions.cds+=/power_infusion,if=(buff.voidform.up||buff.dark_ascension.up&(fight_remains<=80||fight_remains>=140))&(!buff.power_infusion.up||set_bonus.tww2_4pc&buff.power_infusion.remains<=15)\n# Make sure Mindbender is active before popping Dark Ascension unless you have insignificant talent points or too many targets\nactions.cds+=/halo,if=talent.power_surge&(pet.fiend.active&cooldown.fiend.remains>=4&talent.mindbender||!talent.mindbender&!cooldown.fiend.up||active_enemies>2&!talent.inescapable_torment||!talent.dark_ascension)&(cooldown.mind_blast.charges=0||!cooldown.void_torrent.up||!talent.void_eruption||cooldown.void_eruption.remains>=gcd.max*4||buff.mind_devourer.up&talent.mind_devourer)\n# Make sure Mindbender is active before popping Void Eruption and dump charges of Mind Blast if Mind Devourer is not active and you are not Archon\nactions.cds+=/void_eruption,if=(pet.fiend.active&cooldown.fiend.remains>=4||!talent.mindbender&!cooldown.fiend.up||active_enemies>2&!talent.inescapable_torment)&(cooldown.mind_blast.charges=0||time>15||buff.mind_devourer.up&talent.mind_devourer||buff.power_surge.up)\n# Use Dark Ascension when you have enough Insanity to cast Devouring Plague.\nactions.cds+=/dark_ascension,if=(pet.fiend.active&cooldown.fiend.remains>=4||!talent.mindbender&!cooldown.fiend.up||active_enemies>2&!talent.inescapable_torment)&(active_dot.devouring_plague>=1||insanity>=(20-(5*talent.minds_eye)+(5*talent.distorted_reality)-(pet.fiend.active*2)))\nactions.cds+=/call_action_list,name=trinkets\n# Use Desperate Prayer to heal up should Shadow Word: Death or other damage bring you below 75%\nactions.cds+=/desperate_prayer,if=health.pct<=75\n\n# Use Halo to acquire Twist of Fate if an ally can be healed for it and it is not currently up.\nactions.heal_for_tof+=/halo\n# Use Divine Star to acquire Twist of Fate if an ally can be healed for it and it is not currently up.\nactions.heal_for_tof+=/divine_star\n# Use Holy Nova when Rhapsody is fully stacked to acquire Twist of Fate if an ally can be healed for it and it is not currently up.\nactions.heal_for_tof+=/holy_nova,if=buff.rhapsody.stack=20&talent.rhapsody\n\nactions.main+=/variable,name=dots_up,op=set,value=active_dot.vampiric_touch=active_enemies||action.shadow_crash.in_flight,if=active_enemies<3\nactions.main+=/call_action_list,name=cds,if=boss&fight_remains<30||target.time_to_die>15&(!variable.holding_crash||active_enemies>2)\n# Use Shadowfiend and Mindbender on cooldown as long as Vampiric Touch and Shadow Word: Pain are active and sync with Dark Ascension\nactions.main+=/mindbender,if=(dot.shadow_word_pain.ticking&variable.dots_up||action.shadow_crash.in_flight)&(!cooldown.halo.up||!talent.power_surge.enabled)&(boss&fight_remains<30||target.time_to_die>15)&(!talent.dark_ascension||cooldown.dark_ascension.remains<gcd.max||boss&fight_remains<15)\n# High Priority Shadow Word: Death when you are forcing the bonus from Devour Matter\nactions.main+=/shadow_word_death,cycle_targets=1,if=priest.force_devour_matter&talent.devour_matter\n# Blast more burst :wicked:\nactions.main+=/void_blast,cycle_targets=1,if=(dot.devouring_plague.remains>=execute_time||buff.entropic_rift.remains<=gcd.max||action.void_torrent.channeling&talent.void_empowerment)&(insanity.deficit>=16||cooldown.mind_blast.full_recharge_time<=gcd.max||buff.entropic_rift.remains<=gcd.max)\n# Do not let Voidform Expire if you can avoid it.\nactions.main+=/devouring_plague,cycle_targets=1,if=buff.voidform.up&talent.perfected_form&buff.voidform.remains<=gcd.max&talent.void_eruption\n# Use Voidbolt on the enemy with the largest time to die. We do no care about dots because Voidbolt is only accessible inside voidform which guarantees maximum effect\nactions.main+=/void_bolt,cycle_targets=1,if=insanity.deficit>16&cooldown.void_bolt.remains%gcd.max<=0.1\n# Do not overcap on insanity\nactions.main+=/devouring_plague,cycle_targets=1,if=active_dot.devouring_plague<=1&dot.devouring_plague.remains<=gcd.max&(!talent.void_eruption||cooldown.void_eruption.remains>=gcd.max*3)||insanity.deficit<=35||buff.mind_devourer.up||buff.entropic_rift.up||buff.power_surge.up&buff.tww3_archon_4pc_helper.stack<4&buff.ascension.up\n# Use Void Torrent if it will get near full Mastery Value\nactions.main+=/void_torrent,cycle_targets=1,if=!variable.holding_crash&(dot.devouring_plague.remains>=2.5&(cooldown.dark_ascension.remains>=12||!talent.dark_ascension||!talent.void_blast)||cooldown.void_eruption.remains<=3&talent.void_eruption),interrupt_if=talent.entropic_rift.disabled,interrupt_immediate=1\n# Use Void Volley if it would expire soon\nactions.main+=/void_volley,if=buff.void_volley.remains<=5||buff.entropic_rift.up&action.void_blast.usable_in>buff.entropic_rift.remains||target.time_to_die<=5\n# MFI is a good button\nactions.main+=/mind_flay,cycle_targets=1,if=buff.mind_flay_insanity.up\n# Use Shadow Crash as long as you are not holding for adds and Vampiric Touch is within pandemic range\nactions.main+=/shadow_crash,cycle_targets=1,if=!variable.holding_crash&!action.shadow_crash.in_flight\n# Put out Vampiric Touch on enemies that will live at least 12s and Shadow Crash is not available soon\nactions.main+=/vampiric_touch,cycle_targets=1,if=refreshable&target.time_to_die>12&(dot.vampiric_touch.ticking||!variable.dots_up)&(variable.max_vts>0||active_enemies=1)&(action.shadow_crash.usable_in>=dot.vampiric_touch.remains||variable.holding_crash||!action.shadow_crash.enabled)&(!action.shadow_crash.in_flight)\n# Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption\nactions.main+=/mind_blast,cycle_targets=1,if=(!buff.mind_devourer.react||!talent.mind_devourer||cooldown.void_eruption.up&talent.void_eruption)\nactions.main+=/void_volley\nactions.main+=/devouring_plague,if=buff.voidform.up&talent.void_eruption||buff.power_surge.up||talent.distorted_reality\nactions.main+=/halo,if=spell_targets>1\n# Healing spell action list for proccing Twist of Fate. Set priest.twist_of_fate_heal_rppm=<rppm> to make this be used.\n# actions.main+=/call_action_list,name=heal_for_tof,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up&(talent.rhapsody||talent.divine_star||talent.halo)\nactions.main+=/shadow_crash,if=!variable.holding_crash&raid_event.adds.in>=30&talent.descending_darkness&raid_event.movement.in>=30\nactions.main+=/shadow_word_death,cycle_targets=1,if=target.health.pct<20||talent.deathspeaker&target.health.pct<35\nactions.main+=/shadow_word_death,cycle_targets=1,if=talent.inescapable_torment&pet.fiend.active\nactions.main+=/mind_flay,cycle_targets=1,chain=1,interrupt_immediate=1,interrupt_if=ticks>=2,interrupt_global=1\nactions.main+=/divine_star\n# Use Shadow Crash while moving as a low-priority action when adds will not spawn in 20 seconds.\nactions.main+=/shadow_crash,if=raid_event.adds.in>20\n# Use Shadow Word: Death while moving as a low-priority action in execute\nactions.main+=/shadow_word_death,cycle_targets=1,if=target.health.pct<20\n# Use Shadow Word: Death while moving as a low-priority action\nactions.main+=/shadow_word_death,cycle_targets=1,if=dot.devouring_plague.remains\n# Use Shadow Word: Pain while moving as a low-priority action\nactions.main+=/shadow_word_pain\n\nactions.trinkets+=/use_item,use_off_gcd=1,name=hyperthread_wristwraps,if=talent.void_blast&hyperthread_wristwraps.void_blast.count>=2&!cooldown.mind_blast.up||!talent.void_blast&((hyperthread_wristwraps.void_bolt.count>=1||!talent.void_eruption)&hyperthread_wristwraps.void_torrent.count>=1)\nactions.trinkets+=/use_item,use_off_gcd=1,name=aberrant_spellforge,if=gcd.remains>0&buff.aberrant_spellforge.stack<=4\nactions.trinkets+=/use_item,use_off_gcd=1,name=neural_synapse_enhancer,if=(buff.power_surge.up||buff.entropic_rift.up||variable.trinket_1_buffs||variable.trinket_2_buffs)&(buff.voidform.up||cooldown.void_eruption.remains>=40||buff.dark_ascension.up)\nactions.trinkets+=/use_item,use_off_gcd=1,name=flarendos_pilot_light,if=gcd.remains>0&(buff.voidform.up||buff.power_infusion.remains>=10||buff.dark_ascension.up)||boss&fight_remains<20\nactions.trinkets+=/use_item,use_off_gcd=1,name=geargrinders_spare_keys,if=gcd.remains>0\nactions.trinkets+=/use_item,name=spymasters_web,if=(buff.power_infusion.remains>=10&buff.spymasters_report.stack>=36&fight_remains>240)&(buff.voidform.up||buff.dark_ascension.up||!talent.dark_ascension&!talent.void_eruption)||((buff.power_infusion.remains>=10&buff.bloodlust.up&buff.spymasters_report.stack>=10)||buff.power_infusion.remains>=10&(boss&fight_remains<120))&(buff.voidform.up||buff.dark_ascension.up||!talent.dark_ascension&!talent.void_eruption)||(boss&fight_remains<=20||buff.dark_ascension.up&boss&fight_remains<=60||buff.entropic_rift.up&talent.entropic_rift&boss&fight_remains<=30)&!buff.spymasters_web.up\nactions.trinkets+=/use_item,name=prized_gladiators_badge_of_ferocity,if=(buff.voidform.up||buff.power_infusion.remains>=10||buff.dark_ascension.up||(talent.void_eruption&cooldown.void_eruption.remains>10)||equipped.neural_synapse_enhancer&buff.entropic_rift.up)||boss&fight_remains<20\nactions.trinkets+=/use_items,if=(buff.voidform.up||buff.power_infusion.remains>=10||buff.dark_ascension.up||equipped.neural_synapse_enhancer&buff.entropic_rift.up)||boss&fight_remains<20",
["spec"] = 258,
},
["Vengeance"] = {
["source"] = "## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/demonhunter_vengeance.simc",
["builtIn"] = true,
["date"] = 20250821,
["spec"] = 581,
["desc"] = "2025-08-21: Efficiencies\n\n2025-08-11: Initial APL",
["profile"] = "## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/demonhunter_vengeance.simc\n## SimulationCraft Commit Sync: 04a038d\n## Date: 2025-08-11\n\nactions.precombat+=/variable,name=single_target,value=active_enemies=1\nactions.precombat+=/variable,name=small_aoe,value=active_enemies>=2&active_enemies<=5\nactions.precombat+=/variable,name=big_aoe,value=active_enemies>=6\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_buff.agility||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_buff.agility||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit)\nactions.precombat+=/arcane_torrent\nactions.precombat+=/sigil_of_flame,if=hero_tree.aldrachi_reaver||(hero_tree.felscarred&talent.student_of_suffering)\nactions.precombat+=/immolation_aura\n\nactions+=/disrupt\nactions+=/demon_spikes,use_off_gcd=1,if=!buff.demon_spikes.up&(tanking||time<5)\nactions+=/variable,name=num_spawnable_souls,op=reset,default=0\nactions+=/variable,name=num_spawnable_souls,op=max,value=1,if=talent.soul_sigils&cooldown.sigil_of_flame.up\nactions+=/variable,name=num_spawnable_souls,op=max,value=2,if=talent.fracture&cooldown.fracture.charges_fractional>=1&!buff.metamorphosis.up\nactions+=/variable,name=num_spawnable_souls,op=max,value=3,if=talent.fracture&cooldown.fracture.charges_fractional>=1&buff.metamorphosis.up\nactions+=/variable,name=num_spawnable_souls,op=add,value=1,if=talent.soul_carver&(cooldown.soul_carver.remains>(cooldown.soul_carver.duration-3))\nactions+=/infernal_strike,use_off_gcd=1\nactions+=/call_action_list,name=ar,strict=1,if=!hero_tree.felscarred\nactions+=/call_action_list,name=fs,strict=1,if=hero_tree.felscarred\n\nactions.ar+=/use_item,slot=trinket1,if=!trinket.1.is.tome_of_lights_devotion&(!variable.trinket_1_buffs||(variable.trinket_1_buffs&((buff.metamorphosis.up)||(buff.metamorphosis.up&cooldown.metamorphosis.remains<10)||(cooldown.metamorphosis.remains>trinket.1.cooldown.duration)||(variable.trinket_2_buffs&trinket.2.cooldown.remains<cooldown.metamorphosis.remains))))\nactions.ar+=/use_item,slot=trinket2,if=!trinket.2.is.tome_of_lights_devotion&(!variable.trinket_2_buffs||(variable.trinket_2_buffs&((buff.metamorphosis.up)||(buff.metamorphosis.up&cooldown.metamorphosis.remains<10)||(cooldown.metamorphosis.remains>trinket.2.cooldown.duration)||(variable.trinket_1_buffs&trinket.1.cooldown.remains<cooldown.metamorphosis.remains))))\nactions.ar+=/use_item,name=tome_of_lights_devotion,if=buff.inner_resilience.up\nactions.ar+=/potion,use_off_gcd=1,if=(buff.rending_strike.up&buff.glaive_flurry.up)||prev_gcd.1.reavers_glaive\n## actions.ar+=/call_action_list,name=externals,if=(buff.rending_strike.up&buff.glaive_flurry.up)||prev_gcd.1.reavers_glaive\nactions.ar+=/metamorphosis,use_off_gcd=1,if=!buff.metamorphosis.up\nactions.ar+=/fel_devastation,use_off_gcd=1,if=!buff.rending_strike.up&!buff.glaive_flurry.up\n# Always Soul Cleave if Rending Strike isn't up and Glaive Flurry is\nactions.ar+=/soul_cleave,if=!buff.rending_strike.up&buff.glaive_flurry.up\n# If Soul Cleave and Rending Strike are up in single target, spend Soul Cleave first then we can Fracture\nactions.ar+=/soul_cleave,if=variable.single_target&buff.rending_strike.up&buff.glaive_flurry.up\n# Spend Rending Strike or generate Fury for empowered Soul Cleave\nactions.ar+=/shear,if=talent.fracture&buff.glaive_flurry.up\n# Spend Rending Strike or generate Fury for empowered Soul Cleave\nactions.ar+=/shear,if=!talent.fracture&buff.glaive_flurry.up\nactions.ar+=/reavers_glaive,if=!buff.rending_strike.up&!buff.glaive_flurry.up\nactions.ar+=/the_hunt,if=!buff.reavers_glaive.up&(buff.art_of_the_glaive.stack+soul_fragments.total)<20\nactions.ar+=/fiery_brand,if=talent.fiery_demise&!dot.fiery_brand.ticking\nactions.ar+=/soul_carver,if=!talent.fiery_demise||(talent.fiery_demise&dot.fiery_brand.ticking)\nactions.ar+=/sigil_of_spite\n# Immolation Aura is one of our best generators if Fallout is talented\nactions.ar+=/immolation_aura,if=talent.fallout\nactions.ar+=/bulk_extraction,if=active_enemies>=3\nactions.ar+=/shear,if=talent.fracture&buff.metamorphosis.up\nactions.ar+=/sigil_of_flame\nactions.ar+=/shear,if=talent.fracture\nactions.ar+=/spirit_bomb,if=active_enemies>=12&soul_fragments.active>=4\nactions.ar+=/soul_cleave\nactions.ar+=/immolation_aura\nactions.ar+=/felblade\nactions.ar+=/vengeful_retreat,if=talent.unhindered_assault\nactions.ar+=/throw_glaive\nactions.ar+=/shear,if=!talent.fracture\n\nactions.fel_dev+=/spirit_bomb,if=buff.demonsurge_spirit_burst.up&(variable.can_spburst||soul_fragments.active>=4||(buff.metamorphosis.remains<(gcd.max*2)))\nactions.fel_dev+=/soul_cleave,if=buff.demonsurge_soul_sunder.up&(!buff.demonsurge_spirit_burst.up||(buff.metamorphosis.remains<(gcd.max*2)))\nactions.fel_dev+=/sigil_of_spite,if=(!talent.cycle_of_binding||(cooldown.sigil_of_spite.duration<(cooldown.metamorphosis.remains+18)))&(soul_fragments.total<=2&buff.demonsurge_spirit_burst.up)\nactions.fel_dev+=/soul_carver,if=soul_fragments.total<=2&!prev_gcd.1.sigil_of_spite&buff.demonsurge_spirit_burst.up\nactions.fel_dev+=/shear,if=talent.fracture&soul_fragments.total<=2&buff.demonsurge_spirit_burst.up\nactions.fel_dev+=/felblade,if=buff.demonsurge_spirit_burst.up||buff.demonsurge_soul_sunder.up\nactions.fel_dev+=/shear,if=talent.fracture&buff.demonsurge_spirit_burst.up||buff.demonsurge_soul_sunder.up\n\nactions.fel_dev_prep+=/potion,use_off_gcd=1,if=prev_gcd.1.fiery_brand\nactions.fel_dev_prep+=/sigil_of_flame,if=!variable.hold_sof_for_precombat&!variable.hold_sof_for_student&!variable.hold_sof_for_dot\nactions.fel_dev_prep+=/fiery_brand,if=talent.fiery_demise&((fury+variable.fel_dev_passive_fury_gen)>=120)&(variable.can_spburst||variable.can_spburst_soon||soul_fragments.total>=4)&active_dot.fiery_brand=0&((cooldown.metamorphosis.remains<(execute_time+action.fel_devastation.execute_time+(gcd.max*2)))||variable.fiery_brand_back_before_meta)\nactions.fel_dev_prep+=/fel_devastation,if=((fury+variable.fel_dev_passive_fury_gen)>=120)&(variable.can_spburst||variable.can_spburst_soon||soul_fragments.total>=4)\nactions.fel_dev_prep+=/sigil_of_spite,if=(!talent.cycle_of_binding||(cooldown.sigil_of_spite.duration<(cooldown.metamorphosis.remains+18)))&(soul_fragments.total<=1||(!(variable.can_spburst||variable.can_spburst_soon||soul_fragments.total>=4)&(!talent.fracture||action.shear.charges_fractional<1)))\nactions.fel_dev_prep+=/soul_carver,if=(!talent.cycle_of_binding||cooldown.metamorphosis.remains>20)&(soul_fragments.total<=1||(!(variable.can_spburst||variable.can_spburst_soon||soul_fragments.total>=4)&(!talent.fracture||action.shear.charges_fractional<1)))&!prev_gcd.1.sigil_of_spite&!prev_gcd.2.sigil_of_spite\nactions.fel_dev_prep+=/felblade,if=!((fury+variable.fel_dev_passive_fury_gen)>=120)&(variable.can_spburst||variable.can_spburst_soon||soul_fragments.total>=4)\nactions.fel_dev_prep+=/shear,if=talent.fracture&!(variable.can_spburst||variable.can_spburst_soon||soul_fragments.total>=4)||!((fury+variable.fel_dev_passive_fury_gen)>=120)\nactions.fel_dev_prep+=/felblade\nactions.fel_dev_prep+=/shear,if=talent.fracture\n## actions.fel_dev_prep+=/wait,sec=0.1,if=(!(variable.can_spburst||variable.can_spburst_soon||soul_fragments.total>=4)||!((fury+variable.fel_dev_passive_fury_gen)>=120))&(!talent.fracture||action.shear.charges_fractional>=0.7)\nactions.fel_dev_prep+=/fel_devastation\nactions.fel_dev_prep+=/soul_cleave,if=((fury+variable.fel_dev_passive_fury_gen)>=150)\nactions.fel_dev_prep+=/throw_glaive\n\nactions.fs+=/variable,name=crit_pct,op=set,value=(action.sigil_of_flame.crit_pct+(talent.aura_of_pain*6))%100,if=active_dot.sigil_of_flame>0&talent.volatile_flameblood\nactions.fs+=/variable,name=fel_dev_sequence_time,op=set,value=2+(2*gcd.max)\nactions.fs+=/variable,name=fel_dev_sequence_time,op=add,value=gcd.max,if=talent.fiery_demise&cooldown.fiery_brand.up\nactions.fs+=/variable,name=fel_dev_sequence_time,op=add,value=gcd.max,if=cooldown.sigil_of_flame.up||cooldown.sigil_of_flame.remains<variable.fel_dev_sequence_time\nactions.fs+=/variable,name=fel_dev_sequence_time,op=add,value=gcd.max,if=cooldown.immolation_aura.up||cooldown.immolation_aura.remains<variable.fel_dev_sequence_time\nactions.fs+=/variable,name=fel_dev_passive_fury_gen,op=set,value=0\nactions.fs+=/variable,name=fel_dev_passive_fury_gen,op=add,value=2.5*floor((buff.student_of_suffering.remains>?variable.fel_dev_sequence_time)),if=talent.student_of_suffering.enabled&(buff.student_of_suffering.remains>1||prev_gcd.1.sigil_of_flame)\nactions.fs+=/variable,name=fel_dev_passive_fury_gen,op=add,value=30+(2*(talent.flames_of_fury)*active_enemies),if=(cooldown.sigil_of_flame.remains<variable.fel_dev_sequence_time)\nactions.fs+=/variable,name=fel_dev_passive_fury_gen,op=add,value=8,if=cooldown.immolation_aura.remains<variable.fel_dev_sequence_time\nactions.fs+=/variable,name=fel_dev_passive_fury_gen,op=add,value=2*floor((buff.immolation_aura.remains>?variable.fel_dev_sequence_time)),if=buff.immolation_aura.remains>1\nactions.fs+=/variable,name=fel_dev_passive_fury_gen,op=add,value=7.5*variable.crit_pct*floor((buff.immolation_aura.remains>?variable.fel_dev_sequence_time)),if=talent.volatile_flameblood&buff.immolation_aura.remains>1\nactions.fs+=/variable,name=fel_dev_passive_fury_gen,op=add,value=22,if=talent.darkglare_boon.enabled\nactions.fs+=/variable,name=spbomb_threshold,op=setif,condition=talent.fiery_demise&dot.fiery_brand.ticking,value=(variable.single_target*5)+(variable.small_aoe*5)+(variable.big_aoe*4),value_else=(variable.single_target*5)+(variable.small_aoe*5)+(variable.big_aoe*4)\nactions.fs+=/variable,name=can_spbomb,op=setif,condition=talent.spirit_bomb,value=soul_fragments.active>=variable.spbomb_threshold,value_else=0\nactions.fs+=/variable,name=can_spbomb_soon,op=setif,condition=talent.spirit_bomb,value=soul_fragments.total>=variable.spbomb_threshold,value_else=0\nactions.fs+=/variable,name=can_spbomb_one_gcd,op=setif,condition=talent.spirit_bomb,value=(soul_fragments.total+variable.num_spawnable_souls)>=variable.spbomb_threshold,value_else=0\nactions.fs+=/variable,name=spburst_threshold,op=setif,condition=talent.fiery_demise&dot.fiery_brand.ticking,value=(variable.single_target*5)+(variable.small_aoe*5)+(variable.big_aoe*4),value_else=(variable.single_target*5)+(variable.small_aoe*5)+(variable.big_aoe*4)\nactions.fs+=/variable,name=can_spburst,op=setif,condition=talent.spirit_bomb,value=soul_fragments.active>=variable.spburst_threshold,value_else=0\nactions.fs+=/variable,name=can_spburst_soon,op=setif,condition=talent.spirit_bomb,value=soul_fragments.total>=variable.spburst_threshold,value_else=0\nactions.fs+=/variable,name=can_spburst_one_gcd,op=setif,condition=talent.spirit_bomb,value=(soul_fragments.total+variable.num_spawnable_souls)>=variable.spburst_threshold,value_else=0\nactions.fs+=/variable,name=meta_prep_time,op=set,value=0\nactions.fs+=/variable,name=meta_prep_time,op=add,value=action.fiery_brand.execute_time,if=talent.fiery_demise&cooldown.fiery_brand.up\nactions.fs+=/variable,name=meta_prep_time,op=add,value=action.sigil_of_flame.execute_time*action.sigil_of_flame.charges\nactions.fs+=/variable,name=dont_soul_cleave,op=setif,condition=buff.metamorphosis.up&buff.demonsurge_hardcast.up,value=buff.demonsurge_spirit_burst.up||(buff.metamorphosis.remains<(gcd.max*2)&(!((fury+variable.fel_dev_passive_fury_gen)>=120)||!(variable.can_spburst||variable.can_spburst_soon||soul_fragments.total>=4))),value_else=(cooldown.fel_devastation.remains<(gcd.max*3)&(!((fury+variable.fel_dev_passive_fury_gen)>=120)||!(variable.can_spburst||variable.can_spburst_soon||soul_fragments.total>=4)))\nactions.fs+=/variable,name=fiery_brand_back_before_meta,op=setif,condition=talent.down_in_flames,value=charges>=max_charges||(charges_fractional>=1&cooldown.fiery_brand.full_recharge_time<=gcd.remains+execute_time)||(charges_fractional>=1&((1-(charges_fractional-1))*cooldown.fiery_brand.duration)<=cooldown.metamorphosis.remains),value_else=(cooldown.fiery_brand.duration<=cooldown.metamorphosis.remains)\nactions.fs+=/variable,name=hold_sof_for_meta,op=setif,condition=talent.illuminated_sigils,value=(charges_fractional>=1&((1-(charges_fractional-1))*cooldown.sigil_of_flame.duration)>cooldown.metamorphosis.remains),value_else=cooldown.sigil_of_flame.duration>cooldown.metamorphosis.remains\nactions.fs+=/variable,name=hold_sof_for_fel_dev,op=setif,condition=talent.illuminated_sigils,value=(charges_fractional>=1&((1-(charges_fractional-1))*cooldown.sigil_of_flame.duration)>cooldown.fel_devastation.remains),value_else=cooldown.sigil_of_flame.duration>cooldown.fel_devastation.remains\nactions.fs+=/variable,name=hold_sof_for_student,op=setif,condition=talent.student_of_suffering,value=prev_gcd.1.sigil_of_flame||(buff.student_of_suffering.remains>(4-talent.quickened_sigils)),value_else=0\nactions.fs+=/variable,name=hold_sof_for_dot,op=setif,condition=talent.ascending_flame,value=0,value_else=prev_gcd.1.sigil_of_flame||(dot.sigil_of_flame.remains>(4-talent.quickened_sigils))\nactions.fs+=/variable,name=hold_sof_for_precombat,value=(talent.illuminated_sigils&time<(2-talent.quickened_sigils))\nactions.fs+=/use_item,slot=trinket1,if=!trinket.1.is.tome_of_lights_devotion&(!variable.trinket_1_buffs||(variable.trinket_1_buffs&((buff.metamorphosis.up&buff.demonsurge_hardcast.up)||(buff.metamorphosis.up&!buff.demonsurge_hardcast.up&cooldown.metamorphosis.remains<10)||(cooldown.metamorphosis.remains>trinket.1.cooldown.duration)||(variable.trinket_2_buffs&trinket.2.cooldown.remains<cooldown.metamorphosis.remains))))\nactions.fs+=/use_item,slot=trinket2,if=!trinket.2.is.tome_of_lights_devotion&(!variable.trinket_2_buffs||(variable.trinket_2_buffs&((buff.metamorphosis.up&buff.demonsurge_hardcast.up)||(buff.metamorphosis.up&!buff.demonsurge_hardcast.up&cooldown.metamorphosis.remains<10)||(cooldown.metamorphosis.remains>trinket.2.cooldown.duration)||(variable.trinket_1_buffs&trinket.1.cooldown.remains<cooldown.metamorphosis.remains))))\nactions.fs+=/use_item,name=tome_of_lights_devotion,if=buff.inner_resilience.up\nactions.fs+=/immolation_aura,if=time<4\nactions.fs+=/immolation_aura,if=!(cooldown.metamorphosis.up&prev_gcd.1.sigil_of_flame)&!(talent.fallout&talent.spirit_bomb&active_enemies>=3&((buff.metamorphosis.up&(variable.can_spburst||variable.can_spburst_soon))||(!buff.metamorphosis.up&(variable.can_spbomb||variable.can_spbomb_soon))))&!(buff.metamorphosis.up&buff.demonsurge_hardcast.up)\nactions.fs+=/sigil_of_flame,if=!talent.student_of_suffering&!variable.hold_sof_for_dot&!variable.hold_sof_for_precombat\nactions.fs+=/sigil_of_flame,if=!variable.hold_sof_for_precombat&(charges=max_charges||(!variable.hold_sof_for_student&!variable.hold_sof_for_dot&!variable.hold_sof_for_meta&!variable.hold_sof_for_fel_dev))\nactions.fs+=/fiery_brand,if=active_dot.fiery_brand=0&(!talent.fiery_demise||((talent.down_in_flames&charges>=max_charges)||variable.fiery_brand_back_before_meta))\nactions.fs+=/call_action_list,name=fs_execute,if=fight_remains<20\nactions.fs+=/call_action_list,name=fel_dev,strict_if=buff.metamorphosis.up,if=buff.metamorphosis.up&!buff.demonsurge_hardcast.up&(buff.demonsurge_soul_sunder.up||buff.demonsurge_spirit_burst.up)\nactions.fs+=/call_action_list,name=metamorphosis,strict=1,if=buff.metamorphosis.up&buff.demonsurge_hardcast.up\nactions.fs+=/call_action_list,name=fel_dev_prep,if=!buff.demonsurge_hardcast.up&(cooldown.fel_devastation.up||(cooldown.fel_devastation.remains<=(gcd.max*3)))\nactions.fs+=/call_action_list,name=meta_prep,if=(cooldown.metamorphosis.remains<=variable.meta_prep_time)&!cooldown.fel_devastation.up&!cooldown.fel_devastation.remains<10&!buff.demonsurge_soul_sunder.up&!buff.demonsurge_spirit_burst.up\nactions.fs+=/the_hunt\nactions.fs+=/felblade,if=((cooldown.sigil_of_spite.remains<execute_time||cooldown.soul_carver.remains<execute_time)&cooldown.fel_devastation.remains<(execute_time+gcd.max)&fury<50)\nactions.fs+=/soul_carver,if=(!talent.fiery_demise||talent.fiery_demise&dot.fiery_brand.ticking)&((!talent.spirit_bomb||variable.single_target)||(talent.spirit_bomb&!prev_gcd.1.sigil_of_spite&((soul_fragments.total+3<=5&fury>=40)||(soul_fragments.total=0&fury>=15))))\nactions.fs+=/sigil_of_spite,if=(!talent.cycle_of_binding||(cooldown.sigil_of_spite.duration<(cooldown.metamorphosis.remains+18)))&(!talent.spirit_bomb||(fury>=80&(variable.can_spbomb||variable.can_spbomb_soon))||(soul_fragments.total<=(2-talent.soul_sigils.rank)))\nactions.fs+=/spirit_bomb,if=variable.can_spburst&talent.fiery_demise&dot.fiery_brand.ticking&!(cooldown.fel_devastation.remains<(gcd.max*3))\nactions.fs+=/spirit_bomb,if=variable.can_spbomb&talent.fiery_demise&dot.fiery_brand.ticking&!(cooldown.fel_devastation.remains<(gcd.max*3))\nactions.fs+=/soul_cleave,if=variable.single_target&!variable.dont_soul_cleave\nactions.fs+=/spirit_bomb,if=variable.can_spburst&!(cooldown.fel_devastation.remains<(gcd.max*3))\nactions.fs+=/spirit_bomb,if=variable.can_spbomb&!(cooldown.fel_devastation.remains<(gcd.max*3))\nactions.fs+=/felblade,if=((fury<40&((buff.metamorphosis.up&(variable.can_spburst||variable.can_spburst_soon))||(!buff.metamorphosis.up&(variable.can_spbomb||variable.can_spbomb_soon)))))\nactions.fs+=/shear,strict_if=talent.fracture,if=talent.fracture&((fury<40&((buff.metamorphosis.up&(variable.can_spburst||variable.can_spburst_soon))||(!buff.metamorphosis.up&(variable.can_spbomb||variable.can_spbomb_soon))))||(buff.metamorphosis.up&variable.can_spburst_one_gcd)||(!buff.metamorphosis.up&variable.can_spbomb_one_gcd))\nactions.fs+=/felblade,if=fury.deficit>=40\nactions.fs+=/soul_cleave,if=!variable.dont_soul_cleave\nactions.fs+=/shear,if=talent.fracture\nactions.fs+=/throw_glaive\n\nactions.fs_execute+=/metamorphosis,use_off_gcd=1\nactions.fs_execute+=/the_hunt\nactions.fs_execute+=/sigil_of_flame\nactions.fs_execute+=/fiery_brand\nactions.fs_execute+=/sigil_of_spite\nactions.fs_execute+=/soul_carver\nactions.fs_execute+=/fel_devastation\n\nactions.meta_prep+=/metamorphosis,use_off_gcd=1,if=cooldown.sigil_of_flame.charges<1\nactions.meta_prep+=/fiery_brand,if=talent.fiery_demise&((talent.down_in_flames&charges>=max_charges)||active_dot.fiery_brand=0)\nactions.meta_prep+=/potion,use_off_gcd=1\nactions.meta_prep+=/sigil_of_flame\n\n## actions.metamorphosis=call_action_list,name=externals\nactions.metamorphosis+=/fel_devastation,if=buff.metamorphosis.remains<(gcd.max*3)\nactions.metamorphosis+=/felblade,if=fury<50&(buff.metamorphosis.remains<(gcd.max*3))&cooldown.fel_devastation.up\nactions.metamorphosis+=/shear,if=talent.fracture&fury<50&!cooldown.felblade.up&(buff.metamorphosis.remains<(gcd.max*3))&cooldown.fel_devastation.up\nactions.metamorphosis+=/sigil_of_flame,if=talent.illuminated_sigils&talent.cycle_of_binding&charges=max_charges\nactions.metamorphosis+=/immolation_aura\nactions.metamorphosis+=/sigil_of_flame,if=!talent.student_of_suffering&(talent.ascending_flame||(!talent.ascending_flame&!prev_gcd.1.sigil_of_flame&(dot.sigil_of_doom.remains<(4-talent.quickened_sigils))))\nactions.metamorphosis+=/sigil_of_flame,if=talent.student_of_suffering&!prev_gcd.1.sigil_of_flame&!prev_gcd.1.sigil_of_flame&(buff.student_of_suffering.remains<(4-talent.quickened_sigils))\nactions.metamorphosis+=/sigil_of_flame,if=buff.metamorphosis.remains<((2-talent.quickened_sigils)+(charges*gcd.max))\nactions.metamorphosis+=/fel_devastation,if=soul_fragments.active<=3&(soul_fragments.inactive>=2||prev_gcd.1.sigil_of_spite)\nactions.metamorphosis+=/felblade,if=((cooldown.sigil_of_spite.remains<execute_time||cooldown.soul_carver.remains<execute_time)&cooldown.fel_devastation.remains<(execute_time+gcd.max)&fury<50)\nactions.metamorphosis+=/soul_carver,if=(!talent.spirit_bomb||(variable.single_target&!buff.demonsurge_spirit_burst.up))||(((soul_fragments.total+3)<=6)&fury>=40&!prev_gcd.1.sigil_of_spite)\nactions.metamorphosis+=/sigil_of_spite,if=!talent.spirit_bomb||(fury>=80&(variable.can_spburst||variable.can_spburst_soon))||(soul_fragments.total<=(2-talent.soul_sigils.rank))\nactions.metamorphosis+=/spirit_bomb,if=variable.can_spburst&buff.demonsurge_spirit_burst.up\nactions.metamorphosis+=/fel_devastation\nactions.metamorphosis+=/the_hunt\nactions.metamorphosis+=/soul_cleave,if=buff.demonsurge_soul_sunder.up&!buff.demonsurge_spirit_burst.up&!variable.can_spburst_one_gcd\nactions.metamorphosis+=/spirit_bomb,if=variable.can_spburst&(talent.fiery_demise&dot.fiery_brand.ticking||variable.big_aoe)&buff.metamorphosis.remains>(gcd.max*2)\nactions.metamorphosis+=/felblade,if=fury<40&(variable.can_spburst||variable.can_spburst_soon)&(buff.demonsurge_spirit_burst.up||talent.fiery_demise&dot.fiery_brand.ticking||variable.big_aoe)\nactions.metamorphosis+=/shear,strict_if=talent.fracture,if=talent.fracture&fury<40&(variable.can_spburst||variable.can_spburst_soon||variable.can_spburst_one_gcd)&(buff.demonsurge_spirit_burst.up||talent.fiery_demise&dot.fiery_brand.ticking||variable.big_aoe)\nactions.metamorphosis+=/shear,strict_if=talent.fracture,if=talent.fracture&variable.can_spburst_one_gcd&(buff.demonsurge_spirit_burst.up||variable.big_aoe)&!prev_gcd.1.shear\nactions.metamorphosis+=/soul_cleave,if=variable.single_target&!variable.dont_soul_cleave\nactions.metamorphosis+=/spirit_bomb,if=variable.can_spburst&buff.metamorphosis.remains>(gcd.max*2)\nactions.metamorphosis+=/felblade,if=fury.deficit>=40\nactions.metamorphosis+=/soul_cleave,if=!variable.dont_soul_cleave&!(variable.big_aoe&(variable.can_spburst||variable.can_spburst_soon))\nactions.metamorphosis+=/felblade\nactions.metamorphosis+=/shear,if=talent.fracture&!prev_gcd.1.shear",
["version"] = 20250821,
["warnings"] = "The import for 'fs' required some automated changes.\nLine 1: Converted operations in '(action.sigil_of_flame.crit_pct+(talent.aura_of_pain.enabled*6))%100' to '(action.sigil_of_flame.crit_pct+(talent.aura_of_pain.enabled*6))/100'.\nLine 31: Converted 'trinket.1.is.tome_of_lights_devotion' to 'trinket.t1.is.tome_of_lights_devotion' (1x).\nLine 31: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 31: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 31: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 31: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 32: Converted 'trinket.2.is.tome_of_lights_devotion' to 'trinket.t2.is.tome_of_lights_devotion' (1x).\nLine 32: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 32: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 32: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 32: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\n\nThe import for 'precombat' required some automated changes.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.agility' to 'trinket.t1.has_buff.agility' (1x).\nLine 4: Converted 'trinket.1.has_buff.agility' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 4: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 4: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 4: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 4: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.agility' to 'trinket.t2.has_buff.agility' (1x).\nLine 5: Converted 'trinket.2.has_buff.agility' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 5: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 5: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 5: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 5: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'ar' required some automated changes.\nLine 1: Converted 'trinket.1.is.tome_of_lights_devotion' to 'trinket.t1.is.tome_of_lights_devotion' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 2: Converted 'trinket.2.is.tome_of_lights_devotion' to 'trinket.t2.is.tome_of_lights_devotion' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 2: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\n\nImported 9 action lists.\n",
["lists"] = {
["fs"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( action.sigil_of_flame.crit_pct + ( talent.aura_of_pain.enabled * 6 ) ) / 100",
["var_name"] = "crit_pct",
["criteria"] = "active_dot.sigil_of_flame > 0 & talent.volatile_flameblood.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2 + ( 2 * gcd.max )",
["var_name"] = "fel_dev_sequence_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "gcd.max",
["var_name"] = "fel_dev_sequence_time",
["criteria"] = "talent.fiery_demise.enabled & cooldown.fiery_brand.up",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "gcd.max",
["var_name"] = "fel_dev_sequence_time",
["criteria"] = "cooldown.sigil_of_flame.up || cooldown.sigil_of_flame.remains < variable.fel_dev_sequence_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "gcd.max",
["var_name"] = "fel_dev_sequence_time",
["criteria"] = "cooldown.immolation_aura.up || cooldown.immolation_aura.remains < variable.fel_dev_sequence_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "fel_dev_passive_fury_gen",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "2.5 * floor ( ( buff.student_of_suffering.remains >? variable.fel_dev_sequence_time ) )",
["var_name"] = "fel_dev_passive_fury_gen",
["criteria"] = "talent.student_of_suffering.enabled & ( buff.student_of_suffering.remains > 1 || prev_gcd.1.sigil_of_flame )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "30 + ( 2 * ( talent.flames_of_fury.enabled ) * active_enemies )",
["var_name"] = "fel_dev_passive_fury_gen",
["criteria"] = "( cooldown.sigil_of_flame.remains < variable.fel_dev_sequence_time )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "8",
["var_name"] = "fel_dev_passive_fury_gen",
["criteria"] = "cooldown.immolation_aura.remains < variable.fel_dev_sequence_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "2 * floor ( ( buff.immolation_aura.remains >? variable.fel_dev_sequence_time ) )",
["var_name"] = "fel_dev_passive_fury_gen",
["criteria"] = "buff.immolation_aura.remains > 1",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "7.5 * variable.crit_pct * floor ( ( buff.immolation_aura.remains >? variable.fel_dev_sequence_time ) )",
["var_name"] = "fel_dev_passive_fury_gen",
["criteria"] = "talent.volatile_flameblood.enabled & buff.immolation_aura.remains > 1",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "22",
["var_name"] = "fel_dev_passive_fury_gen",
["criteria"] = "talent.darkglare_boon.enabled",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "spbomb_threshold",
["value"] = "( variable.single_target * 5 ) + ( variable.small_aoe * 5 ) + ( variable.big_aoe * 4 )",
["value_else"] = "( variable.single_target * 5 ) + ( variable.small_aoe * 5 ) + ( variable.big_aoe * 4 )",
["criteria"] = "talent.fiery_demise.enabled & dot.fiery_brand.ticking",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "can_spbomb",
["value"] = "soul_fragments.active >= variable.spbomb_threshold",
["value_else"] = "0",
["criteria"] = "talent.spirit_bomb.enabled",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "can_spbomb_soon",
["value"] = "soul_fragments.total >= variable.spbomb_threshold",
["value_else"] = "0",
["criteria"] = "talent.spirit_bomb.enabled",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "can_spbomb_one_gcd",
["value"] = "( soul_fragments.total + variable.num_spawnable_souls ) >= variable.spbomb_threshold",
["value_else"] = "0",
["criteria"] = "talent.spirit_bomb.enabled",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "spburst_threshold",
["value"] = "( variable.single_target * 5 ) + ( variable.small_aoe * 5 ) + ( variable.big_aoe * 4 )",
["value_else"] = "( variable.single_target * 5 ) + ( variable.small_aoe * 5 ) + ( variable.big_aoe * 4 )",
["criteria"] = "talent.fiery_demise.enabled & dot.fiery_brand.ticking",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "can_spburst",
["value"] = "soul_fragments.active >= variable.spburst_threshold",
["value_else"] = "0",
["criteria"] = "talent.spirit_bomb.enabled",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "can_spburst_soon",
["value"] = "soul_fragments.total >= variable.spburst_threshold",
["value_else"] = "0",
["criteria"] = "talent.spirit_bomb.enabled",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "can_spburst_one_gcd",
["value"] = "( soul_fragments.total + variable.num_spawnable_souls ) >= variable.spburst_threshold",
["value_else"] = "0",
["criteria"] = "talent.spirit_bomb.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "meta_prep_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.fiery_brand.execute_time",
["var_name"] = "meta_prep_time",
["criteria"] = "talent.fiery_demise.enabled & cooldown.fiery_brand.up",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.sigil_of_flame.execute_time * action.sigil_of_flame.charges",
["var_name"] = "meta_prep_time",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "dont_soul_cleave",
["value"] = "buff.demonsurge_spirit_burst.up || ( buff.metamorphosis.remains < ( gcd.max * 2 ) & ( ! ( ( fury + variable.fel_dev_passive_fury_gen ) >= 120 ) || ! ( variable.can_spburst || variable.can_spburst_soon || soul_fragments.total >= 4 ) ) )",
["value_else"] = "( cooldown.fel_devastation.remains < ( gcd.max * 3 ) & ( ! ( ( fury + variable.fel_dev_passive_fury_gen ) >= 120 ) || ! ( variable.can_spburst || variable.can_spburst_soon || soul_fragments.total >= 4 ) ) )",
["criteria"] = "buff.metamorphosis.up & buff.demonsurge_hardcast.up",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "fiery_brand_back_before_meta",
["value"] = "charges >= max_charges || ( charges_fractional >= 1 & cooldown.fiery_brand.full_recharge_time <= gcd.remains + execute_time ) || ( charges_fractional >= 1 & ( ( 1 - ( charges_fractional - 1 ) ) * cooldown.fiery_brand.duration ) <= cooldown.metamorphosis.remains )",
["value_else"] = "( cooldown.fiery_brand.duration <= cooldown.metamorphosis.remains )",
["criteria"] = "talent.down_in_flames.enabled",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "hold_sof_for_meta",
["value"] = "( charges_fractional >= 1 & ( ( 1 - ( charges_fractional - 1 ) ) * cooldown.sigil_of_flame.duration ) > cooldown.metamorphosis.remains )",
["value_else"] = "cooldown.sigil_of_flame.duration > cooldown.metamorphosis.remains",
["criteria"] = "talent.illuminated_sigils.enabled",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "hold_sof_for_fel_dev",
["value"] = "( charges_fractional >= 1 & ( ( 1 - ( charges_fractional - 1 ) ) * cooldown.sigil_of_flame.duration ) > cooldown.fel_devastation.remains )",
["value_else"] = "cooldown.sigil_of_flame.duration > cooldown.fel_devastation.remains",
["criteria"] = "talent.illuminated_sigils.enabled",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "hold_sof_for_student",
["value"] = "prev_gcd.1.sigil_of_flame || ( buff.student_of_suffering.remains > ( 4 - talent.quickened_sigils.enabled ) )",
["value_else"] = "0",
["criteria"] = "talent.student_of_suffering.enabled",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "hold_sof_for_dot",
["value"] = "0",
["value_else"] = "prev_gcd.1.sigil_of_flame || ( dot.sigil_of_flame.remains > ( 4 - talent.quickened_sigils.enabled ) )",
["criteria"] = "talent.ascending_flame.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.illuminated_sigils.enabled & time < ( 2 - talent.quickened_sigils.enabled ) )",
["var_name"] = "hold_sof_for_precombat",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t1.is.tome_of_lights_devotion & ( ! variable.trinket_1_buffs || ( variable.trinket_1_buffs & ( ( buff.metamorphosis.up & buff.demonsurge_hardcast.up ) || ( buff.metamorphosis.up & ! buff.demonsurge_hardcast.up & cooldown.metamorphosis.remains < 10 ) || ( cooldown.metamorphosis.remains > trinket.t1.cooldown.duration ) || ( variable.trinket_2_buffs & trinket.t2.cooldown.remains < cooldown.metamorphosis.remains ) ) ) )",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t2.is.tome_of_lights_devotion & ( ! variable.trinket_2_buffs || ( variable.trinket_2_buffs & ( ( buff.metamorphosis.up & buff.demonsurge_hardcast.up ) || ( buff.metamorphosis.up & ! buff.demonsurge_hardcast.up & cooldown.metamorphosis.remains < 10 ) || ( cooldown.metamorphosis.remains > trinket.t2.cooldown.duration ) || ( variable.trinket_1_buffs & trinket.t1.cooldown.remains < cooldown.metamorphosis.remains ) ) ) )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["name"] = "tome_of_lights_devotion",
["action"] = "tome_of_lights_devotion",
["criteria"] = "buff.inner_resilience.up",
},
{
["enabled"] = true,
["criteria"] = "time < 4",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "! ( cooldown.metamorphosis.up & prev_gcd.1.sigil_of_flame ) & ! ( talent.fallout.enabled & talent.spirit_bomb.enabled & active_enemies >= 3 & ( ( buff.metamorphosis.up & ( variable.can_spburst || variable.can_spburst_soon ) ) || ( ! buff.metamorphosis.up & ( variable.can_spbomb || variable.can_spbomb_soon ) ) ) ) & ! ( buff.metamorphosis.up & buff.demonsurge_hardcast.up )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "! talent.student_of_suffering.enabled & ! variable.hold_sof_for_dot & ! variable.hold_sof_for_precombat",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "! variable.hold_sof_for_precombat & ( charges = max_charges || ( ! variable.hold_sof_for_student & ! variable.hold_sof_for_dot & ! variable.hold_sof_for_meta & ! variable.hold_sof_for_fel_dev ) )",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "active_dot.fiery_brand = 0 & ( ! talent.fiery_demise.enabled || ( ( talent.down_in_flames.enabled & charges >= max_charges ) || variable.fiery_brand_back_before_meta ) )",
["action"] = "fiery_brand",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "fight_remains < 20",
["list_name"] = "fs_execute",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "buff.metamorphosis.up & ! buff.demonsurge_hardcast.up & ( buff.demonsurge_soul_sunder.up || buff.demonsurge_spirit_burst.up )",
["strict_if"] = "buff.metamorphosis.up",
["list_name"] = "fel_dev",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "buff.metamorphosis.up & buff.demonsurge_hardcast.up",
["list_name"] = "metamorphosis",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "! buff.demonsurge_hardcast.up & ( cooldown.fel_devastation.up || ( cooldown.fel_devastation.remains <= ( gcd.max * 3 ) ) )",
["list_name"] = "fel_dev_prep",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "( cooldown.metamorphosis.remains <= variable.meta_prep_time ) & ! cooldown.fel_devastation.up & ! cooldown.fel_devastation.remains < 10 & ! buff.demonsurge_soul_sunder.up & ! buff.demonsurge_spirit_burst.up",
["list_name"] = "meta_prep",
},
{
["action"] = "the_hunt",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ( cooldown.sigil_of_spite.remains < execute_time || cooldown.soul_carver.remains < execute_time ) & cooldown.fel_devastation.remains < ( execute_time + gcd.max ) & fury < 50 )",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.fiery_demise.enabled || talent.fiery_demise.enabled & dot.fiery_brand.ticking ) & ( ( ! talent.spirit_bomb.enabled || variable.single_target ) || ( talent.spirit_bomb.enabled & ! prev_gcd.1.sigil_of_spite & ( ( soul_fragments.total + 3 <= 5 & fury >= 40 ) || ( soul_fragments.total = 0 & fury >= 15 ) ) ) )",
["action"] = "soul_carver",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.cycle_of_binding.enabled || ( cooldown.sigil_of_spite.duration < ( cooldown.metamorphosis.remains + 18 ) ) ) & ( ! talent.spirit_bomb.enabled || ( fury >= 80 & ( variable.can_spbomb || variable.can_spbomb_soon ) ) || ( soul_fragments.total <= ( 2 - talent.soul_sigils.rank ) ) )",
["action"] = "sigil_of_spite",
},
{
["enabled"] = true,
["criteria"] = "variable.can_spburst & talent.fiery_demise.enabled & dot.fiery_brand.ticking & ! ( cooldown.fel_devastation.remains < ( gcd.max * 3 ) )",
["action"] = "spirit_bomb",
},
{
["enabled"] = true,
["criteria"] = "variable.can_spbomb & talent.fiery_demise.enabled & dot.fiery_brand.ticking & ! ( cooldown.fel_devastation.remains < ( gcd.max * 3 ) )",
["action"] = "spirit_bomb",
},
{
["enabled"] = true,
["criteria"] = "variable.single_target & ! variable.dont_soul_cleave",
["action"] = "soul_cleave",
},
{
["enabled"] = true,
["criteria"] = "variable.can_spburst & ! ( cooldown.fel_devastation.remains < ( gcd.max * 3 ) )",
["action"] = "spirit_bomb",
},
{
["enabled"] = true,
["criteria"] = "variable.can_spbomb & ! ( cooldown.fel_devastation.remains < ( gcd.max * 3 ) )",
["action"] = "spirit_bomb",
},
{
["enabled"] = true,
["criteria"] = "( ( fury < 40 & ( ( buff.metamorphosis.up & ( variable.can_spburst || variable.can_spburst_soon ) ) || ( ! buff.metamorphosis.up & ( variable.can_spbomb || variable.can_spbomb_soon ) ) ) ) )",
["action"] = "felblade",
},
{
["enabled"] = true,
["strict_if"] = "talent.fracture.enabled",
["action"] = "shear",
["criteria"] = "talent.fracture.enabled & ( ( fury < 40 & ( ( buff.metamorphosis.up & ( variable.can_spburst || variable.can_spburst_soon ) ) || ( ! buff.metamorphosis.up & ( variable.can_spbomb || variable.can_spbomb_soon ) ) ) ) || ( buff.metamorphosis.up & variable.can_spburst_one_gcd ) || ( ! buff.metamorphosis.up & variable.can_spbomb_one_gcd ) )",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit >= 40",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "! variable.dont_soul_cleave",
["action"] = "soul_cleave",
},
{
["enabled"] = true,
["criteria"] = "talent.fracture.enabled",
["action"] = "shear",
},
{
["action"] = "throw_glaive",
["enabled"] = true,
},
},
["fel_dev"] = {
{
["enabled"] = true,
["criteria"] = "buff.demonsurge_spirit_burst.up & ( variable.can_spburst || soul_fragments.active >= 4 || ( buff.metamorphosis.remains < ( gcd.max * 2 ) ) )",
["action"] = "spirit_bomb",
},
{
["enabled"] = true,
["criteria"] = "buff.demonsurge_soul_sunder.up & ( ! buff.demonsurge_spirit_burst.up || ( buff.metamorphosis.remains < ( gcd.max * 2 ) ) )",
["action"] = "soul_cleave",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.cycle_of_binding.enabled || ( cooldown.sigil_of_spite.duration < ( cooldown.metamorphosis.remains + 18 ) ) ) & ( soul_fragments.total <= 2 & buff.demonsurge_spirit_burst.up )",
["action"] = "sigil_of_spite",
},
{
["enabled"] = true,
["criteria"] = "soul_fragments.total <= 2 & ! prev_gcd.1.sigil_of_spite & buff.demonsurge_spirit_burst.up",
["action"] = "soul_carver",
},
{
["enabled"] = true,
["criteria"] = "talent.fracture.enabled & soul_fragments.total <= 2 & buff.demonsurge_spirit_burst.up",
["action"] = "shear",
},
{
["enabled"] = true,
["criteria"] = "buff.demonsurge_spirit_burst.up || buff.demonsurge_soul_sunder.up",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "talent.fracture.enabled & buff.demonsurge_spirit_burst.up || buff.demonsurge_soul_sunder.up",
["action"] = "shear",
},
},
["meta_prep"] = {
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "cooldown.sigil_of_flame.charges < 1",
["action"] = "metamorphosis",
},
{
["enabled"] = true,
["criteria"] = "talent.fiery_demise.enabled & ( ( talent.down_in_flames.enabled & charges >= max_charges ) || active_dot.fiery_brand = 0 )",
["action"] = "fiery_brand",
},
{
["use_off_gcd"] = 1,
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "sigil_of_flame",
["enabled"] = true,
},
},
["metamorphosis"] = {
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains < ( gcd.max * 3 )",
["action"] = "fel_devastation",
},
{
["enabled"] = true,
["criteria"] = "fury < 50 & ( buff.metamorphosis.remains < ( gcd.max * 3 ) ) & cooldown.fel_devastation.up",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "talent.fracture.enabled & fury < 50 & ! cooldown.felblade.up & ( buff.metamorphosis.remains < ( gcd.max * 3 ) ) & cooldown.fel_devastation.up",
["action"] = "shear",
},
{
["enabled"] = true,
["criteria"] = "talent.illuminated_sigils.enabled & talent.cycle_of_binding.enabled & charges = max_charges",
["action"] = "sigil_of_flame",
},
{
["action"] = "immolation_aura",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.student_of_suffering.enabled & ( talent.ascending_flame.enabled || ( ! talent.ascending_flame.enabled & ! prev_gcd.1.sigil_of_flame & ( dot.sigil_of_doom.remains < ( 4 - talent.quickened_sigils.enabled ) ) ) )",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "talent.student_of_suffering.enabled & ! prev_gcd.1.sigil_of_flame & ! prev_gcd.1.sigil_of_flame & ( buff.student_of_suffering.remains < ( 4 - talent.quickened_sigils.enabled ) )",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains < ( ( 2 - talent.quickened_sigils.enabled ) + ( charges * gcd.max ) )",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "soul_fragments.active <= 3 & ( soul_fragments.inactive >= 2 || prev_gcd.1.sigil_of_spite )",
["action"] = "fel_devastation",
},
{
["enabled"] = true,
["criteria"] = "( ( cooldown.sigil_of_spite.remains < execute_time || cooldown.soul_carver.remains < execute_time ) & cooldown.fel_devastation.remains < ( execute_time + gcd.max ) & fury < 50 )",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.spirit_bomb.enabled || ( variable.single_target & ! buff.demonsurge_spirit_burst.up ) ) || ( ( ( soul_fragments.total + 3 ) <= 6 ) & fury >= 40 & ! prev_gcd.1.sigil_of_spite )",
["action"] = "soul_carver",
},
{
["enabled"] = true,
["criteria"] = "! talent.spirit_bomb.enabled || ( fury >= 80 & ( variable.can_spburst || variable.can_spburst_soon ) ) || ( soul_fragments.total <= ( 2 - talent.soul_sigils.rank ) )",
["action"] = "sigil_of_spite",
},
{
["enabled"] = true,
["criteria"] = "variable.can_spburst & buff.demonsurge_spirit_burst.up",
["action"] = "spirit_bomb",
},
{
["action"] = "fel_devastation",
["enabled"] = true,
},
{
["action"] = "the_hunt",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.demonsurge_soul_sunder.up & ! buff.demonsurge_spirit_burst.up & ! variable.can_spburst_one_gcd",
["action"] = "soul_cleave",
},
{
["enabled"] = true,
["criteria"] = "variable.can_spburst & ( talent.fiery_demise.enabled & dot.fiery_brand.ticking || variable.big_aoe ) & buff.metamorphosis.remains > ( gcd.max * 2 )",
["action"] = "spirit_bomb",
},
{
["enabled"] = true,
["criteria"] = "fury < 40 & ( variable.can_spburst || variable.can_spburst_soon ) & ( buff.demonsurge_spirit_burst.up || talent.fiery_demise.enabled & dot.fiery_brand.ticking || variable.big_aoe )",
["action"] = "felblade",
},
{
["enabled"] = true,
["strict_if"] = "talent.fracture.enabled",
["action"] = "shear",
["criteria"] = "talent.fracture.enabled & fury < 40 & ( variable.can_spburst || variable.can_spburst_soon || variable.can_spburst_one_gcd ) & ( buff.demonsurge_spirit_burst.up || talent.fiery_demise.enabled & dot.fiery_brand.ticking || variable.big_aoe )",
},
{
["enabled"] = true,
["strict_if"] = "talent.fracture.enabled",
["action"] = "shear",
["criteria"] = "talent.fracture.enabled & variable.can_spburst_one_gcd & ( buff.demonsurge_spirit_burst.up || variable.big_aoe ) & ! prev_gcd.1.shear",
},
{
["enabled"] = true,
["criteria"] = "variable.single_target & ! variable.dont_soul_cleave",
["action"] = "soul_cleave",
},
{
["enabled"] = true,
["criteria"] = "variable.can_spburst & buff.metamorphosis.remains > ( gcd.max * 2 )",
["action"] = "spirit_bomb",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit >= 40",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "! variable.dont_soul_cleave & ! ( variable.big_aoe & ( variable.can_spburst || variable.can_spburst_soon ) )",
["action"] = "soul_cleave",
},
{
["action"] = "felblade",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.fracture.enabled & ! prev_gcd.1.shear",
["action"] = "shear",
},
},
["default"] = {
{
["action"] = "disrupt",
["enabled"] = true,
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "! buff.demon_spikes.up & ( tanking || time < 5 )",
["action"] = "demon_spikes",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "num_spawnable_souls",
["default"] = "0",
},
{
["enabled"] = true,
["op"] = "max",
["action"] = "variable",
["value"] = "1",
["var_name"] = "num_spawnable_souls",
["criteria"] = "talent.soul_sigils.enabled & cooldown.sigil_of_flame.up",
},
{
["enabled"] = true,
["op"] = "max",
["action"] = "variable",
["value"] = "2",
["var_name"] = "num_spawnable_souls",
["criteria"] = "talent.fracture.enabled & cooldown.fracture.charges_fractional >= 1 & ! buff.metamorphosis.up",
},
{
["enabled"] = true,
["op"] = "max",
["action"] = "variable",
["value"] = "3",
["var_name"] = "num_spawnable_souls",
["criteria"] = "talent.fracture.enabled & cooldown.fracture.charges_fractional >= 1 & buff.metamorphosis.up",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "1",
["var_name"] = "num_spawnable_souls",
["criteria"] = "talent.soul_carver.enabled & ( cooldown.soul_carver.remains > ( cooldown.soul_carver.duration - 3 ) )",
},
{
["use_off_gcd"] = 1,
["action"] = "infernal_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! hero_tree.felscarred",
["list_name"] = "ar",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "hero_tree.felscarred",
["list_name"] = "fs",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1",
["var_name"] = "single_target",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 2 & active_enemies <= 5",
["var_name"] = "small_aoe",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 6",
["var_name"] = "big_aoe",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff )",
["var_name"] = "trinket_2_buffs",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "hero_tree.aldrachi_reaver || ( hero_tree.felscarred & talent.student_of_suffering.enabled )",
["action"] = "sigil_of_flame",
},
{
["action"] = "immolation_aura",
["enabled"] = true,
},
},
["fel_dev_prep"] = {
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "prev_gcd.1.fiery_brand",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "! variable.hold_sof_for_precombat & ! variable.hold_sof_for_student & ! variable.hold_sof_for_dot",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "talent.fiery_demise.enabled & ( ( fury + variable.fel_dev_passive_fury_gen ) >= 120 ) & ( variable.can_spburst || variable.can_spburst_soon || soul_fragments.total >= 4 ) & active_dot.fiery_brand = 0 & ( ( cooldown.metamorphosis.remains < ( execute_time + action.fel_devastation.execute_time + ( gcd.max * 2 ) ) ) || variable.fiery_brand_back_before_meta )",
["action"] = "fiery_brand",
},
{
["enabled"] = true,
["criteria"] = "( ( fury + variable.fel_dev_passive_fury_gen ) >= 120 ) & ( variable.can_spburst || variable.can_spburst_soon || soul_fragments.total >= 4 )",
["action"] = "fel_devastation",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.cycle_of_binding.enabled || ( cooldown.sigil_of_spite.duration < ( cooldown.metamorphosis.remains + 18 ) ) ) & ( soul_fragments.total <= 1 || ( ! ( variable.can_spburst || variable.can_spburst_soon || soul_fragments.total >= 4 ) & ( ! talent.fracture.enabled || action.shear.charges_fractional < 1 ) ) )",
["action"] = "sigil_of_spite",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.cycle_of_binding.enabled || cooldown.metamorphosis.remains > 20 ) & ( soul_fragments.total <= 1 || ( ! ( variable.can_spburst || variable.can_spburst_soon || soul_fragments.total >= 4 ) & ( ! talent.fracture.enabled || action.shear.charges_fractional < 1 ) ) ) & ! prev_gcd.1.sigil_of_spite & ! prev_gcd.2.sigil_of_spite",
["action"] = "soul_carver",
},
{
["enabled"] = true,
["criteria"] = "! ( ( fury + variable.fel_dev_passive_fury_gen ) >= 120 ) & ( variable.can_spburst || variable.can_spburst_soon || soul_fragments.total >= 4 )",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "talent.fracture.enabled & ! ( variable.can_spburst || variable.can_spburst_soon || soul_fragments.total >= 4 ) || ! ( ( fury + variable.fel_dev_passive_fury_gen ) >= 120 )",
["action"] = "shear",
},
{
["action"] = "felblade",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.fracture.enabled",
["action"] = "shear",
},
{
["action"] = "fel_devastation",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ( fury + variable.fel_dev_passive_fury_gen ) >= 150 )",
["action"] = "soul_cleave",
},
{
["action"] = "throw_glaive",
["enabled"] = true,
},
},
["ar"] = {
{
["enabled"] = true,
["criteria"] = "! trinket.t1.is.tome_of_lights_devotion & ( ! variable.trinket_1_buffs || ( variable.trinket_1_buffs & ( ( buff.metamorphosis.up ) || ( buff.metamorphosis.up & cooldown.metamorphosis.remains < 10 ) || ( cooldown.metamorphosis.remains > trinket.t1.cooldown.duration ) || ( variable.trinket_2_buffs & trinket.t2.cooldown.remains < cooldown.metamorphosis.remains ) ) ) )",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t2.is.tome_of_lights_devotion & ( ! variable.trinket_2_buffs || ( variable.trinket_2_buffs & ( ( buff.metamorphosis.up ) || ( buff.metamorphosis.up & cooldown.metamorphosis.remains < 10 ) || ( cooldown.metamorphosis.remains > trinket.t2.cooldown.duration ) || ( variable.trinket_1_buffs & trinket.t1.cooldown.remains < cooldown.metamorphosis.remains ) ) ) )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["name"] = "tome_of_lights_devotion",
["action"] = "tome_of_lights_devotion",
["criteria"] = "buff.inner_resilience.up",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "( buff.rending_strike.up & buff.glaive_flurry.up ) || prev_gcd.1.reavers_glaive",
["action"] = "potion",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "! buff.metamorphosis.up",
["action"] = "metamorphosis",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "! buff.rending_strike.up & ! buff.glaive_flurry.up",
["action"] = "fel_devastation",
},
{
["enabled"] = true,
["criteria"] = "! buff.rending_strike.up & buff.glaive_flurry.up",
["action"] = "soul_cleave",
["description"] = "Always Soul Cleave if Rending Strike isn't up and Glaive Flurry is",
},
{
["enabled"] = true,
["criteria"] = "variable.single_target & buff.rending_strike.up & buff.glaive_flurry.up",
["action"] = "soul_cleave",
["description"] = "If Soul Cleave and Rending Strike are up in single target, spend Soul Cleave first then we can Fracture",
},
{
["enabled"] = true,
["criteria"] = "talent.fracture.enabled & buff.glaive_flurry.up",
["action"] = "shear",
["description"] = "Spend Rending Strike or generate Fury for empowered Soul Cleave",
},
{
["enabled"] = true,
["criteria"] = "! talent.fracture.enabled & buff.glaive_flurry.up",
["action"] = "shear",
["description"] = "Spend Rending Strike or generate Fury for empowered Soul Cleave",
},
{
["enabled"] = true,
["criteria"] = "! buff.rending_strike.up & ! buff.glaive_flurry.up",
["action"] = "reavers_glaive",
},
{
["enabled"] = true,
["criteria"] = "! buff.reavers_glaive.up & ( buff.art_of_the_glaive.stack + soul_fragments.total ) < 20",
["action"] = "the_hunt",
},
{
["enabled"] = true,
["criteria"] = "talent.fiery_demise.enabled & ! dot.fiery_brand.ticking",
["action"] = "fiery_brand",
},
{
["enabled"] = true,
["criteria"] = "! talent.fiery_demise.enabled || ( talent.fiery_demise.enabled & dot.fiery_brand.ticking )",
["action"] = "soul_carver",
},
{
["action"] = "sigil_of_spite",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.fallout.enabled",
["action"] = "immolation_aura",
["description"] = "Immolation Aura is one of our best generators if Fallout is talented",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 3",
["action"] = "bulk_extraction",
},
{
["enabled"] = true,
["criteria"] = "talent.fracture.enabled & buff.metamorphosis.up",
["action"] = "shear",
},
{
["action"] = "sigil_of_flame",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.fracture.enabled",
["action"] = "shear",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 12 & soul_fragments.active >= 4",
["action"] = "spirit_bomb",
},
{
["action"] = "soul_cleave",
["enabled"] = true,
},
{
["action"] = "immolation_aura",
["enabled"] = true,
},
{
["action"] = "felblade",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.unhindered_assault.enabled",
["action"] = "vengeful_retreat",
},
{
["action"] = "throw_glaive",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.fracture.enabled",
["action"] = "shear",
},
},
["fs_execute"] = {
{
["use_off_gcd"] = 1,
["action"] = "metamorphosis",
["enabled"] = true,
},
{
["action"] = "the_hunt",
["enabled"] = true,
},
{
["action"] = "sigil_of_flame",
["enabled"] = true,
},
{
["action"] = "fiery_brand",
["enabled"] = true,
},
{
["action"] = "sigil_of_spite",
["enabled"] = true,
},
{
["action"] = "soul_carver",
["enabled"] = true,
},
{
["action"] = "fel_devastation",
["enabled"] = true,
},
},
},
["author"] = "SimC",
},
["Unholy"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/deathknight_unholy.simc",
["builtIn"] = true,
["date"] = 20250826,
["spec"] = 252,
["desc"] = "The War Within Season 3\n2025-08-26: APL Sync - 05c05de\n2025-08-16: Remove external PI call\n2025-08-14: APL Sync c50e3bc + 1febfbb\n2025-08-06: Initial APL",
["lists"] = {
["aoe_setup"] = {
{
["enabled"] = true,
["criteria"] = "buff.festering_scythe.up",
["action"] = "festering_strike",
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & ( full_recharge_time < 2 * gcd.max || death_knight.fwounded_targets >= cycle_enemies & ( rune > 3 || runic_power < 30 ) || talent.desecrate.enabled & ( talent.festering_scythe.enabled & death_knight.fwounded_targets = 0 & buff.festering_scythe_stacks.stack < 10 & ! buff.festering_scythe.up || ! talent.festering_scythe.enabled ) )",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "death_knight.fwounded_targets = 0 & cooldown.apocalypse.remains < gcd.max & ( cooldown.dark_transformation.remains & cooldown.unholy_assault.remains || cooldown.unholy_assault.remains || ! talent.unholy_assault.enabled )",
["action"] = "festering_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "debuff.chains_of_ice_trollbane_slow.up",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & active_enemies < variable.epidemic_targets & rune < 4",
["action"] = "death_coil",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & variable.epidemic_targets <= active_enemies & rune < 4",
["action"] = "epidemic",
},
{
["enabled"] = true,
["criteria"] = "! buff.death_and_decay.up & ( ! talent.bursting_sores.enabled || death_knight.fwounded_targets = active_enemies || death_knight.fwounded_targets >= 8 || raid_event.adds.exists & raid_event.adds.remains <= 11 & raid_event.adds.remains > 5 || ! buff.death_and_decay.up & talent.defile.enabled )",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & active_enemies < variable.epidemic_targets & ( buff.sudden_doom.up || death_knight.fwounded_targets = active_enemies || death_knight.fwounded_targets >= 8 )",
["action"] = "death_coil",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & variable.epidemic_targets <= active_enemies & ( buff.sudden_doom.up || death_knight.fwounded_targets = active_enemies || death_knight.fwounded_targets >= 8 )",
["action"] = "epidemic",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & active_enemies < variable.epidemic_targets",
["action"] = "death_coil",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power",
["action"] = "epidemic",
},
{
["enabled"] = true,
["criteria"] = "death_knight.fwounded_targets < 8 & ! death_knight.fwounded_targets = active_enemies",
["action"] = "festering_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.vampiric_strike.up",
["action"] = "wound_spender",
["cycle_targets"] = 1,
},
},
["cds_aoe"] = {
{
["enabled"] = true,
["action"] = "unholy_assault",
["cycle_targets"] = 1,
["description"] = "Non-Sanlayn CDs AoE",
["criteria"] = "variable.adds_remain",
},
{
["enabled"] = true,
["criteria"] = "variable.adds_remain & ( death_and_decay.ticking || cooldown.death_and_decay.remains < 3 )",
["action"] = "dark_transformation",
},
{
["enabled"] = true,
["criteria"] = "variable.adds_remain & ( death_and_decay.ticking || cooldown.death_and_decay.remains < 3 || rune < 3 || set_bonus.tww3_rider_of_the_apocalypse_2pc )",
["action"] = "apocalypse",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "dot.virulent_plague.ticks_remain < 5 & dot.virulent_plague.refreshable & ( ! talent.unholy_blight.enabled || talent.unholy_blight.enabled & dark_transformation_cooldown ) & ( ! talent.raise_abomination.enabled || talent.raise_abomination.enabled & cooldown.raise_abomination.remains )",
["action"] = "outbreak",
},
},
["cleave"] = {
{
["enabled"] = true,
["action"] = "any_dnd",
["description"] = "Cleave",
["criteria"] = "! death_and_decay.ticking & variable.adds_remain || talent.gift_of_the_sanlayn.enabled",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & talent.improved_death_coil.enabled",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "buff.vampiric_strike.up",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! talent.improved_death_coil.enabled",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "buff.vampiric_strike.down & ! variable.pop_wounds & debuff.festering_wound.stack < 4 || buff.festering_scythe.up",
["action"] = "festering_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.vampiric_strike.down & cooldown.apocalypse.remains < variable.apoc_timing & debuff.festering_wound.stack < 4",
["action"] = "festering_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.pop_wounds",
["action"] = "wound_spender",
},
},
["cds_shared"] = {
{
["enabled"] = true,
["action"] = "potion",
["description"] = "Shared CDs",
["criteria"] = "( variable.st_planning || variable.adds_remain ) & ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( buff.dark_transformation.up & 30 >= buff.dark_transformation.remains || ! talent.vampiric_strike.enabled & pet.army_ghoul.active & pet.army_ghoul.remains <= 30 || ! talent.vampiric_strike.enabled & pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 30 || ! talent.vampiric_strike.enabled & pet.abomination.active & pet.abomination.remains <= 30 ) || fight_remains <= 30",
},
{
["enabled"] = true,
["criteria"] = "( variable.st_planning || variable.adds_remain ) & ( talent.commander_of_the_dead.enabled & cooldown.dark_transformation.remains < 5 || ! talent.commander_of_the_dead.enabled & active_enemies >= 1 ) || fight_remains < 35",
["action"] = "army_of_the_dead",
},
{
["enabled"] = true,
["criteria"] = "( variable.st_planning || variable.adds_remain ) & ( ! talent.vampiric_strike.enabled || ( pet.apoc_ghoul.active || ! talent.apocalypse.enabled ) ) || fight_remains < 30",
["action"] = "raise_abomination",
},
{
["enabled"] = true,
["criteria"] = "( variable.st_planning || variable.adds_remain ) & ( death_knight.fwounded_targets < active_enemies || ( cooldown.apocalypse.remains < 3 || cooldown.dark_transformation.remains < 3 ) )",
["action"] = "legion_of_souls",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "( variable.st_planning || variable.adds_remain ) & ( buff.commander_of_the_dead.up || ! talent.commander_of_the_dead.enabled & active_enemies >= 1 ) || fight_remains < 25",
["action"] = "summon_gargoyle",
},
{
["enabled"] = true,
["criteria"] = "death_knight.ams_absorb_percent > 0 & runic_power < 30 & rune < 2",
["action"] = "antimagic_shell",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & ( ( ! raid_event.adds.exists & fight_remains < 6 || raid_event.adds.exists & raid_event.adds.remains < 6 ) || ( ! talent.festering_scythe.enabled || buff.festering_scythe_stacks.stack < active_enemies & ! buff.festering_scythe.up ) & ( active_enemies > 1 & death_knight.fwounded_targets < active_enemies || death_knight.fwounded_targets = active_enemies || death_knight.fwounded_targets = 0 & talent.festering_scythe.enabled & ! buff.festering_scythe.up & buff.festering_scythe_stacks.stack < 10 ) )",
["action"] = "desecrate",
},
},
["cds_cleave_san"] = {
{
["enabled"] = true,
["description"] = "Sanlayn CDs Cleave",
["action"] = "dark_transformation",
},
{
["enabled"] = true,
["action"] = "apocalypse",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.dark_transformation.up & buff.dark_transformation.remains < 12 || boss & fight_remains < 20 || raid_event.adds.exists & raid_event.adds.remains < 20",
["action"] = "unholy_assault",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( dot.virulent_plague.refreshable || talent.morbidity.enabled & buff.infliction_of_sorrow.up & talent.superstrain.enabled & dot.frost_fever.refreshable & dot.blood_plague.refreshable ) & ( ! talent.unholy_blight.enabled || talent.unholy_blight.enabled & cooldown.dark_transformation.remains > 6 ) & ( ! talent.raise_abomination.enabled || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > 6 ) || buff.visceral_strength_unholy.up",
["action"] = "outbreak",
["cycle_targets"] = 1,
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "buff.festering_scythe.up",
["action"] = "festering_strike",
},
{
["enabled"] = true,
["criteria"] = "rune < 4 & active_enemies < variable.epidemic_targets & buff.gift_of_the_sanlayn.up & gcd.max <= 1.0 & fight_remains > buff.dark_transformation.remains * 2",
["action"] = "death_coil",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "rune < 4 & active_enemies > variable.epidemic_targets & buff.gift_of_the_sanlayn.up & gcd.max <= 1.0 & fight_remains > buff.dark_transformation.remains * 2",
["action"] = "epidemic",
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.up & buff.death_and_decay.up & talent.bursting_sores.enabled & cooldown.apocalypse.remains > variable.apoc_timing",
["action"] = "wound_spender",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & active_enemies < variable.epidemic_targets",
["action"] = "death_coil",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power",
["action"] = "epidemic",
},
{
["enabled"] = true,
["criteria"] = "debuff.chains_of_ice_trollbane_slow.up",
["action"] = "wound_spender",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "cooldown.apocalypse.remains < variable.apoc_timing || buff.festering_scythe.up",
["action"] = "festering_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack < 2",
["action"] = "festering_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.up & cooldown.apocalypse.remains > gcd.max || buff.vampiric_strike.up & dot.virulent_plague.ticking",
["action"] = "wound_spender",
["cycle_targets"] = 1,
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
["criteria"] = "( variable.adds_remain || variable.st_planning ) & cooldown.dark_transformation.remains < 10",
["description"] = "Non-San'layn Trinkets",
},
{
["enabled"] = true,
["criteria"] = "( buff.latent_energy.stack >= 8 || ! trinket.t1.is.unyielding_netherprism ) & variable.trinket_1_buffs & ( variable.trinket_priority = 1 || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains > 20 ) & ( ! talent.apocalypse.enabled & buff.dark_transformation.up || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= variable.trinket_1_duration & pet.apoc_ghoul.remains > 5 ) & ( talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled & pet.army_ghoul.active & pet.army_ghoul.remains > 10 || talent.raise_abomination.enabled & pet.abomination.active & pet.abomination.remains > 10 || talent.legion_of_souls.enabled || ! talent.raise_abomination.enabled & ! talent.apocalypse.enabled & buff.dark_transformation.up || variable.trinket_2_buffs & trinket.t2.cooldown.remains ) || fight_remains <= variable.trinket_1_duration",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "( buff.latent_energy.stack >= 8 || ! trinket.t2.is.unyielding_netherprism ) & variable.trinket_2_buffs & ( variable.trinket_priority = 2 || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains > 20 ) & ( ! talent.apocalypse.enabled & buff.dark_transformation.up || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= variable.trinket_2_duration & pet.apoc_ghoul.remains > 5 ) & ( talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled & pet.army_ghoul.active & pet.army_ghoul.remains > 10 || talent.raise_abomination.enabled & pet.abomination.active & pet.abomination.remains > 10 || talent.legion_of_souls.enabled || ! talent.raise_abomination.enabled & ! talent.apocalypse.enabled & buff.dark_transformation.up || variable.trinket_1_buffs & trinket.t1.cooldown.remains ) || fight_remains <= variable.trinket_2_duration",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_1_buffs & ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled || ! talent.summon_gargoyle.enabled & talent.army_of_the_dead.enabled & ( ! talent.raise_abomination.enabled & cooldown.army_of_the_dead.remains > 20 || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > 20 ) || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled & cooldown.dark_transformation.remains > 20 || talent.summon_gargoyle.enabled & cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || fight_remains < 15",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_2_buffs & ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled || ! talent.summon_gargoyle.enabled & talent.army_of_the_dead.enabled & ( ! talent.raise_abomination.enabled & cooldown.army_of_the_dead.remains > 20 || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > 20 ) || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled & cooldown.dark_transformation.remains > 20 || talent.summon_gargoyle.enabled & cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || fight_remains < 15",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.trinket_1_buffs & ! variable.trinket_2_buffs || trinket.t1.cooldown.remains & ! variable.trinket_2_buffs || trinket.t2.cooldown.remains & ! variable.trinket_1_buffs || trinket.t1.cooldown.remains & trinket.t2.cooldown.remains ) & ( pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 18 || ! talent.apocalypse.enabled & buff.dark_transformation.up ) & ( ( trinket.t1.cooldown.duration = 90 || trinket.t2.cooldown.duration = 90 ) || ! talent.raise_abomination.enabled & ! talent.army_of_the_dead.enabled || ! talent.raise_abomination.enabled & talent.army_of_the_dead.enabled & pet.army_ghoul.active || talent.raise_abomination.enabled & pet.abomination.active )",
["action"] = "main_hand",
["slot"] = "main_hand",
},
},
["san_fishing"] = {
{
["enabled"] = true,
["criteria"] = "death_knight.ams_absorb_percent > 0 & runic_power < 40",
["action"] = "antimagic_shell",
},
{
["enabled"] = true,
["criteria"] = "buff.infliction_of_sorrow.up",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "! buff.death_and_decay.up & ! buff.vampiric_strike.up",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_doom.up & talent.doomed_bidding.enabled || set_bonus.tww2_4pc & buff.essence_of_the_blood_queen.at_max_stacks & talent.frenzied_bloodthirst.enabled & ! buff.vampiric_strike.up",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct <= 35 & fight_remains > 5",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "! buff.vampiric_strike.up",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "( debuff.festering_wound.stack >= 3 - pet.abomination.active & cooldown.apocalypse.remains > variable.apoc_timing ) || buff.vampiric_strike.up",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack < 3 - pet.abomination.active",
["action"] = "festering_strike",
},
},
["cds_aoe_san"] = {
{
["enabled"] = true,
["action"] = "dark_transformation",
["description"] = "Sanlayn CDs AoE",
["criteria"] = "variable.adds_remain & ( buff.death_and_decay.up || active_enemies <= 3 )",
},
{
["enabled"] = true,
["criteria"] = "variable.adds_remain & buff.dark_transformation.up & buff.dark_transformation.remains < 12",
["action"] = "unholy_assault",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.adds_remain & ( buff.death_and_decay.up || active_enemies <= 3 || rune < 3 )",
["action"] = "apocalypse",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( dot.virulent_plague.ticks_remain < 5 || set_bonus.tww2_4pc & talent.superstrain.enabled & dot.frost_fever.ticks_remain < 5 & ! pet.abomination.active ) & ( talent.unholy_blight.enabled & ! cooldown.dark_transformation.ready || ! talent.unholy_blight.enabled ) & ( dot.virulent_plague.refreshable || talent.morbidity.enabled & ! buff.gift_of_the_sanlayn.up & talent.superstrain.enabled & dot.frost_fever.refreshable & dot.blood_plague.refreshable ) & ( ! dot.virulent_plague.ticking & variable.epidemic_targets < active_enemies || ( ! talent.unholy_blight.enabled || talent.unholy_blight.enabled & cooldown.dark_transformation.remains > 5 ) & ( ! talent.raise_abomination.enabled || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > 5 ) ) || buff.visceral_strength_unholy.up",
["action"] = "outbreak",
},
},
["aoe_burst"] = {
{
["enabled"] = true,
["criteria"] = "buff.festering_scythe.up",
["action"] = "festering_strike",
},
{
["enabled"] = true,
["criteria"] = "death_knight.fwounded_targets = active_enemies & talent.desecrate.enabled & ( talent.festering_scythe.enabled & death_knight.fwounded_targets = 0 & buff.festering_scythe_stacks.stack < 10 & ! buff.festering_scythe.up || ! talent.festering_scythe.enabled ) & ( raid_event.adds.exists & raid_event.adds.remains > 6 & ( raid_event.adds.remains < 10 || ! buff.death_and_decay.up ) || ! raid_event.adds.exists || fight_remains > 6 & fight_remains < 10 )",
["action"] = "death_and_decay",
},
{
["enabled"] = true,
["criteria"] = "! buff.vampiric_strike.up & active_enemies < variable.epidemic_targets & ( ! talent.bursting_sores.enabled || talent.bursting_sores.enabled & death_knight.fwounded_targets < active_enemies & death_knight.fwounded_targets < active_enemies * 0.4 & buff.sudden_doom.up || buff.sudden_doom.up & ( talent.doomed_bidding.enabled & talent.menacing_magus.enabled || talent.rotten_touch.enabled || debuff.death_rot.remains < gcd.max ) || rune < 2 ) || ( rune < 4 || active_enemies < 4 || boss ) & active_enemies < variable.epidemic_targets & buff.gift_of_the_sanlayn.up & gcd.max <= 1.0 & ( fight_remains > buff.dark_transformation.remains * 2 )",
["action"] = "death_coil",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.vampiric_strike.up & ( ! talent.bursting_sores.enabled || talent.bursting_sores.enabled & death_knight.fwounded_targets < active_enemies & death_knight.fwounded_targets < active_enemies * 0.4 & buff.sudden_doom.up || buff.sudden_doom.up & ( buff.a_feast_of_souls.up || debuff.death_rot.remains < gcd.max || debuff.death_rot.stack < 10 ) || rune < 2 ) || ( rune < 4 || boss ) & active_enemies > variable.epidemic_targets & buff.gift_of_the_sanlayn.up & gcd.max <= 1.0 & fight_remains > buff.dark_transformation.remains * 2",
["action"] = "epidemic",
},
{
["enabled"] = true,
["criteria"] = "debuff.chains_of_ice_trollbane_slow.up",
["action"] = "wound_spender",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.up || buff.vampiric_strike.up || buff.death_and_decay.up",
["action"] = "wound_spender",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies < variable.epidemic_targets",
["action"] = "death_coil",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.epidemic_targets < active_enemies",
["action"] = "epidemic",
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack <= 2",
["action"] = "festering_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "wound_spender",
["cycle_targets"] = 1,
},
},
["san_trinkets"] = {
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
["criteria"] = "( variable.adds_remain || variable.st_planning ) & cooldown.dark_transformation.remains < 10",
["description"] = "San'layn Trinkets",
},
{
["enabled"] = true,
["action"] = "cursed_stone_idol",
["criteria"] = "pet.apoc_ghoul.active || ! talent.apocalypse.enabled & buff.dark_transformation.up || cooldown.apocalypse.ready",
["name"] = "cursed_stone_idol",
},
{
["enabled"] = true,
["criteria"] = "( buff.latent_energy.stack >= 8 || ! trinket.t1.is.unyielding_netherprism ) & variable.trinket_1_buffs & ( buff.dark_transformation.up & buff.dark_transformation.remains < variable.trinket_1_duration * 0.73 & ( variable.trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown ) ) || variable.trinket_1_duration >= fight_remains",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "( buff.latent_energy.stack >= 8 || ! trinket.t2.is.unyielding_netherprism ) & variable.trinket_2_buffs & ( buff.dark_transformation.up & buff.dark_transformation.remains < variable.trinket_2_duration * 0.73 & ( variable.trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown ) ) || variable.trinket_2_duration >= fight_remains",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_1_buffs & ( trinket.t1.cast_time > 0 & ! buff.gift_of_the_sanlayn.up || ! trinket.t1.cast_time > 0 ) & ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled || ! talent.summon_gargoyle.enabled & talent.army_of_the_dead.enabled & ( ! talent.raise_abomination.enabled & cooldown.army_of_the_dead.remains > 20 || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > 20 ) || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled & cooldown.dark_transformation.remains > 20 || talent.summon_gargoyle.enabled & cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || fight_remains < 15",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_2_buffs & ( trinket.t2.cast_time > 0 & ! buff.gift_of_the_sanlayn.up || ! trinket.t2.cast_time > 0 ) & ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled || ! talent.summon_gargoyle.enabled & talent.army_of_the_dead.enabled & ( ! talent.raise_abomination.enabled & cooldown.army_of_the_dead.remains > 20 || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > 20 ) || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled & cooldown.dark_transformation.remains > 20 || talent.summon_gargoyle.enabled & cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || fight_remains < 15",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.trinket_1_buffs & ! variable.trinket_2_buffs || trinket.t1.cooldown.remains > 20 & ! variable.trinket_2_buffs || trinket.t2.cooldown.remains > 20 & ! variable.trinket_1_buffs || trinket.t1.cooldown.remains > 20 & trinket.t2.cooldown.remains > 20 ) & ( buff.dark_transformation.up & buff.dark_transformation.remains > 10 ) & ( ! talent.raise_abomination.enabled & ! talent.army_of_the_dead.enabled || ! talent.raise_abomination.enabled & talent.army_of_the_dead.enabled & pet.army_ghoul.active || talent.raise_abomination.enabled & pet.abomination.active || ( variable.trinket_1_buffs || variable.trinket_2_buffs || fight_remains < 15 ) )",
["action"] = "main_hand",
["slot"] = "main_hand",
},
},
["default"] = {
{
["action"] = "mind_freeze",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1",
["var_name"] = "st_planning",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies > 1 & fight_remains > 6",
["var_name"] = "adds_remain",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "apoc_timing",
["value"] = "5",
["value_else"] = "2",
["criteria"] = "cooldown.apocalypse.remains < 5 & debuff.festering_wound.down & cooldown.unholy_assault.remains > 5",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.apocalypse.remains > variable.apoc_timing || ! talent.apocalypse.enabled ) & ( debuff.festering_wound.up & cooldown.unholy_assault.remains < 20 & talent.unholy_assault.enabled & active_enemies = 1 || debuff.rotten_touch.up & debuff.festering_wound.up || debuff.festering_wound.stack >= 4 - pet.abomination.active ) || fight_remains < 5 & debuff.festering_wound.up",
["var_name"] = "pop_wounds",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.summon_gargoyle.remains > 5 & runic_power < 40",
["var_name"] = "pooling_runic_power",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["value"] = "( ! talent.rotten_touch.enabled || talent.rotten_touch.enabled & ! debuff.rotten_touch.up || runic_power.deficit < 20 ) & ( ( talent.improved_death_coil.enabled & ( active_enemies = 2 || talent.coil_of_devastation.enabled ) || rune < 3 || pet.gargoyle.active || buff.sudden_doom.up || ! variable.pop_wounds & debuff.festering_wound.stack >= 4 ) )",
["var_name"] = "spend_rp",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "san_coil_mult",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "buff.essence_of_the_blood_queen.stack >= 4",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "3 + talent.improved_death_coil.enabled + ( talent.frenzied_bloodthirst.enabled * variable.san_coil_mult ) + ( talent.hungering_thirst.enabled & talent.harbinger_of_doom.enabled & buff.sudden_doom.up )",
["var_name"] = "epidemic_targets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.vampiric_strike.enabled",
["list_name"] = "san_trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! talent.vampiric_strike.enabled",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "runic_power < 20 & rune < 2",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "( buff.blood_fury.duration + 3 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.blood_fury.duration + 3 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.blood_fury.duration + 3 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.blood_fury.duration + 3",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "( buff.berserking.duration + 3 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.berserking.duration + 3 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.berserking.duration + 3 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.berserking.duration + 3",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.unholy_strength.up & ( ! talent.festermight.enabled || buff.festermight.remains < target.time_to_die || buff.unholy_strength.remains < target.time_to_die )",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "( 18 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= 18 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 18 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= 18",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 || ( rune.deficit >= 5 & runic_power.deficit >= 60 )",
["action"] = "arcane_pulse",
},
{
["enabled"] = true,
["criteria"] = "( buff.fireblood.duration + 3 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.fireblood.duration + 3 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.fireblood.duration + 3 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.fireblood.duration + 3",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & ( buff.unholy_strength.up || boss & fight_remains < 5 )",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["action"] = "potion",
["description"] = "Shared Cooldowns",
["criteria"] = "active_enemies >= 1 & ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( buff.dark_transformation.up & 30 >= buff.dark_transformation.remains || pet.army_ghoul.active & pet.army_ghoul.remains <= 30 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 30 || pet.abomination.active & pet.abomination.remains <= 30 ) || boss & fight_remains <= 30",
},
{
["enabled"] = true,
["criteria"] = "( talent.commander_of_the_dead.enabled & cooldown.dark_transformation.remains < 5 || ! talent.commander_of_the_dead.enabled & active_enemies >= 1 ) || boss & fight_remains < 35",
["action"] = "army_of_the_dead",
},
{
["enabled"] = true,
["criteria"] = "( variable.st_planning || variable.adds_remain ) & ( ! talent.vampiric_strike.enabled || ( pet.apoc_ghoul.active || ! talent.apocalypse.enabled ) ) || boss & fight_remains < 30",
["action"] = "raise_abomination",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "( variable.st_planning || variable.adds_remain ) & ( buff.commander_of_the_dead.up || ! talent.commander_of_the_dead.enabled & active_enemies >= 1 ) || boss & fight_remains < 25",
["action"] = "summon_gargoyle",
},
{
["enabled"] = true,
["criteria"] = "death_knight.ams_absorb_percent > 0 & runic_power < 30 & rune < 2",
["action"] = "antimagic_shell",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds_shared",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.vampiric_strike.enabled & active_enemies >= 3",
["list_name"] = "cds_aoe_san",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! talent.vampiric_strike.enabled & active_enemies >= 2",
["list_name"] = "cds_aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.vampiric_strike.enabled & active_enemies = 2",
["list_name"] = "cds_cleave_san",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.vampiric_strike.enabled & active_enemies = 1",
["list_name"] = "cds_san",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! talent.vampiric_strike.enabled & active_enemies = 1",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 2",
["list_name"] = "cleave",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "active_enemies >= 3 & cooldown.any_dnd.remains < 10 & ! death_and_decay.ticking",
["strict_if"] = "active_enemies >= 3",
["list_name"] = "aoe_setup",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "active_enemies >= 3 & ( death_and_decay.ticking || buff.death_and_decay.up & ( death_knight.fwounded_targets >= ( cycle_enemies * 0.5 ) || talent.vampiric_strike.enabled & active_enemies < 16 ) )",
["strict_if"] = "active_enemies >= 3",
["list_name"] = "aoe_burst",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "active_enemies >= 3 & ! buff.death_and_decay.up",
["strict_if"] = "active_enemies >= 3",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "active_enemies = 1 & talent.gift_of_the_sanlayn.enabled & ! cooldown.dark_transformation.ready & ! buff.gift_of_the_sanlayn.up & buff.essence_of_the_blood_queen.remains < cooldown.dark_transformation.remains + 3",
["strict_if"] = "active_enemies = 1 & talent.gift_of_the_sanlayn.enabled",
["list_name"] = "san_fishing",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1 & talent.vampiric_strike.enabled",
["list_name"] = "san_st",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1 & ! talent.vampiric_strike.enabled",
["list_name"] = "st",
},
},
["precombat"] = {
{
["action"] = "raise_dead",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "army_of_the_dead",
["precombat_time"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || trinket.t1.is.treacherous_transmitter || trinket.t1.is.unyielding_netherprism",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || trinket.t2.is.treacherous_transmitter || trinket.t2.is.unyielding_netherprism",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_duration",
["value"] = "trinket.t1.is.treacherous_transmitter * 15 + trinket.t1.is.funhouse_lens * 15 + trinket.t1.is.signet_of_the_priory * 20 + trinket.t1.is.unyielding_netherprism * 20 + trinket.t1.is.cursed_stone_idol * 16",
["value_else"] = "trinket.t1.buff_duration",
["criteria"] = "trinket.t1.is.treacherous_transmitter || trinket.t1.is.funhouse_lens || trinket.t1.is.signet_of_the_priory || trinket.t1.is.unyielding_netherprism || trinket.t1.is.cursed_stone_idol",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_duration",
["value"] = "trinket.t2.is.treacherous_transmitter * 15 + trinket.t2.is.funhouse_lens * 15 + trinket.t2.is.signet_of_the_priory * 20 + trinket.t2.is.unyielding_netherprism * 20 + trinket.t2.is.cursed_stone_idol * 16",
["value_else"] = "trinket.t2.buff_duration",
["criteria"] = "trinket.t2.is.treacherous_transmitter || trinket.t2.is.funhouse_lens || trinket.t2.is.signet_of_the_priory || trinket.t2.is.unyielding_netherprism || trinket.t2.is.cursed_stone_idol",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_high_value",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "trinket.t1.is.treacherous_transmitter",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_high_value",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "trinket.t2.is.treacherous_transmitter",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( talent.apocalypse.enabled & trinket.t1.cooldown.duration % cooldown.apocalypse.duration = 0 || talent.dark_transformation.enabled & trinket.t1.cooldown.duration % cooldown.dark_transformation.duration = 0 ) || trinket.t1.is.treacherous_transmitter",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( talent.apocalypse.enabled & trinket.t2.cooldown.duration % cooldown.apocalypse.duration = 0 || talent.dark_transformation.enabled & trinket.t2.cooldown.duration % cooldown.dark_transformation.duration = 0 ) || trinket.t2.is.treacherous_transmitter",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs & ( trinket.t2.has_cooldown || ! trinket.t1.has_cooldown ) || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / variable.trinket_2_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) * ( variable.trinket_2_high_value ) * ( 1 + ( ( trinket.t2.ilvl - trinket.t1.ilvl ) / 100 ) ) ) > ( ( trinket.t1.cooldown.duration / variable.trinket_1_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) * ( variable.trinket_1_high_value ) * ( 1 + ( ( trinket.t1.ilvl - trinket.t2.ilvl ) / 100 ) ) )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "damage_trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_2_buffs & trinket.t2.ilvl >= trinket.t1.ilvl",
},
},
["cds_san"] = {
{
["enabled"] = true,
["action"] = "dark_transformation",
["description"] = "Sanlayn CDs ST",
["criteria"] = "variable.st_planning || fight_remains < 20",
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning || fight_remains < 20",
["action"] = "apocalypse",
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning & ( buff.dark_transformation.up & buff.dark_transformation.remains < 12 ) || fight_remains < 20",
["action"] = "unholy_assault",
},
{
["enabled"] = true,
["criteria"] = "( dot.virulent_plague.refreshable || talent.morbidity.enabled & buff.infliction_of_sorrow.up & talent.superstrain.enabled & dot.frost_fever.refreshable & dot.blood_plague.refreshable ) & ( ! talent.unholy_blight.enabled || talent.unholy_blight.enabled & cooldown.dark_transformation.remains > 6 ) & ( ! talent.raise_abomination.enabled || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > 6 ) || buff.visceral_strength_unholy.up",
["action"] = "outbreak",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.superstrain.enabled & set_bonus.tww2_4pc & dot.frost_fever.refreshable & ( ! talent.unholy_blight.enabled || talent.unholy_blight.enabled & cooldown.dark_transformation.remains > 6 ) & ( ! talent.raise_abomination.enabled || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > 6 )",
["action"] = "outbreak",
["cycle_targets"] = 1,
},
},
["cds"] = {
{
["enabled"] = true,
["action"] = "dark_transformation",
["description"] = "Non-Sanlayn CDs",
["criteria"] = "variable.st_planning || boss & fight_remains < 20",
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning & ( cooldown.apocalypse.remains < gcd.max * 1.5 || ! talent.apocalypse.enabled || active_enemies >= 2 & buff.dark_transformation.up ) || boss & fight_remains < 20",
["action"] = "unholy_assault",
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning || boss & fight_remains < 20",
["action"] = "apocalypse",
},
{
["enabled"] = true,
["criteria"] = "( dot.virulent_plague.refreshable || talent.superstrain.enabled & ( dot.frost_fever.refreshable || dot.blood_plague.refreshable ) ) & ( ! talent.unholy_blight.enabled || talent.plaguebringer.enabled ) & ( ! talent.raise_abomination.enabled || ! pet.abomination.active & talent.raise_abomination.enabled & cooldown.raise_abomination.remains > dot.virulent_plague.ticks_remain * 3 )",
["action"] = "outbreak",
},
},
["san_st"] = {
{
["enabled"] = true,
["action"] = "wound_spender",
["description"] = "San'layn Single Target",
["criteria"] = "buff.infliction_of_sorrow.up",
},
{
["enabled"] = true,
["criteria"] = "buff.festering_scythe.up & ( ! raid_event.adds.exists || ! raid_event.adds.in || raid_event.adds.in > 11 || raid_event.pull.has_boss & raid_event.adds.in > 11 )",
["action"] = "festering_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_doom.up & buff.gift_of_the_sanlayn.remains & ( talent.doomed_bidding.enabled || talent.rotten_touch.enabled ) || rune < 3 & ! buff.runic_corruption.up || set_bonus.tww2_4pc & runic_power > 80 || buff.gift_of_the_sanlayn.up & buff.essence_of_the_blood_queen.at_max_stacks & talent.frenzied_bloodthirst.enabled & set_bonus.tww2_4pc & buff.winning_streak_unholy.at_max_stacks & rune <= 3 & buff.essence_of_the_blood_queen.remains > 3",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "buff.vampiric_strike.up & debuff.festering_wound.stack >= 1 || buff.gift_of_the_sanlayn.up || talent.gift_of_the_sanlayn.enabled & buff.dark_transformation.up & buff.dark_transformation.remains < gcd.max",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct <= 35 & ! buff.gift_of_the_sanlayn.up & fight_remains > 5",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "( debuff.festering_wound.stack = 0 & cooldown.apocalypse.remains < variable.apoc_timing ) || ! buff.dark_transformation.up & cooldown.dark_transformation.remains < 10 & debuff.festering_wound.stack <= 3 & ( rune > 4 || runic_power < 80 ) || ( talent.gift_of_the_sanlayn.enabled & ! buff.gift_of_the_sanlayn.up || ! talent.gift_of_the_sanlayn.enabled ) & debuff.festering_wound.stack <= 1",
["action"] = "festering_strike",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.apocalypse.enabled || cooldown.apocalypse.remains > variable.apoc_timing ) & ( cooldown.dark_transformation.remains > 5 & debuff.festering_wound.stack >= 3 - pet.abomination.active || buff.vampiric_strike.up )",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & debuff.death_rot.remains < gcd.max || ( buff.sudden_doom.up & debuff.festering_wound.stack >= 1 || rune < 2 )",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack > 4",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.apocalypse.enabled || cooldown.apocalypse.remains > variable.apoc_timing ) & rune >= 4",
["action"] = "wound_spender",
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "target.health.pct <= 35 & target.time_to_die > 5",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "debuff.chains_of_ice_trollbane_slow.up",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "talent.unholy_ground.enabled & ! buff.death_and_decay.up & ( pet.apoc_ghoul.active || pet.abomination.active || pet.gargoyle.active )",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & variable.spend_rp || fight_remains < 10",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack < 4 & ( ! variable.pop_wounds || buff.festering_scythe.up )",
["action"] = "festering_strike",
},
{
["enabled"] = true,
["criteria"] = "variable.pop_wounds",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "! variable.pop_wounds & debuff.festering_wound.stack >= 4",
["action"] = "wound_spender",
},
},
},
["version"] = 20250826,
["warnings"] = "The import for 'trinkets' required some automated changes.\nLine 2: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\n\nThe import for 'san_trinkets' required some automated changes.\nLine 3: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 4: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 3: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 4: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 5: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 5: Converted 'trinket.1.is.funhouse_lens' to 'trinket.t1.is.funhouse_lens' (1x).\nLine 5: Converted 'trinket.1.is.signet_of_the_priory' to 'trinket.t1.is.signet_of_the_priory' (1x).\nLine 5: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 5: Converted 'trinket.1.is.cursed_stone_idol' to 'trinket.t1.is.cursed_stone_idol' (1x).\nLine 5: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 5: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 5: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 5: Converted 'trinket.1.is.funhouse_lens' to 'trinket.t1.is.funhouse_lens' (1x).\nLine 5: Converted 'trinket.1.is.signet_of_the_priory' to 'trinket.t1.is.signet_of_the_priory' (1x).\nLine 5: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 5: Converted 'trinket.1.is.cursed_stone_idol' to 'trinket.t1.is.cursed_stone_idol' (1x).\nLine 6: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 6: Converted 'trinket.2.is.funhouse_lens' to 'trinket.t2.is.funhouse_lens' (1x).\nLine 6: Converted 'trinket.2.is.signet_of_the_priory' to 'trinket.t2.is.signet_of_the_priory' (1x).\nLine 6: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 6: Converted 'trinket.2.is.cursed_stone_idol' to 'trinket.t2.is.cursed_stone_idol' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 6: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 6: Converted 'trinket.2.is.funhouse_lens' to 'trinket.t2.is.funhouse_lens' (1x).\nLine 6: Converted 'trinket.2.is.signet_of_the_priory' to 'trinket.t2.is.signet_of_the_priory' (1x).\nLine 6: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 6: Converted 'trinket.2.is.cursed_stone_idol' to 'trinket.t2.is.cursed_stone_idol' (1x).\nLine 7: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 8: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 9: Converted operations in 'variable.trinket_1_buffs&(talent.apocalypse.enabled&trinket.t1.cooldown.duration%%cooldown.apocalypse.duration=0||talent.dark_transformation.enabled&trinket.t1.cooldown.duration%%cooldown.dark_transformation.duration=0)||trinket.t1.is.treacherous_transmitter' to 'variable.trinket_1_buffs&(talent.apocalypse.enabled&trinket.t1.cooldown.duration%cooldown.apocalypse.duration=0||talent.dark_transformation.enabled&trinket.t1.cooldown.duration%cooldown.dark_transformation.duration=0)||trinket.t1.is.treacherous_transmitter'.\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 10: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 10: Converted operations in 'variable.trinket_2_buffs&(talent.apocalypse.enabled&trinket.t2.cooldown.duration%%cooldown.apocalypse.duration=0||talent.dark_transformation.enabled&trinket.t2.cooldown.duration%%cooldown.dark_transformation.duration=0)||trinket.t2.is.treacherous_transmitter' to 'variable.trinket_2_buffs&(talent.apocalypse.enabled&trinket.t2.cooldown.duration%cooldown.apocalypse.duration=0||talent.dark_transformation.enabled&trinket.t2.cooldown.duration%cooldown.dark_transformation.duration=0)||trinket.t2.is.treacherous_transmitter'.\nLine 11: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 11: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 11: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 11: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 11: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 11: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 11: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 11: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 11: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 11: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 11: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 11: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 11: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 11: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 11: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%variable.trinket_2_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(variable.trinket_2_high_value)*(1+((trinket.t2.ilvl-trinket.t1.ilvl)%100)))>((trinket.t1.cooldown.duration%variable.trinket_1_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(variable.trinket_1_high_value)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)%100)))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/variable.trinket_2_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(variable.trinket_2_high_value)*(1+((trinket.t2.ilvl-trinket.t1.ilvl)/100)))>((trinket.t1.cooldown.duration/variable.trinket_1_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(variable.trinket_1_high_value)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)/100)))'.\nLine 12: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 12: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\n\nImported 17 action lists.\n",
["author"] = "SimulationCraft",
["profile"] = "## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/deathknight_unholy.simc\n## SimulationCraft Commit Sync: 05c05de\n## Date: 2025-08-26\n\n## [Hekili] There are a fair number of nested variables in this priority which can cause logic/timing issues.\n\nactions.precombat+=/raise_dead\nactions.precombat+=/army_of_the_dead,precombat_time=2\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||trinket.1.is.treacherous_transmitter||trinket.1.is.unyielding_netherprism\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||trinket.2.is.treacherous_transmitter||trinket.2.is.unyielding_netherprism\nactions.precombat+=/variable,name=trinket_1_duration,op=setif,value=trinket.1.is.treacherous_transmitter*15+trinket.1.is.funhouse_lens*15+trinket.1.is.signet_of_the_priory*20+trinket.1.is.unyielding_netherprism*20+trinket.1.is.cursed_stone_idol*16,value_else=trinket.1.proc.any_dps.duration,condition=trinket.1.is.treacherous_transmitter||trinket.1.is.funhouse_lens||trinket.1.is.signet_of_the_priory||trinket.1.is.unyielding_netherprism||trinket.1.is.cursed_stone_idol\nactions.precombat+=/variable,name=trinket_2_duration,op=setif,value=trinket.2.is.treacherous_transmitter*15+trinket.2.is.funhouse_lens*15+trinket.2.is.signet_of_the_priory*20+trinket.2.is.unyielding_netherprism*20+trinket.2.is.cursed_stone_idol*16,value_else=trinket.2.proc.any_dps.duration,condition=trinket.2.is.treacherous_transmitter||trinket.2.is.funhouse_lens||trinket.2.is.signet_of_the_priory||trinket.2.is.unyielding_netherprism||trinket.2.is.cursed_stone_idol\nactions.precombat+=/variable,name=trinket_1_high_value,op=setif,value=2,value_else=1,condition=trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_high_value,op=setif,value=2,value_else=1,condition=trinket.2.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(talent.apocalypse&trinket.1.cooldown.duration%%cooldown.apocalypse.duration=0||talent.dark_transformation&trinket.1.cooldown.duration%%cooldown.dark_transformation.duration=0)||trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(talent.apocalypse&trinket.2.cooldown.duration%%cooldown.apocalypse.duration=0||talent.dark_transformation&trinket.2.cooldown.duration%%cooldown.dark_transformation.duration=0)||trinket.2.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.2.has_cooldown||!trinket.1.has_cooldown)||variable.trinket_2_buffs&((trinket.2.cooldown.duration%variable.trinket_2_duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync)*(variable.trinket_2_high_value)*(1+((trinket.2.ilvl-trinket.1.ilvl)%100)))>((trinket.1.cooldown.duration%variable.trinket_1_duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync)*(variable.trinket_1_high_value)*(1+((trinket.1.ilvl-trinket.2.ilvl)%100)))\nactions.precombat+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&!variable.trinket_2_buffs&trinket.2.ilvl>=trinket.1.ilvl\n\nactions+=/mind_freeze\nactions+=/variable,name=st_planning,op=set,value=active_enemies=1\n## [Hekili] This could be shifted to 'raid_event.adds.remains>6' because it does return remaining time on secondary targets (excluding current target).\nactions+=/variable,name=adds_remain,op=set,value=active_enemies>1&fight_remains>6\nactions+=/variable,name=apoc_timing,op=set,value=5,value_else=2,condition=cooldown.apocalypse.remains<5&debuff.festering_wound.down&cooldown.unholy_assault.remains>5\nactions+=/variable,name=pop_wounds,op=set,value=(cooldown.apocalypse.remains>variable.apoc_timing||!talent.apocalypse)&(debuff.festering_wound.up&cooldown.unholy_assault.remains<20&talent.unholy_assault&active_enemies=1||debuff.rotten_touch.up&debuff.festering_wound.up||debuff.festering_wound.stack>=4-pet.abomination.active)||fight_remains<5&debuff.festering_wound.up\nactions+=/variable,name=pooling_runic_power,op=set,value=cooldown.summon_gargoyle.remains>5&runic_power<40\nactions+=/variable,name=spend_rp,op=setif,value=(!talent.rotten_touch||talent.rotten_touch&!debuff.rotten_touch.up||runic_power.deficit<20)&((talent.improved_death_coil&(active_enemies=2||talent.coil_of_devastation)||rune<3||pet.gargoyle.active||buff.sudden_doom.up||!variable.pop_wounds&debuff.festering_wound.stack>=4))\nactions+=/variable,name=san_coil_mult,op=setif,value=2,value_else=1,condition=buff.essence_of_the_blood_queen.stack>=4\nactions+=/variable,name=epidemic_targets,value=3+talent.improved_death_coil+(talent.frenzied_bloodthirst*variable.san_coil_mult)+(talent.hungering_thirst&talent.harbinger_of_doom&buff.sudden_doom.up)\n## Call Action Lists\nactions+=/call_action_list,name=san_trinkets,strict=1,if=talent.vampiric_strike\nactions+=/call_action_list,name=trinkets,strict=1,if=!talent.vampiric_strike\n## Racials\nactions+=/arcane_torrent,if=runic_power<20&rune<2\nactions+=/blood_fury,if=(buff.blood_fury.duration+3>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.blood_fury.duration+3||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.blood_fury.duration+3||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.blood_fury.duration+3\nactions+=/berserking,if=(buff.berserking.duration+3>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.berserking.duration+3||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.berserking.duration+3||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.berserking.duration+3\nactions+=/lights_judgment,if=buff.unholy_strength.up&(!talent.festermight||buff.festermight.remains<target.time_to_die||buff.unholy_strength.remains<target.time_to_die)\nactions+=/ancestral_call,if=(18>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=18||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=18||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=18\nactions+=/arcane_pulse,if=active_enemies>=2||(rune.deficit>=5&runic_power.deficit>=60)\nactions+=/fireblood,if=(buff.fireblood.duration+3>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.fireblood.duration+3||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.fireblood.duration+3||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.fireblood.duration+3\nactions+=/bag_of_tricks,if=active_enemies=1&(buff.unholy_strength.up||boss&fight_remains<5)\n# Shared Cooldowns\nactions+=/potion,if=active_enemies>=1&(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(buff.dark_transformation.up&30>=buff.dark_transformation.remains||pet.army_ghoul.active&pet.army_ghoul.remains<=30||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=30||pet.abomination.active&pet.abomination.remains<=30)||boss&fight_remains<=30\n## Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=49206/summon-gargoyle'>Gargoyle</a> is up, as well as <a href='https://www.wowhead.com/spell=275699/apocalypse'>Apocalypse</a> or with <a href='https://www.wowhead.com/spell=63560/dark-transformation'>Dark Transformation</a> if <a href='https://www.wowhead.com/spell=275699/apocalypse'>Apocalypse</a> or <a href='https://www.wowhead.com/spell=49206/summon-gargoyle'>Gargoyle</a> are not talented\n## actions+=/invoke_external_buff,name=power_infusion,if=active_enemies>=1&(pet.gargoyle.active&pet.gargoyle.remains<=22||!talent.summon_gargoyle&talent.army_of_the_dead&(talent.raise_abomination&pet.abomination.active&pet.abomination.remains<18||!talent.raise_abomination&pet.army_ghoul.active&pet.army_ghoul.remains<=18)||!talent.summon_gargoyle&!talent.army_of_the_dead&buff.dark_transformation.up||!talent.summon_gargoyle&buff.dark_transformation.up||!pet.gargoyle.active&cooldown.summon_gargoyle.remains+10>cooldown.invoke_external_buff_power_infusion.duration||active_enemies>=3&(buff.dark_transformation.up||death_and_decay.ticking))\n## [Syrif] (variable.st_planning||variable.adds_remain) removed from 3 lines here, too redundant\nactions+=/army_of_the_dead,if=(talent.commander_of_the_dead&cooldown.dark_transformation.remains<5||!talent.commander_of_the_dead&active_enemies>=1)||boss&fight_remains<35\nactions+=/raise_abomination,if=(variable.st_planning||variable.adds_remain)&(!talent.vampiric_strike||(pet.apoc_ghoul.active||!talent.apocalypse))||boss&fight_remains<30\nactions+=/summon_gargoyle,use_off_gcd=1,if=(variable.st_planning||variable.adds_remain)&(buff.commander_of_the_dead.up||!talent.commander_of_the_dead&active_enemies>=1)||boss&fight_remains<25\nactions+=/antimagic_shell,if=death_knight.ams_absorb_percent>0&runic_power<30&rune<2\nactions+=/call_action_list,name=cds_shared\nactions+=/call_action_list,name=cds_aoe_san,strict=1,if=talent.vampiric_strike&active_enemies>=3\nactions+=/call_action_list,name=cds_aoe,strict=1,if=!talent.vampiric_strike&active_enemies>=2\nactions+=/call_action_list,name=cds_cleave_san,strict=1,if=talent.vampiric_strike&active_enemies=2\nactions+=/call_action_list,name=cds_san,strict=1,if=talent.vampiric_strike&active_enemies=1\nactions+=/call_action_list,name=cds,strict=1,if=!talent.vampiric_strike&active_enemies=1\nactions+=/call_action_list,name=cleave,strict=1,if=active_enemies=2\nactions+=/call_action_list,name=aoe_setup,strict_if=active_enemies>=3,if=active_enemies>=3&cooldown.any_dnd.remains<10&!death_and_decay.ticking\nactions+=/call_action_list,name=aoe_burst,strict_if=active_enemies>=3,if=active_enemies>=3&(death_and_decay.ticking||buff.death_and_decay.up&(death_knight.fwounded_targets>=(cycle_enemies*0.5)||talent.vampiric_strike&active_enemies<16))\nactions+=/call_action_list,name=aoe,strict_if=active_enemies>=3,if=active_enemies>=3&!buff.death_and_decay.up\nactions+=/run_action_list,name=san_fishing,strict_if=active_enemies=1&talent.gift_of_the_sanlayn,if=active_enemies=1&talent.gift_of_the_sanlayn&!cooldown.dark_transformation.ready&!buff.gift_of_the_sanlayn.up&buff.essence_of_the_blood_queen.remains<cooldown.dark_transformation.remains+3\nactions+=/call_action_list,name=san_st,strict=1,if=active_enemies=1&talent.vampiric_strike\nactions+=/call_action_list,name=st,strict=1,if=active_enemies=1&!talent.vampiric_strike\n\n## AOE\nactions.aoe+=/festering_strike,if=buff.festering_scythe.up\nactions.aoe+=/death_coil,cycle_targets=1,if=rune<4&active_enemies<variable.epidemic_targets&buff.gift_of_the_sanlayn.up&gcd<=1.0&fight_remains>buff.dark_transformation.remains*2\nactions.aoe+=/epidemic,if=rune<4&active_enemies>variable.epidemic_targets&buff.gift_of_the_sanlayn.up&gcd<=1.0&fight_remains>buff.dark_transformation.remains*2\nactions.aoe+=/wound_spender,cycle_targets=1,if=debuff.festering_wound.up&buff.death_and_decay.up&talent.bursting_sores&cooldown.apocalypse.remains>variable.apoc_timing\nactions.aoe+=/death_coil,cycle_targets=1,if=!variable.pooling_runic_power&active_enemies<variable.epidemic_targets\nactions.aoe+=/epidemic,if=!variable.pooling_runic_power\nactions.aoe+=/wound_spender,cycle_targets=1,if=debuff.chains_of_ice_trollbane_slow.up\nactions.aoe+=/festering_strike,cycle_targets=1,if=cooldown.apocalypse.remains<variable.apoc_timing||buff.festering_scythe.up\nactions.aoe+=/festering_strike,cycle_targets=1,if=debuff.festering_wound.stack<2\nactions.aoe+=/wound_spender,cycle_targets=1,if=debuff.festering_wound.up&cooldown.apocalypse.remains>gcd||buff.vampiric_strike.up&dot.virulent_plague.ticking\n\n## AoE Burst\nactions.aoe_burst+=/festering_strike,if=buff.festering_scythe.up\nactions.aoe_burst+=/death_and_decay,if=death_knight.fwounded_targets=active_enemies&talent.desecrate&(talent.festering_scythe&death_knight.fwounded_targets=0&buff.festering_scythe_stacks.stack<10&!buff.festering_scythe.up||!talent.festering_scythe)&(raid_event.adds.exists&raid_event.adds.remains>6&(raid_event.adds.remains<10||!buff.death_and_decay.up)||!raid_event.adds.exists||fight_remains>6&fight_remains<10)\nactions.aoe_burst+=/death_coil,cycle_targets=1,if=!buff.vampiric_strike.up&active_enemies<variable.epidemic_targets&(!talent.bursting_sores||talent.bursting_sores&death_knight.fwounded_targets<active_enemies&death_knight.fwounded_targets<active_enemies*0.4&buff.sudden_doom.up||buff.sudden_doom.up&(talent.doomed_bidding&talent.menacing_magus||talent.rotten_touch||debuff.death_rot.remains<gcd)||rune<2)||(rune<4||active_enemies<4||boss)&active_enemies<variable.epidemic_targets&buff.gift_of_the_sanlayn.up&gcd<=1.0&(fight_remains>buff.dark_transformation.remains*2)\nactions.aoe_burst+=/epidemic,if=!buff.vampiric_strike.up&(!talent.bursting_sores||talent.bursting_sores&death_knight.fwounded_targets<active_enemies&death_knight.fwounded_targets<active_enemies*0.4&buff.sudden_doom.up||buff.sudden_doom.up&(buff.a_feast_of_souls.up||debuff.death_rot.remains<gcd||debuff.death_rot.stack<10)||rune<2)||(rune<4||boss)&active_enemies>variable.epidemic_targets&buff.gift_of_the_sanlayn.up&gcd<=1.0&fight_remains>buff.dark_transformation.remains*2\nactions.aoe_burst+=/wound_spender,cycle_targets=1,if=debuff.chains_of_ice_trollbane_slow.up\nactions.aoe_burst+=/wound_spender,cycle_targets=1,if=debuff.festering_wound.up||buff.vampiric_strike.up||buff.death_and_decay.up\nactions.aoe_burst+=/death_coil,cycle_targets=1,if=active_enemies<variable.epidemic_targets\nactions.aoe_burst+=/epidemic,if=variable.epidemic_targets<active_enemies\nactions.aoe_burst+=/festering_strike,cycle_targets=1,if=debuff.festering_wound.stack<=2\nactions.aoe_burst+=/wound_spender,cycle_targets=1\n\n## AoE Setup\nactions.aoe_setup+=/festering_strike,if=buff.festering_scythe.up\n## [Syrif] Added fallback use based on time to max charges; this is in case you have target swaps enabled but...aren't swapping targets to apply Festering Wounds.\nactions.aoe_setup+=/any_dnd,if=!death_and_decay.ticking&(full_recharge_time<2*gcd.max||death_knight.fwounded_targets>=cycle_enemies&(rune>3||runic_power<30)||talent.desecrate&(talent.festering_scythe&death_knight.fwounded_targets=0&buff.festering_scythe_stacks.stack<10&!buff.festering_scythe.up||!talent.festering_scythe))\nactions.aoe_setup+=/festering_strike,cycle_targets=1,if=death_knight.fwounded_targets=0&cooldown.apocalypse.remains<gcd&(cooldown.dark_transformation.remains&cooldown.unholy_assault.remains||cooldown.unholy_assault.remains||!talent.unholy_assault)\nactions.aoe_setup+=/wound_spender,if=debuff.chains_of_ice_trollbane_slow.up\nactions.aoe_setup+=/death_coil,cycle_targets=1,if=!variable.pooling_runic_power&active_enemies<variable.epidemic_targets&rune<4\nactions.aoe_setup+=/epidemic,if=!variable.pooling_runic_power&variable.epidemic_targets<=active_enemies&rune<4\nactions.aoe_setup+=/any_dnd,if=!buff.death_and_decay.up&(!talent.bursting_sores||death_knight.fwounded_targets=active_enemies||death_knight.fwounded_targets>=8||raid_event.adds.exists&raid_event.adds.remains<=11&raid_event.adds.remains>5||!buff.death_and_decay.up&talent.defile)\nactions.aoe_setup+=/death_coil,cycle_targets=1,if=!variable.pooling_runic_power&active_enemies<variable.epidemic_targets&(buff.sudden_doom.up||death_knight.fwounded_targets=active_enemies||death_knight.fwounded_targets>=8)\nactions.aoe_setup+=/epidemic,if=!variable.pooling_runic_power&variable.epidemic_targets<=active_enemies&(buff.sudden_doom.up||death_knight.fwounded_targets=active_enemies||death_knight.fwounded_targets>=8)\nactions.aoe_setup+=/death_coil,cycle_targets=1,if=!variable.pooling_runic_power&active_enemies<variable.epidemic_targets\nactions.aoe_setup+=/epidemic,if=!variable.pooling_runic_power\nactions.aoe_setup+=/festering_strike,cycle_targets=1,if=death_knight.fwounded_targets<8&!death_knight.fwounded_targets=active_enemies\nactions.aoe_setup+=/wound_spender,cycle_targets=1,if=buff.vampiric_strike.up\n\n# Non-Sanlayn CDs\nactions.cds+=/dark_transformation,if=variable.st_planning||boss&fight_remains<20\nactions.cds+=/unholy_assault,if=variable.st_planning&(cooldown.apocalypse.remains<gcd*1.5||!talent.apocalypse||active_enemies>=2&buff.dark_transformation.up)||boss&fight_remains<20\nactions.cds+=/apocalypse,if=variable.st_planning||boss&fight_remains<20\nactions.cds+=/outbreak,if=(dot.virulent_plague.refreshable||talent.superstrain&(dot.frost_fever.refreshable||dot.blood_plague.refreshable))&(!talent.unholy_blight||talent.plaguebringer)&(!talent.raise_abomination||!pet.abomination.active&talent.raise_abomination&cooldown.raise_abomination.remains>dot.virulent_plague.ticks_remain*3)\n\n# Non-Sanlayn CDs AoE\nactions.cds_aoe+=/unholy_assault,cycle_targets=1,if=variable.adds_remain\nactions.cds_aoe+=/dark_transformation,if=variable.adds_remain&(death_and_decay.ticking||cooldown.death_and_decay.remains<3)\nactions.cds_aoe+=/apocalypse,cycle_targets=1,if=variable.adds_remain&(death_and_decay.ticking||cooldown.death_and_decay.remains<3||rune<3||set_bonus.tww3_rider_of_the_apocalypse_2pc)\n## [Syrif] - Internal expression to handle SimC only checking 1 spell for CD\nactions.cds_aoe+=/outbreak,if=dot.virulent_plague.ticks_remain<5&dot.virulent_plague.refreshable&(!talent.unholy_blight||talent.unholy_blight&dark_transformation_cooldown)&(!talent.raise_abomination||talent.raise_abomination&cooldown.raise_abomination.remains)\n\n# Sanlayn CDs AoE\nactions.cds_aoe_san+=/dark_transformation,if=variable.adds_remain&(buff.death_and_decay.up||active_enemies<=3)\nactions.cds_aoe_san+=/unholy_assault,cycle_targets=1,if=variable.adds_remain&buff.dark_transformation.up&buff.dark_transformation.remains<12\nactions.cds_aoe_san+=/apocalypse,cycle_targets=1,if=variable.adds_remain&(buff.death_and_decay.up||active_enemies<=3||rune<3)\nactions.cds_aoe_san+=/outbreak,if=(dot.virulent_plague.ticks_remain<5||set_bonus.tww2_4pc&talent.superstrain&dot.frost_fever.ticks_remain<5&!pet.abomination.active)&(talent.unholy_blight&!cooldown.dark_transformation.ready||!talent.unholy_blight)&(dot.virulent_plague.refreshable||talent.morbidity&!buff.gift_of_the_sanlayn.up&talent.superstrain&dot.frost_fever.refreshable&dot.blood_plague.refreshable)&(!dot.virulent_plague.ticking&variable.epidemic_targets<active_enemies||(!talent.unholy_blight||talent.unholy_blight&cooldown.dark_transformation.remains>5)&(!talent.raise_abomination||talent.raise_abomination&cooldown.raise_abomination.remains>5))||buff.visceral_strength_unholy.up\n\n# Sanlayn CDs Cleave\nactions.cds_cleave_san+=/dark_transformation\nactions.cds_cleave_san+=/apocalypse,cycle_targets=1\nactions.cds_cleave_san+=/unholy_assault,cycle_targets=1,if=buff.dark_transformation.up&buff.dark_transformation.remains<12||boss&fight_remains<20||raid_event.adds.exists&raid_event.adds.remains<20\nactions.cds_cleave_san+=/outbreak,cycle_targets=1,if=(dot.virulent_plague.refreshable||talent.morbidity&buff.infliction_of_sorrow.up&talent.superstrain&dot.frost_fever.refreshable&dot.blood_plague.refreshable)&(!talent.unholy_blight||talent.unholy_blight&cooldown.dark_transformation.remains>6)&(!talent.raise_abomination||talent.raise_abomination&cooldown.raise_abomination.remains>6)||buff.visceral_strength_unholy.up\n\n# Sanlayn CDs ST\nactions.cds_san+=/dark_transformation,if=variable.st_planning||fight_remains<20\nactions.cds_san+=/apocalypse,if=variable.st_planning||fight_remains<20\nactions.cds_san+=/unholy_assault,if=variable.st_planning&(buff.dark_transformation.up&buff.dark_transformation.remains<12)||fight_remains<20\nactions.cds_san+=/outbreak,cycle_targets=1,if=(dot.virulent_plague.refreshable||talent.morbidity&buff.infliction_of_sorrow.up&talent.superstrain&dot.frost_fever.refreshable&dot.blood_plague.refreshable)&(!talent.unholy_blight||talent.unholy_blight&cooldown.dark_transformation.remains>6)&(!talent.raise_abomination||talent.raise_abomination&cooldown.raise_abomination.remains>6)||buff.visceral_strength_unholy.up\nactions.cds_san+=/outbreak,cycle_targets=1,if=talent.superstrain&set_bonus.tww2_4pc&dot.frost_fever.refreshable&(!talent.unholy_blight||talent.unholy_blight&cooldown.dark_transformation.remains>6)&(!talent.raise_abomination||talent.raise_abomination&cooldown.raise_abomination.remains>6)\n\n# Shared CDs\nactions.cds_shared+=/potion,if=(variable.st_planning||variable.adds_remain)&(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(buff.dark_transformation.up&30>=buff.dark_transformation.remains||!talent.vampiric_strike&pet.army_ghoul.active&pet.army_ghoul.remains<=30||!talent.vampiric_strike&pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=30||!talent.vampiric_strike&pet.abomination.active&pet.abomination.remains<=30)||fight_remains<=30\n## actions.cds_shared+=/invoke_external_buff,name=power_infusion,if=active_enemies>=1&(variable.st_planning||variable.adds_remain)&(pet.gargoyle.active&pet.gargoyle.remains<=22||!talent.summon_gargoyle&talent.army_of_the_dead&(talent.raise_abomination&pet.abomination.active&pet.abomination.remains<18||!talent.raise_abomination&pet.army_ghoul.active&pet.army_ghoul.remains<=18)||!talent.summon_gargoyle&!talent.army_of_the_dead&buff.dark_transformation.up||!talent.summon_gargoyle&buff.dark_transformation.up||!pet.gargoyle.active&cooldown.summon_gargoyle.remains+10>cooldown.invoke_external_buff_power_infusion.duration||active_enemies>=3&(buff.dark_transformation.up||death_and_decay.ticking))\nactions.cds_shared+=/army_of_the_dead,if=(variable.st_planning||variable.adds_remain)&(talent.commander_of_the_dead&cooldown.dark_transformation.remains<5||!talent.commander_of_the_dead&active_enemies>=1)||fight_remains<35\nactions.cds_shared+=/raise_abomination,if=(variable.st_planning||variable.adds_remain)&(!talent.vampiric_strike||(pet.apoc_ghoul.active||!talent.apocalypse))||fight_remains<30\nactions.cds_shared+=/legion_of_souls,if=(variable.st_planning||variable.adds_remain)&(death_knight.fwounded_targets<active_enemies||(cooldown.apocalypse.remains<3||cooldown.dark_transformation.remains<3))\nactions.cds_shared+=/summon_gargoyle,use_off_gcd=1,if=(variable.st_planning||variable.adds_remain)&(buff.commander_of_the_dead.up||!talent.commander_of_the_dead&active_enemies>=1)||fight_remains<25\nactions.cds_shared+=/antimagic_shell,if=death_knight.ams_absorb_percent>0&runic_power<30&rune<2\nactions.cds_shared+=/desecrate,if=active_enemies>=2&((!raid_event.adds.exists&fight_remains<6||raid_event.adds.exists&raid_event.adds.remains<6)||(!talent.festering_scythe||buff.festering_scythe_stacks.stack<active_enemies&!buff.festering_scythe.up)&(active_enemies>1&death_knight.fwounded_targets<active_enemies||death_knight.fwounded_targets=active_enemies||death_knight.fwounded_targets=0&talent.festering_scythe&!buff.festering_scythe.up&buff.festering_scythe_stacks.stack<10))\n\n# Cleave\nactions.cleave+=/any_dnd,if=!death_and_decay.ticking&variable.adds_remain||talent.gift_of_the_sanlayn\nactions.cleave+=/death_coil,if=!variable.pooling_runic_power&talent.improved_death_coil\nactions.cleave+=/wound_spender,if=buff.vampiric_strike.up\nactions.cleave+=/death_coil,if=!variable.pooling_runic_power&!talent.improved_death_coil\n## [Hekili] Revised to allow Festering Strike with more wounds active; change is neutral/positive in sim and reduces wait time.\n## actions.cleave+=/festering_strike,cycle_targets=1,if=buff.vampiric_strike.down&!variable.pop_wounds&debuff.festering_wound.stack<2||buff.festering_scythe.up\nactions.cleave+=/festering_strike,cycle_targets=1,if=buff.vampiric_strike.down&!variable.pop_wounds&debuff.festering_wound.stack<4||buff.festering_scythe.up\n## [Hekili] Revised to allow Festering Strike with more wounds active; entry is typically not reached in SimC.\nactions.cleave+=/festering_strike,cycle_targets=1,if=buff.vampiric_strike.down&cooldown.apocalypse.remains<variable.apoc_timing&debuff.festering_wound.stack<4\nactions.cleave+=/wound_spender,if=variable.pop_wounds\n\n## San'layn Fishing\nactions.san_fishing+=/antimagic_shell,if=death_knight.ams_absorb_percent>0&runic_power<40\nactions.san_fishing+=/wound_spender,if=buff.infliction_of_sorrow.up\nactions.san_fishing+=/any_dnd,if=!buff.death_and_decay.up&!buff.vampiric_strike.up\nactions.san_fishing+=/death_coil,if=buff.sudden_doom.up&talent.doomed_bidding||set_bonus.tww2_4pc&buff.essence_of_the_blood_queen.at_max_stacks&talent.frenzied_bloodthirst&!buff.vampiric_strike.up\nactions.san_fishing+=/soul_reaper,if=target.health.pct<=35&fight_remains>5\nactions.san_fishing+=/death_coil,if=!buff.vampiric_strike.up\nactions.san_fishing+=/wound_spender,if=(debuff.festering_wound.stack>=3-pet.abomination.active&cooldown.apocalypse.remains>variable.apoc_timing)||buff.vampiric_strike.up\nactions.san_fishing+=/festering_strike,if=debuff.festering_wound.stack<3-pet.abomination.active\n\n# San'layn Single Target\nactions.san_st+=/wound_spender,if=buff.infliction_of_sorrow.up\nactions.san_st+=/festering_strike,if=buff.festering_scythe.up&(!raid_event.adds.exists||!raid_event.adds.in||raid_event.adds.in>11||raid_event.pull.has_boss&raid_event.adds.in>11)\nactions.san_st+=/death_coil,if=buff.sudden_doom.up&buff.gift_of_the_sanlayn.remains&(talent.doomed_bidding||talent.rotten_touch)||rune<3&!buff.runic_corruption.up||set_bonus.tww2_4pc&runic_power>80||buff.gift_of_the_sanlayn.up&buff.essence_of_the_blood_queen.at_max_stacks&talent.frenzied_bloodthirst&set_bonus.tww2_4pc&buff.winning_streak_unholy.at_max_stacks&rune<=3&buff.essence_of_the_blood_queen.remains>3\nactions.san_st+=/wound_spender,if=buff.vampiric_strike.up&debuff.festering_wound.stack>=1||buff.gift_of_the_sanlayn.up||talent.gift_of_the_sanlayn&buff.dark_transformation.up&buff.dark_transformation.remains<gcd\nactions.san_st+=/soul_reaper,if=target.health.pct<=35&!buff.gift_of_the_sanlayn.up&fight_remains>5\nactions.san_st+=/festering_strike,if=(debuff.festering_wound.stack=0&cooldown.apocalypse.remains<variable.apoc_timing)||!buff.dark_transformation.up&cooldown.dark_transformation.remains<10&debuff.festering_wound.stack<=3&(rune>4||runic_power<80)||(talent.gift_of_the_sanlayn&!buff.gift_of_the_sanlayn.up||!talent.gift_of_the_sanlayn)&debuff.festering_wound.stack<=1\nactions.san_st+=/wound_spender,if=(!talent.apocalypse||cooldown.apocalypse.remains>variable.apoc_timing)&(cooldown.dark_transformation.remains>5&debuff.festering_wound.stack>=3-pet.abomination.active||buff.vampiric_strike.up)\nactions.san_st+=/death_coil,if=!variable.pooling_runic_power&debuff.death_rot.remains<gcd||(buff.sudden_doom.up&debuff.festering_wound.stack>=1||rune<2)\nactions.san_st+=/wound_spender,if=debuff.festering_wound.stack>4\nactions.san_st+=/death_coil,if=!variable.pooling_runic_power\nactions.san_st+=/wound_spender,if=(!talent.apocalypse||cooldown.apocalypse.remains>variable.apoc_timing)&rune>=4\n\n# San'layn Trinkets\n## actions.san_trinkets=do_treacherous_transmitter_task,use_off_gcd=1,if=buff.errant_manaforge_emission.up&buff.dark_transformation.up&buff.errant_manaforge_emission.remains<2||buff.cryptic_instructions.up&buff.dark_transformation.up&buff.cryptic_instructions.remains<2||buff.realigning_nexus_convergence_divergence.up&buff.dark_transformation.up&buff.realigning_nexus_convergence_divergence.remains<2\nactions.san_trinkets+=/use_item,name=treacherous_transmitter,if=(variable.adds_remain||variable.st_planning)&cooldown.dark_transformation.remains<10\nactions.san_trinkets+=/use_item,name=cursed_stone_idol,if=pet.apoc_ghoul.active||!talent.apocalypse&buff.dark_transformation.up||cooldown.apocalypse.ready\nactions.san_trinkets+=/use_item,slot=trinket1,if=(buff.latent_energy.stack>=8||!trinket.1.is.unyielding_netherprism)&variable.trinket_1_buffs&(buff.dark_transformation.up&buff.dark_transformation.remains<variable.trinket_1_duration*0.73&(variable.trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown))||variable.trinket_1_duration>=fight_remains\nactions.san_trinkets+=/use_item,slot=trinket2,if=(buff.latent_energy.stack>=8||!trinket.2.is.unyielding_netherprism)&variable.trinket_2_buffs&(buff.dark_transformation.up&buff.dark_transformation.remains<variable.trinket_2_duration*0.73&(variable.trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown))||variable.trinket_2_duration>=fight_remains\nactions.san_trinkets+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.1.cast_time>0&!buff.gift_of_the_sanlayn.up||!trinket.1.cast_time>0)&(variable.damage_trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination||!talent.summon_gargoyle&talent.army_of_the_dead&(!talent.raise_abomination&cooldown.army_of_the_dead.remains>20||talent.raise_abomination&cooldown.raise_abomination.remains>20)||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination&cooldown.dark_transformation.remains>20||talent.summon_gargoyle&cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||fight_remains<15\nactions.san_trinkets+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.2.cast_time>0&!buff.gift_of_the_sanlayn.up||!trinket.2.cast_time>0)&(variable.damage_trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination||!talent.summon_gargoyle&talent.army_of_the_dead&(!talent.raise_abomination&cooldown.army_of_the_dead.remains>20||talent.raise_abomination&cooldown.raise_abomination.remains>20)||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination&cooldown.dark_transformation.remains>20||talent.summon_gargoyle&cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||fight_remains<15\nactions.san_trinkets+=/use_item,slot=main_hand,if=(!variable.trinket_1_buffs&!variable.trinket_2_buffs||trinket.1.cooldown.remains>20&!variable.trinket_2_buffs||trinket.2.cooldown.remains>20&!variable.trinket_1_buffs||trinket.1.cooldown.remains>20&trinket.2.cooldown.remains>20)&(buff.dark_transformation.up&buff.dark_transformation.remains>10)&(!talent.raise_abomination&!talent.army_of_the_dead||!talent.raise_abomination&talent.army_of_the_dead&pet.army_ghoul.active||talent.raise_abomination&pet.abomination.active||(variable.trinket_1_buffs||variable.trinket_2_buffs||fight_remains<15))\n\n## Single Target Non-San'layn\nactions.st+=/soul_reaper,if=target.health.pct<=35&target.time_to_die>5\nactions.st+=/wound_spender,if=debuff.chains_of_ice_trollbane_slow.up\nactions.st+=/any_dnd,if=talent.unholy_ground&!buff.death_and_decay.up&(pet.apoc_ghoul.active||pet.abomination.active||pet.gargoyle.active)\nactions.st+=/death_coil,if=!variable.pooling_runic_power&variable.spend_rp||fight_remains<10\nactions.st+=/festering_strike,if=debuff.festering_wound.stack<4&(!variable.pop_wounds||buff.festering_scythe.up)\nactions.st+=/wound_spender,if=variable.pop_wounds\nactions.st+=/death_coil,if=!variable.pooling_runic_power\nactions.st+=/wound_spender,if=!variable.pop_wounds&debuff.festering_wound.stack>=4\n\n# Non-San'layn Trinkets\n## actions.trinkets=do_treacherous_transmitter_task,use_off_gcd=1,if=buff.errant_manaforge_emission.up&(pet.apoc_ghoul.active||!talent.apocalypse&buff.dark_transformation.up)||buff.cryptic_instructions.up&(pet.apoc_ghoul.active||!talent.apocalypse&buff.dark_transformation.up)||buff.realigning_nexus_convergence_divergence.up&(pet.apoc_ghoul.active||!talent.apocalypse&buff.dark_transformation.up)\nactions.trinkets+=/use_item,name=treacherous_transmitter,if=(variable.adds_remain||variable.st_planning)&cooldown.dark_transformation.remains<10\nactions.trinkets+=/use_item,slot=trinket1,if=(buff.latent_energy.stack>=8||!trinket.1.is.unyielding_netherprism)&variable.trinket_1_buffs&(variable.trinket_priority=1||!trinket.2.has_cooldown||trinket.2.cooldown.remains>20)&(!talent.apocalypse&buff.dark_transformation.up||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=variable.trinket_1_duration&pet.apoc_ghoul.remains>5)&(talent.army_of_the_dead&!talent.raise_abomination&pet.army_ghoul.active&pet.army_ghoul.remains>10||talent.raise_abomination&pet.abomination.active&pet.abomination.remains>10||talent.legion_of_souls||!talent.raise_abomination&!talent.apocalypse&buff.dark_transformation.up||variable.trinket_2_buffs&trinket.2.cooldown.remains)||fight_remains<=variable.trinket_1_duration\nactions.trinkets+=/use_item,slot=trinket2,if=(buff.latent_energy.stack>=8||!trinket.2.is.unyielding_netherprism)&variable.trinket_2_buffs&(variable.trinket_priority=2||!trinket.1.has_cooldown||trinket.1.cooldown.remains>20)&(!talent.apocalypse&buff.dark_transformation.up||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=variable.trinket_2_duration&pet.apoc_ghoul.remains>5)&(talent.army_of_the_dead&!talent.raise_abomination&pet.army_ghoul.active&pet.army_ghoul.remains>10||talent.raise_abomination&pet.abomination.active&pet.abomination.remains>10||talent.legion_of_souls||!talent.raise_abomination&!talent.apocalypse&buff.dark_transformation.up||variable.trinket_1_buffs&trinket.1.cooldown.remains)||fight_remains<=variable.trinket_2_duration\nactions.trinkets+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(variable.damage_trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination||!talent.summon_gargoyle&talent.army_of_the_dead&(!talent.raise_abomination&cooldown.army_of_the_dead.remains>20||talent.raise_abomination&cooldown.raise_abomination.remains>20)||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination&cooldown.dark_transformation.remains>20||talent.summon_gargoyle&cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||fight_remains<15\nactions.trinkets+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(variable.damage_trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination||!talent.summon_gargoyle&talent.army_of_the_dead&(!talent.raise_abomination&cooldown.army_of_the_dead.remains>20||talent.raise_abomination&cooldown.raise_abomination.remains>20)||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination&cooldown.dark_transformation.remains>20||talent.summon_gargoyle&cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||fight_remains<15\nactions.trinkets+=/use_item,slot=main_hand,if=(!variable.trinket_1_buffs&!variable.trinket_2_buffs||trinket.1.cooldown.remains&!variable.trinket_2_buffs||trinket.2.cooldown.remains&!variable.trinket_1_buffs||trinket.1.cooldown.remains&trinket.2.cooldown.remains)&(pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=18||!talent.apocalypse&buff.dark_transformation.up)&((trinket.1.cooldown.duration=90||trinket.2.cooldown.duration=90)||!talent.raise_abomination&!talent.army_of_the_dead||!talent.raise_abomination&talent.army_of_the_dead&pet.army_ghoul.active||talent.raise_abomination&pet.abomination.active)",
},
["Protection Warrior Tank"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/warrior_protection.simc",
["date"] = 20250903,
["spec"] = 73,
["desc"] = "2025-09-03: Use Shield Wall Settings",
["profile"] = "## Upstream: https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/warrior_protection.simc\n## SimulationCraft Commit Sync: bc73745\n## Date: 2025-09-03\n\nactions.precombat+=/battle_stance,toggle=on\nactions.precombat+=/battle_shout\n\nactions+=/pummel\nactions+=/charge,if=time=0||movement.distance>8\nactions+=/use_item,name=tome_of_lights_devotion,if=buff.inner_resilience.up\nactions+=/use_items\nactions+=/avatar,if=buff.thunder_blast.down||buff.thunder_blast.stack<=2\nactions+=/shield_wall,use_off_gcd=1,if=tanking&incoming_damage_5s>shield_wall_damage_taken&health.pct<=shield_wall_health_pct&!(buff.shield_wall.up||buff.last_stand.up||buff.rallying_cry.up||buff.potion.up||talent.immovable_object.enabled&buff.avatar.down)\nactions+=/blood_fury\nactions+=/berserking\nactions+=/arcane_torrent\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/potion,if=buff.avatar.up||buff.avatar.up&target.health.pct<=20\nactions+=/ignore_pain,if=target.health.pct>=20&(rage.deficit<=15&cooldown.shield_slam.ready||rage.deficit<=40&cooldown.shield_charge.ready&talent.champions_bulwark.enabled||rage.deficit<=20&cooldown.shield_charge.ready||rage.deficit<=30&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled||rage.deficit<=20&cooldown.avatar.ready||rage.deficit<=45&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=30&cooldown.avatar.ready&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=20||rage.deficit<=40&cooldown.shield_slam.ready&buff.violent_outburst.up&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=55&cooldown.shield_slam.ready&buff.violent_outburst.up&buff.last_stand.up&talent.unnerving_focus.enabled&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=17&cooldown.shield_slam.ready&talent.heavy_repercussions.enabled||rage.deficit<=18&cooldown.shield_slam.ready&talent.impenetrable_wall.enabled)||(rage>=70||buff.seeing_red.stack=7&rage>=35)&cooldown.shield_slam.remains<=1&buff.shield_block.remains>=4&set_bonus.tier31_2pc,use_off_gcd=1\nactions+=/last_stand,use_off_gcd=1,if=tanking&incoming_damage_5s>last_stand_damage_taken&health.pct<=last_stand_health_pct&!(buff.shield_wall.up||buff.last_stand.up||buff.rallying_cry.up||buff.potion.up)\nactions+=/rallying_cry,if=tanking&incoming_damage_5s>rallying_cry_damage_taken&health.pct<=rallying_cry_health_pct&!(buff.shield_wall.up||buff.last_stand.up||buff.rallying_cry.up||buff.potion.up)\nactions+=/victory_rush,if=health.pct<victory_rush_health_pct&talent.impending_victory.disabled\nactions+=/impending_victory,if=health.pct<victory_rush_health_pct&talent.impending_victory.enabled\nactions+=/ravager\nactions+=/demoralizing_shout,if=talent.booming_voice.enabled\nactions+=/champions_spear\nactions+=/thunder_blast,if=active_enemies>=2&buff.thunder_blast.stack=2\nactions+=/demolish,if=buff.colossal_might.stack>=3\nactions+=/thunderous_roar\nactions+=/shield_charge\nactions+=/shield_block,if=buff.shield_block.remains<=10\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>=3\nactions+=/call_action_list,name=generic\n\nactions.aoe+=/thunder_blast,if=dot.rend.remains<=1\nactions.aoe+=/thunder_clap,if=dot.rend.remains<=1\nactions.aoe+=/thunder_blast,if=buff.violent_outburst.up&active_enemies>=2&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/execute,if=spell_targets.execute>=2&(rage>=50||buff.sudden_death.up)&talent.heavy_handed.enabled\nactions.aoe+=/thunder_clap,if=buff.violent_outburst.up&active_enemies>=4&buff.avatar.up&talent.unstoppable_force.enabled&talent.crashing_thunder.enabled||buff.violent_outburst.up&active_enemies>6&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/revenge,if=rage>=70&talent.seismic_reverberation.enabled&active_enemies>=3\nactions.aoe+=/shield_slam,if=rage<=60||buff.violent_outburst.up&active_enemies<=4&talent.crashing_thunder.enabled\nactions.aoe+=/thunder_blast\nactions.aoe+=/thunder_clap\nactions.aoe+=/revenge,if=rage>=30||rage>=40&talent.barbaric_training.enabled\n\nactions.generic+=/thunder_blast,if=(buff.thunder_blast.stack=2&buff.burst_of_power.stack<=1&buff.avatar.up&talent.unstoppable_force.enabled)\nactions.generic+=/shield_slam,if=(buff.burst_of_power.stack=2&buff.thunder_blast.stack<=1||buff.violent_outburst.up)||rage<=70&talent.demolish.enabled\nactions.generic+=/execute,if=rage>=70||(rage>=40&cooldown.shield_slam.remains&talent.demolish.enabled||rage>=50&cooldown.shield_slam.remains)||buff.sudden_death.up&talent.sudden_death.enabled\nactions.generic+=/shield_slam\nactions.generic+=/thunder_blast,if=dot.rend.remains<=2&buff.violent_outburst.down\nactions.generic+=/thunder_blast\nactions.generic+=/thunder_clap,if=dot.rend.remains<=2&buff.violent_outburst.down\nactions.generic+=/thunder_blast,if=(active_enemies>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/thunder_clap,if=(active_enemies>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/revenge,if=(rage>=80&target.health.pct>20||buff.revenge.up&target.health.pct<=20&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>20)||(rage>=80&target.health.pct>35||buff.revenge.up&target.health.pct<=35&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>35)&talent.massacre.enabled\nactions.generic+=/execute\nactions.generic+=/revenge\nactions.generic+=/thunder_blast,if=(active_enemies>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/thunder_clap,if=(active_enemies>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/devastate",
["version"] = 20250903,
["warnings"] = "Imported 4 action lists.\n",
["lists"] = {
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 1",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 1",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.violent_outburst.up & active_enemies >= 2 & buff.avatar.up & talent.unstoppable_force.enabled",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.execute >= 2 & ( rage >= 50 || buff.sudden_death.up ) & talent.heavy_handed.enabled",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.violent_outburst.up & active_enemies >= 4 & buff.avatar.up & talent.unstoppable_force.enabled & talent.crashing_thunder.enabled || buff.violent_outburst.up & active_enemies > 6 & buff.avatar.up & talent.unstoppable_force.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "rage >= 70 & talent.seismic_reverberation.enabled & active_enemies >= 3",
["action"] = "revenge",
},
{
["enabled"] = true,
["criteria"] = "rage <= 60 || buff.violent_outburst.up & active_enemies <= 4 & talent.crashing_thunder.enabled",
["action"] = "shield_slam",
},
{
["action"] = "thunder_blast",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "rage >= 30 || rage >= 40 & talent.barbaric_training.enabled",
["action"] = "revenge",
},
},
["generic"] = {
{
["enabled"] = true,
["criteria"] = "( buff.thunder_blast.stack = 2 & buff.burst_of_power.stack <= 1 & buff.avatar.up & talent.unstoppable_force.enabled )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( buff.burst_of_power.stack = 2 & buff.thunder_blast.stack <= 1 || buff.violent_outburst.up ) || rage <= 70 & talent.demolish.enabled",
["action"] = "shield_slam",
},
{
["enabled"] = true,
["criteria"] = "rage >= 70 || ( rage >= 40 & cooldown.shield_slam.remains & talent.demolish.enabled || rage >= 50 & cooldown.shield_slam.remains ) || buff.sudden_death.up & talent.sudden_death.enabled",
["action"] = "execute",
},
{
["action"] = "shield_slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 2 & buff.violent_outburst.down",
["action"] = "thunder_blast",
},
{
["action"] = "thunder_blast",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 2 & buff.violent_outburst.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "( rage >= 80 & target.health.pct > 20 || buff.revenge.up & target.health.pct <= 20 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 20 ) || ( rage >= 80 & target.health.pct > 35 || buff.revenge.up & target.health.pct <= 35 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 35 ) & talent.massacre.enabled",
["action"] = "revenge",
},
{
["enabled"] = true,
["action"] = "execute",
},
{
["enabled"] = true,
["action"] = "revenge",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["action"] = "devastate",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "pummel",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "time = 0 || movement.distance > 8",
["action"] = "charge",
},
{
["enabled"] = true,
["action"] = "tome_of_lights_devotion",
["criteria"] = "buff.inner_resilience.up",
["name"] = "tome_of_lights_devotion",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.thunder_blast.down || buff.thunder_blast.stack <= 2",
["action"] = "avatar",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "shield_wall",
["criteria"] = "tanking & incoming_damage_5s > shield_wall_damage_taken & health.pct <= shield_wall_health_pct & ! ( buff.shield_wall.up || buff.last_stand.up || buff.rallying_cry.up || buff.potion.up || talent.immovable_object.enabled & buff.avatar.down )",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.avatar.up || buff.avatar.up & target.health.pct <= 20",
["action"] = "potion",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "target.health.pct >= 20 & ( rage.deficit <= 15 & cooldown.shield_slam.ready || rage.deficit <= 40 & cooldown.shield_charge.ready & talent.champions_bulwark.enabled || rage.deficit <= 20 & cooldown.shield_charge.ready || rage.deficit <= 30 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled || rage.deficit <= 20 & cooldown.avatar.ready || rage.deficit <= 45 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 30 & cooldown.avatar.ready & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 20 || rage.deficit <= 40 & cooldown.shield_slam.ready & buff.violent_outburst.up & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 55 & cooldown.shield_slam.ready & buff.violent_outburst.up & buff.last_stand.up & talent.unnerving_focus.enabled & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 17 & cooldown.shield_slam.ready & talent.heavy_repercussions.enabled || rage.deficit <= 18 & cooldown.shield_slam.ready & talent.impenetrable_wall.enabled ) || ( rage >= 70 || buff.seeing_red.stack = 7 & rage >= 35 ) & cooldown.shield_slam.remains <= 1 & buff.shield_block.remains >= 4 & set_bonus.tier31_2pc",
["action"] = "ignore_pain",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "last_stand",
["criteria"] = "tanking & incoming_damage_5s > last_stand_damage_taken & health.pct <= last_stand_health_pct & ! ( buff.shield_wall.up || buff.last_stand.up || buff.rallying_cry.up || buff.potion.up )",
},
{
["enabled"] = true,
["criteria"] = "tanking & incoming_damage_5s > rallying_cry_damage_taken & health.pct <= rallying_cry_health_pct & ! ( buff.shield_wall.up || buff.last_stand.up || buff.rallying_cry.up || buff.potion.up )",
["action"] = "rallying_cry",
},
{
["enabled"] = true,
["criteria"] = "health.pct < victory_rush_health_pct & talent.impending_victory.disabled",
["action"] = "victory_rush",
},
{
["enabled"] = true,
["criteria"] = "health.pct < victory_rush_health_pct & talent.impending_victory.enabled",
["action"] = "impending_victory",
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.booming_voice.enabled",
["action"] = "demoralizing_shout",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & buff.thunder_blast.stack = 2",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.colossal_might.stack >= 3",
["action"] = "demolish",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "shield_charge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.shield_block.remains <= 10",
["action"] = "shield_block",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 3",
["strict"] = 1,
["action"] = "run_action_list",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "generic",
},
},
["precombat"] = {
{
["toggle"] = "on",
["action"] = "battle_stance",
["enabled"] = true,
},
{
["action"] = "battle_shout",
["enabled"] = true,
},
},
},
["basedOn"] = "Protection Warrior",
["author"] = "SimulationCraft",
},
["Balance"] = {
["source"] = "## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/druid_balance.simc",
["builtIn"] = true,
["date"] = 20250829,
["author"] = "SimC",
["desc"] = "2025-08-28: Sync with SimC\n\n2025-08-12: Sync with SimC",
["lists"] = {
["kotg_st"] = {
{
["enabled"] = true,
["description"] = "Make Warrior of Elune work if talented (don't talent this)",
["criteria"] = "eclipse.remains <= 7",
["action"] = "warrior_of_elune",
},
{
["enabled"] = true,
["sec"] = "buff.dryad.remains",
["criteria"] = "buff.dryad.up & buff.dryad.remains < gcd.max",
["action"] = "wait",
},
{
["enabled"] = true,
["description"] = "Wait line to prevent not being able to spend dryads favor before CA runs out",
["sec"] = "buff.dryad.remains",
["action"] = "wait",
["criteria"] = "! talent.incarnation_chosen_of_elune.enabled & buff.dryad.up & buff.ca_inc.remains < ( cooldown.ca_inc.remains >? 2 * gcd.max )",
},
{
["enabled"] = true,
["description"] = "Enter Eclipse if variable.enter_lunar is true or false",
["criteria"] = "variable.enter_lunar & eclipse.in_eclipse & eclipse.remains < cast_time || ( variable.kotg_ca_condition || variable.kotg_inc_condition ) & buff.parting_skies.up & ( eclipse.remains < cast_time || eclipse.in_none )",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "! variable.enter_lunar & eclipse.in_eclipse & eclipse.remains < cast_time & ! buff.dryads_favor.up & ( ! variable.kotg_ca_condition || ! variable.kotg_inc_condition )",
["action"] = "starfire",
},
{
["enabled"] = true,
["description"] = "Use dots if less than 3 seconds remaining or if you're about to use CDs",
["criteria"] = "( remains < 3 & ( ! talent.treants_of_the_moon.enabled || cooldown.force_of_nature.remains > 3 & ! buff.harmony_of_the_grove.up ) ) || ! dot.moonfire.ticking",
["action"] = "moonfire",
},
{
["enabled"] = true,
["criteria"] = "remains < 3 || remains < ( 12 >? buff.ca_inc.duration ) & variable.kotg_ca_condition & ! buff.ca_inc.up",
["action"] = "sunfire",
},
{
["enabled"] = true,
["description"] = "Run kotg_pre_cd list for cooldwns",
["action"] = "call_action_list",
["list_name"] = "kotg_pre_cd",
},
{
["enabled"] = true,
["description"] = "Cooldowns",
["criteria"] = "variable.kotg_ca_condition",
["action"] = "celestial_alignment",
},
{
["enabled"] = true,
["criteria"] = "variable.kotg_inc_condition",
["action"] = "incarnation",
},
{
["enabled"] = true,
["description"] = "Starsurge with 4pc buff and CA/Incarn up",
["criteria"] = "buff.dryads_favor.up & buff.ca_inc.up",
["action"] = "starsurge",
},
{
["enabled"] = true,
["description"] = "Enter Lunar from out of Eclipse",
["criteria"] = "variable.enter_lunar & ( eclipse.in_none || eclipse.remains < cast_time )",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "! variable.enter_lunar & ( eclipse.in_none || eclipse.remains < cast_time )",
["action"] = "starfire",
},
{
["enabled"] = true,
["description"] = "Use Stellar Flare if you're about to use CDs and the duration is less than the duration of your CDs",
["criteria"] = "remains <= buff.ca_inc.duration & variable.pool_for_cd || remains <= buff.ca_inc.up & ! buff.dryads_favor.up",
["action"] = "stellar_flare",
},
{
["enabled"] = true,
["description"] = "Wrath to pool AP before using CDs",
["criteria"] = "variable.pool_for_cd",
["action"] = "wrath",
},
{
["enabled"] = true,
["description"] = "Hard force 2 Starsurge casts at start of Dryad",
["criteria"] = "buff.dryad.remains > 8 & buff.dryad.up",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "buff.dryad.up & buff.harmony_of_the_grove.duration > buff.dryad.remains + gcd.max * 2 || cooldown.force_of_nature.duration < cooldown.convoke_the_spirits.remains + ( 15 * talent.control_of_the_dream.enabled ) || boss & fight_remains < 20",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["description"] = "Use Treants if Dryad is up and the duration is less than Treants duration + 2 globals",
["criteria"] = "buff.dryad.up & buff.harmony_of_the_grove.duration > buff.dryad.remains + 2 || ! buff.ca_inc.up & ( cooldown.force_of_nature.duration < 5 + ( cooldown.convoke_the_spirits.remains + 15 * talent.control_of_the_dream.enabled <? trinket.t1.cooldown.remains + 4 * gcd.max ) & ! ( boss & fight_remains < cooldown.force_of_nature.duration + 0.5 * buff.harmony_of_the_grove.duration & fight_remains > ( cooldown.ca_inc.remains + buff.ca_inc.duration >? ( trinket.t1.cooldown.remains + trinket.t1.proc.any_dps.duration - 20 * trinket.t1.is.arazs_ritual_forge || trinket.t2.cooldown.remains + trinket.t2.proc.any_dps.duration - 20 * trinket.t2.is.arazs_ritual_forge ) ) ) || boss & fight_remains < cooldown.convoke_the_spirits.duration + cooldown.convoke_the_spirits.remains + 2 & fight_remains > ( ( cooldown.force_of_nature.duration + buff.harmony_of_the_grove.duration + 5 ) <? ( cooldown.ca_inc.full_recharge_time + 5 ) ) ) || boss & fight_remains < buff.harmony_of_the_grove.duration + gcd.max + 1",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["description"] = "Proceed with rotation",
["criteria"] = "5 + variable.passive_asp < astral_power.deficit & ( cooldown.convoke_the_spirits.remains > buff.fury_of_elune.duration || ! talent.convoke_the_spirits.enabled ) || boss & fight_remains < 8 + gcd.max",
["action"] = "fury_of_elune",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_warp.up",
["action"] = "starfall",
},
{
["enabled"] = true,
["criteria"] = "talent.starlord.enabled & buff.starlord.stack < 3 & ! variable.pool_in_ca & ! ( variable.convoke_condition & cooldown.convoke_the_spirits.ready )",
["action"] = "starsurge",
},
{
["enabled"] = true,
["action"] = "sunfire",
["criteria"] = "refreshable",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "moonfire",
["criteria"] = "refreshable & ( ! talent.treants_of_the_moon.enabled || cooldown.force_of_nature.remains > 3 & ! buff.harmony_of_the_grove.up )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "cooldown.convoke_the_spirits.remains < gcd.max * 2 & variable.convoke_condition & astral_power > action.starsurge.cost & buff.dryad.remains > 4 + gcd.max & buff.dryad.up & fight_remains > 5",
["action"] = "starsurge",
},
{
["enabled"] = true,
["description"] = "Convoke when Convoke variable is true and Harmony of the Grove is up",
["criteria"] = "variable.convoke_condition & buff.harmony_of_the_grove.up",
["action"] = "convoke_the_spirits",
},
{
["enabled"] = true,
["action"] = "stellar_flare",
["criteria"] = "refreshable & ( target.time_to_die - remains - target.unit > 7 + spell_targets ) & ! buff.ca_inc.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( buff.starlord.remains > 4 & variable.boat_stacks >= 7 || fight_remains < 4 ) & ! variable.pool_in_ca",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( ( buff.harmony_of_the_grove.up & ! buff.ca_inc.up || buff.ca_inc.up & ! cooldown.ca_inc.ready ) || cooldown.new_moon.full_recharge_time < cooldown.convoke_the_spirits.remains ) || boss & fight_remains < 20",
["action"] = "new_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( ( buff.harmony_of_the_grove.up & ! buff.ca_inc.up || buff.ca_inc.up & ! cooldown.ca_inc.ready ) || cooldown.new_moon.full_recharge_time < cooldown.convoke_the_spirits.remains ) || boss & fight_remains < 20",
["action"] = "half_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( ( buff.harmony_of_the_grove.up & ! buff.ca_inc.up || buff.ca_inc.up & ! cooldown.ca_inc.ready ) || cooldown.new_moon.full_recharge_time < cooldown.convoke_the_spirits.remains ) || boss & fight_remains < 20",
["action"] = "full_moon",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_weft.up || buff.touch_the_cosmos.up",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "( astral_power.deficit < variable.passive_asp + action.wrath.energize_amount + ( action.starfire.energize_amount + variable.passive_asp ) * ( buff.eclipse_solar.remains < ( gcd.max * 2 ) ) ) & ! variable.pool_in_ca",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "! prev_gcd.1.wild_mushroom & dot.fungal_growth.remains < 2",
["action"] = "wild_mushroom",
},
{
["action"] = "wrath",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "solar_beam",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "[Edited] Trigger Lunar Eclipse if we failed to precast Wrath x2.",
["criteria"] = "time < 2 * gcd.max & eclipse.lunar_in_1",
["action"] = "wrath",
},
{
["enabled"] = true,
["description"] = "Precombat Starfire if we just entered Lunar Eclipse per our opener.",
["criteria"] = "time < 3 * gcd.max & prev.1.wrath & prev.2.wrath & eclipse.in_lunar",
["action"] = "starfire",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "6 / spell_haste + talent.natures_balance.enabled + ( ( talent.bounteous_bloom.enabled & buff.bounteous_bloom.up ) * 15 ) + talent.orbit_breaker.enabled * dot.moonfire.ticking * ( buff.orbit_breaker.stack > ( 27 - 2 * buff.solstice.up ) ) * 24",
["description"] = "VARIABLES",
["var_name"] = "passive_asp",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.ca_inc.remains <? cooldown.force_of_nature.remains",
["description"] = "Variable to map CA's effective CD, not always reliable to reference when using Whirling Stars",
["var_name"] = "ca_effective_cd",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ! talent.whirling_stars.enabled || ! talent.convoke_the_spirits.enabled || cooldown.convoke_the_spirits.remains < gcd.max * 2 || boss & fight_remains < cooldown.convoke_the_spirits.remains + 3 || cooldown.convoke_the_spirits.remains > cooldown.ca_inc.full_recharge_time + 15 * talent.control_of_the_dream.enabled ) & ( variable.on_use_trinket = 0 || ( variable.on_use_trinket = 1 || variable.on_use_trinket = 3 ) & ( trinket.t1.cooldown.remains > cooldown.ca_inc.full_recharge_time + ( 15 * talent.control_of_the_dream.enabled ) || ! talent.convoke_the_spirits.enabled & hero_tree.elunes_chosen & ( trinket.t1.cooldown.duration <= 100 & trinket.t1.cooldown.remains > cooldown.ca_inc.full_recharge_time - cooldown.ca_inc.duration || trinket.t1.cooldown.duration >= 100 & cooldown.ca_inc.charges_fractional = 1 & ( trinket.t1.cooldown.duration >? cooldown.ca_inc.full_recharge_time ) ) || talent.convoke_the_spirits.enabled & ( cooldown.convoke_the_spirits.remains < 3 & ( ceil ( ( fight_remains - 10 ) / cooldown.convoke_the_spirits.duration ) > ceil ( ( fight_remains - trinket.t1.cooldown.remains - 10 ) / cooldown.convoke_the_spirits.duration ) ) || cooldown.convoke_the_spirits.remains > trinket.t1.cooldown.remains & cooldown.ca_inc.full_recharge_time - cooldown.ca_inc.duration < trinket.t1.cooldown.remains + 15 ) || trinket.t1.cooldown.remains + 6 > fight_remains || trinket.t1.cooldown.ready ) || variable.on_use_trinket = 2 & ( trinket.t2.cooldown.remains > cooldown.ca_inc.full_recharge_time + ( 15 * talent.control_of_the_dream.enabled ) || ! talent.convoke_the_spirits.enabled & hero_tree.elunes_chosen & ( trinket.t2.cooldown.duration <= 100 & trinket.t2.cooldown.remains > cooldown.ca_inc.full_recharge_time - cooldown.ca_inc.duration || trinket.t2.cooldown.duration >= 100 & cooldown.ca_inc.charges_fractional = 1 & ( trinket.t2.cooldown.duration >? cooldown.ca_inc.full_recharge_time ) ) || talent.convoke_the_spirits.enabled & ( cooldown.convoke_the_spirits.remains < 3 & ( ceil ( ( fight_remains - 10 ) / cooldown.convoke_the_spirits.duration ) > ceil ( ( fight_remains - trinket.t2.cooldown.remains - 10 ) / cooldown.convoke_the_spirits.duration ) ) || cooldown.convoke_the_spirits.remains > trinket.t2.cooldown.remains & cooldown.ca_inc.full_recharge_time - cooldown.ca_inc.duration < trinket.t2.cooldown.remains + 15 ) || trinket.t2.cooldown.remains + 6 > fight_remains || trinket.t2.cooldown.ready ) ) & cooldown.ca_inc.remains < gcd.max & ! buff.ca_inc.up",
["description"] = "Pre_Cd Condition referenced in every CD except for when using 11.2 Keeper Set",
["var_name"] = "pre_cd_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.pre_cd_condition & ( boss & fight_remains < ( 15 + 5 * talent.incarnation_chosen_of_elune.enabled ) * ( 1 - talent.whirling_stars.enabled * 0.2 ) || target.time_to_die > 10 & ( ! hero_tree.keeper_of_the_grove || buff.harmony_of_the_grove.up ) )",
["description"] = "CD_condition used for CA/Incarn",
["var_name"] = "cd_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "boss & fight_remains < 5 || ( buff.ca_inc.up || cooldown.ca_inc.remains > 40 ) & ( ! hero_tree.keeper_of_the_grove || buff.harmony_of_the_grove.up || cooldown.force_of_nature.remains > 15 )",
["description"] = "Convoke condition variable",
["var_name"] = "convoke_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.lunar_calling.enabled || spell_targets.starfire > 3 - ( talent.umbral_intensity.rank || talent.soul_of_the_forest.enabled )",
["description"] = "[Syrif] - Variable replaced with eclipse metatable expression Variable used to enter Eclipse. Negate variable.enter_lunar to enter Solar Eclipse.",
["var_name"] = "enter_lunar",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.balance_of_all_things_arcane.stack + buff.balance_of_all_things_nature.stack",
["description"] = "Variable used for Balance of All Things stacks",
["var_name"] = "boat_stacks",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( hero_tree.keeper_of_the_grove & set_bonus.tww3_4pc > 0 & astral_power.deficit <= 50 & ( variable.on_use_trinket = 1 & trinket.t1.cooldown.ready || variable.on_use_trinket = 2 & trinket.t2.cooldown.ready || variable.on_use_trinket = 0 || variable.on_use_trinket = 3 & ( trinket.t1.cooldown.ready || trinket.t2.cooldown.ready ) ) & ( cooldown.convoke_the_spirits.remains < gcd.max * 4 || ! talent.convoke_the_spirits.enabled ) & ( cooldown.ca_inc.full_recharge_time < buff.dryad.duration & ! ( fight_remains < ( cooldown.ca_inc.full_recharge_time + cooldown.ca_inc.duration + 5 >? cooldown.convoke_the_spirits.duration + 4 * gcd.max + 3 >? ( trinket.t1.cooldown.duration + trinket.t1.proc.any_dps.duration - 20 * trinket.t1.is.arazs_ritual_forge || trinket.t2.cooldown.duration + trinket.t2.proc.any_dps.duration - 20 * trinket.t2.is.arazs_ritual_forge ) ) & fight_remains > ( cooldown.force_of_nature.duration + cooldown.force_of_nature.remains + buff.harmony_of_the_grove.duration + buff.ca_inc.duration <? cooldown.potion.remains + 15 ) ) || cooldown.ca_inc.full_recharge_time > 30 + buff.dryad.duration & fight_remains > ( cooldown.convoke_the_spirits.remains + cooldown.convoke_the_spirits.duration - 4 * gcd.max * talent.control_of_the_dream.enabled <? 105 ) + 4 * gcd.max + 5 || fight_remains < cooldown.ca_inc.full_recharge_time + buff.ca_inc.duration ) & cooldown.force_of_nature.remains < gcd.max * 4 & ! buff.ca_inc.up ) || buff.harmony_of_the_grove.up & ( buff.dryad.remains < gcd.max & buff.dryad.up || buff.dryads_favor.up ) || fight_remains < 15",
["var_name"] = "kotg_ca_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "hero_tree.keeper_of_the_grove & set_bonus.tww3_4pc > 0 & astral_power.deficit <= 50 & ( variable.on_use_trinket = 1 & trinket.t1.cooldown.ready || variable.on_use_trinket = 2 & trinket.t2.cooldown.ready || variable.on_use_trinket = 0 || variable.on_use_trinket = 3 & ( trinket.t1.cooldown.ready || trinket.t2.cooldown.ready ) || ( trinket.t1.cooldown.remains > cooldown.force_of_nature.duration || trinket.t2.cooldown.remains > cooldown.force_of_nature.duration ) & cooldown.force_of_nature.remains < gcd.max * 2 ) || fight_remains < ( cooldown.ca_inc.full_recharge_time >? cooldown.force_of_nature.remains )",
["description"] = "Keeper 11.2 Incarn condition",
["var_name"] = "kotg_inc_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "astral_power < action.starsurge.cost * 3 & ( variable.on_use_trinket = 1 & trinket.t1.cooldown.ready || variable.on_use_trinket = 2 & trinket.t2.cooldown.ready || variable.on_use_trinket = 3 & ( trinket.t1.cooldown.ready || trinket.t2.cooldown.ready ) || variable.on_use_trinket = 0 ) & ( cooldown.convoke_the_spirits.remains < 4 * gcd.max || ! talent.convoke_the_spirits.enabled ) & ( cooldown.ca_inc.full_recharge_time < buff.dryad.duration & ! ( boss & fight_remains < ( cooldown.ca_inc.full_recharge_time + cooldown.ca_inc.duration + 5 >? cooldown.convoke_the_spirits.duration + 4 * gcd.max + 3 >? ( trinket.t1.cooldown.duration + trinket.t1.proc.any_dps.duration - 20 * trinket.t1.is.arazs_ritual_forge || trinket.t2.cooldown.duration + trinket.t2.proc.any_dps.duration - 20 * trinket.t2.is.arazs_ritual_forge ) ) & fight_remains > ( cooldown.force_of_nature.duration + cooldown.force_of_nature.remains + buff.harmony_of_the_grove.duration + buff.ca_inc.duration <? cooldown.potion.remains + 15 ) ) || cooldown.ca_inc.full_recharge_time > 30 + buff.dryad.duration & fight_remains > ( ( cooldown.convoke_the_spirits.remains + cooldown.convoke_the_spirits.duration - 4 * gcd.max * talent.control_of_the_dream.enabled ) <? 105 ) + 4 * gcd.max + 5 || boss & fight_remains < cooldown.ca_inc.full_recharge_time + buff.ca_inc.duration ) & cooldown.force_of_nature.remains < 4 * gcd.max & ! buff.ca_inc.up",
["description"] = "Variable to pool Astral Power for CA with 11.2 4pc",
["var_name"] = "pool_for_cd",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.dryad.up & ( ( astral_power - action.starsurge.cost ) + ( ( 0 <? ( buff.dryad.remains - gcd.max ) ) * ( action.wrath.energize_amount / action.wrath.execute_time ) ) + variable.passive_asp ) < action.starsurge.cost * 2",
["description"] = "Variable to pool Astral Power for Dryads Favor with 11.2 4pc",
["var_name"] = "pool_in_ca",
},
{
["enabled"] = true,
["description"] = "Lines for trinkets that require specific use-cases",
["action"] = "imperfect_ascendancy_serum",
["criteria"] = "dot.sunfire.remains > 4 & ( dot.moonfire.remains > 4 || talent.treants_of_the_moon.enabled & ( cooldown.force_of_nature.remains < 3 || buff.harmony_of_the_grove.up ) & variable.ca_effective_cd < 1 || boss & fight_remains < 20 || boss & fight_remains < variable.ca_effective_cd & ( buff.harmony_of_the_grove.up || cooldown.convoke_the_spirits.ready ) ) & buff.spymasters_report.stack <= 29",
["name"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( buff.dryad.up || buff.ca_inc.up ) || variable.no_cd_talent || boss & fight_remains < variable.ca_effective_cd & ( buff.harmony_of_the_grove.up || cooldown.convoke_the_spirits.ready ) || ( buff.spymasters_report.stack + variable.ca_effective_cd / 6 ) > 29 & variable.ca_effective_cd > 20 || variable.on_use_trinket = 0",
["description"] = "Generic trinket conditions",
["var_name"] = "generic_trinket_condition",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "! trinket.t1.is.spymasters_web & ! trinket.t1.is.araz_ritual_forge & ! trinket.t1.is.imperfect_ascendancy_serum & ! trinket.t1.is.treacherous_transmitter & ! trinket.t1.is.soulletting_ruby & ( variable.on_use_trinket != 1 & variable.on_use_trinket != 3 & trinket.t2.cooldown.remains > 20 || boss & fight_remains < ( 20 + 20 * ( trinket.t2.has_use & trinket.t2.cooldown.remains < 25 ) ) || variable.generic_trinket_condition )",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! trinket.t2.is.spymasters_web & ! trinket.t2.is.araz_ritual_forge & ! trinket.t2.is.imperfect_ascendancy_serum & ! trinket.t2.is.treacherous_transmitter & ! trinket.t2.is.soulletting_ruby & ( variable.on_use_trinket < 2 & trinket.t1.cooldown.remains > 20 || variable.on_use_trinket = 3 & trinket.t1.cooldown.remains > 20 & ( ! hero_tree.keeper_of_the_grove || buff.harmony_of_the_grove.up || ceil ( ( fight_remains - 15 ) / trinket.t2.cooldown.duration ) > ceil ( ( fight_remains - cooldown.force_of_nature.remains - 15 ) / trinket.t2.cooldown.duration ) ) || boss & fight_remains < ( 20 + 20 * ( trinket.t1.has_use & trinket.t1.cooldown.remains < 25 ) ) || variable.generic_trinket_condition )",
["slot"] = "trinket2",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains <= 30",
["action"] = "potion",
},
{
["enabled"] = true,
["description"] = "Troll racial when using no cd talents",
["criteria"] = "variable.no_cd_talent || boss & fight_remains < 15",
["action"] = "berserking",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run AoE action list when more than 1 target",
["criteria"] = "spell_targets > 1",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "RUN ST action list when just 1 target and no 11.2 Keeper 4pc",
["criteria"] = "! set_bonus.tww3_keeper_of_the_grove_4pc & spell_targets = 1",
["list_name"] = "st",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run ST action list for 11.2 Keeper 4pc",
["criteria"] = "set_bonus.tww3_keeper_of_the_grove_4pc & spell_targets = 1",
["list_name"] = "kotg_st",
},
},
["precombat"] = {
{
["action"] = "mark_of_the_wild",
["enabled"] = true,
},
{
["action"] = "moonkin_form",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.celestial_alignment.enabled & ! talent.incarnation_chosen_of_elune.enabled || druid.no_cds",
["var_name"] = "no_cd_talent",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "on_use_trinket",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "on_use_trinket",
["criteria"] = "trinket.t1.has_use_buff & ! trinket.t1.is.ovinaxs_mercurial_egg & ! trinket.t1.is.spymasters_web",
["value_else"] = "0",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "on_use_trinket",
["criteria"] = "trinket.t2.has_use_buff & ! trinket.t2.is.ovinaxs_mercurial_egg & ! trinket.t2.is.spymasters_web",
["value_else"] = "0",
["value"] = "2",
},
{
["enabled"] = true,
["criteria"] = "hero_tree.keeper_of_the_grove & ! talent.stellar_flare.enabled & action.regrowth.time_since < 10 & active_dot.regrowth = 0",
["action"] = "regrowth",
},
{
["enabled"] = true,
["description"] = "[edited] This handles the wrath opener based on the state of eclipse",
["criteria"] = "eclipse.lunar_in",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "! talent.stellar_flare.enabled & hero_tree.elunes_chosen",
["action"] = "starfire",
},
{
["action"] = "stellar_flare",
["enabled"] = true,
},
},
["aoe"] = {
{
["enabled"] = true,
["description"] = "Spend Dryads Favor on AoE (this is wonky)",
["criteria"] = "buff.dryads_favor.up",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "variable.enter_lunar & eclipse.in_eclipse & eclipse.remains < cast_time",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "! variable.enter_lunar & eclipse.in_eclipse & eclipse.remains < cast_time",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit <= variable.passive_asp + 6",
["action"] = "starfall",
},
{
["enabled"] = true,
["action"] = "moonfire",
["criteria"] = "refreshable & ( target.time_to_die - remains ) > 6 & ( ! talent.treants_of_the_moon.enabled || spell_targets - active_dot.moonfire_dmg > 6 || cooldown.force_of_nature.remains > 3 & ! buff.harmony_of_the_grove.up ) & ! boss",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "sunfire",
["criteria"] = "refreshable & ( target.time_to_die - remains ) > 6 - ( spell_targets / 2 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "moonfire",
["criteria"] = "refreshable & ( target.time_to_die - remains ) > 6 & ( ! talent.treants_of_the_moon.enabled || spell_targets - active_dot.moonfire_dmg > 6 || cooldown.force_of_nature.remains > 3 & ! buff.harmony_of_the_grove.up ) & boss",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.enter_lunar & ( eclipse.in_none || eclipse.remains < cast_time ) & ! variable.pre_cd_condition",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "! variable.enter_lunar & ( eclipse.in_none || eclipse.remains < cast_time )",
["action"] = "starfire",
},
{
["enabled"] = true,
["action"] = "stellar_flare",
["criteria"] = "refreshable & ( target.time_to_die - remains - target.unit > 7 + spell_targets ) & spell_targets < ( 11 - talent.umbral_intensity.rank - ( 2 * talent.astral_smolder.enabled ) - talent.lunar_calling.enabled )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.pre_cd_condition || cooldown.ca_inc.full_recharge_time + 5 + 15 * talent.control_of_the_dream.enabled > action_cooldown & ( ! talent.convoke_the_spirits.enabled || cooldown.convoke_the_spirits.remains + 10 + 15 * talent.control_of_the_dream.enabled > action_cooldown || boss & fight_remains < cooldown.convoke_the_spirits.remains + cooldown.convoke_the_spirits.duration + 5 ) & ( variable.on_use_trinket = 0 || ( variable.on_use_trinket = 1 || variable.on_use_trinket = 3 ) & ( trinket.t1.cooldown.remains > 5 + 15 * talent.control_of_the_dream.enabled || cooldown.ca_inc.remains > 20 || trinket.t1.cooldown.ready ) || variable.on_use_trinket = 2 & ( trinket.t2.cooldown.remains > 5 + 15 * talent.control_of_the_dream.enabled || cooldown.ca_inc.remains > 20 || trinket.t2.cooldown.ready ) ) & ( fight_remains > action_cooldown + 5 || boss & fight_remains < cooldown.ca_inc.remains + 7 ) || talent.whirling_stars.enabled & talent.convoke_the_spirits.enabled & cooldown.convoke_the_spirits.remains > cooldown.force_of_nature.duration - 10 & fight_remains > cooldown.convoke_the_spirits.remains + 6",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "eclipse.in_eclipse",
["action"] = "fury_of_elune",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "pre_cd",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition",
["action"] = "celestial_alignment",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition",
["action"] = "incarnation",
},
{
["enabled"] = true,
["criteria"] = "! talent.lunar_calling.enabled & buff.eclipse_solar.remains < 7 || talent.lunar_calling.enabled & ! buff.dreamstate.up",
["action"] = "warrior_of_elune",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.lunar_calling.enabled & spell_targets.starfire = 1 ) & ( buff.eclipse_solar.up & buff.eclipse_solar.remains < action.starfire.cast_time || eclipse.in_none )",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_warp.up || buff.touch_the_cosmos_starfall.up",
["action"] = "starfall",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_weft.up",
["action"] = "starsurge",
},
{
["action"] = "starfall",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ! buff.dreamstate.up & ! buff.umbral_embrace.up & spell_targets.starfire < 7 || spell_targets.starfire = 1 ) & ( boss & fight_remains < 5 || ( buff.ca_inc.up || cooldown.ca_inc.remains > 40 ) & ( ! hero_tree.keeper_of_the_grove || buff.harmony_of_the_grove.up || cooldown.force_of_nature.remains > 15 ) )",
["action"] = "convoke_the_spirits",
},
{
["action"] = "new_moon",
["enabled"] = true,
},
{
["action"] = "half_moon",
["enabled"] = true,
},
{
["action"] = "full_moon",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! prev_gcd.1.wild_mushroom & ! dot.fungal_growth.ticking",
["action"] = "wild_mushroom",
},
{
["enabled"] = true,
["criteria"] = "! hero_tree.keeper_of_the_grove",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "talent.lunar_calling.enabled || buff.eclipse_lunar.up & spell_targets.starfire > ( 3 - ( talent.umbral_intensity.enabled || talent.soul_of_the_forest.enabled ) )",
["action"] = "starfire",
},
{
["action"] = "wrath",
["enabled"] = true,
},
},
["kotg_pre_cd"] = {
{
["enabled"] = true,
["description"] = "11.2 Keeper pre_cd list to align cooldowns and trinkets",
["criteria"] = "buff.ca_inc.up",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "buff.ca_inc.up || boss & fight_remains < 15",
["action"] = "use_items",
},
{
["enabled"] = true,
["criteria"] = "! buff.ca_inc.up & variable.kotg_ca_condition || cooldown.convoke_the_spirits.remains > cooldown.fury_of_elune.duration",
["action"] = "fury_of_elune",
},
},
["st"] = {
{
["enabled"] = true,
["description"] = "ST",
["criteria"] = "talent.lunar_calling.enabled || ! talent.lunar_calling.enabled & eclipse.remains <= 7",
["action"] = "warrior_of_elune",
},
{
["enabled"] = true,
["criteria"] = "variable.enter_lunar & eclipse.in_eclipse & eclipse.remains < cast_time & ! variable.cd_condition",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "! variable.enter_lunar & eclipse.in_eclipse & eclipse.remains < cast_time & ! variable.cd_condition",
["action"] = "starfire",
},
{
["enabled"] = true,
["action"] = "sunfire",
["criteria"] = "dot.sunfire.remains < 3 || refreshable & ( hero_tree.keeper_of_the_grove & cooldown.force_of_nature.ready || ! hero_tree.keeper_of_the_grove & variable.cd_condition )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "moonfire",
["criteria"] = "refreshable & remains < 3 & ( ! talent.treants_of_the_moon.enabled || cooldown.force_of_nature.remains > 3 & ! buff.harmony_of_the_grove.up )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "pre_cd",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition",
["action"] = "celestial_alignment",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition",
["action"] = "incarnation",
},
{
["enabled"] = true,
["criteria"] = "variable.enter_lunar & ( eclipse.in_none || eclipse.remains < cast_time )",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "! variable.enter_lunar & ( eclipse.in_none || eclipse.remains < cast_time )",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition & astral_power.deficit > variable.passive_asp + action.force_of_nature.energize_amount",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "variable.pre_cd_condition || cooldown.ca_inc.full_recharge_time + 5 + 15 * talent.control_of_the_dream.enabled > action_cooldown & ( ! talent.convoke_the_spirits.enabled || cooldown.convoke_the_spirits.remains + 10 + 15 * talent.control_of_the_dream.enabled > action_cooldown || boss & fight_remains < cooldown.convoke_the_spirits.remains + cooldown.convoke_the_spirits.duration + 5 ) & ( variable.on_use_trinket = 0 || ( variable.on_use_trinket = 1 || variable.on_use_trinket = 3 ) & ( trinket.t1.cooldown.remains > 5 + 15 * talent.control_of_the_dream.enabled || cooldown.ca_inc.remains > 20 || trinket.t1.cooldown.ready ) || variable.on_use_trinket = 2 & ( trinket.t2.cooldown.remains > 5 + 15 * talent.control_of_the_dream.enabled || cooldown.ca_inc.remains > 20 || trinket.t2.cooldown.ready ) ) & ( fight_remains > action_cooldown + 5 || boss & fight_remains < cooldown.ca_inc.remains + 7 ) || talent.whirling_stars.enabled & talent.convoke_the_spirits.enabled & cooldown.convoke_the_spirits.remains > cooldown.force_of_nature.duration - 10 & fight_remains > cooldown.convoke_the_spirits.remains + 6",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "5 + variable.passive_asp < astral_power.deficit",
["action"] = "fury_of_elune",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_warp.up",
["action"] = "starfall",
},
{
["enabled"] = true,
["criteria"] = "talent.starlord.enabled & buff.starlord.stack < 3",
["action"] = "starsurge",
},
{
["enabled"] = true,
["action"] = "sunfire",
["criteria"] = "refreshable",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "moonfire",
["criteria"] = "refreshable & ( ! talent.treants_of_the_moon.enabled || cooldown.force_of_nature.remains > 3 & ! buff.harmony_of_the_grove.up )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "cooldown.convoke_the_spirits.remains < gcd.max * 2 & variable.convoke_condition",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "variable.convoke_condition",
["action"] = "convoke_the_spirits",
},
{
["enabled"] = true,
["criteria"] = "buff.starlord.remains > 4 & variable.boat_stacks >= 3 || fight_remains < 4",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount || boss & fight_remains < 20 || cooldown.ca_inc.remains > 15",
["action"] = "new_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time ) || boss & fight_remains < 20 || cooldown.ca_inc.remains > 15",
["action"] = "half_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time ) || boss & fight_remains < 20 || cooldown.ca_inc.remains > 15",
["action"] = "full_moon",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_weft.up || buff.touch_the_cosmos_starsurge.up",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit < variable.passive_asp + action.wrath.energize_amount + ( action.starfire.energize_amount + variable.passive_asp ) * ( buff.eclipse_solar.remains < ( gcd.max * 3 ) )",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "! hero_tree.keeper_of_the_grove",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "! prev_gcd.1.wild_mushroom & dot.fungal_growth.remains < 2",
["action"] = "wild_mushroom",
},
{
["enabled"] = true,
["criteria"] = "talent.lunar_calling.enabled",
["action"] = "starfire",
},
{
["action"] = "wrath",
["enabled"] = true,
},
},
["pre_cd"] = {
{
["enabled"] = true,
["description"] = "PRE_CD",
["action"] = "spymasters_web",
["criteria"] = "variable.cd_condition & ( buff.spymasters_report.stack > 29 || boss & fight_remains < cooldown.ca_inc.duration )",
["name"] = "spymasters_web",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "! trinket.t1.is.spymasters_web & ! trinket.t1.is.imperfect_ascendancy_serum & ! trinket.t1.is.treacherous_transmitter & ( variable.on_use_trinket = 1 || variable.on_use_trinket = 3 ) & variable.cd_condition",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! trinket.t2.is.spymasters_web & ! trinket.t2.is.imperfect_ascendancy_serum & ! trinket.t2.is.treacherous_transmitter & variable.on_use_trinket = 2 & variable.cd_condition",
["slot"] = "trinket2",
},
},
},
["version"] = 20250829,
["warnings"] = "The import for 'kotg_st' required some automated changes.\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 18: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 18: Converted 'trinket.1.is.arazs_ritual_forge' to 'trinket.t1.is.arazs_ritual_forge' (1x).\nLine 18: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 18: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 18: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 18: Converted 'trinket.2.is.arazs_ritual_forge' to 'trinket.t2.is.arazs_ritual_forge' (1x).\n\nThe import for 'default' required some automated changes.\nLine 4: Converted operations in '6%spell_haste+talent.natures_balance.enabled+((talent.bounteous_bloom.enabled&buff.bounteous_bloom.up)*15)+talent.orbit_breaker.enabled*dot.moonfire.ticking*(buff.orbit_breaker.stack>(27-2*buff.solstice.up))*24' to '6/spell_haste+talent.natures_balance.enabled+((talent.bounteous_bloom.enabled&buff.bounteous_bloom.up)*15)+talent.orbit_breaker.enabled*dot.moonfire.ticking*(buff.orbit_breaker.stack>(27-2*buff.solstice.up))*24'.\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 6: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 6: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 6: Converted operations in '(!talent.whirling_stars.enabled||!talent.convoke_the_spirits.enabled||cooldown.convoke_the_spirits.remains<gcd.max*2||boss&fight_remains<cooldown.convoke_the_spirits.remains+3||cooldown.convoke_the_spirits.remains>cooldown.ca_inc.full_recharge_time+15*talent.control_of_the_dream.enabled)&(variable.on_use_trinket=0||(variable.on_use_trinket=1||variable.on_use_trinket=3)&(trinket.t1.cooldown.remains>cooldown.ca_inc.full_recharge_time+(15*talent.control_of_the_dream.enabled)||!talent.convoke_the_spirits.enabled&hero_tree.elunes_chosen&(trinket.t1.cooldown.duration<=100&trinket.t1.cooldown.remains>cooldown.ca_inc.full_recharge_time-cooldown.ca_inc.duration||trinket.t1.cooldown.duration>=100&cooldown.ca_inc.charges_fractional=1&(trinket.t1.cooldown.duration>?cooldown.ca_inc.full_recharge_time))||talent.convoke_the_spirits.enabled&(cooldown.convoke_the_spirits.remains<3&(ceil((fight_remains-10)%cooldown.convoke_the_spirits.duration)>ceil((fight_remains-trinket.t1.cooldown.remains-10)%cooldown.convoke_the_spirits.duration))||cooldown.convoke_the_spirits.remains>trinket.t1.cooldown.remains&cooldown.ca_inc.full_recharge_time-cooldown.ca_inc.duration<trinket.t1.cooldown.remains+15)||trinket.t1.cooldown.remains+6>fight_remains||trinket.t1.cooldown.ready)||variable.on_use_trinket=2&(trinket.t2.cooldown.remains>cooldown.ca_inc.full_recharge_time+(15*talent.control_of_the_dream.enabled)||!talent.convoke_the_spirits.enabled&hero_tree.elunes_chosen&(trinket.t2.cooldown.duration<=100&trinket.t2.cooldown.remains>cooldown.ca_inc.full_recharge_time-cooldown.ca_inc.duration||trinket.t2.cooldown.duration>=100&cooldown.ca_inc.charges_fractional=1&(trinket.t2.cooldown.duration>?cooldown.ca_inc.full_recharge_time))||talent.convoke_the_spirits.enabled&(cooldown.convoke_the_spirits.remains<3&(ceil((fight_remains-10)%cooldown.convoke_the_spirits.duration)>ceil((fight_remains-trinket.t2.cooldown.remains-10)%cooldown.convoke_the_spirits.duration))||cooldown.convoke_the_spirits.remains>trinket.t2.cooldown.remains&cooldown.ca_inc.full_recharge_time-cooldown.ca_inc.duration<trinket.t2.cooldown.remains+15)||trinket.t2.cooldown.remains+6>fight_remains||trinket.t2.cooldown.ready))&cooldown.ca_inc.remains<gcd.max&!buff.ca_inc.up' to '(!talent.whirling_stars.enabled||!talent.convoke_the_spirits.enabled||cooldown.convoke_the_spirits.remains<gcd.max*2||boss&fight_remains<cooldown.convoke_the_spirits.remains+3||cooldown.convoke_the_spirits.remains>cooldown.ca_inc.full_recharge_time+15*talent.control_of_the_dream.enabled)&(variable.on_use_trinket=0||(variable.on_use_trinket=1||variable.on_use_trinket=3)&(trinket.t1.cooldown.remains>cooldown.ca_inc.full_recharge_time+(15*talent.control_of_the_dream.enabled)||!talent.convoke_the_spirits.enabled&hero_tree.elunes_chosen&(trinket.t1.cooldown.duration<=100&trinket.t1.cooldown.remains>cooldown.ca_inc.full_recharge_time-cooldown.ca_inc.duration||trinket.t1.cooldown.duration>=100&cooldown.ca_inc.charges_fractional=1&(trinket.t1.cooldown.duration>?cooldown.ca_inc.full_recharge_time))||talent.convoke_the_spirits.enabled&(cooldown.convoke_the_spirits.remains<3&(ceil((fight_remains-10)/cooldown.convoke_the_spirits.duration)>ceil((fight_remains-trinket.t1.cooldown.remains-10)/cooldown.convoke_the_spirits.duration))||cooldown.convoke_the_spirits.remains>trinket.t1.cooldown.remains&cooldown.ca_inc.full_recharge_time-cooldown.ca_inc.duration<trinket.t1.cooldown.remains+15)||trinket.t1.cooldown.remains+6>fight_remains||trinket.t1.cooldown.ready)||variable.on_use_trinket=2&(trinket.t2.cooldown.remains>cooldown.ca_inc.full_recharge_time+(15*talent.control_of_the_dream.enabled)||!talent.convoke_the_spirits.enabled&hero_tree.elunes_chosen&(trinket.t2.cooldown.duration<=100&trinket.t2.cooldown.remains>cooldown.ca_inc.full_recharge_time-cooldown.ca_inc.duration||trinket.t2.cooldown.duration>=100&cooldown.ca_inc.charges_fractional=1&(trinket.t2.cooldown.duration>?cooldown.ca_inc.full_recharge_time))||talent.convoke_the_spirits.enabled&(cooldown.convoke_the_spirits.remains<3&(ceil((fight_remains-10)/cooldown.convoke_the_spirits.duration)>ceil((fight_remains-trinket.t2.cooldown.remains-10)/cooldown.convoke_the_spirits.duration))||cooldown.convoke_the_spirits.remains>trinket.t2.cooldown.remains&cooldown.ca_inc.full_recharge_time-cooldown.ca_inc.duration<trinket.t2.cooldown.remains+15)||trinket.t2.cooldown.remains+6>fight_remains||trinket.t2.cooldown.ready))&cooldown.ca_inc.remains<gcd.max&!buff.ca_inc.up'.\nLine 11: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 11: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 11: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 11: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 11: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 11: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 11: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 11: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 11: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 11: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 11: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 11: Converted 'trinket.1.is.arazs_ritual_forge' to 'trinket.t1.is.arazs_ritual_forge' (1x).\nLine 11: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 11: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 11: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 11: Converted 'trinket.2.is.arazs_ritual_forge' to 'trinket.t2.is.arazs_ritual_forge' (1x).\nLine 12: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 12: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 12: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 12: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 12: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 12: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 12: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 12: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 13: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 13: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 13: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 13: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 13: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 13: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 13: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 13: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 13: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 13: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 13: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 13: Converted 'trinket.1.is.arazs_ritual_forge' to 'trinket.t1.is.arazs_ritual_forge' (1x).\nLine 13: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 13: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 13: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 13: Converted 'trinket.2.is.arazs_ritual_forge' to 'trinket.t2.is.arazs_ritual_forge' (1x).\nLine 14: Converted operations in 'buff.dryad.up&((astral_power-action.starsurge.cost)+((0<?(buff.dryad.remains-gcd.max))*(action.wrath.energize_amount%action.wrath.execute_time))+variable.passive_asp)<action.starsurge.cost*2' to 'buff.dryad.up&((astral_power-action.starsurge.cost)+((0<?(buff.dryad.remains-gcd.max))*(action.wrath.energize_amount/action.wrath.execute_time))+variable.passive_asp)<action.starsurge.cost*2'.\nLine 16: Converted operations in '(buff.dryad.up||buff.ca_inc.up)||variable.no_cd_talent||boss&fight_remains<variable.ca_effective_cd&(buff.harmony_of_the_grove.up||cooldown.convoke_the_spirits.ready)||(buff.spymasters_report.stack+variable.ca_effective_cd%6)>29&variable.ca_effective_cd>20||variable.on_use_trinket=0' to '(buff.dryad.up||buff.ca_inc.up)||variable.no_cd_talent||boss&fight_remains<variable.ca_effective_cd&(buff.harmony_of_the_grove.up||cooldown.convoke_the_spirits.ready)||(buff.spymasters_report.stack+variable.ca_effective_cd/6)>29&variable.ca_effective_cd>20||variable.on_use_trinket=0'.\nLine 17: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 17: Converted 'trinket.1.is.araz_ritual_forge' to 'trinket.t1.is.araz_ritual_forge' (1x).\nLine 17: Converted 'trinket.1.is.imperfect_ascendancy_serum' to 'trinket.t1.is.imperfect_ascendancy_serum' (1x).\nLine 17: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 17: Converted 'trinket.1.is.soulletting_ruby' to 'trinket.t1.is.soulletting_ruby' (1x).\nLine 17: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 17: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 17: Converted 'trinket.2.has_use' to 'trinket.t2.has_use' (1x).\nLine 17: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 17: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 18: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 18: Converted 'trinket.2.is.araz_ritual_forge' to 'trinket.t2.is.araz_ritual_forge' (1x).\nLine 18: Converted 'trinket.2.is.imperfect_ascendancy_serum' to 'trinket.t2.is.imperfect_ascendancy_serum' (1x).\nLine 18: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 18: Converted 'trinket.2.is.soulletting_ruby' to 'trinket.t2.is.soulletting_ruby' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 18: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 18: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 18: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 18: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 18: Converted 'trinket.1.has_use' to 'trinket.t1.has_use' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 18: Converted operations in '!trinket.t2.is.spymasters_web&!trinket.t2.is.araz_ritual_forge&!trinket.t2.is.imperfect_ascendancy_serum&!trinket.t2.is.treacherous_transmitter&!trinket.t2.is.soulletting_ruby&(variable.on_use_trinket<2&trinket.t1.cooldown.remains>20||variable.on_use_trinket=3&trinket.t1.cooldown.remains>20&(!hero_tree.keeper_of_the_grove||buff.harmony_of_the_grove.up||ceil((fight_remains-15)%trinket.t2.cooldown.duration)>ceil((fight_remains-cooldown.force_of_nature.remains-15)%trinket.t2.cooldown.duration))||boss&fight_remains<(20+20*(trinket.t1.has_use&trinket.t1.cooldown.remains<25))||variable.generic_trinket_condition)' to '!trinket.t2.is.spymasters_web&!trinket.t2.is.araz_ritual_forge&!trinket.t2.is.imperfect_ascendancy_serum&!trinket.t2.is.treacherous_transmitter&!trinket.t2.is.soulletting_ruby&(variable.on_use_trinket<2&trinket.t1.cooldown.remains>20||variable.on_use_trinket=3&trinket.t1.cooldown.remains>20&(!hero_tree.keeper_of_the_grove||buff.harmony_of_the_grove.up||ceil((fight_remains-15)/trinket.t2.cooldown.duration)>ceil((fight_remains-cooldown.force_of_nature.remains-15)/trinket.t2.cooldown.duration))||boss&fight_remains<(20+20*(trinket.t1.has_use&trinket.t1.cooldown.remains<25))||variable.generic_trinket_condition)'.\n\nThe import for 'precombat' required some automated changes.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.is.ovinaxs_mercurial_egg' to 'trinket.t1.is.ovinaxs_mercurial_egg' (1x).\nLine 5: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.is.ovinaxs_mercurial_egg' to 'trinket.t2.is.ovinaxs_mercurial_egg' (1x).\nLine 6: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 6: Converted operations in 'refreshable&(target.time_to_die-remains)>6-(spell_targets%2)' to 'refreshable&(target.time_to_die-remains)>6-(spell_targets/2)'.\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 11: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 11: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 11: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 11: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 11: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 11: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\n\nThe import for 'st' required some automated changes.\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 12: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 12: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 12: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 12: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\n\nThe import for 'pre_cd' required some automated changes.\nLine 4: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 4: Converted 'trinket.1.is.imperfect_ascendancy_serum' to 'trinket.t1.is.imperfect_ascendancy_serum' (1x).\nLine 4: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 5: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 5: Converted 'trinket.2.is.imperfect_ascendancy_serum' to 'trinket.t2.is.imperfect_ascendancy_serum' (1x).\nLine 5: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\n\nImported 7 action lists.\n",
["spec"] = 102,
["profile"] = "## Upstream: https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/druid_balance.simc\n## SimulationCraft Commit Sync: 4c75fa4\n## Date: 2025-08-27\n\nactions.precombat+=/mark_of_the_wild\nactions.precombat+=/moonkin_form\nactions.precombat+=/variable,name=no_cd_talent,value=!talent.celestial_alignment&!talent.incarnation_chosen_of_elune||druid.no_cds\nactions.precombat+=/variable,name=on_use_trinket,value=0\n## [Syrif] - Edited the below 2 variables to better match SimC's intention\nactions.precombat+=/variable,name=on_use_trinket,op=add,if=trinket.1.has_use_buff&!trinket.1.is.ovinaxs_mercurial_egg&!trinket.1.is.spymasters_web,value=1,value_else=0\nactions.precombat+=/variable,name=on_use_trinket,op=add,if=trinket.2.has_use_buff&!trinket.2.is.ovinaxs_mercurial_egg&!trinket.2.is.spymasters_web,value=2,value_else=0\n## Regrowth to stack for Keeper of the Grove...\nactions.precombat+=/regrowth,if=hero_tree.keeper_of_the_grove&!talent.stellar_flare&action.regrowth.time_since<10&active_dot.regrowth=0\n# [edited] This handles the wrath opener based on the state of eclipse\nactions.precombat+=/wrath,if=eclipse.lunar_in\nactions.precombat+=/starfire,if=!talent.stellar_flare&hero_tree.elunes_chosen\nactions.precombat+=/stellar_flare\n\nactions+=/solar_beam\n# [Edited] Trigger Lunar Eclipse if we failed to precast Wrath x2.\nactions+=/wrath,if=time<2*gcd.max&eclipse.lunar_in_1\n# \"Precombat\" Starfire if we just entered Lunar Eclipse per our opener.\nactions+=/starfire,if=time<3*gcd.max&prev.1.wrath&prev.2.wrath&eclipse.in_lunar\n# VARIABLES\nactions+=/variable,name=passive_asp,value=6%spell_haste+talent.natures_balance+((talent.bounteous_bloom&buff.bounteous_bloom.up)*15)+talent.orbit_breaker*dot.moonfire.ticking*(buff.orbit_breaker.stack>(27-2*buff.solstice.up))*24\n# Variable to map CA's effective CD, not always reliable to reference when using Whirling Stars\nactions+=/variable,name=ca_effective_cd,value=cooldown.ca_inc.remains<?cooldown.force_of_nature.remains\n# Pre_Cd Condition referenced in every CD except for when using 11.2 Keeper Set\nactions+=/variable,name=pre_cd_condition,value=(!talent.whirling_stars||!talent.convoke_the_spirits||cooldown.convoke_the_spirits.remains<gcd.max*2||boss&fight_remains<cooldown.convoke_the_spirits.remains+3||cooldown.convoke_the_spirits.remains>cooldown.ca_inc.full_recharge_time+15*talent.control_of_the_dream)&(variable.on_use_trinket=0||(variable.on_use_trinket=1||variable.on_use_trinket=3)&(trinket.1.cooldown.remains>cooldown.ca_inc.full_recharge_time+(15*talent.control_of_the_dream)||!talent.convoke_the_spirits&hero_tree.elunes_chosen&(trinket.1.cooldown.duration<=100&trinket.1.cooldown.remains>cooldown.ca_inc.full_recharge_time-cooldown.ca_inc.duration||trinket.1.cooldown.duration>=100&cooldown.ca_inc.charges_fractional=1&(trinket.1.cooldown.duration>?cooldown.ca_inc.full_recharge_time))||talent.convoke_the_spirits&(cooldown.convoke_the_spirits.remains<3&(ceil((fight_remains-10)%cooldown.convoke_the_spirits.duration)>ceil((fight_remains-trinket.1.cooldown.remains-10)%cooldown.convoke_the_spirits.duration))||cooldown.convoke_the_spirits.remains>trinket.1.cooldown.remains&cooldown.ca_inc.full_recharge_time-cooldown.ca_inc.duration<trinket.1.cooldown.remains+15)||trinket.1.cooldown.remains+6>fight_remains||trinket.1.cooldown.ready)||variable.on_use_trinket=2&(trinket.2.cooldown.remains>cooldown.ca_inc.full_recharge_time+(15*talent.control_of_the_dream)||!talent.convoke_the_spirits&hero_tree.elunes_chosen&(trinket.2.cooldown.duration<=100&trinket.2.cooldown.remains>cooldown.ca_inc.full_recharge_time-cooldown.ca_inc.duration||trinket.2.cooldown.duration>=100&cooldown.ca_inc.charges_fractional=1&(trinket.2.cooldown.duration>?cooldown.ca_inc.full_recharge_time))||talent.convoke_the_spirits&(cooldown.convoke_the_spirits.remains<3&(ceil((fight_remains-10)%cooldown.convoke_the_spirits.duration)>ceil((fight_remains-trinket.2.cooldown.remains-10)%cooldown.convoke_the_spirits.duration))||cooldown.convoke_the_spirits.remains>trinket.2.cooldown.remains&cooldown.ca_inc.full_recharge_time-cooldown.ca_inc.duration<trinket.2.cooldown.remains+15)||trinket.2.cooldown.remains+6>fight_remains||trinket.2.cooldown.ready))&cooldown.ca_inc.remains<gcd.max&!buff.ca_inc.up\n# CD_condition used for CA/Incarn\nactions+=/variable,name=cd_condition,value=variable.pre_cd_condition&(boss&fight_remains<(15+5*talent.incarnation_chosen_of_elune)*(1-talent.whirling_stars*0.2)||target.time_to_die>10&(!hero_tree.keeper_of_the_grove||buff.harmony_of_the_grove.up))\n# Convoke condition variable\nactions+=/variable,name=convoke_condition,value=boss&fight_remains<5||(buff.ca_inc.up||cooldown.ca_inc.remains>40)&(!hero_tree.keeper_of_the_grove||buff.harmony_of_the_grove.up||cooldown.force_of_nature.remains>15)\n# [Syrif] - Variable replaced with eclipse metatable expression\n## actions+=/variable,name=eclipse_remains,value=buff.eclipse_lunar.remains<?buff.eclipse_solar.remains\n# Variable used to enter Eclipse. Negate variable.enter_lunar to enter Solar Eclipse.\nactions+=/variable,name=enter_lunar,value=talent.lunar_calling||spell_targets.starfire>3-(talent.umbral_intensity.rank||talent.soul_of_the_forest)\n# Variable used for Balance of All Things stacks\nactions+=/variable,name=boat_stacks,value=buff.balance_of_all_things_arcane.stack+buff.balance_of_all_things_nature.stack\n## This APL is worse than original after the changes so no point running it\n## actions+=/variable,name=tww3_keeper_4pc,value=hero_tree.keeper_of_the_grove&set_bonus.tww3_4pc\nactions+=/variable,name=kotg_ca_condition,value=(hero_tree.keeper_of_the_grove&set_bonus.tww3_4pc>0&astral_power.deficit<=50&(variable.on_use_trinket=1&trinket.1.cooldown.ready||variable.on_use_trinket=2&trinket.2.cooldown.ready||variable.on_use_trinket=0||variable.on_use_trinket=3&(trinket.1.cooldown.ready||trinket.2.cooldown.ready))&(cooldown.convoke_the_spirits.remains<gcd.max*4||!talent.convoke_the_spirits)&(cooldown.ca_inc.full_recharge_time<buff.dryad.duration&!(fight_remains<(cooldown.ca_inc.full_recharge_time+cooldown.ca_inc.duration+5>?cooldown.convoke_the_spirits.duration+4*gcd.max+3>?(trinket.1.cooldown.duration+trinket.1.proc.any_dps.duration-20*trinket.1.is.arazs_ritual_forge||trinket.2.cooldown.duration+trinket.2.proc.any_dps.duration-20*trinket.2.is.arazs_ritual_forge))&fight_remains>(cooldown.force_of_nature.duration+cooldown.force_of_nature.remains+buff.harmony_of_the_grove.duration+buff.ca_inc.duration<?cooldown.potion.remains+15))||cooldown.ca_inc.full_recharge_time>30+buff.dryad.duration&fight_remains>(cooldown.convoke_the_spirits.remains+cooldown.convoke_the_spirits.duration-4*gcd.max*talent.control_of_the_dream<?105)+4*gcd.max+5||fight_remains<cooldown.ca_inc.full_recharge_time+buff.ca_inc.duration)&cooldown.force_of_nature.remains<gcd.max*4&!buff.ca_inc.up)||buff.harmony_of_the_grove.up&(buff.dryad.remains<gcd.max&buff.dryad.up||buff.dryads_favor.up)||fight_remains<15\n# Keeper 11.2 Incarn condition\nactions+=/variable,name=kotg_inc_condition,value=hero_tree.keeper_of_the_grove&set_bonus.tww3_4pc>0&astral_power.deficit<=50&(variable.on_use_trinket=1&trinket.1.cooldown.ready||variable.on_use_trinket=2&trinket.2.cooldown.ready||variable.on_use_trinket=0||variable.on_use_trinket=3&(trinket.1.cooldown.ready||trinket.2.cooldown.ready)||(trinket.1.cooldown.remains>cooldown.force_of_nature.duration||trinket.2.cooldown.remains>cooldown.force_of_nature.duration)&cooldown.force_of_nature.remains<gcd.max*2)||fight_remains<(cooldown.ca_inc.full_recharge_time>?cooldown.force_of_nature.remains)\n# Variable to pool Astral Power for CA with 11.2 4pc\nactions+=/variable,name=pool_for_cd,value=astral_power<action.starsurge.cost*3&(variable.on_use_trinket=1&trinket.1.cooldown.ready||variable.on_use_trinket=2&trinket.2.cooldown.ready||variable.on_use_trinket=3&(trinket.1.cooldown.ready||trinket.2.cooldown.ready)||variable.on_use_trinket=0)&(cooldown.convoke_the_spirits.remains<4*gcd.max||!talent.convoke_the_spirits)&(cooldown.ca_inc.full_recharge_time<buff.dryad.duration&!(boss&fight_remains<(cooldown.ca_inc.full_recharge_time+cooldown.ca_inc.duration+5>?cooldown.convoke_the_spirits.duration+4*gcd.max+3>?(trinket.1.cooldown.duration+trinket.1.proc.any_dps.duration-20*trinket.1.is.arazs_ritual_forge||trinket.2.cooldown.duration+trinket.2.proc.any_dps.duration-20*trinket.2.is.arazs_ritual_forge))&fight_remains>(cooldown.force_of_nature.duration+cooldown.force_of_nature.remains+buff.harmony_of_the_grove.duration+buff.ca_inc.duration<?cooldown.potion.remains+15))||cooldown.ca_inc.full_recharge_time>30+buff.dryad.duration&fight_remains>((cooldown.convoke_the_spirits.remains+cooldown.convoke_the_spirits.duration-4*gcd.max*talent.control_of_the_dream)<?105)+4*gcd.max+5||boss&fight_remains<cooldown.ca_inc.full_recharge_time+buff.ca_inc.duration)&cooldown.force_of_nature.remains<4*gcd.max&!buff.ca_inc.up\n# Variable to pool Astral Power for Dryads Favor with 11.2 4pc\nactions+=/variable,name=pool_in_ca,value=buff.dryad.up&((astral_power-action.starsurge.cost)+((0<?(buff.dryad.remains-gcd.max))*(action.wrath.energize_amount%action.wrath.execute_time))+variable.passive_asp)<action.starsurge.cost*2\n# Lines for trinkets that require specific use-cases\nactions+=/use_item,name=imperfect_ascendancy_serum,if=dot.sunfire.remains>4&(dot.moonfire.remains>4||talent.treants_of_the_moon&(cooldown.force_of_nature.remains<3||buff.harmony_of_the_grove.up)&variable.ca_effective_cd<1||boss&fight_remains<20||boss&fight_remains<variable.ca_effective_cd&(buff.harmony_of_the_grove.up||cooldown.convoke_the_spirits.ready))&buff.spymasters_report.stack<=29\n# Generic trinket conditions\nactions+=/variable,name=generic_trinket_condition,value=(buff.dryad.up||buff.ca_inc.up)||variable.no_cd_talent||boss&fight_remains<variable.ca_effective_cd&(buff.harmony_of_the_grove.up||cooldown.convoke_the_spirits.ready)||(buff.spymasters_report.stack+variable.ca_effective_cd%6)>29&variable.ca_effective_cd>20||variable.on_use_trinket=0\nactions+=/use_item,slot=trinket1,if=!trinket.1.is.spymasters_web&!trinket.1.is.araz_ritual_forge&!trinket.1.is.imperfect_ascendancy_serum&!trinket.1.is.treacherous_transmitter&!trinket.1.is.soulletting_ruby&(variable.on_use_trinket!=1&variable.on_use_trinket!=3&trinket.2.cooldown.remains>20||boss&fight_remains<(20+20*(trinket.2.has_use&trinket.2.cooldown.remains<25))||variable.generic_trinket_condition)\nactions+=/use_item,slot=trinket2,if=!trinket.2.is.spymasters_web&!trinket.2.is.araz_ritual_forge&!trinket.2.is.imperfect_ascendancy_serum&!trinket.2.is.treacherous_transmitter&!trinket.2.is.soulletting_ruby&(variable.on_use_trinket<2&trinket.1.cooldown.remains>20||variable.on_use_trinket=3&trinket.1.cooldown.remains>20&(!hero_tree.keeper_of_the_grove||buff.harmony_of_the_grove.up||ceil((fight_remains-15)%trinket.2.cooldown.duration)>ceil((fight_remains-cooldown.force_of_nature.remains-15)%trinket.2.cooldown.duration))||boss&fight_remains<(20+20*(trinket.1.has_use&trinket.1.cooldown.remains<25))||variable.generic_trinket_condition)\nactions+=/use_items\nactions+=/potion,if=boss&fight_remains<=30\n## Line needed to enable sims using Power Infusion\n## actions+=/invoke_external_buff,name=power_infusion,if=variable.cd_condition&!set_bonus.tww3_keeper_of_the_grove_4pc||set_bonus.tww3_keeper_of_the_grove_4pc&variable.kotg_ca_condition\n# Troll racial when using no cd talents\nactions+=/berserking,if=variable.no_cd_talent||boss&fight_remains<15\n# Run AoE action list when more than 1 target\nactions+=/run_action_list,name=aoe,if=spell_targets>1\n# RUN ST action list when just 1 target and no 11.2 Keeper 4pc\nactions+=/run_action_list,name=st,if=!set_bonus.tww3_keeper_of_the_grove_4pc&spell_targets=1\n# Run ST action list for 11.2 Keeper 4pc\nactions+=/run_action_list,name=kotg_st,if=set_bonus.tww3_keeper_of_the_grove_4pc&spell_targets=1\n\n# Spend Dryads Favor on AoE (this is wonky)\nactions.aoe=starsurge,if=buff.dryads_favor.up\nactions.aoe+=/wrath,if=variable.enter_lunar&eclipse.in_eclipse&eclipse.remains<cast_time\nactions.aoe+=/starfire,if=!variable.enter_lunar&eclipse.in_eclipse&eclipse.remains<cast_time\nactions.aoe+=/starfall,if=astral_power.deficit<=variable.passive_asp+6\nactions.aoe+=/moonfire,cycle_targets=1,if=refreshable&(target.time_to_die-remains)>6&(!talent.treants_of_the_moon||spell_targets-active_dot.moonfire_dmg>6||cooldown.force_of_nature.remains>3&!buff.harmony_of_the_grove.up)&!boss\nactions.aoe+=/sunfire,cycle_targets=1,if=refreshable&(target.time_to_die-remains)>6-(spell_targets%2)\nactions.aoe+=/moonfire,cycle_targets=1,if=refreshable&(target.time_to_die-remains)>6&(!talent.treants_of_the_moon||spell_targets-active_dot.moonfire_dmg>6||cooldown.force_of_nature.remains>3&!buff.harmony_of_the_grove.up)&boss\nactions.aoe+=/wrath,if=variable.enter_lunar&(eclipse.in_none||eclipse.remains<cast_time)&!variable.pre_cd_condition\nactions.aoe+=/starfire,if=!variable.enter_lunar&(eclipse.in_none||eclipse.remains<cast_time)\nactions.aoe+=/stellar_flare,cycle_targets=1,if=refreshable&(target.time_to_die-remains-target>7+spell_targets)&spell_targets<(11-talent.umbral_intensity.rank-(2*talent.astral_smolder)-talent.lunar_calling)\nactions.aoe+=/force_of_nature,if=variable.pre_cd_condition||cooldown.ca_inc.full_recharge_time+5+15*talent.control_of_the_dream>cooldown&(!talent.convoke_the_spirits||cooldown.convoke_the_spirits.remains+10+15*talent.control_of_the_dream>cooldown||boss&fight_remains<cooldown.convoke_the_spirits.remains+cooldown.convoke_the_spirits.duration+5)&(variable.on_use_trinket=0||(variable.on_use_trinket=1||variable.on_use_trinket=3)&(trinket.1.cooldown.remains>5+15*talent.control_of_the_dream||cooldown.ca_inc.remains>20||trinket.1.cooldown.ready)||variable.on_use_trinket=2&(trinket.2.cooldown.remains>5+15*talent.control_of_the_dream||cooldown.ca_inc.remains>20||trinket.2.cooldown.ready))&(fight_remains>cooldown+5||boss&fight_remains<cooldown.ca_inc.remains+7)||talent.whirling_stars&talent.convoke_the_spirits&cooldown.convoke_the_spirits.remains>cooldown.force_of_nature.duration-10&fight_remains>cooldown.convoke_the_spirits.remains+6\nactions.aoe+=/fury_of_elune,if=eclipse.in_eclipse\nactions.aoe+=/call_action_list,name=pre_cd\nactions.aoe+=/celestial_alignment,if=variable.cd_condition\nactions.aoe+=/incarnation,if=variable.cd_condition\nactions.aoe+=/warrior_of_elune,if=!talent.lunar_calling&buff.eclipse_solar.remains<7||talent.lunar_calling&!buff.dreamstate.up\nactions.aoe+=/starfire,if=(!talent.lunar_calling&spell_targets.starfire=1)&(buff.eclipse_solar.up&buff.eclipse_solar.remains<action.starfire.cast_time||eclipse.in_none)\nactions.aoe+=/starfall,if=buff.starweavers_warp.up||buff.touch_the_cosmos_starfall.up\nactions.aoe+=/starsurge,if=buff.starweavers_weft.up\nactions.aoe+=/starfall\nactions.aoe+=/convoke_the_spirits,if=(!buff.dreamstate.up&!buff.umbral_embrace.up&spell_targets.starfire<7||spell_targets.starfire=1)&(boss&fight_remains<5||(buff.ca_inc.up||cooldown.ca_inc.remains>40)&(!hero_tree.keeper_of_the_grove||buff.harmony_of_the_grove.up||cooldown.force_of_nature.remains>15))\nactions.aoe+=/new_moon\nactions.aoe+=/half_moon\nactions.aoe+=/full_moon\nactions.aoe+=/wild_mushroom,if=!prev_gcd.1.wild_mushroom&!dot.fungal_growth.ticking\nactions.aoe+=/force_of_nature,if=!hero_tree.keeper_of_the_grove\nactions.aoe+=/starfire,if=talent.lunar_calling||buff.eclipse_lunar.up&spell_targets.starfire>(3-(talent.umbral_intensity||talent.soul_of_the_forest))\nactions.aoe+=/wrath\n\n# 11.2 Keeper pre_cd list to align cooldowns and trinkets\nactions.kotg_pre_cd=potion,if=buff.ca_inc.up\nactions.kotg_pre_cd+=/use_items,if=buff.ca_inc.up||boss&fight_remains<15\nactions.kotg_pre_cd+=/fury_of_elune,if=!buff.ca_inc.up&variable.kotg_ca_condition||cooldown.convoke_the_spirits.remains>cooldown.fury_of_elune.duration\n\n# Make Warrior of Elune work if talented (don't talent this)\nactions.kotg_st=warrior_of_elune,if=eclipse.remains<=7\nactions.kotg_st+=/wait,if=buff.dryad.up&buff.dryad.remains<gcd.max,sec=buff.dryad.remains\n# Wait line to prevent not being able to spend dryads favor before CA runs out\nactions.kotg_st+=/wait,if=!talent.incarnation_chosen_of_elune&buff.dryad.up&buff.ca_inc.remains<(cooldown.ca_inc.remains>?2*gcd.max),sec=buff.dryad.remains\n# Enter Eclipse if variable.enter_lunar is true or false\nactions.kotg_st+=/wrath,if=variable.enter_lunar&eclipse.in_eclipse&eclipse.remains<cast_time||(variable.kotg_ca_condition||variable.kotg_inc_condition)&buff.parting_skies.up&(eclipse.remains<cast_time||eclipse.in_none)\nactions.kotg_st+=/starfire,if=!variable.enter_lunar&eclipse.in_eclipse&eclipse.remains<cast_time&!buff.dryads_favor.up&(!variable.kotg_ca_condition||!variable.kotg_inc_condition)\n# Use dots if less than 3 seconds remaining or if you're about to use CDs\nactions.kotg_st+=/moonfire,if=(remains<3&(!talent.treants_of_the_moon||cooldown.force_of_nature.remains>3&!buff.harmony_of_the_grove.up))||!dot.moonfire.ticking\nactions.kotg_st+=/sunfire,if=remains<3||remains<(12>?buff.ca_inc.duration)&variable.kotg_ca_condition&!buff.ca_inc.up\n# Run kotg_pre_cd list for cooldwns\nactions.kotg_st+=/call_action_list,name=kotg_pre_cd\n# Cooldowns\nactions.kotg_st+=/celestial_alignment,if=variable.kotg_ca_condition\nactions.kotg_st+=/incarnation,if=variable.kotg_inc_condition\n# Starsurge with 4pc buff and CA/Incarn up\nactions.kotg_st+=/starsurge,if=buff.dryads_favor.up&buff.ca_inc.up\n# Enter Lunar from out of Eclipse\nactions.kotg_st+=/wrath,if=variable.enter_lunar&(eclipse.in_none||eclipse.remains<cast_time)\nactions.kotg_st+=/starfire,if=!variable.enter_lunar&(eclipse.in_none||eclipse.remains<cast_time)\n# Use Stellar Flare if you're about to use CDs and the duration is less than the duration of your CDs\nactions.kotg_st+=/stellar_flare,if=remains<=buff.ca_inc.duration&variable.pool_for_cd||remains<=buff.ca_inc.up&!buff.dryads_favor.up\n# Wrath to pool AP before using CDs\nactions.kotg_st+=/wrath,if=variable.pool_for_cd\n# Hard force 2 Starsurge casts at start of Dryad\nactions.kotg_st+=/starsurge,if=buff.dryad.remains>8&buff.dryad.up\nactions.kotg_st+=/force_of_nature,if=buff.dryad.up&buff.harmony_of_the_grove.duration>buff.dryad.remains+gcd.max*2||cooldown.force_of_nature.duration<cooldown.convoke_the_spirits.remains+(15*talent.control_of_the_dream)||boss&fight_remains<20\n# Use Treants if Dryad is up and the duration is less than Treants duration + 2 globals\nactions.kotg_st+=/force_of_nature,if=buff.dryad.up&buff.harmony_of_the_grove.duration>buff.dryad.remains+2||!buff.ca_inc.up&(cooldown.force_of_nature.duration<5+(cooldown.convoke_the_spirits.remains+15*talent.control_of_the_dream<?trinket.1.cooldown.remains+4*gcd.max)&!(boss&fight_remains<cooldown.force_of_nature.duration+0.5*buff.harmony_of_the_grove.duration&fight_remains>(cooldown.ca_inc.remains+buff.ca_inc.duration>?(trinket.1.cooldown.remains+trinket.1.proc.any_dps.duration-20*trinket.1.is.arazs_ritual_forge||trinket.2.cooldown.remains+trinket.2.proc.any_dps.duration-20*trinket.2.is.arazs_ritual_forge)))||boss&fight_remains<cooldown.convoke_the_spirits.duration+cooldown.convoke_the_spirits.remains+2&fight_remains>((cooldown.force_of_nature.duration+buff.harmony_of_the_grove.duration+5)<?(cooldown.ca_inc.full_recharge_time+5)))||boss&fight_remains<buff.harmony_of_the_grove.duration+gcd.max+1\n# Proceed with rotation\nactions.kotg_st+=/fury_of_elune,if=5+variable.passive_asp<astral_power.deficit&(cooldown.convoke_the_spirits.remains>buff.fury_of_elune.duration||!talent.convoke_the_spirits)||boss&fight_remains<8+gcd.max\nactions.kotg_st+=/starfall,if=buff.starweavers_warp.up\nactions.kotg_st+=/starsurge,if=talent.starlord&buff.starlord.stack<3&!variable.pool_in_ca&!(variable.convoke_condition&cooldown.convoke_the_spirits.ready)\nactions.kotg_st+=/sunfire,cycle_targets=1,if=refreshable\nactions.kotg_st+=/moonfire,cycle_targets=1,if=refreshable&(!talent.treants_of_the_moon||cooldown.force_of_nature.remains>3&!buff.harmony_of_the_grove.up)\nactions.kotg_st+=/starsurge,if=cooldown.convoke_the_spirits.remains<gcd.max*2&variable.convoke_condition&astral_power>action.starsurge.cost&buff.dryad.remains>4+gcd.max&buff.dryad.up&fight_remains>5\n# Convoke when Convoke variable is true and Harmony of the Grove is up\nactions.kotg_st+=/convoke_the_spirits,if=variable.convoke_condition&buff.harmony_of_the_grove.up\nactions.kotg_st+=/stellar_flare,cycle_targets=1,if=refreshable&(target.time_to_die-remains-target>7+spell_targets)&!buff.ca_inc.up\nactions.kotg_st+=/starsurge,if=(buff.starlord.remains>4&variable.boat_stacks>=7||fight_remains<4)&!variable.pool_in_ca\nactions.kotg_st+=/new_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&((buff.harmony_of_the_grove.up&!buff.ca_inc.up||buff.ca_inc.up&!cooldown.ca_inc.ready)||cooldown.new_moon.full_recharge_time<cooldown.convoke_the_spirits.remains)||boss&fight_remains<20\nactions.kotg_st+=/half_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&((buff.harmony_of_the_grove.up&!buff.ca_inc.up||buff.ca_inc.up&!cooldown.ca_inc.ready)||cooldown.new_moon.full_recharge_time<cooldown.convoke_the_spirits.remains)||boss&fight_remains<20\nactions.kotg_st+=/full_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&((buff.harmony_of_the_grove.up&!buff.ca_inc.up||buff.ca_inc.up&!cooldown.ca_inc.ready)||cooldown.new_moon.full_recharge_time<cooldown.convoke_the_spirits.remains)||boss&fight_remains<20\nactions.kotg_st+=/starsurge,if=buff.starweavers_weft.up||buff.touch_the_cosmos.up\nactions.kotg_st+=/starsurge,if=(astral_power.deficit<variable.passive_asp+action.wrath.energize_amount+(action.starfire.energize_amount+variable.passive_asp)*(buff.eclipse_solar.remains<(gcd.max*2)))&!variable.pool_in_ca\nactions.kotg_st+=/wild_mushroom,if=!prev_gcd.1.wild_mushroom&dot.fungal_growth.remains<2\nactions.kotg_st+=/wrath\n\n# PRE_CD\nactions.pre_cd+=/use_item,name=spymasters_web,if=variable.cd_condition&(buff.spymasters_report.stack>29||boss&fight_remains<cooldown.ca_inc.duration)\n## actions.pre_cd+=/do_treacherous_transmitter_task,if=variable.cd_condition||buff.harmony_of_the_grove.up&(buff.spymasters_report.stack>29||!trinket.1.is.spymasters_web||!trinket.2.is.spymasters_web)\nactions.pre_cd+=/berserking,if=variable.cd_condition\nactions.pre_cd+=/potion,if=variable.cd_condition\nactions.pre_cd+=/use_item,slot=trinket1,if=!trinket.1.is.spymasters_web&!trinket.1.is.imperfect_ascendancy_serum&!trinket.1.is.treacherous_transmitter&(variable.on_use_trinket=1||variable.on_use_trinket=3)&variable.cd_condition\nactions.pre_cd+=/use_item,slot=trinket2,if=!trinket.2.is.spymasters_web&!trinket.2.is.imperfect_ascendancy_serum&!trinket.2.is.treacherous_transmitter&variable.on_use_trinket=2&variable.cd_condition\n\n# ST\nactions.st+=/warrior_of_elune,if=talent.lunar_calling||!talent.lunar_calling&eclipse.remains<=7\nactions.st+=/wrath,if=variable.enter_lunar&eclipse.in_eclipse&eclipse.remains<cast_time&!variable.cd_condition\nactions.st+=/starfire,if=!variable.enter_lunar&eclipse.in_eclipse&eclipse.remains<cast_time&!variable.cd_condition\nactions.st+=/sunfire,cycle_targets=1,if=dot.sunfire.remains<3||refreshable&(hero_tree.keeper_of_the_grove&cooldown.force_of_nature.ready||!hero_tree.keeper_of_the_grove&variable.cd_condition)\nactions.st+=/moonfire,cycle_targets=1,if=refreshable&remains<3&(!talent.treants_of_the_moon||cooldown.force_of_nature.remains>3&!buff.harmony_of_the_grove.up)\nactions.st+=/call_action_list,name=pre_cd\nactions.st+=/celestial_alignment,if=variable.cd_condition\nactions.st+=/incarnation,if=variable.cd_condition\nactions.st+=/wrath,if=variable.enter_lunar&(eclipse.in_none||eclipse.remains<cast_time)\nactions.st+=/starfire,if=!variable.enter_lunar&(eclipse.in_none||eclipse.remains<cast_time)\nactions.st+=/starsurge,if=variable.cd_condition&astral_power.deficit>variable.passive_asp+action.force_of_nature.energize_amount\nactions.st+=/force_of_nature,if=variable.pre_cd_condition||cooldown.ca_inc.full_recharge_time+5+15*talent.control_of_the_dream>cooldown&(!talent.convoke_the_spirits||cooldown.convoke_the_spirits.remains+10+15*talent.control_of_the_dream>cooldown||boss&fight_remains<cooldown.convoke_the_spirits.remains+cooldown.convoke_the_spirits.duration+5)&(variable.on_use_trinket=0||(variable.on_use_trinket=1||variable.on_use_trinket=3)&(trinket.1.cooldown.remains>5+15*talent.control_of_the_dream||cooldown.ca_inc.remains>20||trinket.1.cooldown.ready)||variable.on_use_trinket=2&(trinket.2.cooldown.remains>5+15*talent.control_of_the_dream||cooldown.ca_inc.remains>20||trinket.2.cooldown.ready))&(fight_remains>cooldown+5||boss&fight_remains<cooldown.ca_inc.remains+7)||talent.whirling_stars&talent.convoke_the_spirits&cooldown.convoke_the_spirits.remains>cooldown.force_of_nature.duration-10&fight_remains>cooldown.convoke_the_spirits.remains+6\nactions.st+=/fury_of_elune,if=5+variable.passive_asp<astral_power.deficit\nactions.st+=/starfall,if=buff.starweavers_warp.up\nactions.st+=/starsurge,if=talent.starlord&buff.starlord.stack<3\nactions.st+=/sunfire,cycle_targets=1,if=refreshable\nactions.st+=/moonfire,cycle_targets=1,if=refreshable&(!talent.treants_of_the_moon||cooldown.force_of_nature.remains>3&!buff.harmony_of_the_grove.up)\nactions.st+=/starsurge,if=cooldown.convoke_the_spirits.remains<gcd.max*2&variable.convoke_condition\nactions.st+=/convoke_the_spirits,if=variable.convoke_condition\nactions.st+=/starsurge,if=buff.starlord.remains>4&variable.boat_stacks>=3||fight_remains<4\nactions.st+=/new_moon,if=astral_power.deficit>variable.passive_asp+energize_amount||boss&fight_remains<20||cooldown.ca_inc.remains>15\nactions.st+=/half_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)||boss&fight_remains<20||cooldown.ca_inc.remains>15\nactions.st+=/full_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)||boss&fight_remains<20||cooldown.ca_inc.remains>15\nactions.st+=/starsurge,if=buff.starweavers_weft.up||buff.touch_the_cosmos_starsurge.up\nactions.st+=/starsurge,if=astral_power.deficit<variable.passive_asp+action.wrath.energize_amount+(action.starfire.energize_amount+variable.passive_asp)*(buff.eclipse_solar.remains<(gcd.max*3))\nactions.st+=/force_of_nature,if=!hero_tree.keeper_of_the_grove\nactions.st+=/wild_mushroom,if=!prev_gcd.1.wild_mushroom&dot.fungal_growth.remains<2\nactions.st+=/starfire,if=talent.lunar_calling\nactions.st+=/wrath",
},
["Arms"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/warrior_arms.simc",
["builtIn"] = true,
["date"] = 20250905,
["author"] = "SimulationCraft",
["desc"] = "-- The War Within Season 3\n2025-09-05: Fix storm bolt during bladestorm\n2025-08-17: APL Sync, flatten trinkets and variables\n2025-08-06: Initial APL\n\n-- The War Within Season 2\n2025-03-08: TWW Season 2 update\n2025-02-26: Sync with SimC",
["lists"] = {
["slayer_st"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= 5 || debuff.colossus_smash.up",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up || buff.avatar.up",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max",
["action"] = "ravager",
},
{
["enabled"] = true,
["criteria"] = "cooldown.avatar.remains > 10 & ( variable.trinket_1_buffs || variable.trinket_2_buffs ) || ( ! variable.trinket_1_buffs & ! variable.trinket_2_buffs )",
["action"] = "colossus_smash",
},
{
["enabled"] = true,
["criteria"] = "cooldown.avatar.remains > 10 & ( variable.trinket_1_buffs || variable.trinket_2_buffs ) || ( ! variable.trinket_1_buffs & ! variable.trinket_2_buffs )",
["action"] = "warbreaker",
},
{
["enabled"] = true,
["criteria"] = "debuff.executioners_precision.stack = 2",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.juggernaut.remains <= gcd.max * 4 & talent.juggernaut.enabled || buff.sudden_death.stack = 2 || buff.sudden_death.remains <= gcd.max * 3 || debuff.marked_for_execution.stack = 3",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.opportunist.up",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.colossus_smash.remains >= gcd.max * 4 || cooldown.warbreaker.remains >= gcd.max * 4 ) || debuff.colossus_smash.remains >= gcd.max * 4",
["action"] = "bladestorm",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 8",
["action"] = "rend",
},
{
["action"] = "wrecking_throw",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.juggernaut.enabled",
["action"] = "execute",
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "storm_bolt",
["criteria"] = "buff.bladestorm.up",
},
},
["colossus_st"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max & ( cooldown.avatar.remains > 14 || cooldown.avatar.remains < 2 )",
["action"] = "ravager",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "cooldown.avatar.remains > 14",
["action"] = "colossus_smash",
},
{
["enabled"] = true,
["criteria"] = "cooldown.avatar.remains > 14",
["action"] = "warbreaker",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up & buff.colossal_might.up",
["action"] = "demolish",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "wrecking_throw",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max * 5",
["action"] = "rend",
},
{
["action"] = "slam",
["enabled"] = true,
},
},
["colossus_aoe"] = {
{
["enabled"] = true,
["criteria"] = "! dot.deep_wounds.remains",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "! dot.rend.remains",
["action"] = "thunder_clap",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.avatar.remains > 14",
["action"] = "warbreaker",
},
{
["enabled"] = true,
["criteria"] = "cooldown.avatar.remains > 14",
["action"] = "colossus_smash",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.colossal_might.stack = 10 & ( debuff.colossus_smash.remains >= 2 || cooldown.colossus_smash.remains >= 10 || cooldown.warbreaker.remains >= 10 )",
["action"] = "demolish",
},
{
["action"] = "cleave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.unhinged.enabled || talent.merciless_bonegrinder.enabled",
["action"] = "bladestorm",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains < 5",
["action"] = "thunder_clap",
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["action"] = "wrecking_throw",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
},
["slayer_aoe"] = {
{
["enabled"] = true,
["criteria"] = "! dot.rend.remains & talent.rend.enabled",
["action"] = "thunder_clap",
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max || cooldown.warbreaker.remains <= gcd.max",
["action"] = "ravager",
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "cleave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.juggernaut.remains < 3 & talent.juggernaut.enabled || debuff.marked_for_execution.stack = 3",
["action"] = "execute",
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "buff.opportunist.up & talent.dreadnaught.enabled",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "debuff.executioners_precision.stack = 2",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains < 8 & talent.rend.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "talent.dreadnaught.enabled",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "whirlwind",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains",
["action"] = "thunder_clap",
},
{
["action"] = "wrecking_throw",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "storm_bolt",
["criteria"] = "buff.bladestorm.up",
},
},
["colossus_execute"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies = 2",
["action"] = "sweeping_strikes",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & ! talent.bloodletting.enabled",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max & ( cooldown.avatar.remains > 14 || cooldown.avatar.remains < 2 )",
["action"] = "ravager",
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.avatar.remains > 14",
["action"] = "warbreaker",
},
{
["enabled"] = true,
["criteria"] = "buff.juggernaut.remains <= gcd.max & talent.juggernaut.enabled",
["action"] = "execute",
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up & buff.colossal_might.stack = 10",
["action"] = "demolish",
},
{
["enabled"] = true,
["criteria"] = "debuff.executioners_precision.stack = 2 || ! talent.executioners_precision.enabled || talent.battlelord.enabled",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "rage < 90",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "rage >= 40 & talent.executioners_precision.enabled",
["action"] = "execute",
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["action"] = "wrecking_throw",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
},
["slayer_execute"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies = 2",
["action"] = "sweeping_strikes",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & ! talent.bloodletting.enabled",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= 5 || debuff.colossus_smash.up",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up || buff.avatar.up",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max",
["action"] = "ravager",
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.juggernaut.remains <= gcd.max * 2 & talent.juggernaut.enabled",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "( debuff.executioners_precision.stack = 2 & ( debuff.colossus_smash.remains > 4 || cooldown.colossus_smash.remains > 15 ) ) || ! talent.executioners_precision.enabled",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "rage <= 40",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "buff.overpower.stack < 2 & buff.opportunist.up & talent.opportunist.enabled & ( talent.bladestorm.enabled || talent.ravager.enabled & rage < 80 )",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains < 2 || debuff.executioners_precision.stack = 2 & ! buff.ravager.up",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "rage <= 40 & buff.overpower.stack < 2 & talent.fierce_followthrough.enabled",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "rage >= 40",
["action"] = "execute",
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "wrecking_throw",
["enabled"] = true,
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "storm_bolt",
["criteria"] = "buff.bladestorm.up",
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "time <= 0.5 || movement.distance > 8",
["action"] = "charge",
},
{
["enabled"] = true,
["criteria"] = "gcd.remains = 0 & debuff.colossus_smash.remains > 8 || boss & fight_remains < 25",
["action"] = "potion",
},
{
["action"] = "pummel",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1 & ( raid_event.adds.in > 15 || ! raid_event.adds.exists )",
["var_name"] = "st_planning",
["description"] = "Variables",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 5 )",
["var_name"] = "adds_remain",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.massacre.enabled & target.health.pct < 35 ) || target.health.pct < 20",
["var_name"] = "execute_phase",
},
{
["enabled"] = true,
["criteria"] = "cooldown.avatar.remains < 2",
["name"] = "cursed_stone_idol",
["action"] = "cursed_stone_idol",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.",
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! buff.avatar.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.proc.any_dps.duration >= fight_remains",
},
{
["enabled"] = true,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! buff.avatar.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.proc.any_dps.duration >= fight_remains",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
["criteria"] = "! variable.trinket_1_buffs & ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_2_buffs & ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "! equipped.fyralath_the_dreamrender & ! equipped.bestinslots & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
["action"] = "main_hand",
["slot"] = "main_hand",
},
{
["enabled"] = true,
["criteria"] = "cooldown.avatar.remains > 20 || ( buff.avatar.up & ( ! trinket.t1.has_cooldown & ! trinket.t2.has_cooldown ) )",
["name"] = "bestinslots",
["action"] = "bestinslots",
},
{
["enabled"] = true,
["criteria"] = "cooldown.mortal_strike.remains > 1.5 & rage < 50",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.down & cooldown.mortal_strike.remains",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.down & cooldown.mortal_strike.remains",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 180 & buff.avatar.up || boss & target.time_to_die < 180 & variable.execute_phase & buff.avatar.up || boss & fight_remains < 20",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.demolish.enabled & active_enemies > 2",
["list_name"] = "colossus_aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["cycle_targets"] = 1,
["strict"] = 1,
["criteria"] = "talent.demolish.enabled & variable.execute_phase",
["list_name"] = "colossus_execute",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.demolish.enabled & active_enemies = 2 & ! variable.execute_phase",
["list_name"] = "colossus_sweep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.demolish.enabled",
["list_name"] = "colossus_st",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled & active_enemies > 2",
["list_name"] = "slayer_aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["cycle_targets"] = 1,
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled & variable.execute_phase",
["list_name"] = "slayer_execute",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled & active_enemies = 2 & ! variable.execute_phase",
["list_name"] = "slayer_sweep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled",
["list_name"] = "slayer_st",
},
},
["precombat"] = {
{
["action"] = "battle_shout",
["enabled"] = true,
},
{
["toggle"] = "on",
["action"] = "battle_stance",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.treacherous_transmitter",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.treacherous_transmitter",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by avatar. If it's value has no remainder return 1, else return 0.5.",
["value"] = "1",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["criteria"] = "trinket.t1.has_use_buff & ( trinket.t1.cooldown.duration % cooldown.avatar.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration % cooldown.avatar.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_stat.any_dps & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_stat.any_dps & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.proc.any_dps.duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.proc.any_dps.duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
},
["slayer_sweep"] = {
{
["enabled"] = true,
["criteria"] = "! dot.rend.remains & ! buff.sweeping_strikes.up",
["action"] = "thunder_clap",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max",
["action"] = "rend",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "colossus_smash",
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "buff.juggernaut.remains <= gcd.max * 2 || debuff.marked_for_execution.stack > 3 || buff.sudden_death.stack = 2 || buff.sudden_death.remains <= gcd.max * 3",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.colossus_smash.remains >= gcd.max * 4 || cooldown.warbreaker.remains >= gcd.max * 4 ) || debuff.colossus_smash.remains >= gcd.max * 4",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "buff.opportunist.up",
["action"] = "overpower",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 8 & buff.sweeping_strikes.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 5",
["action"] = "rend",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled & ! buff.overpower.up",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "! talent.juggernaut.enabled",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "! buff.sweeping_strikes.up",
["action"] = "wrecking_throw",
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "storm_bolt",
["criteria"] = "buff.bladestorm.up",
},
},
["colossus_sweep"] = {
{
["enabled"] = true,
["criteria"] = "! dot.rend.remains & ! buff.sweeping_strikes.up",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & buff.sweeping_strikes.up",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.ready",
["action"] = "ravager",
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "demolish",
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 8 & buff.sweeping_strikes.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "! buff.sweeping_strikes.up",
["action"] = "wrecking_throw",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 5",
["action"] = "rend",
},
{
["action"] = "slam",
["enabled"] = true,
},
},
},
["version"] = 20250905,
["warnings"] = "The import for 'default' required some automated changes.\nLine 8: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 8: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 8: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 9: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 9: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 10: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 10: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 10: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 11: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 11: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 11: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 11: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 13: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 13: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 4: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted operations in 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%%cooldown.avatar.duration=0)' to 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%cooldown.avatar.duration=0)'.\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted operations in 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%%cooldown.avatar.duration=0)' to 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%cooldown.avatar.duration=0)'.\nLine 7: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 8: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 9: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.proc.any_dps.duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.proc.any_dps.duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.proc.any_dps.duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.proc.any_dps.duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 10: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 11: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\n\nImported 10 action lists.\n",
["profile"] = "## Upstream: https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/warrior_arms.simc\n## SimulationCraft Commit Sync: a54c75c\n## Date: 2025-08-17\n\nactions.precombat+=/battle_shout\nactions.precombat+=/battle_stance,toggle=on\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.treacherous_transmitter\n# Evaluates a trinkets cooldown, divided by avatar. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(trinket.1.cooldown.duration%%cooldown.avatar.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(trinket.2.cooldown.duration%%cooldown.avatar.duration=0)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_stat.any_dps&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_stat.any_dps&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\n\nactions+=/charge,if=time<=0.5||movement.distance>8\nactions+=/potion,if=gcd.remains=0&debuff.colossus_smash.remains>8||boss&fight_remains<25\n## [Syrif] - Redundant interrupt if casting removed (handled in class file)\nactions+=/pummel\n## [Syrif] - This variable sub-list has been \"flattened\" to the default action list.\n## actions+=/call_action_list,name=variables\n# Variables\nactions+=/variable,name=st_planning,value=active_enemies=1&(raid_event.adds.in>15||!raid_event.adds.exists)\nactions+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>5)\nactions+=/variable,name=execute_phase,value=(talent.massacre.enabled&target.health.pct<35)||target.health.pct<20\n## Trinkets\n## [Syrif] - This trinket sub-list has been \"flattened\" to the default action list.\n## actions+=/call_action_list,name=trinkets\n## actions+=/do_treacherous_transmitter_task\nactions+=/use_item,name=cursed_stone_idol,if=cooldown.avatar.remains<2\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.\nactions+=/use_item,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!buff.avatar.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&buff.avatar.up&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains\nactions+=/use_item,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!buff.avatar.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&buff.avatar.up&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions+=/use_item,slot=main_hand,if=!equipped.fyralath_the_dreamrender&!equipped.bestinslots&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\nactions+=/use_item,name=bestinslots,if=cooldown.avatar.remains>20||(buff.avatar.up&(!trinket.1.has_cooldown&!trinket.2.has_cooldown))\nactions+=/arcane_torrent,if=cooldown.mortal_strike.remains>1.5&rage<50\nactions+=/lights_judgment,if=debuff.colossus_smash.down&cooldown.mortal_strike.remains\nactions+=/bag_of_tricks,if=debuff.colossus_smash.down&cooldown.mortal_strike.remains\nactions+=/berserking,if=fight_remains>180&buff.avatar.up||boss&target.time_to_die<180&variable.execute_phase&buff.avatar.up||boss&fight_remains<20\nactions+=/blood_fury,if=debuff.colossus_smash.up\nactions+=/fireblood,if=debuff.colossus_smash.up\nactions+=/ancestral_call,if=debuff.colossus_smash.up\n## actions+=/invoke_external_buff,name=power_infusion,if=debuff.colossus_smash.up&fight_remains>=135||variable.execute_phase&buff.avatar.up||fight_remains<=25\nactions+=/run_action_list,name=colossus_aoe,strict=1,if=talent.demolish&active_enemies>2\nactions+=/run_action_list,name=colossus_execute,cycle_targets=1,strict=1,if=talent.demolish&variable.execute_phase\nactions+=/run_action_list,name=colossus_sweep,strict=1,if=talent.demolish&active_enemies=2&!variable.execute_phase\nactions+=/run_action_list,name=colossus_st,strict=1,if=talent.demolish\nactions+=/run_action_list,name=slayer_aoe,strict=1,if=!talent.demolish&active_enemies>2\nactions+=/run_action_list,name=slayer_execute,cycle_targets=1,strict=1,if=!talent.demolish&variable.execute_phase\nactions+=/run_action_list,name=slayer_sweep,strict=1,if=!talent.demolish&active_enemies=2&!variable.execute_phase\nactions+=/run_action_list,name=slayer_st,strict=1,if=!talent.demolish\n\nactions.colossus_aoe+=/cleave,if=!dot.deep_wounds.remains\nactions.colossus_aoe+=/thunder_clap,if=!dot.rend.remains\nactions.colossus_aoe+=/thunderous_roar\nactions.colossus_aoe+=/sweeping_strikes\nactions.colossus_aoe+=/warbreaker,if=cooldown.avatar.remains>14\nactions.colossus_aoe+=/colossus_smash,if=cooldown.avatar.remains>14\nactions.colossus_aoe+=/champions_spear\nactions.colossus_aoe+=/ravager\nactions.colossus_aoe+=/avatar\nactions.colossus_aoe+=/demolish,if=buff.colossal_might.stack=10&(debuff.colossus_smash.remains>=2||cooldown.colossus_smash.remains>=10||cooldown.warbreaker.remains>=10)\nactions.colossus_aoe+=/cleave\nactions.colossus_aoe+=/bladestorm,if=talent.unhinged||talent.merciless_bonegrinder\nactions.colossus_aoe+=/mortal_strike\nactions.colossus_aoe+=/skullsplitter\nactions.colossus_aoe+=/thunder_clap,if=dot.rend.remains<5\nactions.colossus_aoe+=/overpower\nactions.colossus_aoe+=/thunder_clap\nactions.colossus_aoe+=/execute\nactions.colossus_aoe+=/bladestorm\nactions.colossus_aoe+=/wrecking_throw\nactions.colossus_aoe+=/whirlwind\n\nactions.colossus_execute+=/sweeping_strikes,if=active_enemies=2\nactions.colossus_execute+=/rend,if=dot.rend.remains<=gcd&!talent.bloodletting\nactions.colossus_execute+=/thunderous_roar\nactions.colossus_execute+=/champions_spear\nactions.colossus_execute+=/ravager,if=cooldown.colossus_smash.remains<=gcd&(cooldown.avatar.remains>14||cooldown.avatar.remains<2)\nactions.colossus_execute+=/avatar\nactions.colossus_execute+=/colossus_smash\nactions.colossus_execute+=/warbreaker,if=cooldown.avatar.remains>14\nactions.colossus_execute+=/execute,if=buff.juggernaut.remains<=gcd&talent.juggernaut\nactions.colossus_execute+=/skullsplitter\nactions.colossus_execute+=/demolish,if=debuff.colossus_smash.up&buff.colossal_might.stack=10\nactions.colossus_execute+=/mortal_strike,if=debuff.executioners_precision.stack=2||!talent.executioners_precision||talent.battlelord\nactions.colossus_execute+=/overpower,if=rage<90\nactions.colossus_execute+=/execute,if=rage>=40&talent.executioners_precision\nactions.colossus_execute+=/overpower\nactions.colossus_execute+=/bladestorm\nactions.colossus_execute+=/wrecking_throw\nactions.colossus_execute+=/execute\n\nactions.colossus_st+=/rend,if=dot.rend.remains<=gcd\nactions.colossus_st+=/thunderous_roar\nactions.colossus_st+=/ravager,if=cooldown.colossus_smash.remains<=gcd&(cooldown.avatar.remains>14||cooldown.avatar.remains<2)\nactions.colossus_st+=/avatar,if=raid_event.adds.in>15\nactions.colossus_st+=/colossus_smash,if=cooldown.avatar.remains>14\nactions.colossus_st+=/warbreaker,if=cooldown.avatar.remains>14\nactions.colossus_st+=/champions_spear\nactions.colossus_st+=/demolish,if=debuff.colossus_smash.up&buff.colossal_might.up\nactions.colossus_st+=/mortal_strike\nactions.colossus_st+=/skullsplitter\nactions.colossus_st+=/overpower\nactions.colossus_st+=/execute\nactions.colossus_st+=/wrecking_throw\nactions.colossus_st+=/rend,if=dot.rend.remains<=gcd*5\nactions.colossus_st+=/slam\n\nactions.colossus_sweep+=/thunder_clap,if=!dot.rend.remains&!buff.sweeping_strikes.up\nactions.colossus_sweep+=/rend,if=dot.rend.remains<=gcd&buff.sweeping_strikes.up\nactions.colossus_sweep+=/thunderous_roar\nactions.colossus_sweep+=/sweeping_strikes\nactions.colossus_sweep+=/champions_spear\nactions.colossus_sweep+=/ravager,if=cooldown.colossus_smash.ready\nactions.colossus_sweep+=/avatar\nactions.colossus_sweep+=/colossus_smash\nactions.colossus_sweep+=/warbreaker\nactions.colossus_sweep+=/mortal_strike\nactions.colossus_sweep+=/demolish,if=debuff.colossus_smash.up\nactions.colossus_sweep+=/overpower\nactions.colossus_sweep+=/execute\nactions.colossus_sweep+=/whirlwind,if=talent.fervor_of_battle\nactions.colossus_sweep+=/cleave,if=talent.fervor_of_battle\nactions.colossus_sweep+=/thunder_clap,if=dot.rend.remains<=8&buff.sweeping_strikes.down\nactions.colossus_sweep+=/wrecking_throw,if=!buff.sweeping_strikes.up\nactions.colossus_sweep+=/rend,if=dot.rend.remains<=5\nactions.colossus_sweep+=/slam\n\nactions.slayer_aoe+=/thunder_clap,if=!dot.rend.remains&talent.rend\nactions.slayer_aoe+=/sweeping_strikes\nactions.slayer_aoe+=/thunderous_roar\nactions.slayer_aoe+=/avatar\nactions.slayer_aoe+=/champions_spear\nactions.slayer_aoe+=/ravager,if=cooldown.colossus_smash.remains<=gcd||cooldown.warbreaker.remains<=gcd\nactions.slayer_aoe+=/warbreaker\nactions.slayer_aoe+=/colossus_smash\nactions.slayer_aoe+=/cleave\nactions.slayer_aoe+=/execute,if=buff.juggernaut.remains<3&talent.juggernaut||debuff.marked_for_execution.stack=3\nactions.slayer_aoe+=/bladestorm\nactions.slayer_aoe+=/skullsplitter,if=buff.sweeping_strikes.up\nactions.slayer_aoe+=/overpower,if=buff.opportunist.up&talent.dreadnaught\nactions.slayer_aoe+=/mortal_strike,if=debuff.executioners_precision.stack=2\nactions.slayer_aoe+=/execute,if=buff.sudden_death.up\nactions.slayer_aoe+=/thunder_clap,if=dot.rend.remains<8&talent.rend\nactions.slayer_aoe+=/overpower,if=talent.dreadnaught\nactions.slayer_aoe+=/whirlwind,if=talent.fervor_of_battle\nactions.slayer_aoe+=/mortal_strike\nactions.slayer_aoe+=/overpower\nactions.slayer_aoe+=/execute\nactions.slayer_aoe+=/thunder_clap,if=dot.rend.remains\nactions.slayer_aoe+=/wrecking_throw\nactions.slayer_aoe+=/whirlwind\nactions.slayer_aoe+=/skullsplitter\nactions.slayer_aoe+=/slam\nactions.slayer_aoe+=/storm_bolt,if=buff.bladestorm.up,use_off_gcd=1\n\nactions.slayer_execute+=/sweeping_strikes,if=active_enemies=2\nactions.slayer_execute+=/rend,if=dot.rend.remains<=gcd&!talent.bloodletting\nactions.slayer_execute+=/thunderous_roar\nactions.slayer_execute+=/avatar,if=cooldown.colossus_smash.remains<=5||debuff.colossus_smash.up\nactions.slayer_execute+=/champions_spear,if=debuff.colossus_smash.up||buff.avatar.up\nactions.slayer_execute+=/ravager,if=cooldown.colossus_smash.remains<=gcd\nactions.slayer_execute+=/warbreaker\nactions.slayer_execute+=/colossus_smash\nactions.slayer_execute+=/execute,if=buff.juggernaut.remains<=gcd*2&talent.juggernaut\nactions.slayer_execute+=/bladestorm,if=(debuff.executioners_precision.stack=2&(debuff.colossus_smash.remains>4||cooldown.colossus_smash.remains>15))||!talent.executioners_precision\nactions.slayer_execute+=/skullsplitter,if=rage<=40\nactions.slayer_execute+=/overpower,if=buff.overpower.stack<2&buff.opportunist.up&talent.opportunist&(talent.bladestorm||talent.ravager&rage<80)\nactions.slayer_execute+=/mortal_strike,if=dot.rend.remains<2||debuff.executioners_precision.stack=2&!buff.ravager.up\nactions.slayer_execute+=/overpower,if=rage<=40&buff.overpower.stack<2&talent.fierce_followthrough\nactions.slayer_execute+=/execute,if=rage>=40\nactions.slayer_execute+=/overpower\nactions.slayer_execute+=/execute\nactions.slayer_execute+=/wrecking_throw\nactions.slayer_execute+=/storm_bolt,if=buff.bladestorm.up,use_off_gcd=1\n\nactions.slayer_st+=/rend,if=dot.rend.remains<=gcd\nactions.slayer_st+=/thunderous_roar\nactions.slayer_st+=/avatar,if=cooldown.colossus_smash.remains<=5||debuff.colossus_smash.up\nactions.slayer_st+=/champions_spear,if=debuff.colossus_smash.up||buff.avatar.up\nactions.slayer_st+=/ravager,if=cooldown.colossus_smash.remains<=gcd\nactions.slayer_st+=/colossus_smash,if=cooldown.avatar.remains>10&(variable.trinket_1_buffs||variable.trinket_2_buffs)||(!variable.trinket_1_buffs&!variable.trinket_2_buffs)\nactions.slayer_st+=/warbreaker,if=cooldown.avatar.remains>10&(variable.trinket_1_buffs||variable.trinket_2_buffs)||(!variable.trinket_1_buffs&!variable.trinket_2_buffs)\nactions.slayer_st+=/mortal_strike,if=debuff.executioners_precision.stack=2\nactions.slayer_st+=/execute,if=buff.juggernaut.remains<=gcd*4&talent.juggernaut||buff.sudden_death.stack=2||buff.sudden_death.remains<=gcd*3||debuff.marked_for_execution.stack=3\nactions.slayer_st+=/overpower,if=buff.opportunist.up\nactions.slayer_st+=/bladestorm,if=(cooldown.colossus_smash.remains>=gcd*4||cooldown.warbreaker.remains>=gcd*4)||debuff.colossus_smash.remains>=gcd*4\nactions.slayer_st+=/mortal_strike\nactions.slayer_st+=/skullsplitter\nactions.slayer_st+=/overpower\nactions.slayer_st+=/rend,if=dot.rend.remains<=8\nactions.slayer_st+=/wrecking_throw\nactions.slayer_st+=/execute,if=!talent.juggernaut\nactions.slayer_st+=/slam\nactions.slayer_st+=/storm_bolt,if=buff.bladestorm.up,use_off_gcd=1\n\nactions.slayer_sweep+=/thunder_clap,if=!dot.rend.remains&!buff.sweeping_strikes.up\nactions.slayer_sweep+=/thunderous_roar\nactions.slayer_sweep+=/sweeping_strikes\nactions.slayer_sweep+=/rend,if=dot.rend.remains<=gcd\nactions.slayer_sweep+=/champions_spear\nactions.slayer_sweep+=/avatar\nactions.slayer_sweep+=/colossus_smash,if=buff.sweeping_strikes.up\nactions.slayer_sweep+=/warbreaker\nactions.slayer_sweep+=/skullsplitter,if=buff.sweeping_strikes.up\nactions.slayer_sweep+=/execute,if=buff.juggernaut.remains<=gcd*2||debuff.marked_for_execution.stack>3||buff.sudden_death.stack=2||buff.sudden_death.remains<=gcd*3\nactions.slayer_sweep+=/bladestorm,if=(cooldown.colossus_smash.remains>=gcd*4||cooldown.warbreaker.remains>=gcd*4)||debuff.colossus_smash.remains>=gcd*4\nactions.slayer_sweep+=/overpower,if=buff.opportunist.up\nactions.slayer_sweep+=/mortal_strike\nactions.slayer_sweep+=/overpower\nactions.slayer_sweep+=/thunder_clap,if=dot.rend.remains<=8&buff.sweeping_strikes.down\nactions.slayer_sweep+=/rend,if=dot.rend.remains<=5\nactions.slayer_sweep+=/cleave,if=talent.fervor_of_battle&!buff.overpower.up\nactions.slayer_sweep+=/whirlwind,if=talent.fervor_of_battle\nactions.slayer_sweep+=/execute,if=!talent.juggernaut\nactions.slayer_sweep+=/wrecking_throw,if=!buff.sweeping_strikes.up\nactions.slayer_sweep+=/slam\nactions.slayer_sweep+=/storm_bolt,if=buff.bladestorm.up,use_off_gcd=1",
["spec"] = 71,
},
["Protection Warrior"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/warrior_protection.simc",
["builtIn"] = true,
["date"] = 20250903,
["spec"] = 73,
["desc"] = "2025-09-03: Use Shield Wall Settings",
["profile"] = "## Upstream: https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/warrior_protection.simc\n## SimulationCraft Commit Sync: bc73745\n## Date: 2025-09-03\n\nactions.precombat+=/battle_stance,toggle=on\nactions.precombat+=/battle_shout\n\nactions+=/pummel\nactions+=/charge,if=time=0||movement.distance>8\nactions+=/use_item,name=tome_of_lights_devotion,if=buff.inner_resilience.up\nactions+=/use_items\nactions+=/avatar,if=buff.thunder_blast.down||buff.thunder_blast.stack<=2\nactions+=/shield_wall,use_off_gcd=1,if=tanking&incoming_damage_5s>shield_wall_damage_taken&health.pct<=shield_wall_health_pct&!(buff.shield_wall.up||buff.last_stand.up||buff.rallying_cry.up||buff.potion.up||talent.immovable_object.enabled&buff.avatar.down)\nactions+=/blood_fury\nactions+=/berserking\nactions+=/arcane_torrent\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/potion,if=buff.avatar.up||buff.avatar.up&target.health.pct<=20\nactions+=/ignore_pain,if=target.health.pct>=20&(rage.deficit<=15&cooldown.shield_slam.ready||rage.deficit<=40&cooldown.shield_charge.ready&talent.champions_bulwark.enabled||rage.deficit<=20&cooldown.shield_charge.ready||rage.deficit<=30&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled||rage.deficit<=20&cooldown.avatar.ready||rage.deficit<=45&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=30&cooldown.avatar.ready&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=20||rage.deficit<=40&cooldown.shield_slam.ready&buff.violent_outburst.up&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=55&cooldown.shield_slam.ready&buff.violent_outburst.up&buff.last_stand.up&talent.unnerving_focus.enabled&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=17&cooldown.shield_slam.ready&talent.heavy_repercussions.enabled||rage.deficit<=18&cooldown.shield_slam.ready&talent.impenetrable_wall.enabled)||(rage>=70||buff.seeing_red.stack=7&rage>=35)&cooldown.shield_slam.remains<=1&buff.shield_block.remains>=4&set_bonus.tier31_2pc,use_off_gcd=1\nactions+=/last_stand,use_off_gcd=1,if=tanking&incoming_damage_5s>last_stand_damage_taken&health.pct<=last_stand_health_pct&!(buff.shield_wall.up||buff.last_stand.up||buff.rallying_cry.up||buff.potion.up)\nactions+=/rallying_cry,if=tanking&incoming_damage_5s>rallying_cry_damage_taken&health.pct<=rallying_cry_health_pct&!(buff.shield_wall.up||buff.last_stand.up||buff.rallying_cry.up||buff.potion.up)\nactions+=/victory_rush,if=health.pct<victory_rush_health_pct&talent.impending_victory.disabled\nactions+=/impending_victory,if=health.pct<victory_rush_health_pct&talent.impending_victory.enabled\nactions+=/ravager\nactions+=/demoralizing_shout,if=talent.booming_voice.enabled\nactions+=/champions_spear\nactions+=/thunder_blast,if=active_enemies>=2&buff.thunder_blast.stack=2\nactions+=/demolish,if=buff.colossal_might.stack>=3\nactions+=/thunderous_roar\nactions+=/shield_charge\nactions+=/shield_block,if=buff.shield_block.remains<=10\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>=3\nactions+=/call_action_list,name=generic\n\nactions.aoe+=/thunder_blast,if=dot.rend.remains<=1\nactions.aoe+=/thunder_clap,if=dot.rend.remains<=1\nactions.aoe+=/thunder_blast,if=buff.violent_outburst.up&active_enemies>=2&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/execute,if=spell_targets.execute>=2&(rage>=50||buff.sudden_death.up)&talent.heavy_handed.enabled\nactions.aoe+=/thunder_clap,if=buff.violent_outburst.up&active_enemies>=4&buff.avatar.up&talent.unstoppable_force.enabled&talent.crashing_thunder.enabled||buff.violent_outburst.up&active_enemies>6&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/revenge,if=rage>=70&talent.seismic_reverberation.enabled&active_enemies>=3\nactions.aoe+=/shield_slam,if=rage<=60||buff.violent_outburst.up&active_enemies<=4&talent.crashing_thunder.enabled\nactions.aoe+=/thunder_blast\nactions.aoe+=/thunder_clap\nactions.aoe+=/revenge,if=rage>=30||rage>=40&talent.barbaric_training.enabled\n\nactions.generic+=/thunder_blast,if=(buff.thunder_blast.stack=2&buff.burst_of_power.stack<=1&buff.avatar.up&talent.unstoppable_force.enabled)\nactions.generic+=/shield_slam,if=(buff.burst_of_power.stack=2&buff.thunder_blast.stack<=1||buff.violent_outburst.up)||rage<=70&talent.demolish.enabled\nactions.generic+=/execute,if=rage>=70||(rage>=40&cooldown.shield_slam.remains&talent.demolish.enabled||rage>=50&cooldown.shield_slam.remains)||buff.sudden_death.up&talent.sudden_death.enabled\nactions.generic+=/shield_slam\nactions.generic+=/thunder_blast,if=dot.rend.remains<=2&buff.violent_outburst.down\nactions.generic+=/thunder_blast\nactions.generic+=/thunder_clap,if=dot.rend.remains<=2&buff.violent_outburst.down\nactions.generic+=/thunder_blast,if=(active_enemies>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/thunder_clap,if=(active_enemies>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/revenge,if=(rage>=80&target.health.pct>20||buff.revenge.up&target.health.pct<=20&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>20)||(rage>=80&target.health.pct>35||buff.revenge.up&target.health.pct<=35&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>35)&talent.massacre.enabled\nactions.generic+=/execute\nactions.generic+=/revenge\nactions.generic+=/thunder_blast,if=(active_enemies>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/thunder_clap,if=(active_enemies>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/devastate",
["version"] = 20250903,
["warnings"] = "Imported 4 action lists.\n",
["author"] = "SimulationCraft",
["basedOn"] = "Protection Warrior",
["lists"] = {
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 1",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 1",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.violent_outburst.up & active_enemies >= 2 & buff.avatar.up & talent.unstoppable_force.enabled",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.execute >= 2 & ( rage >= 50 || buff.sudden_death.up ) & talent.heavy_handed.enabled",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.violent_outburst.up & active_enemies >= 4 & buff.avatar.up & talent.unstoppable_force.enabled & talent.crashing_thunder.enabled || buff.violent_outburst.up & active_enemies > 6 & buff.avatar.up & talent.unstoppable_force.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "rage >= 70 & talent.seismic_reverberation.enabled & active_enemies >= 3",
["action"] = "revenge",
},
{
["enabled"] = true,
["criteria"] = "rage <= 60 || buff.violent_outburst.up & active_enemies <= 4 & talent.crashing_thunder.enabled",
["action"] = "shield_slam",
},
{
["action"] = "thunder_blast",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "rage >= 30 || rage >= 40 & talent.barbaric_training.enabled",
["action"] = "revenge",
},
},
["generic"] = {
{
["enabled"] = true,
["criteria"] = "( buff.thunder_blast.stack = 2 & buff.burst_of_power.stack <= 1 & buff.avatar.up & talent.unstoppable_force.enabled )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( buff.burst_of_power.stack = 2 & buff.thunder_blast.stack <= 1 || buff.violent_outburst.up ) || rage <= 70 & talent.demolish.enabled",
["action"] = "shield_slam",
},
{
["enabled"] = true,
["criteria"] = "rage >= 70 || ( rage >= 40 & cooldown.shield_slam.remains & talent.demolish.enabled || rage >= 50 & cooldown.shield_slam.remains ) || buff.sudden_death.up & talent.sudden_death.enabled",
["action"] = "execute",
},
{
["action"] = "shield_slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 2 & buff.violent_outburst.down",
["action"] = "thunder_blast",
},
{
["action"] = "thunder_blast",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 2 & buff.violent_outburst.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "( rage >= 80 & target.health.pct > 20 || buff.revenge.up & target.health.pct <= 20 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 20 ) || ( rage >= 80 & target.health.pct > 35 || buff.revenge.up & target.health.pct <= 35 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 35 ) & talent.massacre.enabled",
["action"] = "revenge",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "revenge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( active_enemies >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["action"] = "devastate",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "pummel",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "time = 0 || movement.distance > 8",
["action"] = "charge",
},
{
["enabled"] = true,
["criteria"] = "buff.inner_resilience.up",
["name"] = "tome_of_lights_devotion",
["action"] = "tome_of_lights_devotion",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.thunder_blast.down || buff.thunder_blast.stack <= 2",
["action"] = "avatar",
},
{
["enabled"] = true,
["action"] = "shield_wall",
["criteria"] = "tanking & incoming_damage_5s > shield_wall_damage_taken & health.pct <= shield_wall_health_pct & ! ( buff.shield_wall.up || buff.last_stand.up || buff.rallying_cry.up || buff.potion.up || talent.immovable_object.enabled & buff.avatar.down )",
["use_off_gcd"] = 1,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.avatar.up || buff.avatar.up & target.health.pct <= 20",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct >= 20 & ( rage.deficit <= 15 & cooldown.shield_slam.ready || rage.deficit <= 40 & cooldown.shield_charge.ready & talent.champions_bulwark.enabled || rage.deficit <= 20 & cooldown.shield_charge.ready || rage.deficit <= 30 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled || rage.deficit <= 20 & cooldown.avatar.ready || rage.deficit <= 45 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 30 & cooldown.avatar.ready & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 20 || rage.deficit <= 40 & cooldown.shield_slam.ready & buff.violent_outburst.up & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 55 & cooldown.shield_slam.ready & buff.violent_outburst.up & buff.last_stand.up & talent.unnerving_focus.enabled & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 17 & cooldown.shield_slam.ready & talent.heavy_repercussions.enabled || rage.deficit <= 18 & cooldown.shield_slam.ready & talent.impenetrable_wall.enabled ) || ( rage >= 70 || buff.seeing_red.stack = 7 & rage >= 35 ) & cooldown.shield_slam.remains <= 1 & buff.shield_block.remains >= 4 & set_bonus.tier31_2pc",
["action"] = "ignore_pain",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["action"] = "last_stand",
["criteria"] = "tanking & incoming_damage_5s > last_stand_damage_taken & health.pct <= last_stand_health_pct & ! ( buff.shield_wall.up || buff.last_stand.up || buff.rallying_cry.up || buff.potion.up )",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "tanking & incoming_damage_5s > rallying_cry_damage_taken & health.pct <= rallying_cry_health_pct & ! ( buff.shield_wall.up || buff.last_stand.up || buff.rallying_cry.up || buff.potion.up )",
["action"] = "rallying_cry",
},
{
["enabled"] = true,
["criteria"] = "health.pct < victory_rush_health_pct & talent.impending_victory.disabled",
["action"] = "victory_rush",
},
{
["enabled"] = true,
["criteria"] = "health.pct < victory_rush_health_pct & talent.impending_victory.enabled",
["action"] = "impending_victory",
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.booming_voice.enabled",
["action"] = "demoralizing_shout",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & buff.thunder_blast.stack = 2",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.colossal_might.stack >= 3",
["action"] = "demolish",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "shield_charge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.shield_block.remains <= 10",
["action"] = "shield_block",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 3",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "generic",
},
},
["precombat"] = {
{
["toggle"] = "on",
["action"] = "battle_stance",
["enabled"] = true,
},
{
["action"] = "battle_shout",
["enabled"] = true,
},
},
},
},
["Retribution"] = {
["builtIn"] = true,
["date"] = 20250818,
["spec"] = 70,
["desc"] = "-- The War Within Season 3\n2025-08-18: APL Sync\n\n-- The War Within Season 2\n2025-03-10: SimC Update\n2025-02-28: TWW Season 2 update\n2024-10-29: Efficiency of Finishers (fixed)\n2024-09-28: SimC update; HoL fix?\n2024-09-10, 09-22: SimC update\n2024-08-28: Fix HoL and update from SimC\n2024-08-24: Fix Hammer of Light\n2024-07-23: The War Within",
["profile"] = "## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/paladin_retribution.simc\n## SimulationCraft Commit Sync: db6e3c4\n## Date: 2025-08-18\n\n## [Syrif] - references to spell_targets.divine_storm replaced with active_enemies\n\nactions.precombat+=/shield_of_vengeance\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.1.cooldown.duration=0||trinket.1.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.2.cooldown.duration=0||trinket.2.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.2.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\n\nactions+=/rebuke\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=generators\n\nactions.cooldowns+=/potion,if=buff.avenging_wrath.up||buff.crusade.up||debuff.execution_sentence.up||boss&fight_remains<30\n## actions.cooldowns+=/invoke_external_buff,name=power_infusion,if=buff.avenging_wrath.up||buff.crusade.up||debuff.execution_sentence.up\nactions.cooldowns+=/lights_judgment,if=spell_targets.lights_judgment>=2||!raid_event.adds.exists||raid_event.adds.in>75||raid_event.adds.up\nactions.cooldowns+=/fireblood,if=buff.avenging_wrath.up||buff.crusade.up&buff.crusade.stack=10||debuff.execution_sentence.up\nactions.cooldowns+=/use_item,slot=trinket1,if=((buff.avenging_wrath.up&cooldown.avenging_wrath.remains>40||buff.crusade.up&buff.crusade.stack=10)&!talent.radiant_glory||talent.radiant_glory&(!talent.execution_sentence&cooldown.wake_of_ashes.remains=0||debuff.execution_sentence.up))&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains&boss\nactions.cooldowns+=/use_item,slot=trinket2,if=((buff.avenging_wrath.up&cooldown.avenging_wrath.remains>40||buff.crusade.up&buff.crusade.stack=10)&!talent.radiant_glory||talent.radiant_glory&(!talent.execution_sentence&cooldown.wake_of_ashes.remains=0||debuff.execution_sentence.up))&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains&boss\nactions.cooldowns+=/use_item,name=bestinslots,if=((buff.avenging_wrath.up&cooldown.avenging_wrath.remains>40||buff.crusade.up&buff.crusade.stack=10)&!talent.radiant_glory||talent.radiant_glory&(!talent.execution_sentence&cooldown.wake_of_ashes.remains=0||debuff.execution_sentence.up))\nactions.cooldowns+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs||!buff.crusade.up&cooldown.crusade.remains>20||!buff.avenging_wrath.up&cooldown.avenging_wrath.remains>20)\nactions.cooldowns+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs||!buff.crusade.up&cooldown.crusade.remains>20||!buff.avenging_wrath.up&cooldown.avenging_wrath.remains>20)\nactions.cooldowns+=/shield_of_vengeance,if=fight_remains>15&(!talent.execution_sentence||!debuff.execution_sentence.up)&!buff.divine_hammer.up\nactions.cooldowns+=/execution_sentence,if=(!buff.crusade.up&cooldown.crusade.remains>15||buff.crusade.stack=10||cooldown.avenging_wrath.remains<0.75||cooldown.avenging_wrath.remains>15||talent.radiant_glory)&(holy_power>=4&time<5||holy_power>=3&time>5||(holy_power>=2||time<5)&(talent.divine_auxiliary||talent.radiant_glory))&(cooldown.divine_hammer.remains>5||buff.divine_hammer.up||!talent.divine_hammer)&(target.time_to_die>8&!talent.executioners_will||target.time_to_die>12)&cooldown.wake_of_ashes.remains<gcd\nactions.cooldowns+=/avenging_wrath,if=(holy_power>=4&time<5||holy_power>=3&time>5||holy_power>=2&talent.divine_auxiliary&(cooldown.execution_sentence.remains=0||cooldown.final_reckoning.remains=0))&(!raid_event.adds.up||target.time_to_die>10)\nactions.cooldowns+=/crusade,if=holy_power>=5&time<5||holy_power>=3&time>5\nactions.cooldowns+=/final_reckoning,if=(holy_power>=4&time<8||holy_power>=3&time>=8||holy_power>=2&(talent.divine_auxiliary||talent.radiant_glory))&(cooldown.avenging_wrath.remains>10||cooldown.crusade.remains&(!buff.crusade.up||buff.crusade.stack>=10)||talent.radiant_glory&(buff.avenging_wrath.up||talent.crusade&cooldown.wake_of_ashes.remains<gcd))&(!raid_event.adds.exists||raid_event.adds.up||raid_event.adds.in>40)&(cooldown.divine_hammer.remains>5||buff.divine_hammer.up||!talent.divine_hammer)\n\nactions.finishers+=/variable,name=ds_castable,value=(active_enemies>=3||active_enemies>=2&talent.tempest_of_the_lightbringer&!talent.rush_of_light||buff.empyrean_power.up||!talent.final_verdict&talent.tempest_of_the_lightbringer)&!buff.empyrean_legacy.up&!(buff.divine_arbiter.up&buff.divine_arbiter.stack>24)\nactions.finishers+=/hammer_of_light,if=buff.hammer_of_light_ready.up||!talent.divine_hammer||buff.divine_hammer.up||cooldown.divine_hammer.remains>10\nactions.finishers+=/divine_hammer,if=!buff.divine_hammer.up\nactions.finishers+=/divine_storm,if=variable.ds_castable&(!buff.hammer_of_light_ready.up||buff.empyrean_power.up)&(cooldown.divine_hammer.remains||buff.divine_hammer.up||!talent.divine_hammer)&(!talent.crusade||cooldown.crusade.remains>gcd*3||buff.crusade.up&buff.crusade.stack<10||talent.radiant_glory)\nactions.finishers+=/justicars_vengeance,if=(!talent.crusade||cooldown.crusade.remains>gcd*3||buff.crusade.up&buff.crusade.stack<10||talent.radiant_glory)&!buff.hammer_of_light_ready.up&(cooldown.divine_hammer.remains||buff.divine_hammer.up||!talent.divine_hammer)\nactions.finishers+=/templars_verdict,if=(!talent.crusade||cooldown.crusade.remains>gcd*3||buff.crusade.up&buff.crusade.stack<10||talent.radiant_glory)&!buff.hammer_of_light_ready.up&(cooldown.divine_hammer.remains||buff.divine_hammer.up||!talent.divine_hammer)\nactions.finishers+=/variable,name=finished,op=set,value=true\n\nactions.generators+=/variable,name=finished,op=set,value=false\nactions.generators+=/call_action_list,name=finishers,strict=1,if=(holy_power=5||holy_power=4&buff.divine_resonance.up||buff.all_in.up)&cooldown.wake_of_ashes.remains\nactions.generators+=/templar_slash,if=buff.templar_strikes.remains<gcd*2\nactions.generators+=/blade_of_justice,if=!dot.expurgation.ticking&talent.holy_flames&cooldown.divine_toll.remains\nactions.generators+=/wake_of_ashes,if=(!talent.lights_guidance||holy_power>=2&talent.lights_guidance)&(cooldown.avenging_wrath.remains>6||cooldown.crusade.remains>6||talent.radiant_glory)&(!talent.execution_sentence||cooldown.execution_sentence.remains>4||target.time_to_die<8)&(!talent.final_reckoning||cooldown.final_reckoning.remains>4)&(!raid_event.adds.exists||raid_event.adds.in>10||raid_event.adds.up)\nactions.generators+=/divine_toll,if=holy_power<=2&(!raid_event.adds.exists||raid_event.adds.in>10||raid_event.adds.up)&(cooldown.avenging_wrath.remains>15||cooldown.crusade.remains>15||talent.radiant_glory||fight_remains<8)\nactions.generators+=/call_action_list,name=finishers,strict_if=!variable.finished,if=holy_power>=4||buff.crusade.up&buff.crusade.stack<10||buff.divine_hammer.up||active_enemies>=4\nactions.generators+=/templar_slash,if=buff.templar_strikes.remains<gcd&active_enemies>=2\nactions.generators+=/blade_of_justice,if=active_enemies>=2&talent.blade_of_vengeance\nactions.generators+=/hammer_of_wrath,if=(active_enemies<2||!talent.blessed_champion)&buff.blessing_of_anshe.up\nactions.generators+=/templar_strike\nactions.generators+=/judgment\nactions.generators+=/blade_of_justice\nactions.generators+=/call_action_list,name=finishers,strict=1,if=!variable.finished\nactions.generators+=/hammer_of_wrath,if=(active_enemies<2||!talent.blessed_champion)\nactions.generators+=/templar_slash\nactions.generators+=/crusader_strike\nactions.generators+=/hammer_of_wrath\nactions.generators+=/arcane_torrent",
["version"] = 20250818,
["warnings"] = "The import for 'precombat' required some automated changes.\nLine 2: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 2: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 3: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.t1.cooldown.duration=0||trinket.t1.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.t1.cooldown.duration=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.crusade.duration=0||cooldown.crusade.duration%trinket.t1.cooldown.duration=0||trinket.t1.cooldown.duration%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%trinket.t1.cooldown.duration=0)'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.t2.cooldown.duration=0||trinket.t2.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.t2.cooldown.duration=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.crusade.duration=0||cooldown.crusade.duration%trinket.t2.cooldown.duration=0||trinket.t2.cooldown.duration%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%trinket.t2.cooldown.duration=0)'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 6: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 6: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'cooldowns' required some automated changes.\nLine 4: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 4: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 5: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 5: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\n\nImported 5 action lists.\n",
["lists"] = {
["default"] = {
{
["action"] = "rebuke",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "generators",
},
},
["precombat"] = {
{
["action"] = "shield_of_vengeance",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.crusade.duration = 0 || cooldown.crusade.duration % trinket.t1.cooldown.duration = 0 || trinket.t1.cooldown.duration % cooldown.avenging_wrath.duration = 0 || cooldown.avenging_wrath.duration % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.crusade.duration = 0 || cooldown.crusade.duration % trinket.t2.cooldown.duration = 0 || trinket.t2.cooldown.duration % cooldown.avenging_wrath.duration = 0 || cooldown.avenging_wrath.duration % trinket.t2.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
},
},
["generators"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "false",
["var_name"] = "finished",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "( holy_power = 5 || holy_power = 4 & buff.divine_resonance.up || buff.all_in.up ) & cooldown.wake_of_ashes.remains",
["list_name"] = "finishers",
},
{
["enabled"] = true,
["criteria"] = "buff.templar_strikes.remains < gcd.max * 2",
["action"] = "templar_slash",
},
{
["enabled"] = true,
["criteria"] = "! dot.expurgation.ticking & talent.holy_flames.enabled & cooldown.divine_toll.remains",
["action"] = "blade_of_justice",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.lights_guidance.enabled || holy_power >= 2 & talent.lights_guidance.enabled ) & ( cooldown.avenging_wrath.remains > 6 || cooldown.crusade.remains > 6 || talent.radiant_glory.enabled ) & ( ! talent.execution_sentence.enabled || cooldown.execution_sentence.remains > 4 || target.time_to_die < 8 ) & ( ! talent.final_reckoning.enabled || cooldown.final_reckoning.remains > 4 ) & ( ! raid_event.adds.exists || raid_event.adds.in > 10 || raid_event.adds.up )",
["action"] = "wake_of_ashes",
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 2 & ( ! raid_event.adds.exists || raid_event.adds.in > 10 || raid_event.adds.up ) & ( cooldown.avenging_wrath.remains > 15 || cooldown.crusade.remains > 15 || talent.radiant_glory.enabled || fight_remains < 8 )",
["action"] = "divine_toll",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "holy_power >= 4 || buff.crusade.up & buff.crusade.stack < 10 || buff.divine_hammer.up || active_enemies >= 4",
["strict_if"] = "! variable.finished",
["list_name"] = "finishers",
},
{
["enabled"] = true,
["criteria"] = "buff.templar_strikes.remains < gcd.max & active_enemies >= 2",
["action"] = "templar_slash",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & talent.blade_of_vengeance.enabled",
["action"] = "blade_of_justice",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies < 2 || ! talent.blessed_champion.enabled ) & buff.blessing_of_anshe.up",
["action"] = "hammer_of_wrath",
},
{
["action"] = "templar_strike",
["enabled"] = true,
},
{
["action"] = "judgment",
["enabled"] = true,
},
{
["action"] = "blade_of_justice",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! variable.finished",
["list_name"] = "finishers",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies < 2 || ! talent.blessed_champion.enabled )",
["action"] = "hammer_of_wrath",
},
{
["action"] = "templar_slash",
["enabled"] = true,
},
{
["action"] = "crusader_strike",
["enabled"] = true,
},
{
["action"] = "hammer_of_wrath",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
},
["finishers"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_enemies >= 3 || active_enemies >= 2 & talent.tempest_of_the_lightbringer.enabled & ! talent.rush_of_light.enabled || buff.empyrean_power.up || ! talent.final_verdict.enabled & talent.tempest_of_the_lightbringer.enabled ) & ! buff.empyrean_legacy.up & ! ( buff.divine_arbiter.up & buff.divine_arbiter.stack > 24 )",
["var_name"] = "ds_castable",
},
{
["enabled"] = true,
["criteria"] = "buff.hammer_of_light_ready.up || ! talent.divine_hammer.enabled || buff.divine_hammer.up || cooldown.divine_hammer.remains > 10",
["action"] = "hammer_of_light",
},
{
["enabled"] = true,
["criteria"] = "! buff.divine_hammer.up",
["action"] = "divine_hammer",
},
{
["enabled"] = true,
["criteria"] = "variable.ds_castable & ( ! buff.hammer_of_light_ready.up || buff.empyrean_power.up ) & ( cooldown.divine_hammer.remains || buff.divine_hammer.up || ! talent.divine_hammer.enabled ) & ( ! talent.crusade.enabled || cooldown.crusade.remains > gcd.max * 3 || buff.crusade.up & buff.crusade.stack < 10 || talent.radiant_glory.enabled )",
["action"] = "divine_storm",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.crusade.enabled || cooldown.crusade.remains > gcd.max * 3 || buff.crusade.up & buff.crusade.stack < 10 || talent.radiant_glory.enabled ) & ! buff.hammer_of_light_ready.up & ( cooldown.divine_hammer.remains || buff.divine_hammer.up || ! talent.divine_hammer.enabled )",
["action"] = "justicars_vengeance",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.crusade.enabled || cooldown.crusade.remains > gcd.max * 3 || buff.crusade.up & buff.crusade.stack < 10 || talent.radiant_glory.enabled ) & ! buff.hammer_of_light_ready.up & ( cooldown.divine_hammer.remains || buff.divine_hammer.up || ! talent.divine_hammer.enabled )",
["action"] = "templars_verdict",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "true",
["var_name"] = "finished",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up || buff.crusade.up || debuff.execution_sentence.up || boss & fight_remains < 30",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.lights_judgment >= 2 || ! raid_event.adds.exists || raid_event.adds.in > 75 || raid_event.adds.up",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up || buff.crusade.up & buff.crusade.stack = 10 || debuff.execution_sentence.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "( ( buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 40 || buff.crusade.up & buff.crusade.stack = 10 ) & ! talent.radiant_glory.enabled || talent.radiant_glory.enabled & ( ! talent.execution_sentence.enabled & cooldown.wake_of_ashes.remains = 0 || debuff.execution_sentence.up ) ) & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains & boss",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "( ( buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 40 || buff.crusade.up & buff.crusade.stack = 10 ) & ! talent.radiant_glory.enabled || talent.radiant_glory.enabled & ( ! talent.execution_sentence.enabled & cooldown.wake_of_ashes.remains = 0 || debuff.execution_sentence.up ) ) & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains & boss",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "( ( buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 40 || buff.crusade.up & buff.crusade.stack = 10 ) & ! talent.radiant_glory.enabled || talent.radiant_glory.enabled & ( ! talent.execution_sentence.enabled & cooldown.wake_of_ashes.remains = 0 || debuff.execution_sentence.up ) )",
["name"] = "bestinslots",
["action"] = "bestinslots",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs || ! buff.crusade.up & cooldown.crusade.remains > 20 || ! buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 20 )",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs || ! buff.crusade.up & cooldown.crusade.remains > 20 || ! buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 20 )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 15 & ( ! talent.execution_sentence.enabled || ! debuff.execution_sentence.up ) & ! buff.divine_hammer.up",
["action"] = "shield_of_vengeance",
},
{
["enabled"] = true,
["criteria"] = "( ! buff.crusade.up & cooldown.crusade.remains > 15 || buff.crusade.stack = 10 || cooldown.avenging_wrath.remains < 0.75 || cooldown.avenging_wrath.remains > 15 || talent.radiant_glory.enabled ) & ( holy_power >= 4 & time < 5 || holy_power >= 3 & time > 5 || ( holy_power >= 2 || time < 5 ) & ( talent.divine_auxiliary.enabled || talent.radiant_glory.enabled ) ) & ( cooldown.divine_hammer.remains > 5 || buff.divine_hammer.up || ! talent.divine_hammer.enabled ) & ( target.time_to_die > 8 & ! talent.executioners_will.enabled || target.time_to_die > 12 ) & cooldown.wake_of_ashes.remains < gcd.max",
["action"] = "execution_sentence",
},
{
["enabled"] = true,
["criteria"] = "( holy_power >= 4 & time < 5 || holy_power >= 3 & time > 5 || holy_power >= 2 & talent.divine_auxiliary.enabled & ( cooldown.execution_sentence.remains = 0 || cooldown.final_reckoning.remains = 0 ) ) & ( ! raid_event.adds.up || target.time_to_die > 10 )",
["action"] = "avenging_wrath",
},
{
["enabled"] = true,
["criteria"] = "holy_power >= 5 & time < 5 || holy_power >= 3 & time > 5",
["action"] = "crusade",
},
{
["enabled"] = true,
["criteria"] = "( holy_power >= 4 & time < 8 || holy_power >= 3 & time >= 8 || holy_power >= 2 & ( talent.divine_auxiliary.enabled || talent.radiant_glory.enabled ) ) & ( cooldown.avenging_wrath.remains > 10 || cooldown.crusade.remains & ( ! buff.crusade.up || buff.crusade.stack >= 10 ) || talent.radiant_glory.enabled & ( buff.avenging_wrath.up || talent.crusade.enabled & cooldown.wake_of_ashes.remains < gcd.max ) ) & ( ! raid_event.adds.exists || raid_event.adds.up || raid_event.adds.in > 40 ) & ( cooldown.divine_hammer.remains > 5 || buff.divine_hammer.up || ! talent.divine_hammer.enabled )",
["action"] = "final_reckoning",
},
},
},
["author"] = "SimC",
},
["Discipline"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20250810,
["author"] = "SimC",
["desc"] = "Healer priorities are DPS-focused only\n\n2025-04-23: Remove PTW\n\n2024-07-30: The War Within",
["lists"] = {
["default"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! buff.twilight_equilibrium_holy_amp.up & ! buff.twilight_equilibrium_shadow_amp.up",
["var_name"] = "te_none",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.twilight_equilibrium_shadow_amp.up || variable.te_none",
["description"] = "Twilight Equilibrium is buffing shadow damage",
["var_name"] = "te_shadow",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.twilight_equilibrium_holy_amp.up || variable.te_none",
["description"] = "Twilight Equilibrium is buffing holy damage",
["var_name"] = "te_holy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.shadow_covenant.enabled",
["description"] = "Long Shadow covenant is enabled",
["var_name"] = "long_scov",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadowfiend.up || buff.shadow_covenant.up",
["description"] = "Ready to start shadow covenant phase",
["var_name"] = "can_enter_scov",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "2",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.mind_blast.execute_time",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration_max",
["criteria"] = "talent.dark_indulgence.enabled",
["description"] = "penance",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.shadow_word_death.execute_time",
["criteria"] = "talent.shadow_word_death.enabled",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.shadow_word_death.execute_time",
["criteria"] = "talent.shadow_word_death.enabled & talent.death_and_madness.enabled & target.health.pct < 20",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.mindgames.execute_time",
["criteria"] = "talent.mindgames.enabled",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.divine_star.execute_time",
["criteria"] = "talent.divine_star.enabled",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.halo.execute_time",
["criteria"] = "talent.halo.enabled",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "floor",
["action"] = "variable",
["value"] = "( buff.shadow_covenant.duration - variable.shadow_spells_duration_max ) / gcd.max",
["description"] = "(scov duration - shadow spells duration) / GCD time = estimate of holy spells we should need to use during the next scov window  Long scov example: (15 - 12) / 1.5 = 2 GCDs to spend on holy spells  Short scov example: (7 - 12) / 1.5 = -3.3 GCDs to spend on holy spells (none)",
["var_name"] = "max_te_holy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["description"] = "Counting variable, the number of non-fractional remaining holy casts available",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "variable.max_te_holy",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "TODO: duration_expected is buggy on penance/dark reprimand, using a static reduction as a stand-in for now",
["criteria"] = "talent.train_of_thought.enabled",
["value"] = "2",
["action"] = "variable",
["value_else"] = "0",
["var_name"] = "expected_penance_reduction",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["description"] = "Calculate how much cast time worth of shadow spells we have currently available. We use shadow_spells_duration to determine if we have time to weave in any holy spells to proc twilight equilibrium.",
["var_name"] = "shadow_spells_duration",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.penance.up || ( ( cooldown.penance.remains - variable.expected_penance_reduction ) < buff.shadow_covenant.remains )",
["description"] = "Schism Penance",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.mindgames.up || ( cooldown.mindgames.remains_expected < buff.shadow_covenant.remains )",
["description"] = "Mindgames",
["value"] = "action.mindgames.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.shadow_word_death.up || ( cooldown.shadow_word_death.remains < buff.shadow_covenant.remains )",
["description"] = "We always get the first SW:D",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "( cooldown.shadow_word_death.up || ( cooldown.shadow_word_death.remains < buff.shadow_covenant.remains ) ) & ( target.health.pct < 20 || target.time_to_pct_20 < cooldown.shadow_word_death.remains ) & talent.death_and_madness.enabled",
["description"] = "Second SW:D only when talented and target health in execute range",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "action.mind_blast.charges >= 1",
["description"] = "Add any whole charges of mind blast",
["value"] = "action.mind_blast.charges * action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "( ( action.mind_blast.charges_fractional >= 1 & action.mind_blast.charges_fractional < 2 ) & ( ( ( 1 - ( action.mind_blast.charges_fractional - 1 ) ) * action.mind_blast.recharge_time ) < buff.shadow_covenant.remains ) ) || ( ( action.mind_blast.charges_fractional < 1 ) & ( ( ( 1 - action.mind_blast.charges_fractional ) * action.mind_blast.recharge_time ) < buff.shadow_covenant.remains ) )",
["description"] = "Add any fractional charges of mindblast that will recharge in time",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.divine_star.up || ( cooldown.divine_star.remains < buff.shadow_covenant.remains )",
["description"] = "Divine Star",
["value"] = "action.divine_star.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.halo.up || ( cooldown.halo.remains < buff.shadow_covenant.remains )",
["description"] = "Halo",
["value"] = "action.halo.execute_time",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Determine if we have enough scov time remaining to weave in a twilight equilibrium activation. If we don't have TE talented, always false. Using smite's execution time to represent a worst-case scenario.",
["criteria"] = "talent.twilight_equilibrium.enabled",
["value"] = "( buff.shadow_covenant.remains - variable.shadow_spells_duration ) > action.smite.execute_time",
["action"] = "variable",
["value_else"] = "0",
["var_name"] = "should_te",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadowfiend.remains + action.shadowfiend.execute_time",
["description"] = "First casts should always be HD prep->covenant->schism->HD dark reprimand",
["var_name"] = "next_penance_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_penance_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.penance.duration - variable.expected_penance_reduction ) < variable.next_penance_time",
["var_name"] = "can_penance",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["description"] = "Shadow Word: Death  SW:D is better than other spells if we are in execute phase.",
["var_name"] = "next_swd_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "( ( talent.mindgames.enabled & talent.shattered_perceptions.enabled ) || ( talent.mindgames.enabled & ! talent.expiation.enabled ) ) & target.health.pct >= 20",
["description"] = "indgame  ette ha W:   ren'  xecut has n  av hattere erception  on' av xpiatio",
["value"] = "action.mindgames.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "target.health.pct >= 20",
["description"] = "Mind blast is better than SW:D if we aren't in execute",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "target.health.pct >= 20 & talent.dark_indulgence.enabled",
["description"] = "Second mindblast when talented",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "talent.divine_star.enabled & target.health.pct >= 20 & ! talent.expiation.enabled",
["description"] = "Divine Star and halo are better than SW:D if we aren't in execute and don't have expiation",
["value"] = "action.divine_star.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.halo.execute_time",
["criteria"] = "talent.halo.enabled & target.health.pct >= 20 & ! talent.expiation.enabled",
["var_name"] = "next_swd_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadow_word_death.duration_expected < variable.next_swd_time",
["var_name"] = "can_swd",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["description"] = "Mindblast  Mindblast is better than other spells if we aren't in execute phase",
["var_name"] = "next_mind_blast_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["criteria"] = "target.health.pct < 20",
["description"] = "Add SW:D if we're in execute phase",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["criteria"] = "talent.death_and_madness.enabled & target.health.pct < 20",
["description"] = "Add a second SW:D if we have death and madness",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["criteria"] = "talent.mindgames.enabled & ! talent.expiation.enabled",
["description"] = "Add mindgames if we have it talented and don't have expiation",
["value"] = "action.mindgames.execute_time",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "TODO: This is a little bit simplistic, requiring both charges of mindblast to be available at the moment the first charge needs to be used. Slight optimization should be possible.",
["criteria"] = "action.mind_blast.charges_fractional >= 1",
["value"] = "( ( action.mind_blast.max_charges - ( action.mind_blast.charges_fractional - 1 ) ) * action.mind_blast.recharge_time ) < variable.next_mind_blast_time",
["action"] = "variable",
["value_else"] = "0",
["var_name"] = "can_mind_blast",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["description"] = "Mindgames  Mindgames is a better option than other spells if we aren't in execute and don't have expiation",
["var_name"] = "next_mindgames_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "target.health.pct < 20 || ( talent.expiation.enabled & ! talent.shattered_perceptions.enabled )",
["description"] = "SW:D is better than mindgames in execute phase, or outside of execute phase if we don't have shattered perceptions but do have expiation",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "target.health.pct < 20 & talent.death_and_madness.enabled",
["description"] = "Add a second SW:D if we have death and madness",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "talent.expiation.enabled",
["description"] = "Mind blast is better than mindgames if we have expiation",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "talent.expiation.enabled & talent.dark_indulgence.enabled",
["description"] = "Second mindblast when talented",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.mindgames.duration_expected < variable.next_mindgames_time",
["var_name"] = "can_mindgames",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["description"] = "Divine Star",
["var_name"] = "next_divine_star_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "target.health.pct < 20 || talent.expiation.enabled",
["description"] = "SW:D is better unless outside of execute phase when expiation is untalented",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "target.health.pct < 20 & talent.death_and_madness.enabled",
["description"] = "Add a second SW:D if we have death and madness",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "talent.expiation.enabled",
["description"] = "Mind blast is always better",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "talent.dark_indulgence.enabled",
["description"] = "Second mindblast when talented",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "talent.mindgames.enabled",
["description"] = "Mindgames is always better",
["value"] = "action.mindgames.execute_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.divine_star.duration < variable.next_divine_star_time",
["var_name"] = "can_divine_star",
},
{
["enabled"] = true,
["criteria"] = "talent.shadow_covenant.enabled & cooldown.mindbender.up",
["action"] = "run_action_list",
["list_name"] = "scov_prep",
},
{
["enabled"] = true,
["criteria"] = "variable.long_scov & variable.can_enter_scov",
["action"] = "run_action_list",
["list_name"] = "long_scov",
},
{
["enabled"] = true,
["criteria"] = "( target.time_to_die > ( 0.3 * dot.shadow_word_pain.duration ) ) & ( ! ticking || ( refreshable & ( ! talent.painful_punishment.enabled || ( talent.painful_punishment.enabled & ( dot.shadow_word_pain.remains < ( cooldown.penance.remains - variable.expected_penance_reduction ) ) ) ) ) )",
["action"] = "shadow_word_pain",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "talent.dark_indulgence.enabled & buff.power_of_the_dark_side.down & cooldown.penance.remains < gcd.max",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_penance )",
["action"] = "penance",
},
{
["enabled"] = true,
["criteria"] = "! talent.shadow_covenant.enabled || variable.can_mind_blast",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_mindgames ) & talent.shattered_perceptions.enabled",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & talent.expiation.enabled & ( target.time_to_pct_20 > ( 0.5 * cooldown.shadow_word_death.duration ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_mindgames ) & ! talent.shattered_perceptions.enabled",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "! talent.shadow_covenant.enabled",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_divine_star )",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & ( target.time_to_pct_20 > ( 0.5 * cooldown.shadow_word_death.duration ) )",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "power_word_fortitude",
["enabled"] = true,
},
},
["cooldowns"] = {
{
["enabled"] = true,
["description"] = "Don't use pets during shadow covenant windows, wasting GCDs -- is this even possible anymore?",
["criteria"] = "! buff.shadow_covenant.up",
["action"] = "shadowfiend",
},
{
["enabled"] = true,
["description"] = "hold PI to use with shadow covenant if we have it",
["criteria"] = "! talent.shadow_covenant.enabled || ( talent.shadow_covenant.enabled & ( cooldown.shadowfiend.up || buff.shadow_covenant.up ) )",
["action"] = "power_infusion",
},
{
["enabled"] = true,
["description"] = "sync potion with PI",
["criteria"] = "buff.power_infusion.up",
["action"] = "potion",
},
{
["enabled"] = true,
["description"] = "sync trinkets with PI",
["criteria"] = "buff.power_infusion.up || cooldown.power_infusion.remains >= action_cooldown",
["action"] = "use_items",
},
},
["long_scov"] = {
{
["enabled"] = true,
["description"] = "Long Shadow Covenant",
["action"] = "mindbender",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.halo >= 3",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.divine_star >= 3",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20 & talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "penance",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20 & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "talent.shattered_perceptions.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & ( target.time_to_pct_20 > buff.shadow_covenant.remains )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & ( target.time_to_pct_20 > buff.shadow_covenant.remains )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_holy ) )",
["action"] = "smite",
},
{
["enabled"] = true,
["description"] = "just in case we run out of shadow spells with the above conditions",
["action"] = "penance",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["action"] = "mind_blast",
["enabled"] = true,
},
{
["action"] = "shadow_word_death",
["enabled"] = true,
},
{
["action"] = "divine_star",
["enabled"] = true,
},
{
["action"] = "halo",
["enabled"] = true,
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["scov_prep"] = {
{
["enabled"] = true,
["description"] = "Prepare to enter shadow covenant",
["criteria"] = "cooldown.shadowfiend.remains < cast_time",
["action"] = "power_word_radiance",
},
},
},
["version"] = 20250810,
["warnings"] = "The import for 'default' required some automated changes.\nLine 16: Converted operations in '(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)%gcd.max' to '(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)/gcd.max'.\n\nImported 5 action lists.\n",
["spec"] = 256,
["profile"] = "actions.precombat+=/power_word_fortitude\n\nactions+=/call_action_list,name=cooldowns\nactions+=/variable,name=te_none,op=set,value=!buff.twilight_equilibrium_holy_amp.up&!buff.twilight_equilibrium_shadow_amp.up\n# Twilight Equilibrium is buffing shadow damage\nactions+=/variable,name=te_shadow,op=set,value=buff.twilight_equilibrium_shadow_amp.up||variable.te_none\n# Twilight Equilibrium is buffing holy damage\nactions+=/variable,name=te_holy,op=set,value=buff.twilight_equilibrium_holy_amp.up||variable.te_none\n# Long Shadow covenant is enabled\nactions+=/variable,name=long_scov,op=set,value=talent.shadow_covenant\n# Ready to start shadow covenant phase\nactions+=/variable,name=can_enter_scov,op=set,value=cooldown.shadowfiend.up||buff.shadow_covenant.up\nactions+=/variable,name=shadow_spells_duration_max,op=set,value=0\n## actions+=/variable,name=shadow_spells_duration_max,op=add,value=action.schism.execute_time,if=talent.schism\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=2\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mind_blast.execute_time\n# penance\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mind_blast.execute_time,if=talent.dark_indulgence\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.shadow_word_death.execute_time,if=talent.shadow_word_death\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.shadow_word_death.execute_time,if=talent.shadow_word_death&talent.death_and_madness&target.health.pct<20\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mindgames.execute_time,if=talent.mindgames\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.divine_star.execute_time,if=talent.divine_star\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.halo.execute_time,if=talent.halo\n# (scov duration - shadow spells duration) / GCD time = estimate of holy spells we should need to use during the next scov window  Long scov example: (15 - 12) / 1.5 = 2 GCDs to spend on holy spells  Short scov example: (7 - 12) / 1.5 = -3.3 GCDs to spend on holy spells (none)\nactions+=/variable,name=max_te_holy,op=floor,value=(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)%gcd.max\n# Counting variable, the number of non-fractional remaining holy casts available\nactions+=/variable,name=remaining_te_holy,op=set,value=0\nactions+=/variable,name=remaining_te_holy,op=add,value=variable.max_te_holy\n# TODO: duration_expected is buggy on penance/dark reprimand, using a static reduction as a stand-in for now\nactions+=/variable,name=expected_penance_reduction,op=setif,condition=talent.train_of_thought,value=2,value_else=0\n# Calculate how much cast time worth of shadow spells we have currently available. We use shadow_spells_duration to determine if we have time to weave in any holy spells to proc twilight equilibrium.\nactions+=/variable,name=shadow_spells_duration,op=set,value=0\n# Schism\n## actions+=/variable,name=shadow_spells_duration,op=add,value=action.schism.execute_time,if=cooldown.schism.up||(cooldown.schism.remains<buff.shadow_covenant.remains)\n# Penance\nactions+=/variable,name=shadow_spells_duration,op=add,value=2,if=cooldown.penance.up||((cooldown.penance.remains-variable.expected_penance_reduction)<buff.shadow_covenant.remains)\n# Mindgames\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mindgames.execute_time,if=cooldown.mindgames.up||(cooldown.mindgames.remains_expected<buff.shadow_covenant.remains)\n# We always get the first SW:D\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.shadow_word_death.execute_time,if=cooldown.shadow_word_death.up||(cooldown.shadow_word_death.remains<buff.shadow_covenant.remains)\n# Second SW:D only when talented and target health in execute range\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.shadow_word_death.execute_time,if=(cooldown.shadow_word_death.up||(cooldown.shadow_word_death.remains<buff.shadow_covenant.remains))&(target.health.pct<20||target.time_to_pct_20<cooldown.shadow_word_death.remains)&talent.death_and_madness\n# Add any whole charges of mind blast\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mind_blast.charges*action.mind_blast.execute_time,if=action.mind_blast.charges>=1\n# Add any fractional charges of mindblast that will recharge in time\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mind_blast.execute_time,if=((action.mind_blast.charges_fractional>=1&action.mind_blast.charges_fractional<2)&(((1-(action.mind_blast.charges_fractional-1))*action.mind_blast.recharge_time)<buff.shadow_covenant.remains))||((action.mind_blast.charges_fractional<1)&(((1-action.mind_blast.charges_fractional)*action.mind_blast.recharge_time)<buff.shadow_covenant.remains))\n# Divine Star\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.divine_star.execute_time,if=cooldown.divine_star.up||(cooldown.divine_star.remains<buff.shadow_covenant.remains)\n# Halo\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.halo.execute_time,if=cooldown.halo.up||(cooldown.halo.remains<buff.shadow_covenant.remains)\n# Determine if we have enough scov time remaining to weave in a twilight equilibrium activation. If we don't have TE talented, always false. Using smite's execution time to represent a worst-case scenario.\nactions+=/variable,name=should_te,op=setif,condition=talent.twilight_equilibrium,value=(buff.shadow_covenant.remains-variable.shadow_spells_duration)>action.smite.execute_time,value_else=0\n\n# First casts should always be HD prep->covenant->schism->HD dark reprimand\nactions+=/variable,name=next_penance_time,op=set,value=cooldown.shadowfiend.remains+action.shadowfiend.execute_time\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_penance_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\nactions+=/variable,name=can_penance,op=set,value=(cooldown.penance.duration-variable.expected_penance_reduction)<variable.next_penance_time\n# Shadow Word: Death  SW:D is better than other spells if we are in execute phase.\nactions+=/variable,name=next_swd_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_swd_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# indgame  ette ha W:   ren'  xecut has n  av hattere erception  on' av xpiatio\nactions+=/variable,name=next_swd_time,op=add,value=action.mindgames.execute_time,if=((talent.mindgames&talent.shattered_perceptions)||(talent.mindgames&!talent.expiation))&target.health.pct>=20\n# Mind blast is better than SW:D if we aren't in execute\nactions+=/variable,name=next_swd_time,op=add,value=action.mind_blast.execute_time,if=target.health.pct>=20\n# Second mindblast when talented\nactions+=/variable,name=next_swd_time,op=add,value=action.mind_blast.execute_time,if=target.health.pct>=20&talent.dark_indulgence\n# Divine Star and halo are better than SW:D if we aren't in execute and don't have expiation\nactions+=/variable,name=next_swd_time,op=add,value=action.divine_star.execute_time,if=talent.divine_star&target.health.pct>=20&!talent.expiation\nactions+=/variable,name=next_swd_time,op=add,value=action.halo.execute_time,if=talent.halo&target.health.pct>=20&!talent.expiation\nactions+=/variable,name=can_swd,op=set,value=cooldown.shadow_word_death.duration_expected<variable.next_swd_time\n# Mindblast  Mindblast is better than other spells if we aren't in execute phase\nactions+=/variable,name=next_mind_blast_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_mind_blast_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# Add SW:D if we're in execute phase\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.shadow_word_death.execute_time,if=talent.death_and_madness&target.health.pct<20\n# Add mindgames if we have it talented and don't have expiation\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.mindgames.execute_time,if=talent.mindgames&!talent.expiation\n# TODO: This is a little bit simplistic, requiring both charges of mindblast to be available at the moment the first charge needs to be used. Slight optimization should be possible.\nactions+=/variable,name=can_mind_blast,op=setif,condition=action.mind_blast.charges_fractional>=1,value=((action.mind_blast.max_charges-(action.mind_blast.charges_fractional-1))*action.mind_blast.recharge_time)<variable.next_mind_blast_time,value_else=0\n# Mindgames  Mindgames is a better option than other spells if we aren't in execute and don't have expiation\nactions+=/variable,name=next_mindgames_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_mindgames_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# SW:D is better than mindgames in execute phase, or outside of execute phase if we don't have shattered perceptions but do have expiation\nactions+=/variable,name=next_mindgames_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20||(talent.expiation&!talent.shattered_perceptions)\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_mindgames_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20&talent.death_and_madness\n# Mind blast is better than mindgames if we have expiation\nactions+=/variable,name=next_mindgames_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation\n# Second mindblast when talented\nactions+=/variable,name=next_mindgames_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation&talent.dark_indulgence\nactions+=/variable,name=can_mindgames,op=set,value=cooldown.mindgames.duration_expected<variable.next_mindgames_time\n# Divine Star\nactions+=/variable,name=next_divine_star_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_divine_star_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# SW:D is better unless outside of execute phase when expiation is untalented\nactions+=/variable,name=next_divine_star_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20||talent.expiation\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_divine_star_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20&talent.death_and_madness\n# Mind blast is always better\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation\n# Second mindblast when talented\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mind_blast.execute_time,if=talent.dark_indulgence\n# Mindgames is always better\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mindgames.execute_time,if=talent.mindgames\nactions+=/variable,name=can_divine_star,op=set,value=cooldown.divine_star.duration<variable.next_divine_star_time\nactions+=/run_action_list,name=scov_prep,if=talent.shadow_covenant&cooldown.mindbender.up\n## actions+=/run_action_list,name=short_scov,if=variable.short_scov&variable.can_enter_scov\nactions+=/run_action_list,name=long_scov,if=variable.long_scov&variable.can_enter_scov\nactions+=/shadow_word_pain,if=(target.time_to_die>(0.3*dot.shadow_word_pain.duration))&(!ticking||(refreshable&(!talent.painful_punishment||(talent.painful_punishment&(dot.shadow_word_pain.remains<(cooldown.penance.remains-variable.expected_penance_reduction))))))\n## actions+=/schism,if=!talent.shadow_covenant\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&target.health.pct<20\nactions+=/mind_blast,if=talent.dark_indulgence&buff.power_of_the_dark_side.down&cooldown.penance.remains<gcd.max\nactions+=/penance,if=(!talent.shadow_covenant||variable.can_penance)\n## # For DPS, Lights wrath should always be used outside of scov when you take wrath unleashed to maximize the number of smites it buffs. In a real raid setting, you may want to cast it at the beginning of a scov cycle for additional healing.\n## actions+=/lights_wrath,if=talent.wrath_unleashed\nactions+=/mind_blast,if=!talent.shadow_covenant||variable.can_mind_blast\nactions+=/mindgames,if=(!talent.shadow_covenant||variable.can_mindgames)&talent.shattered_perceptions\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&talent.expiation&(target.time_to_pct_20>(0.5*cooldown.shadow_word_death.duration))\nactions+=/mindgames,if=(!talent.shadow_covenant||variable.can_mindgames)&!talent.shattered_perceptions\nactions+=/halo,if=!talent.shadow_covenant\nactions+=/divine_star,if=(!talent.shadow_covenant||variable.can_divine_star)\n## actions+=/power_word_solace\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&(target.time_to_pct_20>(0.5*cooldown.shadow_word_death.duration))\nactions+=/smite\n\n# Prepare to enter shadow covenant\nactions.scov_prep+=/power_word_radiance,if=cooldown.shadowfiend.remains<cast_time\n\n# Long Shadow Covenant\nactions.long_scov+=/mindbender\n## actions.long_scov+=/schism\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.halo>=3\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.divine_star>=3\nactions.long_scov+=/shadow_word_death,if=target.health.pct<20&talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/penance,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.halo>=2\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.divine_star>=2\nactions.long_scov+=/shadow_word_death,if=target.health.pct<20&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mind_blast,if=talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mindgames,if=talent.shattered_perceptions&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/shadow_word_death,if=talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))&(target.time_to_pct_20>buff.shadow_covenant.remains)\nactions.long_scov+=/mindgames,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mind_blast,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/shadow_word_death,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&(target.time_to_pct_20>buff.shadow_covenant.remains)\n## actions.long_scov+=/lights_wrath,if=(!variable.should_te||(variable.should_te&variable.te_holy))\nactions.long_scov+=/smite,if=(!variable.should_te||(variable.should_te&variable.te_holy))\n# just in case we run out of shadow spells with the above conditions\nactions.long_scov+=/penance\nactions.long_scov+=/mindgames\nactions.long_scov+=/mind_blast\nactions.long_scov+=/shadow_word_death\nactions.long_scov+=/divine_star\nactions.long_scov+=/halo\nactions.long_scov+=/smite\n\n## Cooldowns\n# Don't use pets during shadow covenant windows, wasting GCDs -- is this even possible anymore?\nactions.cooldowns+=/shadowfiend,if=!buff.shadow_covenant.up\n# hold PI to use with shadow covenant if we have it\nactions.cooldowns+=/power_infusion,if=!talent.shadow_covenant.enabled||(talent.shadow_covenant.enabled&(cooldown.shadowfiend.up||buff.shadow_covenant.up))\n# sync potion with PI\nactions.cooldowns+=/potion,if=buff.power_infusion.up\n# sync trinkets with PI\nactions.cooldowns+=/use_items,if=buff.power_infusion.up||cooldown.power_infusion.remains>=cooldown",
},
["Feral"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/druid_feral.simc",
["builtIn"] = true,
["date"] = 20250817,
["spec"] = 103,
["desc"] = "2025-08-17: Tweak Sabertooth chaining; timing\n\n2025-08-13: Fix Convoke\n\n2025-08-11: Fix Rip refreshable check\n\n2025-08-10: Fix 'wait' conditions\n\n2025-08-08: Initial APL",
["profile"] = "## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/druid_feral.simc\n## SimulationCraft Commit Sync: 5340e2f\n## Date: 2025-08-17\n\n## [Syrif] - This APL is VERY edited with CelestialRepose's rubber stamp. The true feral APL has 29 variables in it to essentially min-max trinkets, and CD sync on long fights.\nactions.precombat+=/mark_of_the_wild\nactions.precombat+=/prowl,if=!buff.prowl.up\nactions.precombat+=/cat_form,if=!buff.cat_form.up\n\nactions+=/prowl,if=buff.bs_inc.down&!buff.prowl.up\nactions+=/cat_form,if=!buff.cat_form.up&!talent.fluid_form\nactions+=/skull_bash\nactions+=/soothe\n## Line up <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> with Berserk.\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.bs_inc.up||!talent.berserk_heart_of_the_lion\nactions+=/call_action_list,name=variable\n## actions+=/stop_moving,if=gcd.remains=0&equipped.ovinaxs_mercurial_egg\nactions+=/tigers_fury,if=(energy.deficit>35||combo_points=5||combo_points>=3&dot.rip.refreshable&buff.bloodtalons.up&hero_tree.wildstalker)&(boss&fight_remains<=15||(cooldown.bs_inc.remains>20&fight_remains>5)||(cooldown.bs_inc.ready&fight_remains>12||boss))\nactions+=/rake,cycle_targets=1,if=buff.shadowmeld.up||buff.prowl.up\nactions+=/natures_vigil,if=variable.regrowth&health.percent<70&(buff.bs_inc.up||buff.tigers_fury.up)\nactions+=/renewal,if=variable.regrowth&health.percent<70\nactions+=/adaptive_swarm,cycle_targets=1,if=dot.adaptive_swarm_damage.stack<3&(!dot.adaptive_swarm_damage.ticking||dot.adaptive_swarm_damage.remains<2)&!action.adaptive_swarm.in_flight&(spell_targets=1||!talent.unbridled_swarm)&(dot.rip.ticking||hero_tree.druid_of_the_claw)\nactions+=/adaptive_swarm,cycle_targets=1,if=buff.cat_form.up&dot.adaptive_swarm_damage.stack<3&talent.unbridled_swarm.enabled&spell_targets.swipe_cat>1&dot.rip.ticking\nactions+=/ferocious_bite,if=buff.apex_predators_craving.up&!(variable.need_bt&active_bt_triggers=2)\nactions+=/call_action_list,name=cooldown,strict=1,if=dot.rip.ticking\n# with rip and tear, as wildstalker, we do 3cp rips\nactions+=/rip,if=talent.rip_and_tear&spell_targets=1&hero_tree.wildstalker&buff.tigers_fury.up&!buff.bs_inc.up&(buff.bloodtalons.up||!talent.bloodtalons)&(combo_points>=3&refreshable&cooldown.tigers_fury.remains>25||buff.tigers_fury.remains<5&variable.rip_duration>cooldown.tigers_fury.remains&cooldown.tigers_fury.remains>=dot.rip.remains)\nactions+=/call_action_list,name=builder,if=(buff.bs_inc.up&!buff.ravage.up&!buff.coiled_to_spring.up&hero_tree.druid_of_the_claw&talent.coiled_to_spring&spell_targets<=2)||buff.bloodtalons.stack=0&active_bt_triggers=2\nactions+=/wait,sec=cooldown.tigers_fury.remains,if=combo_points=5&cooldown.tigers_fury.remains>0&cooldown.tigers_fury.remains<3&spell_targets=1\nactions+=/call_action_list,name=finisher,if=combo_points=5\n## [Syrif] - combo_points<5 added to stop from sending generators inappropriately\nactions+=/call_action_list,name=builder,if=spell_targets.swipe_cat=1&combo_points<5\nactions+=/call_action_list,name=aoe_builder,if=spell_targets.swipe_cat>=2&combo_points<5\n# if we cant do anything else, then sure, tigers fury early\nactions+=/tigers_fury\nactions+=/regrowth,if=buff.predatory_swiftness.up&variable.regrowth\n\n# maintain thrash highest prio\nactions.aoe_builder+=/thrash_cat,if=refreshable&!talent.thrashing_claws&!(variable.need_bt&buff.bt_thrash.up)\n# avoid capping brs charges. Also send brutal slashes/ws swipe in aoe, even if we need to proc bloodtalons, during berserk.\nactions.aoe_builder+=/brutal_slash,if=(cooldown.brutal_slash.full_recharge_time<4||time_to_die<4||raid_event.adds.remains<4||(buff.bs_inc.up&spell_targets>=3-hero_tree.druid_of_the_claw))&!(variable.need_bt&buff.bt_swipe.up&(buff.bs_inc.down||spell_targets<3-hero_tree.druid_of_the_claw))\nactions.aoe_builder+=/swipe_cat,if=talent.wild_slashes&(time_to_die<4||raid_event.adds.remains<4||buff.bs_inc.up&spell_targets>=3-hero_tree.druid_of_the_claw)&!(variable.need_bt&buff.bt_swipe.up&(buff.bs_inc.down||spell_targets<3-hero_tree.druid_of_the_claw))\n# with wild slashes we swipe at 5+ targets over raking/moonfire\nactions.aoe_builder+=/swipe_cat,if=time_to_die<4||(talent.wild_slashes&spell_targets.swipe_cat>4&!(variable.need_bt&buff.bt_swipe.up))\nactions.aoe_builder+=/prowl,if=(dot.rake.refreshable||dot.rake.pmultiplier<1.4)&!(variable.need_bt&buff.bt_rake.up)&action.rake.ready&gcd.remains=0&!buff.sudden_ambush.up&!buff.clearcasting.at_max_stacks\nactions.aoe_builder+=/shadowmeld,if=(dot.rake.refreshable||dot.rake.pmultiplier<1.4)&!(variable.need_bt&buff.bt_rake.up)&action.rake.ready&!buff.sudden_ambush.up&!buff.prowl.up&!buff.clearcasting.at_max_stacks\n# dcr rake > moonfire\nactions.aoe_builder+=/rake,cycle_targets=1,if=refreshable&talent.doubleclawed_rake&!(variable.need_bt&buff.bt_rake.up)&!buff.clearcasting.at_max_stacks\n# at 3t with wild slashes, swipe is better than moonfiring/st rake\nactions.aoe_builder+=/swipe_cat,if=talent.wild_slashes&spell_targets.swipe_cat>2&!(variable.need_bt&buff.bt_swipe.up)\n# if wildstalker make sure you have at least one rake up\nactions.aoe_builder+=/rake,cycle_targets=1,if=!dot.rake.ticking&hero_tree.wildstalker\n# li moonfire is better than non-dcr rake in aoe if we already have 1 rake\nactions.aoe_builder+=/moonfire_cat,cycle_targets=1,if=refreshable&!(variable.need_bt&buff.bt_moonfire.up)&!buff.clearcasting.at_max_stacks\nactions.aoe_builder+=/rake,cycle_targets=1,if=refreshable&!(variable.need_bt&buff.bt_rake.up)&!buff.clearcasting.at_max_stacks\n## fillers\nactions.aoe_builder+=/brutal_slash,if=!(variable.need_bt&buff.bt_swipe.up)\nactions.aoe_builder+=/swipe_cat,if=!(variable.need_bt&buff.bt_swipe.up)\nactions.aoe_builder+=/shred,if=!buff.sudden_ambush.up&!variable.easy_swipe&!(variable.need_bt&buff.bt_shred.up)\nactions.aoe_builder+=/thrash_cat,if=!talent.thrashing_claws&!(variable.need_bt&buff.bt_thrash.up)\n## fallback bt actions\nactions.aoe_builder+=/rake,cycle_targets=1,if=talent.doubleclawed_rake&buff.sudden_ambush.up&variable.need_bt&buff.bt_rake.down\nactions.aoe_builder+=/moonfire_cat,cycle_targets=1,if=variable.need_bt&buff.bt_moonfire.down\nactions.aoe_builder+=/rake,cycle_targets=1,if=buff.sudden_ambush.up&variable.need_bt&buff.bt_rake.down\nactions.aoe_builder+=/shred,if=variable.need_bt&buff.bt_shred.down&!variable.easy_swipe\nactions.aoe_builder+=/rake,cycle_targets=1,if=dot.rake.pmultiplier<1.6&variable.need_bt&buff.bt_rake.down\nactions.aoe_builder+=/thrash_cat,if=variable.need_bt&buff.bt_thrash.down\n\nactions.builder+=/prowl,if=gcd.remains=0&energy>=35&!buff.sudden_ambush.up&(dot.rake.refreshable||dot.rake.pmultiplier<1.4)&!(variable.need_bt&buff.bt_rake.up)&buff.tigers_fury.up&!buff.shadowmeld.up\nactions.builder+=/shadowmeld,if=gcd.remains=0&energy>=35&!buff.sudden_ambush.up&(dot.rake.refreshable||dot.rake.pmultiplier<1.4)&!(variable.need_bt&buff.bt_rake.up)&buff.tigers_fury.up&!buff.prowl.up\n# upgrade to stealth rakes, otherwise refresh in pandemic. Delay rake as long as possible if it would downgrade\nactions.builder+=/rake,if=((refreshable&persistent_multiplier>=dot.rake.pmultiplier||dot.rake.remains<3.5)||buff.sudden_ambush.up&persistent_multiplier>dot.rake.pmultiplier)&!(variable.need_bt&buff.bt_rake.up)&(hero_tree.wildstalker||!buff.bs_inc.up)\n# bt check is due to the overcap line, comes up with convoke/apex bites\nactions.builder+=/shred,if=buff.sudden_ambush.up&buff.bs_inc.up&!(variable.need_bt&buff.bt_shred.up&active_bt_triggers=2)\nactions.builder+=/brutal_slash,if=cooldown.brutal_slash.full_recharge_time<4&!(variable.need_bt&buff.bt_swipe.up)\nactions.builder+=/moonfire_cat,if=refreshable\nactions.builder+=/thrash_cat,if=refreshable&!talent.thrashing_claws&!buff.bs_inc.up\nactions.builder+=/shred,if=buff.clearcasting.up&!(variable.need_bt&buff.bt_shred.up)\n# pool energy if we need to refresh dot in the next 1.5s [Hekili] TODO: Sim character to see how frequently this fires, determine if `wait` value should be adjusted.\nactions.builder+=/pool_resource,if=variable.dot_refresh_soon&energy.deficit>70&!variable.need_bt&!buff.bs_inc.up&cooldown.tigers_fury.remains>3\nactions.builder+=/brutal_slash,if=!(variable.need_bt&buff.bt_swipe.up)\nactions.builder+=/shred,if=!(variable.need_bt&buff.bt_shred.up)\nactions.builder+=/rake,if=refreshable\nactions.builder+=/thrash_cat,if=refreshable&!talent.thrashing_claws\nactions.builder+=/swipe_cat,if=variable.need_bt&buff.bt_swipe.down\n# clip rake for bt if it wont downgrade its snapshot\nactions.builder+=/rake,if=variable.need_bt&buff.bt_rake.down&persistent_multiplier>=dot.rake.pmultiplier\nactions.builder+=/moonfire_cat,if=variable.need_bt&buff.bt_moonfire.down\nactions.builder+=/thrash_cat,if=variable.need_bt&buff.bt_thrash.down\n\n# Trinket usage - damage on CD, buffs with cooldowns or short holds, fallbacks for fight end\nactions.cooldown+=/use_item,slot=trinket1,use_off_gcd=1,if=trinket.1.has_use_damage&(trinket.2.cooldown.remains>20||!trinket.2.has_use_buff)||trinket.1.has_use_buff&(buff.bs_inc.up||cooldown.bs_inc.remains<5||cooldown.bs_inc.remains<20&cooldown.convoke_the_spirits.remains>30)||boss&fight_remains<20\nactions.cooldown+=/use_item,slot=trinket2,use_off_gcd=1,if=trinket.2.has_use_damage&(trinket.1.cooldown.remains>20||!trinket.1.has_use_buff)||trinket.2.has_use_buff&(buff.bs_inc.up||trinket.2.cooldown.duration<=cooldown.bs_inc.remains)&(!trinket.1.has_use_buff||trinket.1.cooldown.remains>20)||boss&fight_remains<20\nactions.cooldown+=/berserking,if=buff.bs_inc.up\nactions.cooldown+=/potion,if=buff.bs_inc.up||boss&fight_remains<32\n## actions.cooldown+=/use_items\n## actions.cooldown+=/do_treacherous_transmitter_task,if=buff.tigers_fury.up||fight_remains<22\nactions.cooldown+=/incarnation\nactions.cooldown+=/berserk\nactions.cooldown+=/feral_frenzy,if=combo_points<=1+buff.bs_inc.up\n# always line up convoke with berserk if you can\nactions.cooldown+=/convoke_the_spirits,if=boss&fight_remains<5||buff.bs_inc.up&buff.bs_inc.remains<5-talent.ashamanes_guidance||buff.tigers_fury.up&!(fight_remains<cooldown.convoke_the_spirits.duration&fight_remains>(20+cooldown.bs_inc.remains)&cooldown.bs_inc.remains<60)&(combo_points<=4||buff.bs_inc.up&combo_points<=3)\n\n# maintain/upgrade pws, if we have 6.5+s left on pw, we will instead bite if we have rampant ferocity talented. Without rampant, we will bite a vined target with 6 or fewer targets. If we have Ravage, we use specifically Ravage at 7 or fewer targets.\nactions.finisher+=/primal_wrath,if=spell_targets.primal_wrath>1&((dot.primal_wrath.remains<6.5&!buff.bs_inc.up||dot.primal_wrath.refreshable)||(!talent.rampant_ferocity.enabled&(spell_targets.primal_wrath>1&!dot.bloodseeker_vines.ticking&!buff.ravage.up||spell_targets.primal_wrath>6+talent.ravage)))\n# rip if single target or pw isnt up. Rip with bloodtalons if talented. If tigers fury will be up before rip falls off, then delay refresh\nactions.finisher+=/rip,cycle_targets=1,if=refreshable&(!talent.primal_wrath||spell_targets=1)&(buff.bloodtalons.up||!talent.bloodtalons)&(buff.tigers_fury.up||dot.rip.remains<cooldown.tigers_fury.remains)&(remains<fight_remains||remains<4&buff.ravage.up)\n# only bite with ravage in aoe with berserk\nactions.finisher+=/call_action_list,name=aoe_builder,if=hero_tree.druid_of_the_claw&buff.bs_inc.up&!buff.ravage.up&spell_targets>=2\n## actions.finisher+=/call_action_list,name=builder,if=buff.ravage.up&buff.preparing_to_strike.remains<2&buff.preparing_to_strike.up&buff.bs_inc.up\n## [Hekili] Removing SbT wait and merging into Ferocious Bite conditions.\n## [Hekili] Note: This takes advantage of the fact there are no other (real) recommendations after these FBs in the *whole* priority.\n## actions.finisher+=/wait,sec=debuff.sabertooth.remains,if=debuff.sabertooth.up&energy.deficit>40\nactions.finisher+=/pool_resource,for_next=1\nactions.finisher+=/ferocious_bite,max_energy=1,cycle_targets=1,if=!buff.bs_inc.up&(debuff.sabertooth.down||energy.deficit<40)\nactions.finisher+=/pool_resource,for_next=1\nactions.finisher+=/ferocious_bite,cycle_targets=1,if=buff.bs_inc.up&(debuff.sabertooth.down||energy.deficit<40)\n\n# what rips new duration would be if applied in current state\nactions.variable+=/variable,name=rip_duration,value=((4+(4*combo_points))*(1-(0.2*talent.circle_of_life_and_death))*(1+(0.25*talent.veinripper)))+(variable.rip_max_pandemic_duration>?dot.rip.remains)\nactions.variable+=/variable,name=rip_max_pandemic_duration,value=((4+(4*combo_points))*(1-(0.2*talent.circle_of_life_and_death))*(1+(0.25*talent.veinripper)))*0.3\n# this returns true if we have a dot nearing pandemic range\nactions.variable+=/variable,name=dot_refresh_soon,value=(!talent.thrashing_claws&(dot.thrash_cat.remains-dot.thrash_cat.duration*0.3<=2))||(talent.lunar_inspiration&(dot.moonfire_cat.remains-dot.moonfire_cat.duration*0.3<=2))||((dot.rake.pmultiplier<1.6||buff.sudden_ambush.up)&(dot.rake.remains-dot.rake.duration*0.3<=2))\n# try to proc bt if we have 1 or 0 stacks of bloodtalons\nactions.variable+=/variable,name=need_bt,value=talent.bloodtalons&buff.bloodtalons.stack<=1\n# optional variable that sends regrowth and renewal casts. Turned off by default\nactions.variable+=/variable,name=regrowth,op=reset,value=settings.regrowth\n# optional variable that forgoes shredding in AoE. Turned off by default\nactions.variable+=/variable,name=easy_swipe,op=reset",
["version"] = 20250817,
["warnings"] = "The import for 'cooldown' required some automated changes.\nLine 1: Converted 'trinket.1.has_use_damage' to 'trinket.t1.has_use_damage' (1x).\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 1: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_use_damage' to 'trinket.t2.has_use_damage' (1x).\nLine 2: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 2: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 2: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\n\nImported 7 action lists.\n",
["lists"] = {
["aoe_builder"] = {
{
["enabled"] = true,
["criteria"] = "refreshable & ! talent.thrashing_claws.enabled & ! ( variable.need_bt & buff.bt_thrash.up )",
["action"] = "thrash_cat",
["description"] = "maintain thrash highest prio",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.brutal_slash.full_recharge_time < 4 || time_to_die < 4 || raid_event.adds.remains < 4 || ( buff.bs_inc.up & spell_targets >= 3 - hero_tree.druid_of_the_claw ) ) & ! ( variable.need_bt & buff.bt_swipe.up & ( buff.bs_inc.down || spell_targets < 3 - hero_tree.druid_of_the_claw ) )",
["action"] = "brutal_slash",
["description"] = "avoid capping brs charges. Also send brutal slashes/ws swipe in aoe, even if we need to proc bloodtalons, during berserk.",
},
{
["enabled"] = true,
["criteria"] = "talent.wild_slashes.enabled & ( time_to_die < 4 || raid_event.adds.remains < 4 || buff.bs_inc.up & spell_targets >= 3 - hero_tree.druid_of_the_claw ) & ! ( variable.need_bt & buff.bt_swipe.up & ( buff.bs_inc.down || spell_targets < 3 - hero_tree.druid_of_the_claw ) )",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "time_to_die < 4 || ( talent.wild_slashes.enabled & spell_targets.swipe_cat > 4 & ! ( variable.need_bt & buff.bt_swipe.up ) )",
["action"] = "swipe_cat",
["description"] = "with wild slashes we swipe at 5+ targets over raking/moonfire",
},
{
["enabled"] = true,
["criteria"] = "( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) & ! ( variable.need_bt & buff.bt_rake.up ) & action.rake.ready & gcd.remains = 0 & ! buff.sudden_ambush.up & ! buff.clearcasting.at_max_stacks",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) & ! ( variable.need_bt & buff.bt_rake.up ) & action.rake.ready & ! buff.sudden_ambush.up & ! buff.prowl.up & ! buff.clearcasting.at_max_stacks",
["action"] = "shadowmeld",
},
{
["enabled"] = true,
["action"] = "rake",
["cycle_targets"] = 1,
["criteria"] = "refreshable & talent.doubleclawed_rake.enabled & ! ( variable.need_bt & buff.bt_rake.up ) & ! buff.clearcasting.at_max_stacks",
["description"] = "dcr rake > moonfire",
},
{
["enabled"] = true,
["criteria"] = "talent.wild_slashes.enabled & spell_targets.swipe_cat > 2 & ! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "swipe_cat",
["description"] = "at 3t with wild slashes, swipe is better than moonfiring/st rake",
},
{
["enabled"] = true,
["action"] = "rake",
["cycle_targets"] = 1,
["criteria"] = "! dot.rake.ticking & hero_tree.wildstalker",
["description"] = "if wildstalker make sure you have at least one rake up",
},
{
["enabled"] = true,
["action"] = "moonfire_cat",
["cycle_targets"] = 1,
["criteria"] = "refreshable & ! ( variable.need_bt & buff.bt_moonfire.up ) & ! buff.clearcasting.at_max_stacks",
["description"] = "li moonfire is better than non-dcr rake in aoe if we already have 1 rake",
},
{
["enabled"] = true,
["action"] = "rake",
["criteria"] = "refreshable & ! ( variable.need_bt & buff.bt_rake.up ) & ! buff.clearcasting.at_max_stacks",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "! buff.sudden_ambush.up & ! variable.easy_swipe & ! ( variable.need_bt & buff.bt_shred.up )",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "! talent.thrashing_claws.enabled & ! ( variable.need_bt & buff.bt_thrash.up )",
["action"] = "thrash_cat",
},
{
["enabled"] = true,
["action"] = "rake",
["criteria"] = "talent.doubleclawed_rake.enabled & buff.sudden_ambush.up & variable.need_bt & buff.bt_rake.down",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "moonfire_cat",
["criteria"] = "variable.need_bt & buff.bt_moonfire.down",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rake",
["criteria"] = "buff.sudden_ambush.up & variable.need_bt & buff.bt_rake.down",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_shred.down & ! variable.easy_swipe",
["action"] = "shred",
},
{
["enabled"] = true,
["action"] = "rake",
["criteria"] = "dot.rake.pmultiplier < 1.6 & variable.need_bt & buff.bt_rake.down",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_thrash.down",
["action"] = "thrash_cat",
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "buff.bs_inc.down & ! buff.prowl.up",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up & ! talent.fluid_form.enabled",
["action"] = "cat_form",
},
{
["action"] = "skull_bash",
["enabled"] = true,
},
{
["action"] = "soothe",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variable",
},
{
["enabled"] = true,
["criteria"] = "( energy.deficit > 35 || combo_points = 5 || combo_points >= 3 & dot.rip.refreshable & buff.bloodtalons.up & hero_tree.wildstalker ) & ( boss & fight_remains <= 15 || ( cooldown.bs_inc.remains > 20 & fight_remains > 5 ) || ( cooldown.bs_inc.ready & fight_remains > 12 || boss ) )",
["action"] = "tigers_fury",
},
{
["enabled"] = true,
["action"] = "rake",
["criteria"] = "buff.shadowmeld.up || buff.prowl.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.regrowth & health.percent < 70 & ( buff.bs_inc.up || buff.tigers_fury.up )",
["action"] = "natures_vigil",
},
{
["enabled"] = true,
["criteria"] = "variable.regrowth & health.percent < 70",
["action"] = "renewal",
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "dot.adaptive_swarm_damage.stack < 3 & ( ! dot.adaptive_swarm_damage.ticking || dot.adaptive_swarm_damage.remains < 2 ) & ! action.adaptive_swarm.in_flight & ( spell_targets = 1 || ! talent.unbridled_swarm.enabled ) & ( dot.rip.ticking || hero_tree.druid_of_the_claw )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "buff.cat_form.up & dot.adaptive_swarm_damage.stack < 3 & talent.unbridled_swarm.enabled & spell_targets.swipe_cat > 1 & dot.rip.ticking",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.apex_predators_craving.up & ! ( variable.need_bt & active_bt_triggers = 2 )",
["action"] = "ferocious_bite",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "dot.rip.ticking",
["list_name"] = "cooldown",
},
{
["enabled"] = true,
["criteria"] = "talent.rip_and_tear.enabled & spell_targets = 1 & hero_tree.wildstalker & buff.tigers_fury.up & ! buff.bs_inc.up & ( buff.bloodtalons.up || ! talent.bloodtalons.enabled ) & ( combo_points >= 3 & refreshable & cooldown.tigers_fury.remains > 25 || buff.tigers_fury.remains < 5 & variable.rip_duration > cooldown.tigers_fury.remains & cooldown.tigers_fury.remains >= dot.rip.remains )",
["action"] = "rip",
["description"] = "with rip and tear, as wildstalker, we do 3cp rips",
},
{
["enabled"] = true,
["criteria"] = "( buff.bs_inc.up & ! buff.ravage.up & ! buff.coiled_to_spring.up & hero_tree.druid_of_the_claw & talent.coiled_to_spring.enabled & spell_targets <= 2 ) || buff.bloodtalons.stack = 0 & active_bt_triggers = 2",
["action"] = "call_action_list",
["list_name"] = "builder",
},
{
["enabled"] = true,
["sec"] = "cooldown.tigers_fury.remains",
["action"] = "wait",
["criteria"] = "combo_points = 5 & cooldown.tigers_fury.remains > 0 & cooldown.tigers_fury.remains < 3 & spell_targets = 1",
},
{
["enabled"] = true,
["criteria"] = "combo_points = 5",
["action"] = "call_action_list",
["list_name"] = "finisher",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.swipe_cat = 1 & combo_points < 5",
["action"] = "call_action_list",
["list_name"] = "builder",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.swipe_cat >= 2 & combo_points < 5",
["action"] = "call_action_list",
["list_name"] = "aoe_builder",
},
{
["enabled"] = true,
["description"] = "if we cant do anything else, then sure, tigers fury early",
["action"] = "tigers_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.predatory_swiftness.up & variable.regrowth",
["action"] = "regrowth",
},
},
["precombat"] = {
{
["action"] = "mark_of_the_wild",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up",
["action"] = "cat_form",
},
},
["builder"] = {
{
["enabled"] = true,
["criteria"] = "gcd.remains = 0 & energy >= 35 & ! buff.sudden_ambush.up & ( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) & ! ( variable.need_bt & buff.bt_rake.up ) & buff.tigers_fury.up & ! buff.shadowmeld.up",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "gcd.remains = 0 & energy >= 35 & ! buff.sudden_ambush.up & ( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) & ! ( variable.need_bt & buff.bt_rake.up ) & buff.tigers_fury.up & ! buff.prowl.up",
["action"] = "shadowmeld",
},
{
["enabled"] = true,
["criteria"] = "( ( refreshable & persistent_multiplier >= dot.rake.pmultiplier || dot.rake.remains < 3.5 ) || buff.sudden_ambush.up & persistent_multiplier > dot.rake.pmultiplier ) & ! ( variable.need_bt & buff.bt_rake.up ) & ( hero_tree.wildstalker || ! buff.bs_inc.up )",
["action"] = "rake",
["description"] = "upgrade to stealth rakes, otherwise refresh in pandemic. Delay rake as long as possible if it would downgrade",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_ambush.up & buff.bs_inc.up & ! ( variable.need_bt & buff.bt_shred.up & active_bt_triggers = 2 )",
["action"] = "shred",
["description"] = "bt check is due to the overcap line, comes up with convoke/apex bites",
},
{
["enabled"] = true,
["criteria"] = "cooldown.brutal_slash.full_recharge_time < 4 & ! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "moonfire_cat",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! talent.thrashing_claws.enabled & ! buff.bs_inc.up",
["action"] = "thrash_cat",
},
{
["enabled"] = true,
["criteria"] = "buff.clearcasting.up & ! ( variable.need_bt & buff.bt_shred.up )",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "variable.dot_refresh_soon & energy.deficit > 70 & ! variable.need_bt & ! buff.bs_inc.up & cooldown.tigers_fury.remains > 3",
["action"] = "pool_resource",
["description"] = "pool energy if we need to refresh dot in the next 1.5s [Hekili] TODO: Sim character to see how frequently this fires, determine if `wait` value should be adjusted.",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_shred.up )",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! talent.thrashing_claws.enabled",
["action"] = "thrash_cat",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_swipe.down",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_rake.down & persistent_multiplier >= dot.rake.pmultiplier",
["action"] = "rake",
["description"] = "clip rake for bt if it wont downgrade its snapshot",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_moonfire.down",
["action"] = "moonfire_cat",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_thrash.down",
["action"] = "thrash_cat",
},
},
["variable"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( 4 + ( 4 * combo_points ) ) * ( 1 - ( 0.2 * talent.circle_of_life_and_death.enabled ) ) * ( 1 + ( 0.25 * talent.veinripper.enabled ) ) ) + ( variable.rip_max_pandemic_duration >? dot.rip.remains )",
["description"] = "what rips new duration would be if applied in current state",
["var_name"] = "rip_duration",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( 4 + ( 4 * combo_points ) ) * ( 1 - ( 0.2 * talent.circle_of_life_and_death.enabled ) ) * ( 1 + ( 0.25 * talent.veinripper.enabled ) ) ) * 0.3",
["var_name"] = "rip_max_pandemic_duration",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ! talent.thrashing_claws.enabled & ( dot.thrash_cat.remains - dot.thrash_cat.duration * 0.3 <= 2 ) ) || ( talent.lunar_inspiration.enabled & ( dot.moonfire_cat.remains - dot.moonfire_cat.duration * 0.3 <= 2 ) ) || ( ( dot.rake.pmultiplier < 1.6 || buff.sudden_ambush.up ) & ( dot.rake.remains - dot.rake.duration * 0.3 <= 2 ) )",
["description"] = "this returns true if we have a dot nearing pandemic range",
["var_name"] = "dot_refresh_soon",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.bloodtalons.enabled & buff.bloodtalons.stack <= 1",
["description"] = "try to proc bt if we have 1 or 0 stacks of bloodtalons",
["var_name"] = "need_bt",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["value"] = "settings.regrowth",
["description"] = "optional variable that sends regrowth and renewal casts. Turned off by default",
["var_name"] = "regrowth",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "easy_swipe",
["description"] = "optional variable that forgoes shredding in AoE. Turned off by default",
},
},
["cooldown"] = {
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "trinket.t1.has_use_damage & ( trinket.t2.cooldown.remains > 20 || ! trinket.t2.has_use_buff ) || trinket.t1.has_use_buff & ( buff.bs_inc.up || cooldown.bs_inc.remains < 5 || cooldown.bs_inc.remains < 20 & cooldown.convoke_the_spirits.remains > 30 ) || boss & fight_remains < 20",
["description"] = "Trinket usage - damage on CD, buffs with cooldowns or short holds, fallbacks for fight end",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "trinket.t2.has_use_damage & ( trinket.t1.cooldown.remains > 20 || ! trinket.t1.has_use_buff ) || trinket.t2.has_use_buff & ( buff.bs_inc.up || trinket.t2.cooldown.duration <= cooldown.bs_inc.remains ) & ( ! trinket.t1.has_use_buff || trinket.t1.cooldown.remains > 20 ) || boss & fight_remains < 20",
},
{
["enabled"] = true,
["criteria"] = "buff.bs_inc.up",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.bs_inc.up || boss & fight_remains < 32",
["action"] = "potion",
},
{
["action"] = "incarnation",
["enabled"] = true,
},
{
["action"] = "berserk",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_points <= 1 + buff.bs_inc.up",
["action"] = "feral_frenzy",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 5 || buff.bs_inc.up & buff.bs_inc.remains < 5 - talent.ashamanes_guidance.enabled || buff.tigers_fury.up & ! ( fight_remains < cooldown.convoke_the_spirits.duration & fight_remains > ( 20 + cooldown.bs_inc.remains ) & cooldown.bs_inc.remains < 60 ) & ( combo_points <= 4 || buff.bs_inc.up & combo_points <= 3 )",
["action"] = "convoke_the_spirits",
["description"] = "always line up convoke with berserk if you can",
},
},
["finisher"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.primal_wrath > 1 & ( ( dot.primal_wrath.remains < 6.5 & ! buff.bs_inc.up || dot.primal_wrath.refreshable ) || ( ! talent.rampant_ferocity.enabled & ( spell_targets.primal_wrath > 1 & ! dot.bloodseeker_vines.ticking & ! buff.ravage.up || spell_targets.primal_wrath > 6 + talent.ravage.enabled ) ) )",
["action"] = "primal_wrath",
["description"] = "maintain/upgrade pws, if we have 6.5+s left on pw, we will instead bite if we have rampant ferocity talented. Without rampant, we will bite a vined target with 6 or fewer targets. If we have Ravage, we use specifically Ravage at 7 or fewer targets.",
},
{
["enabled"] = true,
["action"] = "rip",
["cycle_targets"] = 1,
["criteria"] = "refreshable & ( ! talent.primal_wrath.enabled || spell_targets = 1 ) & ( buff.bloodtalons.up || ! talent.bloodtalons.enabled ) & ( buff.tigers_fury.up || dot.rip.remains < cooldown.tigers_fury.remains ) & ( remains < fight_remains || remains < 4 & buff.ravage.up )",
["description"] = "rip if single target or pw isnt up. Rip with bloodtalons if talented. If tigers fury will be up before rip falls off, then delay refresh",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "only bite with ravage in aoe with berserk",
["criteria"] = "hero_tree.druid_of_the_claw & buff.bs_inc.up & ! buff.ravage.up & spell_targets >= 2",
["list_name"] = "aoe_builder",
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["action"] = "ferocious_bite",
["cycle_targets"] = 1,
["criteria"] = "! buff.bs_inc.up & ( debuff.sabertooth.down || energy.deficit < 40 )",
["max_energy"] = 1,
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["action"] = "ferocious_bite",
["criteria"] = "buff.bs_inc.up & ( debuff.sabertooth.down || energy.deficit < 40 )",
["cycle_targets"] = 1,
},
},
},
["author"] = "CelestialRepose + Syrif",
},
["Restoration Druid"] = {
["builtIn"] = true,
["date"] = 20250425,
["spec"] = 105,
["desc"] = "2025-04-25: Fix target_if; tweak healing",
["profile"] = "## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/druid_restoration.simc\n## Up to date with SimC: March 8 2025 - ccb7c79\n\n# Snapshot raid buffed stats before combat begins and pre-potting is done.\nactions.precombat+=/mark_of_the_wild\nactions.precombat+=/symbiotic_relationship,if=down&active_allies>1\nactions.precombat+=/prowl,if=talent.rake.enabled\nactions.precombat+=/cat_form,if=talent.rake.enabled1\n\nactions+=/skull_bash\nactions+=/berserking\nactions+=/natures_vigil,if=!buff.prowl.up&!buff.shadowmeld.up\nactions+=/call_action_list,name=healing,strict=1,if=settings.healing_mode&buff.prowl.down\nactions+=/heart_of_the_wild,if=!buff.prowl.up&!buff.shadowmeld.up\nactions+=/use_items,if=!buff.prowl.up&!buff.shadowmeld.up\nactions+=/potion,if=!buff.prowl.up&!buff.shadowmeld.up\nactions+=/run_action_list,name=cat,strict=1,if=talent.rake.enabled||buff.cat_form.up\nactions+=/cat_form,if=talent.rake.enabled\nactions+=/convoke_the_spirits,if=(buff.heart_of_the_wild.up||cooldown.heart_of_the_wild.remains>60-30*talent.cenarius_guidance.enabled||!talent.heart_of_the_wild.enabled)\nactions+=/sunfire,cycle_targets=1,if=refreshable&target.time_to_die>5&talent.improved_sunfire.enabled\nactions+=/moonfire,cycle_targets=1,if=refreshable&time_to_die>12\nactions+=/starsurge,if=active_enemies<8\nactions+=/sunfire,cycle_targets=1,if=refreshable&target.time_to_die>7&active_enemies<7\nactions+=/starfire,if=spell_targets.starfire>1||buff.heart_of_the_wild.up\nactions+=/wrath\n\nactions.cat+=/rake,if=buff.shadowmeld.up||buff.prowl.up||buff.sudden_ambush.up\nactions.cat+=/heart_of_the_wild,if=(cooldown.convoke_the_spirits.remains<40||!talent.convoke_the_spirits.enabled)||boss&fight_remains<46\nactions.cat+=/cat_form,if=talent.convoke_the_spirits.enabled&(active_enemies<=6)&(!buff.cat_form.up&cooldown.convoke_the_spirits.remains<=gcd.max&(buff.heart_of_the_wild.up||cooldown.heart_of_the_wild.remains>60-30*talent.cenarius_guidance.enabled||!talent.heart_of_the_wild.enabled))\nactions.cat+=/convoke_the_spirits,if=(buff.cat_form.up)&(buff.heart_of_the_wild.up||cooldown.heart_of_the_wild.remains>60-30*talent.cenarius_guidance.enabled||!talent.heart_of_the_wild.enabled)\nactions.cat+=/rip,cycle_targets=1,if=((refreshable||energy>90&remains<=10)&(combo_points=5&time_to_die>remains+24||(remains+combo_points*4<time_to_die&remains+4+combo_points*4>time_to_die))||!ticking&combo_points>2+spell_targets.swipe_cat*2)\nactions.cat+=/pool_resource,for_next=1\nactions.cat+=/thrash_cat,cycle_targets=1,if=refreshable&target.time_to_die>5&spell_targets.thrash_cat>4\nactions.cat+=/sunfire,cycle_targets=1,if=(refreshable&target.time_to_die>5)&!prev_gcd.1.cat_form\nactions.cat+=/rake,cycle_targets=1,if=refreshable&(time_to_die>8&!ticking)||(active_dot.rake<1&talent.primal_fury.enabled&talent.master_shapeshifter.enabled&spell_targets.swipe_cat>4)\n# [Hekili] Modified as cooldown.healing and druid.time_spend_healing are not supported.\nactions.cat+=/cat_form,if=!buff.cat_form.up&energy>60&!talent.fluid_form.enabled\nactions.cat+=/moonfire,cycle_targets=1,if=(refreshable&time_to_die>12&!ticking||(prev_gcd.1.sunfire&remains<duration*0.8&spell_targets.sunfire=1))&!prev_gcd.1.cat_form&spell_targets.swipe_cat<4\nactions.cat+=/sunfire,if=prev_gcd.1.moonfire&remains<duration*0.8\nactions.cat+=/starfire,if=(talent.master_shapeshifter.enabled&(spell_targets.starfire>4||(buff.heart_of_the_wild.up&spell_targets.starfire>5))||(buff.heart_of_the_wild.up&spell_targets.starfire>7))\nactions.cat+=/starsurge,if=active_enemies=1||(active_enemies<8&!buff.cat_form.up)\nactions.cat+=/cat_form,if=!buff.cat_form.up&energy>50&!talent.fluid_form.enabled\nactions.cat+=/pool_resource,for_next=1\nactions.cat+=/ferocious_bite,cycle_targets=1,if=(combo_points>3&target.time_to_die<3)||(combo_points=5&energy>=50&dot.rip.remains>10)&spell_targets.swipe_cat<4\nactions.cat+=/thrash_cat,cycle_targets=1,if=refreshable&target.time_to_die>5&spell_targets.thrash_cat>2\nactions.cat+=/rake,cycle_targets=1,if=refreshable&time_to_die>10&(!talent.primal_fury.enabled||!talent.master_shapeshifter.enabled||!spell_targets.swipe_cat>4)\nactions.cat+=/swipe_cat,if=active_enemies>2&combo_points<5\nactions.cat+=/thrash_cat,if=refreshable&fight_remains>5\nactions.cat+=/pool_resource,for_next=1\nactions.cat+=/shred,if=energy>60&combo_points<5\nactions.cat+=/ferocious_bite,if=energy>50&combo_points.deficit=0\nactions.cat+=/cat_form,if=!buff.cat_form.up\n\n# On the tank\nactions.healing+=/rejuvenation,if=active_dot.rejuvenation<1\n# On an ally\nactions.healing+=/lifebloom,if=(active_dot.lifebloom<1)||(active_dot.lifebloom<2&buff.lifebloom.up&talent.undergrowth.enabled)\n# On yourself\nactions.healing+=/lifebloom,if=(active_dot.lifebloom<2&buff.lifebloom.down&talent.undergrowth.enabled)\n# Maintain Efflo\nactions.healing+=/efflorescence,if=buff.efflorescence.down\n# transform into tree\nactions.healing+=/swiftmend,if=(active_dot.regrowth+active_dot.wild_growth+active_dot.rejuvenation)>1&talent.reforestation.enabled&buff.reforestation.stack=3\n# Always wild growth after swiftmend\nactions.healing+=/wild_growth,if=prev.1.swiftmend",
["version"] = 20250425,
["warnings"] = "Imported 4 action lists.\n",
["author"] = "Makahiki",
["lists"] = {
["cat"] = {
{
["enabled"] = true,
["criteria"] = "buff.shadowmeld.up || buff.prowl.up || buff.sudden_ambush.up",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.convoke_the_spirits.remains < 40 || ! talent.convoke_the_spirits.enabled ) || boss & fight_remains < 46",
["action"] = "heart_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "talent.convoke_the_spirits.enabled & ( active_enemies <= 6 ) & ( ! buff.cat_form.up & cooldown.convoke_the_spirits.remains <= gcd.max & ( buff.heart_of_the_wild.up || cooldown.heart_of_the_wild.remains > 60 - 30 * talent.cenarius_guidance.enabled || ! talent.heart_of_the_wild.enabled ) )",
["action"] = "cat_form",
},
{
["enabled"] = true,
["criteria"] = "( buff.cat_form.up ) & ( buff.heart_of_the_wild.up || cooldown.heart_of_the_wild.remains > 60 - 30 * talent.cenarius_guidance.enabled || ! talent.heart_of_the_wild.enabled )",
["action"] = "convoke_the_spirits",
},
{
["enabled"] = true,
["criteria"] = "( ( refreshable || energy > 90 & remains <= 10 ) & ( combo_points = 5 & time_to_die > remains + 24 || ( remains + combo_points * 4 < time_to_die & remains + 4 + combo_points * 4 > time_to_die ) ) || ! ticking & combo_points > 2 + spell_targets.swipe_cat * 2 )",
["action"] = "rip",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 5 & spell_targets.thrash_cat > 4",
["action"] = "thrash_cat",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( refreshable & target.time_to_die > 5 ) & ! prev_gcd.1.cat_form",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & ( time_to_die > 8 & ! ticking ) || ( active_dot.rake < 1 & talent.primal_fury.enabled & talent.master_shapeshifter.enabled & spell_targets.swipe_cat > 4 )",
["action"] = "rake",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up & energy > 60 & ! talent.fluid_form.enabled",
["action"] = "cat_form",
["description"] = "[Hekili] Modified as cooldown.healing and druid.time_spend_healing are not supported.",
},
{
["enabled"] = true,
["criteria"] = "( refreshable & time_to_die > 12 & ! ticking || ( prev_gcd.1.sunfire & remains < duration * 0.8 & spell_targets.sunfire = 1 ) ) & ! prev_gcd.1.cat_form & spell_targets.swipe_cat < 4",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.moonfire & remains < duration * 0.8",
["action"] = "sunfire",
},
{
["enabled"] = true,
["criteria"] = "( talent.master_shapeshifter.enabled & ( spell_targets.starfire > 4 || ( buff.heart_of_the_wild.up & spell_targets.starfire > 5 ) ) || ( buff.heart_of_the_wild.up & spell_targets.starfire > 7 ) )",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 || ( active_enemies < 8 & ! buff.cat_form.up )",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up & energy > 50 & ! talent.fluid_form.enabled",
["action"] = "cat_form",
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "( combo_points > 3 & target.time_to_die < 3 ) || ( combo_points = 5 & energy >= 50 & dot.rip.remains > 10 ) & spell_targets.swipe_cat < 4",
["action"] = "ferocious_bite",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 5 & spell_targets.thrash_cat > 2",
["action"] = "thrash_cat",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & time_to_die > 10 & ( ! talent.primal_fury.enabled || ! talent.master_shapeshifter.enabled || ! spell_targets.swipe_cat > 4 )",
["action"] = "rake",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & combo_points < 5",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "refreshable & fight_remains > 5",
["action"] = "thrash_cat",
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "energy > 60 & combo_points < 5",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "energy > 50 & combo_points.deficit = 0",
["action"] = "ferocious_bite",
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up",
["action"] = "cat_form",
},
},
["healing"] = {
{
["enabled"] = true,
["criteria"] = "active_dot.rejuvenation < 1",
["action"] = "rejuvenation",
["description"] = "On the tank",
},
{
["enabled"] = true,
["criteria"] = "( active_dot.lifebloom < 1 ) || ( active_dot.lifebloom < 2 & buff.lifebloom.up & talent.undergrowth.enabled )",
["action"] = "lifebloom",
["description"] = "On an ally",
},
{
["enabled"] = true,
["criteria"] = "( active_dot.lifebloom < 2 & buff.lifebloom.down & talent.undergrowth.enabled )",
["action"] = "lifebloom",
["description"] = "On yourself",
},
{
["enabled"] = true,
["criteria"] = "buff.efflorescence.down",
["action"] = "efflorescence",
["description"] = "Maintain Efflo",
},
{
["enabled"] = true,
["criteria"] = "( active_dot.regrowth + active_dot.wild_growth + active_dot.rejuvenation ) > 1 & talent.reforestation.enabled & buff.reforestation.stack = 3",
["action"] = "swiftmend",
["description"] = "transform into tree",
},
{
["enabled"] = true,
["criteria"] = "prev.1.swiftmend",
["action"] = "wild_growth",
["description"] = "Always wild growth after swiftmend",
},
},
["default"] = {
{
["action"] = "skull_bash",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "natures_vigil",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "settings.healing_mode & buff.prowl.down",
["list_name"] = "healing",
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "heart_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "use_items",
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.rake.enabled || buff.cat_form.up",
["list_name"] = "cat",
},
{
["enabled"] = true,
["criteria"] = "talent.rake.enabled",
["action"] = "cat_form",
},
{
["enabled"] = true,
["criteria"] = "( buff.heart_of_the_wild.up || cooldown.heart_of_the_wild.remains > 60 - 30 * talent.cenarius_guidance.enabled || ! talent.heart_of_the_wild.enabled )",
["action"] = "convoke_the_spirits",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 5 & talent.improved_sunfire.enabled",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & time_to_die > 12",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies < 8",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 7 & active_enemies < 7",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.starfire > 1 || buff.heart_of_the_wild.up",
["action"] = "starfire",
},
{
["action"] = "wrath",
["enabled"] = true,
},
},
["precombat"] = {
{
["enabled"] = true,
["description"] = "Snapshot raid buffed stats before combat begins and pre-potting is done.",
["action"] = "mark_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "down & active_allies > 1",
["action"] = "symbiotic_relationship",
},
{
["enabled"] = true,
["criteria"] = "talent.rake.enabled",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "talent.rake.enabled1",
["action"] = "cat_form",
},
},
},
},
["Frost DK"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/deathknight_frost.simc",
["builtIn"] = true,
["date"] = 20250826,
["author"] = "SimC",
["desc"] = "-- The War Within Season 3\n2025-08-26: APL Sync - 8aa4db9\n2025-08-17: Re-revise target swaps\n2025-08-12: APL Sync - 22b0c5d\n2025-08-06: Initial APL",
["lists"] = {
["single_target"] = {
{
["enabled"] = true,
["action"] = "obliterate",
["description"] = "Single Target Rotation",
["criteria"] = "buff.killing_machine.stack = 2 || ( buff.killing_machine.up & rune >= 3 )",
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up & talent.frostbound_will.enabled",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "debuff.razorice.stack = 5 & talent.shattering_blade.enabled & ! variable.rp_pooling",
["action"] = "frost_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "! talent.shattering_blade.enabled & ! variable.rp_pooling & runic_power.deficit < 30",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & ! variable.rune_pooling",
["action"] = "obliterate",
},
{
["enabled"] = true,
["criteria"] = "! variable.rp_pooling",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "! variable.rune_pooling & ! ( talent.obliteration.enabled & buff.pillar_of_frost.up )",
["action"] = "obliterate",
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up & ( talent.obliteration.enabled & buff.pillar_of_frost.up )",
["action"] = "howling_blast",
},
},
["aoe"] = {
{
["enabled"] = true,
["action"] = "frostscythe",
["description"] = "Aoe Rotation",
["criteria"] = "( buff.killing_machine.stack = 2 || ( buff.killing_machine.up & rune >= 3 ) ) & active_enemies >= variable.frostscythe_prio",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.stack = 2 || ( buff.killing_machine.up & rune >= 3 )",
["action"] = "obliterate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up & talent.frostbound_will.enabled || ! dot.frost_fever.ticking",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "debuff.razorice.stack = 5 & buff.frostbane.up",
["action"] = "frost_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "debuff.razorice.stack = 5 & talent.shattering_blade.enabled & active_enemies < 5 & ! variable.rp_pooling & ! talent.frostbane.enabled",
["action"] = "frost_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & ! variable.rune_pooling & active_enemies >= variable.frostscythe_prio",
["action"] = "frostscythe",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & ! variable.rune_pooling",
["action"] = "obliterate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "! variable.rp_pooling",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "! variable.rune_pooling & ! ( talent.obliteration.enabled & buff.pillar_of_frost.up ) & active_enemies >= variable.frostscythe_prio",
["action"] = "frostscythe",
},
{
["enabled"] = true,
["criteria"] = "! variable.rune_pooling & ! ( talent.obliteration.enabled & buff.pillar_of_frost.up )",
["action"] = "obliterate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up & ( talent.obliteration.enabled & buff.pillar_of_frost.up )",
["action"] = "howling_blast",
},
},
["default"] = {
{
["action"] = "mind_freeze",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up ) || ! talent.pillar_of_frost.enabled || fight_remains < 20",
["var_name"] = "cooldown_check",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( buff.pillar_of_frost.remains < gcd.max || ( buff.unholy_strength.up & buff.unholy_strength.remains < gcd.max ) || ( talent.bonegrinder.rank = 2 & buff.bonegrinder_frost.up & buff.bonegrinder_frost.remains < gcd.max ) ) & ( active_enemies > 1 || debuff.razorice.stack = 5 || talent.shattering_blade.enabled )",
["var_name"] = "fwf_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "hero_tree.deathbringer & cooldown.reapers_mark.remains < 6 & rune < 3",
["var_name"] = "rune_pooling",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.breath_of_sindragosa.enabled & cooldown.breath_of_sindragosa.remains < 4 * gcd.max & runic_power < 60 + ( 35 + 5 * buff.icy_onslaught.up ) - ( 10 * rune )",
["var_name"] = "rp_pooling",
},
{
["enabled"] = true,
["op"] = "set",
["description"] = "Frostscythe is equal at 3 targets, except with Rider 4pc which brings Obliterate higher at 3, unless cleaving strikes is up",
["value"] = "4",
["var_name"] = "frostscythe_prio",
["action"] = "variable",
["value_else"] = "3",
["criteria"] = "set_bonus.tww3_rider_of_the_apocalypse_4pc > 0 & ! ( talent.cleaving_strikes.enabled & buff.remorseless_winter.up )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.breath_of_sindragosa.enabled & ( cooldown.breath_of_sindragosa.remains > 20 || ( cooldown.breath_of_sindragosa.up & runic_power >= ( 60 - 20 * hero_tree.deathbringer ) ) )",
["var_name"] = "breath_of_sindragosa_check",
},
{
["enabled"] = true,
["action"] = "unyielding_netherprism",
["criteria"] = "buff.latent_energy.stack > 8 & buff.pillar_of_frost.remains & ( ! talent.breath_of_sindragosa.enabled || buff.breath_of_sindragosa.remains )",
["name"] = "unyielding_netherprism",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t1.cast_time > 0 & variable.trinket_1_buffs & ! variable.trinket_1_manual & buff.pillar_of_frost.remains & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 )",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t2.cast_time > 0 & variable.trinket_2_buffs & ! variable.trinket_2_manual & buff.pillar_of_frost.remains & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "Channeled buff trinkets will be used before cooldowns",
["criteria"] = "trinket.t1.cast_time > 0 & ( ! trinket.t2.is.unyielding_netherprism || buff.latent_energy.stack < 8 ) & ( ! hero_tree.rider_of_the_apocalypse || cooldown.frostwyrms_fury.remains ) & variable.trinket_1_buffs & ! variable.trinket_1_manual & cooldown.pillar_of_frost.remains < trinket.t1.cast_time & ( ! talent.breath_of_sindragosa.enabled || variable.breath_of_sindragosa_check ) & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || variable.trinket_1_duration >= fight_remains",
},
{
["enabled"] = true,
["criteria"] = "trinket.t2.cast_time > 0 & ( ! trinket.t1.is.unyielding_netherprism || buff.latent_energy.stack < 8 ) & ( ! hero_tree.rider_of_the_apocalypse || cooldown.frostwyrms_fury.remains ) & variable.trinket_2_buffs & ! variable.trinket_2_manual & cooldown.pillar_of_frost.remains < trinket.t2.cast_time & ( ! talent.breath_of_sindragosa.enabled || variable.breath_of_sindragosa_check ) & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || variable.trinket_2_duration >= fight_remains",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( variable.damage_trinket_priority = 1 || ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains ) ) & ( ( trinket.t1.cast_time > 0 & ( ! talent.breath_of_sindragosa.enabled || ! buff.breath_of_sindragosa.up ) & ! buff.pillar_of_frost.up || ! trinket.t1.cast_time > 0 ) & ( ! variable.trinket_2_buffs || cooldown.pillar_of_frost.remains > 20 ) || ! talent.pillar_of_frost.enabled ) || fight_remains < 15",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( variable.damage_trinket_priority = 2 || ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains ) ) & ( ( trinket.t2.cast_time > 0 & ( ! talent.breath_of_sindragosa.enabled || ! buff.breath_of_sindragosa.up ) & ! buff.pillar_of_frost.up || ! trinket.t2.cast_time > 0 ) & ( ! variable.trinket_1_buffs || cooldown.pillar_of_frost.remains > 20 ) || ! talent.pillar_of_frost.enabled ) || fight_remains < 15",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "buff.pillar_of_frost.up || ( buff.breath_of_sindragosa.up & cooldown.pillar_of_frost.remains ) || ( variable.trinket_1_buffs & variable.trinket_2_buffs & ( trinket.t1.cooldown.remains < cooldown.pillar_of_frost.remains || trinket.t2.cooldown.remains < cooldown.pillar_of_frost.remains ) & cooldown.pillar_of_frost.remains > 20 ) || fight_remains < 15",
["action"] = "main_hand",
["slot"] = "main_hand",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "variable.cooldown_check || fight_remains < 25",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies > 1 || talent.gathering_storm.enabled ) || ( buff.gathering_storm.stack = 10 & buff.remorseless_winter.remains < gcd.max ) & fight_remains > 10",
["action"] = "remorseless_winter",
},
{
["enabled"] = true,
["criteria"] = "hero_tree.rider_of_the_apocalypse & talent.apocalypse_now.enabled & ( cooldown.pillar_of_frost.remains < gcd.max || fight_remains < 20 ) & ! talent.breath_of_sindragosa.enabled",
["action"] = "frostwyrms_fury",
},
{
["enabled"] = true,
["criteria"] = "hero_tree.rider_of_the_apocalypse & talent.apocalypse_now.enabled & ( cooldown.pillar_of_frost.remains < gcd.max || fight_remains < 20 ) & talent.breath_of_sindragosa.enabled & runic_power >= 60",
["action"] = "frostwyrms_fury",
},
{
["enabled"] = true,
["criteria"] = "! talent.breath_of_sindragosa.enabled & ( ! hero_tree.deathbringer || rune >= 2 ) || fight_remains < 20",
["action"] = "pillar_of_frost",
},
{
["enabled"] = true,
["criteria"] = "talent.breath_of_sindragosa.enabled & variable.breath_of_sindragosa_check & ( ! hero_tree.deathbringer || rune >= 2 )",
["action"] = "pillar_of_frost",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "! buff.breath_of_sindragosa.up & ( buff.pillar_of_frost.up || fight_remains < 20 )",
["action"] = "breath_of_sindragosa",
},
{
["enabled"] = true,
["criteria"] = "buff.pillar_of_frost.up || cooldown.pillar_of_frost.remains > 5 || fight_remains < 20",
["action"] = "reapers_mark",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! talent.apocalypse_now.enabled & active_enemies = 1 & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up & ! talent.obliteration.enabled || ! talent.pillar_of_frost.enabled ) & ( ! raid_event.adds.exists || raid_event.adds.in > cooldown.frostwyrms_fury.duration + raid_event.adds.duration ) & variable.fwf_buffs || fight_remains < 3",
["action"] = "frostwyrms_fury",
},
{
["enabled"] = true,
["criteria"] = "! talent.apocalypse_now.enabled & active_enemies >= 2 & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up || raid_event.adds.exists & raid_event.adds.up & raid_event.adds.in < cooldown.pillar_of_frost.remains - raid_event.adds.in - raid_event.adds.duration ) & variable.fwf_buffs",
["action"] = "frostwyrms_fury",
},
{
["enabled"] = true,
["criteria"] = "! talent.apocalypse_now.enabled & talent.obliteration.enabled & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up & ! main_hand.2h || ! buff.pillar_of_frost.up & main_hand.2h & cooldown.pillar_of_frost.remains || ! talent.pillar_of_frost.enabled ) & variable.fwf_buffs & ( ! raid_event.adds.exists || raid_event.adds.in > cooldown.frostwyrms_fury.duration + raid_event.adds.duration )",
["action"] = "frostwyrms_fury",
},
{
["use_off_gcd"] = 1,
["action"] = "raise_dead",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.reaper_of_souls.enabled & buff.reaper_of_souls.up & buff.killing_machine.stack < 2",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "( rune < 2 || ! buff.killing_machine.up ) & runic_power < 35 + ( talent.icy_onslaught.enabled * buff.icy_onslaught.stack * 5 ) & gcd.remains < 0.5",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "cooldown.empower_rune_weapon.full_recharge_time <= 6 & buff.killing_machine.stack < 1 + ( 1 * talent.killing_streak.enabled ) & gcd.remains < 0.5",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "variable.cooldown_check",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "variable.cooldown_check",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "arcane_pulse",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "variable.cooldown_check",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "variable.cooldown_check",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! buff.pillar_of_frost.up & buff.unholy_strength.up",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & buff.pillar_of_frost.up & ( buff.unholy_strength.up & buff.unholy_strength.remains < gcd.max * 3 || buff.pillar_of_frost.remains < gcd.max * 3 )",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 3",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "single_target",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "trinket.t1.has_use_buff & ( talent.pillar_of_frost.enabled & ! talent.breath_of_sindragosa.enabled & ( trinket.t1.cooldown.duration % cooldown.pillar_of_frost.duration = 0 ) || talent.breath_of_sindragosa.enabled & ( cooldown.breath_of_sindragosa.duration % trinket.t1.cooldown.duration = 0 ) )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "trinket.t2.has_use_buff & ( talent.pillar_of_frost.enabled & ! talent.breath_of_sindragosa.enabled & ( trinket.t2.cooldown.duration % cooldown.pillar_of_frost.duration = 0 ) || talent.breath_of_sindragosa.enabled & ( cooldown.breath_of_sindragosa.duration % trinket.t2.cooldown.duration = 0 ) )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_cooldown & ! trinket.t1.is.improvised_seaforium_pacemaker & ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_cooldown & ! trinket.t2.is.improvised_seaforium_pacemaker & ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.buff_duration",
["var_name"] = "trinket_1_duration",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.buff_duration",
["var_name"] = "trinket_2_duration",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs & ( trinket.t2.has_cooldown || ! trinket.t1.has_cooldown ) || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / variable.trinket_2_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) * ( 1 + ( ( trinket.t2.ilvl - trinket.t1.ilvl ) / 100 ) ) ) > ( ( trinket.t1.cooldown.duration / variable.trinket_1_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) * ( 1 + ( ( trinket.t1.ilvl - trinket.t2.ilvl ) / 100 ) ) )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "damage_trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_2_buffs & trinket.t2.ilvl >= trinket.t1.ilvl",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.unyielding_netherprism",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.unyielding_netherprism",
["var_name"] = "trinket_2_manual",
},
},
},
["version"] = 20250826,
["warnings"] = "The import for 'default' required some automated changes.\nLine 9: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 9: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 10: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 10: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 10: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 11: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 11: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 11: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 11: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 11: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 11: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 12: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 12: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 12: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 12: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 13: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 13: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 13: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 13: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 13: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 14: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 14: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 14: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 14: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 14: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 15: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 15: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 15: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 15: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 1: Converted operations in 'trinket.t1.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t1.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%%trinket.t1.cooldown.duration=0))' to 'trinket.t1.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t1.cooldown.duration%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%trinket.t1.cooldown.duration=0))'.\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted operations in 'trinket.t2.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t2.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%%trinket.t2.cooldown.duration=0))' to 'trinket.t2.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t2.cooldown.duration%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%trinket.t2.cooldown.duration=0))'.\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.is.improvised_seaforium_pacemaker' to 'trinket.t1.is.improvised_seaforium_pacemaker' (1x).\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 3: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 3: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 3: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 3: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 3: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 4: Converted 'trinket.2.is.improvised_seaforium_pacemaker' to 'trinket.t2.is.improvised_seaforium_pacemaker' (1x).\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 4: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 4: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 4: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 4: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 4: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 5: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 7: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 7: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 7: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 7: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 7: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 7: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%variable.trinket_2_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(1+((trinket.t2.ilvl-trinket.t1.ilvl)%100)))>((trinket.t1.cooldown.duration%variable.trinket_1_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)%100)))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/variable.trinket_2_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(1+((trinket.t2.ilvl-trinket.t1.ilvl)/100)))>((trinket.t1.cooldown.duration/variable.trinket_1_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)/100)))'.\nLine 8: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 8: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 9: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 10: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nImported 4 action lists.\n",
["spec"] = 251,
["profile"] = "## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/deathknight_frost.simc\n## SimulationCraft Commit Sync: 8aa4db9\n## Date: 2025-08-26\n\n## Executed before combat begins. Accepts non-harmful actions only.\n## Evaluates a trinkets cooldown, divided by pillar of frost, empower rune weapon, or breath of sindragosa's cooldown. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(talent.pillar_of_frost&!talent.breath_of_sindragosa&(trinket.1.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa&(cooldown.breath_of_sindragosa.duration%%trinket.1.cooldown.duration=0))\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(talent.pillar_of_frost&!talent.breath_of_sindragosa&(trinket.2.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa&(cooldown.breath_of_sindragosa.duration%%trinket.2.cooldown.duration=0))\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_cooldown&!trinket.1.is.improvised_seaforium_pacemaker&(trinket.1.has_use_buff||trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_cooldown&!trinket.2.is.improvised_seaforium_pacemaker&(trinket.2.has_use_buff||trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit)\nactions.precombat+=/variable,name=trinket_1_duration,value=trinket.1.proc.any_dps.duration\nactions.precombat+=/variable,name=trinket_2_duration,value=trinket.2.proc.any_dps.duration,\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.2.has_cooldown||!trinket.1.has_cooldown)||variable.trinket_2_buffs&((trinket.2.cooldown.duration%variable.trinket_2_duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync)*(1+((trinket.2.ilvl-trinket.1.ilvl)%100)))>((trinket.1.cooldown.duration%variable.trinket_1_duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync)*(1+((trinket.1.ilvl-trinket.2.ilvl)%100)))\nactions.precombat+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&!variable.trinket_2_buffs&trinket.2.ilvl>=trinket.1.ilvl\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.unyielding_netherprism\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.unyielding_netherprism\n\n## Executed every time the actor is available.\nactions=mind_freeze\n## Choose Action list to run\n## [Hekili] Remove unnecessary conditionless branches to save CPU time.\n## actions+=/call_action_list,name=variables\n## [Hekili] This is always 'true' because the addon doesn't predict raid events.\n## actions=variable,name=st_planning,op=setif,value=1,value_else=0,condition=active_enemies=1&(!raid_event.adds.exists||!raid_event.adds.in||raid_event.adds.in>15)\n## [Hekili] This is also always true because the addon doesn't predict raid events.\n## actions+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||!raid_event.pull.exists&raid_event.adds.remains>5||raid_event.pull.exists&raid_event.adds.in>20)\n## [Hekili] This is also always true because the addon doesn't predict raid events.\n## actions+=/variable,name=sending_cds,value=(variable.st_planning||variable.adds_remain)\nactions+=/variable,name=cooldown_check,value=(talent.pillar_of_frost&buff.pillar_of_frost.up)||!talent.pillar_of_frost||fight_remains<20\nactions+=/variable,name=fwf_buffs,value=(buff.pillar_of_frost.remains<gcd.max||(buff.unholy_strength.up&buff.unholy_strength.remains<gcd.max)||(talent.bonegrinder.rank=2&buff.bonegrinder_frost.up&buff.bonegrinder_frost.remains<gcd.max))&(active_enemies>1||debuff.razorice.stack=5||talent.shattering_blade)\n## actions+=/variable,name=rune_pooling,value=hero_tree.deathbringer&cooldown.reapers_mark.remains<6&rune<3&variable.sending_cds\nactions+=/variable,name=rune_pooling,value=hero_tree.deathbringer&cooldown.reapers_mark.remains<6&rune<3\n## actions+=/variable,name=rp_pooling,value=talent.breath_of_sindragosa&cooldown.breath_of_sindragosa.remains<4*gcd.max&runic_power<60+(35+5*buff.icy_onslaught.up)-(10*rune)&variable.sending_cds\nactions+=/variable,name=rp_pooling,value=talent.breath_of_sindragosa&cooldown.breath_of_sindragosa.remains<4*gcd.max&runic_power<60+(35+5*buff.icy_onslaught.up)-(10*rune)\n# Frostscythe is equal at 3 targets, except with Rider 4pc which brings Obliterate higher at 3, unless cleaving strikes is up\n## [Hekili] Revised to fix target count based on 4pc.\n## actions+=/variable,name=frostscythe_prio,value=3+(1*(set_bonus.tww3_rider_of_the_apocalypse_4pc&!(talent.cleaving_strikes&buff.remorseless_winter.up)))\nactions+=/variable,name=frostscythe_prio,value=4,value_else=3,condition=set_bonus.tww3_rider_of_the_apocalypse_4pc>0&!(talent.cleaving_strikes&buff.remorseless_winter.up)\nactions+=/variable,name=breath_of_sindragosa_check,value=talent.breath_of_sindragosa&(cooldown.breath_of_sindragosa.remains>20||(cooldown.breath_of_sindragosa.up&runic_power>=(60-20*hero_tree.deathbringer)))\n\n## actions+=/call_action_list,name=trinkets\nactions=use_item,name=unyielding_netherprism,if=buff.latent_energy.stack>8&buff.pillar_of_frost.remains&(!talent.breath_of_sindragosa||buff.breath_of_sindragosa.remains)\nactions+=/use_item,slot=trinket1,if=!trinket.1.cast_time>0&variable.trinket_1_buffs&!variable.trinket_1_manual&buff.pillar_of_frost.remains&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)\nactions+=/use_item,slot=trinket2,if=!trinket.2.cast_time>0&variable.trinket_2_buffs&!variable.trinket_2_manual&buff.pillar_of_frost.remains&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)\n# Channeled buff trinkets will be used before cooldowns\n## actions+=/use_item,slot=trinket1,use_off_gcd=1,if=trinket.1.cast_time>0&(!hero_tree.rider_of_the_apocalypse||cooldown.frostwyrms_fury.remains)&variable.trinket_1_buffs&!variable.trinket_1_manual&cooldown.pillar_of_frost.remains<trinket.1.cast_time&(!talent.breath_of_sindragosa||variable.breath_of_sindragosa_check)&variable.sending_cds&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||variable.trinket_1_duration>=fight_remains\nactions+=/use_item,slot=trinket1,if=trinket.1.cast_time>0&(!trinket.2.is.unyielding_netherprism||buff.latent_energy.stack<8)&(!hero_tree.rider_of_the_apocalypse||cooldown.frostwyrms_fury.remains)&variable.trinket_1_buffs&!variable.trinket_1_manual&cooldown.pillar_of_frost.remains<trinket.1.cast_time&(!talent.breath_of_sindragosa||variable.breath_of_sindragosa_check)&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||variable.trinket_1_duration>=fight_remains\n## actions+=/use_item,slot=trinket2,use_off_gcd=1,if=trinket.2.cast_time>0&(!hero_tree.rider_of_the_apocalypse||cooldown.frostwyrms_fury.remains)&variable.trinket_2_buffs&!variable.trinket_2_manual&cooldown.pillar_of_frost.remains<trinket.2.cast_time&(!talent.breath_of_sindragosa||variable.breath_of_sindragosa_check)&variable.sending_cds&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||variable.trinket_2_duration>=fight_remains\nactions+=/use_item,slot=trinket2,if=trinket.2.cast_time>0&(!trinket.1.is.unyielding_netherprism||buff.latent_energy.stack<8)&(!hero_tree.rider_of_the_apocalypse||cooldown.frostwyrms_fury.remains)&variable.trinket_2_buffs&!variable.trinket_2_manual&cooldown.pillar_of_frost.remains<trinket.2.cast_time&(!talent.breath_of_sindragosa||variable.breath_of_sindragosa_check)&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||variable.trinket_2_duration>=fight_remains\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&(variable.damage_trinket_priority=1||(!trinket.2.has_cooldown||trinket.2.cooldown.remains))&((trinket.1.cast_time>0&(!talent.breath_of_sindragosa||!buff.breath_of_sindragosa.up)&!buff.pillar_of_frost.up||!trinket.1.cast_time>0)&(!variable.trinket_2_buffs||cooldown.pillar_of_frost.remains>20)||!talent.pillar_of_frost)||fight_remains<15\nactions+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&(variable.damage_trinket_priority=2||(!trinket.1.has_cooldown||trinket.1.cooldown.remains))&((trinket.2.cast_time>0&(!talent.breath_of_sindragosa||!buff.breath_of_sindragosa.up)&!buff.pillar_of_frost.up||!trinket.2.cast_time>0)&(!variable.trinket_1_buffs||cooldown.pillar_of_frost.remains>20)||!talent.pillar_of_frost)||fight_remains<15\nactions+=/use_item,slot=main_hand,if=buff.pillar_of_frost.up||(buff.breath_of_sindragosa.up&cooldown.pillar_of_frost.remains)||(variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.1.cooldown.remains<cooldown.pillar_of_frost.remains||trinket.2.cooldown.remains<cooldown.pillar_of_frost.remains)&cooldown.pillar_of_frost.remains>20)||fight_remains<15\n\n## actions+=/call_action_list,name=high_prio_actions\n## actions=mind_freeze,if=target.debuff.casting.up\n## Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=51271/pillar-of-frost'>Pillar of Frost</a> is up\n## actions+=/invoke_external_buff,name=power_infusion,if=variable.cooldown_check\n## [Hekili] Recheck AMS logic.\n## actions+=/antimagic_shell,if=runic_power.deficit>40&death_knight.first_ams_cast<time\n\n## actions+=/call_action_list,name=cooldowns\nactions=potion,use_off_gcd=1,if=variable.cooldown_check||fight_remains<25\n## actions+=/remorseless_winter,if=variable.sending_cds&(active_enemies>1||talent.gathering_storm)||(buff.gathering_storm.stack=10&buff.remorseless_winter.remains<gcd.max)&fight_remains>10\nactions+=/remorseless_winter,if=(active_enemies>1||talent.gathering_storm)||(buff.gathering_storm.stack=10&buff.remorseless_winter.remains<gcd.max)&fight_remains>10\n## actions+=/frostwyrms_fury,if=hero_tree.rider_of_the_apocalypse&talent.apocalypse_now&variable.sending_cds&(cooldown.pillar_of_frost.remains<gcd.max||fight_remains<20)&!talent.breath_of_sindragosa\nactions+=/frostwyrms_fury,if=hero_tree.rider_of_the_apocalypse&talent.apocalypse_now&(cooldown.pillar_of_frost.remains<gcd.max||fight_remains<20)&!talent.breath_of_sindragosa\n## actions+=/frostwyrms_fury,if=hero_tree.rider_of_the_apocalypse&talent.apocalypse_now&variable.sending_cds&(cooldown.pillar_of_frost.remains<gcd.max||fight_remains<20)&talent.breath_of_sindragosa&runic_power>=60\nactions+=/frostwyrms_fury,if=hero_tree.rider_of_the_apocalypse&talent.apocalypse_now&(cooldown.pillar_of_frost.remains<gcd.max||fight_remains<20)&talent.breath_of_sindragosa&runic_power>=60\n## actions+=/pillar_of_frost,if=!talent.breath_of_sindragosa&variable.sending_cds&(!hero_tree.deathbringer||rune>=2)||fight_remains<20\nactions+=/pillar_of_frost,if=!talent.breath_of_sindragosa&(!hero_tree.deathbringer||rune>=2)||fight_remains<20\n## actions+=/pillar_of_frost,if=talent.breath_of_sindragosa&variable.sending_cds&variable.breath_of_sindragosa_check&(!hero_tree.deathbringer||rune>=2)\nactions+=/pillar_of_frost,if=talent.breath_of_sindragosa&variable.breath_of_sindragosa_check&(!hero_tree.deathbringer||rune>=2)\nactions+=/breath_of_sindragosa,use_off_gcd=1,if=!buff.breath_of_sindragosa.up&(buff.pillar_of_frost.up||fight_remains<20)\nactions+=/reapers_mark,cycle_targets=1,if=buff.pillar_of_frost.up||cooldown.pillar_of_frost.remains>5||fight_remains<20\nactions+=/frostwyrms_fury,if=!talent.apocalypse_now&active_enemies=1&(talent.pillar_of_frost&buff.pillar_of_frost.up&!talent.obliteration||!talent.pillar_of_frost)&(!raid_event.adds.exists||raid_event.adds.in>cooldown.frostwyrms_fury.duration+raid_event.adds.duration)&variable.fwf_buffs||fight_remains<3\nactions+=/frostwyrms_fury,if=!talent.apocalypse_now&active_enemies>=2&(talent.pillar_of_frost&buff.pillar_of_frost.up||raid_event.adds.exists&raid_event.adds.up&raid_event.adds.in<cooldown.pillar_of_frost.remains-raid_event.adds.in-raid_event.adds.duration)&variable.fwf_buffs\nactions+=/frostwyrms_fury,if=!talent.apocalypse_now&talent.obliteration&(talent.pillar_of_frost&buff.pillar_of_frost.up&!main_hand.2h||!buff.pillar_of_frost.up&main_hand.2h&cooldown.pillar_of_frost.remains||!talent.pillar_of_frost)&variable.fwf_buffs&(!raid_event.adds.exists||raid_event.adds.in>cooldown.frostwyrms_fury.duration+raid_event.adds.duration)\nactions+=/raise_dead,use_off_gcd=1\nactions+=/soul_reaper,if=talent.reaper_of_souls&buff.reaper_of_souls.up&buff.killing_machine.stack<2\nactions+=/empower_rune_weapon,use_off_gcd=1,if=(rune<2||!buff.killing_machine.up)&runic_power<35+(talent.icy_onslaught*buff.icy_onslaught.stack*5)&gcd.remains<0.5\nactions+=/empower_rune_weapon,use_off_gcd=1,if=cooldown.empower_rune_weapon.full_recharge_time<=6&buff.killing_machine.stack<1+(1*talent.killing_streak)&gcd.remains<0.5\n\n## actions+=/call_action_list,name=racials\nactions=blood_fury,use_off_gcd=1,if=variable.cooldown_check\nactions+=/berserking,use_off_gcd=1,if=variable.cooldown_check\nactions+=/arcane_pulse,if=variable.cooldown_check\nactions+=/lights_judgment,if=variable.cooldown_check\nactions+=/ancestral_call,use_off_gcd=1,if=variable.cooldown_check\nactions+=/fireblood,use_off_gcd=1,if=variable.cooldown_check\nactions+=/bag_of_tricks,if=talent.obliteration&!buff.pillar_of_frost.up&buff.unholy_strength.up\nactions+=/bag_of_tricks,if=!talent.obliteration&buff.pillar_of_frost.up&(buff.unholy_strength.up&buff.unholy_strength.remains<gcd*3||buff.pillar_of_frost.remains<gcd*3)\n\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>=3\nactions+=/run_action_list,name=single_target\n\n# Aoe Rotation\nactions.aoe=frostscythe,if=(buff.killing_machine.stack=2||(buff.killing_machine.up&rune>=3))&active_enemies>=variable.frostscythe_prio\n## actions.aoe+=/obliterate,target_if=max:(hero_tree.rider_of_the_apocalypse&debuff.chains_of_ice_trollbane_slow.up),if=buff.killing_machine.stack=2||(buff.killing_machine.up&rune>=3)\nactions.aoe+=/obliterate,cycle_targets=1,if=buff.killing_machine.stack=2||(buff.killing_machine.up&rune>=3)\nactions.aoe+=/howling_blast,if=buff.rime.up&talent.frostbound_will||!dot.frost_fever.ticking\n## actions.aoe+=/frost_strike,target_if=max:(talent.shattering_blade&debuff.razorice.stack=5),if=debuff.razorice.stack=5&buff.frostbane.up\nactions.aoe+=/frost_strike,cycle_targets=1,if=debuff.razorice.stack=5&buff.frostbane.up\nactions.aoe+=/frost_strike,cycle_targets=1,if=debuff.razorice.stack=5&talent.shattering_blade&active_enemies<5&!variable.rp_pooling&!talent.frostbane\nactions.aoe+=/frostscythe,if=buff.killing_machine.up&!variable.rune_pooling&active_enemies>=variable.frostscythe_prio\n## actions.aoe+=/obliterate,target_if=max:(hero_tree.rider_of_the_apocalypse&debuff.chains_of_ice_trollbane_slow.up),if=buff.killing_machine.up&!variable.rune_pooling\nactions.aoe+=/obliterate,cycle_targets=1,if=buff.killing_machine.up&!variable.rune_pooling\nactions.aoe+=/howling_blast,if=buff.rime.up\nactions.aoe+=/glacial_advance,if=!variable.rp_pooling\nactions.aoe+=/frostscythe,if=!variable.rune_pooling&!(talent.obliteration&buff.pillar_of_frost.up)&active_enemies>=variable.frostscythe_prio\n## actions.aoe+=/obliterate,target_if=max:(hero_tree.rider_of_the_apocalypse&debuff.chains_of_ice_trollbane_slow.up),if=!variable.rune_pooling&!(talent.obliteration&buff.pillar_of_frost.up)\nactions.aoe+=/obliterate,cycle_targets=1,if=!variable.rune_pooling&!(talent.obliteration&buff.pillar_of_frost.up)\nactions.aoe+=/howling_blast,if=!buff.killing_machine.up&(talent.obliteration&buff.pillar_of_frost.up)\n\n# Single Target Rotation\nactions.single_target=obliterate,if=buff.killing_machine.stack=2||(buff.killing_machine.up&rune>=3)\nactions.single_target+=/howling_blast,if=buff.rime.up&talent.frostbound_will\nactions.single_target+=/frost_strike,cycle_targets=1,if=debuff.razorice.stack=5&talent.shattering_blade&!variable.rp_pooling\nactions.single_target+=/howling_blast,if=buff.rime.up\nactions.single_target+=/frost_strike,if=!talent.shattering_blade&!variable.rp_pooling&runic_power.deficit<30\nactions.single_target+=/obliterate,if=buff.killing_machine.up&!variable.rune_pooling\nactions.single_target+=/frost_strike,if=!variable.rp_pooling\nactions.single_target+=/obliterate,if=!variable.rune_pooling&!(talent.obliteration&buff.pillar_of_frost.up)\nactions.single_target+=/howling_blast,if=!buff.killing_machine.up&(talent.obliteration&buff.pillar_of_frost.up)",
},
["Blood"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/deathknight_blood.simc",
["builtIn"] = true,
["date"] = 20250826,
["spec"] = 250,
["desc"] = "-- The War Within Season 3\n2025-08-26: APL Sync - 7877e91\n2025-08-06: Initial APL\n\n-- The War Within Season 2\n2025-04-29: Resync with SimC",
["lists"] = {
["sanlayn"] = {
{
["enabled"] = true,
["criteria"] = "( ! buff.bone_shield.up || buff.bone_shield.remains < 1.5 || buff.bone_shield.stack <= 1 ) & active_enemies >= 2",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "! buff.bone_shield.up || buff.bone_shield.remains < 1.5 || buff.bone_shield.stack <= 1",
["action"] = "deaths_caress",
},
{
["enabled"] = true,
["criteria"] = "dot.blood_plague.remains < 3",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "( buff.essence_of_the_blood_queen.remains < 1.5 & buff.essence_of_the_blood_queen.remains & buff.vampiric_strike.remains )",
["action"] = "heart_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.stack >= 5 & ( buff.death_and_decay.remains || active_enemies <= 3 )",
["action"] = "bonestorm",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit < 20",
["action"] = "death_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.stack < 6 & ! dot.bonestorm.ticking",
["action"] = "marrowrend",
},
{
["enabled"] = true,
["criteria"] = "buff.infliction_of_sorrow.up & buff.death_and_decay.up",
["action"] = "consumption",
},
{
["enabled"] = true,
["criteria"] = "( buff.infliction_of_sorrow.up || buff.vampiric_strike.up ) & buff.death_and_decay.up",
["action"] = "heart_strike",
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 2 & target.time_to_pct_35 < 5 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.stack < 6 & ! dot.bonestorm.ticking & active_enemies >= 2",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.stack < 6 & ! dot.bonestorm.ticking",
["action"] = "deaths_caress",
},
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.stack >= 6 & ( buff.death_and_decay.remains || active_enemies <= 3 ) & cooldown.dancing_rune_weapon.remains >= 25",
["action"] = "tombstone",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies <= 3 & buff.crimson_scourge.remains ) || ( active_enemies > 3 & ! buff.death_and_decay.remains )",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 2 & buff.coagulopathy.remains > 3",
["action"] = "blooddrinker",
},
{
["enabled"] = true,
["criteria"] = "buff.vampiric_strike.up",
["action"] = "heart_strike",
},
{
["action"] = "death_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "rune >= 2",
["action"] = "heart_strike",
},
{
["action"] = "consumption",
["enabled"] = true,
},
{
["action"] = "blood_boil",
["enabled"] = true,
},
{
["action"] = "heart_strike",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "mind_freeze",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "tome_of_lights_devotion",
["use_off_gcd"] = 1,
["criteria"] = "buff.inner_resilience.up",
["name"] = "tome_of_lights_devotion",
},
{
["enabled"] = true,
["action"] = "unyielding_netherprism",
["use_off_gcd"] = 1,
["criteria"] = "cooldown.dancing_rune_weapon.remains < 1 || boss & fight_remains <= 20",
["name"] = "unyielding_netherprism",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "bestinslots",
["name"] = "bestinslots",
},
{
["enabled"] = true,
["criteria"] = "buff.dancing_rune_weapon.up",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.dancing_rune_weapon.up",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.dancing_rune_weapon.up",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "buff.dancing_rune_weapon.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "buff.dancing_rune_weapon.up",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "tanking & incoming_damage_5s >= vb_damage & ! ( buff.dancing_rune_weapon.up || buff.icebound_fortitude.up )",
["action"] = "vampiric_blood",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "15 + ( 10 * talent.relish_in_blood.enabled ) + ( 3 * talent.runic_attenuation.enabled ) + ( spell_targets.heart_strike * talent.heartbreaker.enabled * 2 )",
["var_name"] = "rp_deficit_threshold",
},
{
["use_off_gcd"] = 1,
["action"] = "raise_dead",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( rune <= 2 & rune.time_to_3 > gcd.max & charges_fractional >= 1.8 )",
["action"] = "blood_tap",
},
{
["enabled"] = true,
["criteria"] = "( rune <= 1 & rune.time_to_3 > gcd.max )",
["action"] = "blood_tap",
},
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.remains < gcd.max * 2",
["action"] = "deaths_caress",
},
{
["enabled"] = true,
["criteria"] = "buff.coagulopathy.up & buff.coagulopathy.remains <= gcd.max",
["action"] = "death_strike",
},
{
["enabled"] = true,
["criteria"] = "! buff.death_and_decay.up",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "dot.blood_plague.remains < gcd.max * 2",
["action"] = "blood_boil",
},
{
["action"] = "dancing_rune_weapon",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "hero_tree.deathbringer",
["list_name"] = "deathbringer",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "hero_tree.sanlayn & buff.dancing_rune_weapon.up",
["list_name"] = "san_drw",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "hero_tree.sanlayn",
["list_name"] = "sanlayn",
},
},
["precombat"] = {
{
["action"] = "deaths_caress",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "7",
["var_name"] = "bone_shield_refresh_value",
},
},
["deathbringer"] = {
{
["enabled"] = true,
["criteria"] = "rune > 4",
["action"] = "rune_tap",
},
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.stack >= 5 & buff.death_and_decay.remains",
["action"] = "bonestorm",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit < variable.rp_deficit_threshold || ( buff.dancing_rune_weapon.up & runic_power.deficit < ( variable.rp_deficit_threshold + 6 ) )",
["action"] = "death_strike",
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 2 & buff.reaper_of_souls.up & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 2 & target.time_to_pct_35 < 5 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
},
{
["action"] = "reapers_mark",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.dancing_rune_weapon.up & ! drw.bp_ticking",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "! buff.death_and_decay.up",
["action"] = "death_and_decay",
},
{
["enabled"] = true,
["criteria"] = "buff.exterminate.up || ( buff.bone_shield.stack < 5 & ! dot.bonestorm.ticking )",
["action"] = "marrowrend",
},
{
["action"] = "death_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.stack >= 8 & buff.death_and_decay.remains & cooldown.dancing_rune_weapon.remains >= 25",
["action"] = "tombstone",
},
{
["enabled"] = true,
["criteria"] = "! buff.dancing_rune_weapon.up & active_enemies <= 2 & buff.coagulopathy.remains > 3",
["action"] = "blooddrinker",
},
{
["action"] = "consumption",
["enabled"] = true,
},
{
["action"] = "blood_boil",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.coagulopathy.stack < 5",
["action"] = "heart_strike",
},
{
["action"] = "heart_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.reaper_of_souls.up",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 20",
["action"] = "arcane_torrent",
},
},
["san_drw"] = {
{
["enabled"] = true,
["criteria"] = "buff.essence_of_the_blood_queen.remains < 1.5 & buff.essence_of_the_blood_queen.remains",
["action"] = "heart_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.stack >= 5",
["action"] = "bonestorm",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit < 36",
["action"] = "death_strike",
},
{
["enabled"] = true,
["criteria"] = "! drw.bp_ticking",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies <= 3 & buff.crimson_scourge.remains ) || ( active_enemies > 3 & ! buff.death_and_decay.remains )",
["action"] = "any_dnd",
},
{
["action"] = "heart_strike",
["enabled"] = true,
},
{
["action"] = "death_strike",
["enabled"] = true,
},
{
["action"] = "consumption",
["enabled"] = true,
},
{
["action"] = "blood_boil",
["enabled"] = true,
},
},
},
["version"] = 20250826,
["warnings"] = "Imported 5 action lists.\n",
["profile"] = "## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/deathknight_blood.simc\n## SimulationCraft Commit Sync: 7877e91\n## Date: 2025-08-26\n\n\nactions.precombat+=/deaths_caress\nactions.precombat+=/variable,name=bone_shield_refresh_value,value=7\n\nactions+=/mind_freeze\nactions+=/use_item,name=tome_of_lights_devotion,if=buff.inner_resilience.up,use_off_gcd=1\nactions+=/use_item,name=unyielding_netherprism,if=cooldown.dancing_rune_weapon.remains<1||boss&fight_remains<=20,use_off_gcd=1\nactions+=/use_items\nactions+=/use_item,name=bestinslots,use_off_gcd=1\nactions+=/blood_fury,if=buff.dancing_rune_weapon.up\nactions+=/berserking,if=buff.dancing_rune_weapon.up\nactions+=/ancestral_call,if=buff.dancing_rune_weapon.up\nactions+=/fireblood,if=buff.dancing_rune_weapon.up\nactions+=/potion,if=buff.dancing_rune_weapon.up\nactions+=/vampiric_blood,if=tanking&incoming_damage_5s>=vb_damage&!(buff.dancing_rune_weapon.up||buff.icebound_fortitude.up)\nactions+=/variable,name=rp_deficit_threshold,value=15+(10*talent.relish_in_blood.enabled)+(3*talent.runic_attenuation.enabled)+(spell_targets.heart_strike*talent.heartbreaker.enabled*2)\nactions+=/raise_dead,use_off_gcd=1\nactions+=/blood_tap,if=(rune<=2&rune.time_to_3>gcd&charges_fractional>=1.8)\nactions+=/blood_tap,if=(rune<=1&rune.time_to_3>gcd)\nactions+=/deaths_caress,if=buff.bone_shield.remains<gcd.max*2\nactions+=/death_strike,if=buff.coagulopathy.up&buff.coagulopathy.remains<=gcd\nactions+=/any_dnd,if=!buff.death_and_decay.up\nactions+=/blood_boil,if=dot.blood_plague.remains<gcd.max*2\nactions+=/dancing_rune_weapon\nactions+=/call_action_list,name=deathbringer,strict=1,if=hero_tree.deathbringer\nactions+=/call_action_list,name=san_drw,strict=1,if=hero_tree.sanlayn&buff.dancing_rune_weapon.up\nactions+=/call_action_list,name=sanlayn,strict=1,if=hero_tree.sanlayn\n\nactions.deathbringer+=/rune_tap,if=rune>4\nactions.deathbringer+=/bonestorm,if=buff.bone_shield.stack>=5&buff.death_and_decay.remains\nactions.deathbringer+=/death_strike,if=runic_power.deficit<variable.rp_deficit_threshold||(buff.dancing_rune_weapon.up&runic_power.deficit<(variable.rp_deficit_threshold+6))\nactions.deathbringer+=/soul_reaper,if=active_enemies<=2&buff.reaper_of_souls.up&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.deathbringer+=/soul_reaper,if=active_enemies<=2&target.time_to_pct_35<5&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.deathbringer+=/reapers_mark\nactions.deathbringer+=/blood_boil,if=buff.dancing_rune_weapon.up&!drw.bp_ticking\nactions.deathbringer+=/death_and_decay,if=!buff.death_and_decay.up\nactions.deathbringer+=/marrowrend,if=buff.exterminate.up||(buff.bone_shield.stack<5&!dot.bonestorm.ticking)\nactions.deathbringer+=/death_strike\nactions.deathbringer+=/tombstone,if=buff.bone_shield.stack>=8&buff.death_and_decay.remains&cooldown.dancing_rune_weapon.remains>=25\nactions.deathbringer+=/blooddrinker,if=!buff.dancing_rune_weapon.up&active_enemies<=2&buff.coagulopathy.remains>3\nactions.deathbringer+=/consumption\nactions.deathbringer+=/blood_boil\nactions.deathbringer+=/heart_strike,if=buff.coagulopathy.stack<5\nactions.deathbringer+=/heart_strike\nactions.deathbringer+=/soul_reaper,if=buff.reaper_of_souls.up\nactions.deathbringer+=/arcane_torrent,if=runic_power.deficit>20\n\nactions.san_drw+=/heart_strike,if=buff.essence_of_the_blood_queen.remains<1.5&buff.essence_of_the_blood_queen.remains\nactions.san_drw+=/bonestorm,if=buff.bone_shield.stack>=5\nactions.san_drw+=/death_strike,if=runic_power.deficit<36\nactions.san_drw+=/blood_boil,if=!drw.bp_ticking\nactions.san_drw+=/any_dnd,if=(active_enemies<=3&buff.crimson_scourge.remains)||(active_enemies>3&!buff.death_and_decay.remains)\nactions.san_drw+=/heart_strike\nactions.san_drw+=/death_strike\nactions.san_drw+=/consumption\nactions.san_drw+=/blood_boil\n\nactions.sanlayn+=/blood_boil,if=(!buff.bone_shield.up||buff.bone_shield.remains<1.5||buff.bone_shield.stack<=1)&active_enemies>=2\nactions.sanlayn+=/deaths_caress,if=!buff.bone_shield.up||buff.bone_shield.remains<1.5||buff.bone_shield.stack<=1\nactions.sanlayn+=/blood_boil,if=dot.blood_plague.remains<3\nactions.sanlayn+=/heart_strike,if=(buff.essence_of_the_blood_queen.remains<1.5&buff.essence_of_the_blood_queen.remains&buff.vampiric_strike.remains)\nactions.sanlayn+=/bonestorm,if=buff.bone_shield.stack>=5&(buff.death_and_decay.remains||active_enemies<=3)\nactions.sanlayn+=/death_strike,if=runic_power.deficit<20\nactions.sanlayn+=/marrowrend,if=buff.bone_shield.stack<6&!dot.bonestorm.ticking\nactions.sanlayn+=/consumption,if=buff.infliction_of_sorrow.up&buff.death_and_decay.up\nactions.sanlayn+=/heart_strike,if=(buff.infliction_of_sorrow.up||buff.vampiric_strike.up)&buff.death_and_decay.up\nactions.sanlayn+=/soul_reaper,if=active_enemies<=2&target.time_to_pct_35<5&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.sanlayn+=/blood_boil,if=buff.bone_shield.stack<6&!dot.bonestorm.ticking&active_enemies>=2\nactions.sanlayn+=/deaths_caress,if=buff.bone_shield.stack<6&!dot.bonestorm.ticking\nactions.sanlayn+=/tombstone,if=buff.bone_shield.stack>=6&(buff.death_and_decay.remains||active_enemies<=3)&cooldown.dancing_rune_weapon.remains>=25\nactions.sanlayn+=/any_dnd,if=(active_enemies<=3&buff.crimson_scourge.remains)||(active_enemies>3&!buff.death_and_decay.remains)\nactions.sanlayn+=/blooddrinker,if=active_enemies<=2&buff.coagulopathy.remains>3\nactions.sanlayn+=/heart_strike,if=buff.vampiric_strike.up\nactions.sanlayn+=/death_strike\nactions.sanlayn+=/heart_strike,if=rune>=2\nactions.sanlayn+=/consumption\nactions.sanlayn+=/blood_boil\nactions.sanlayn+=/heart_strike",
["author"] = "SimC",
},
["Mistweaver"] = {
["builtIn"] = true,
["date"] = 20250329,
["spec"] = 270,
["desc"] = "Healer priorities are DPS-oriented only\n\n2024-11-09: Make RWK consistently replace RSK\n\n2024-11-06: Update Jadefire Stomp related talents\n\n2024-10-23: 11.0.5\n\n2024-09-28: Update for Teachings of the Monastery\n\n2024-07-30: The War Within",
["lists"] = {
["default"] = {
{
["action"] = "spear_hand_strike",
["enabled"] = true,
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "time_to_max_charges <= gcd.max",
["action"] = "renewing_mist",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "variable.tea_up",
["list_name"] = "focus_tea",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "pet.chiji.up",
["list_name"] = "crane",
},
{
["enabled"] = true,
["criteria"] = "! settings.save_faeline || talent.awakened_jadefire.enabled & buff.awakened_jadefire.down || talent.jadefire_teachings.enabled & buff.jadefire_teachings.down",
["action"] = "jadefire_stomp",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 3",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies < 3",
["list_name"] = "st",
},
},
["precombat"] = {
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.tea_of_plenty_rsk.up || buff.tea_of_plenty_em.up || buff.tea_of_plenty_eh.up || buff.tea_of_serenity_em.up || buff.tea_of_serenity_rm.up || buff.tea_of_serenity_v.up || buff.thunder_focus_tea.up",
["var_name"] = "tea_up",
},
},
["aoe"] = {
{
["action"] = "thunder_focus_tea",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.jade_empowerment.up & buff.jadefire_teachings.up",
["action"] = "crackling_jade_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.zen_pulse.up",
["action"] = "vivify",
},
{
["enabled"] = true,
["criteria"] = "settings.aoe_rsk",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "settings.aoe_rsk",
["action"] = "rushing_wind_kick",
},
{
["enabled"] = true,
["criteria"] = "( talent.celestial_conduit.enabled & ! talent.xuens_guidance.enabled ) || active_enemies >= 4",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.awakened_jadefire.enabled & buff.jadefire_stomp.up & buff.teachings_of_the_monastery.stack < 4 || buff.teachings_of_the_monastery.stack < 1",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.rushing_wind_kick.enabled & cooldown.rising_sun_kick.remains > 2 * gcd.max || cooldown.rushing_wind_kick.remains > 2 * gcd.max ) & ( buff.teachings_of_the_monastery.stack > 3 )",
["action"] = "blackout_kick",
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["action"] = "spinning_crane_kick",
["enabled"] = true,
},
},
["focus_tea"] = {
{
["enabled"] = true,
["criteria"] = "raid || buff.tea_of_serenity_rm.up",
["action"] = "renewing_mist",
},
{
["action"] = "rising_sun_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.tea_of_plenty_eh.up",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "buff.tea_of_serenity_v.up",
["action"] = "vivify",
},
{
["enabled"] = true,
["criteria"] = "buff.tea_of_serenity_em.up || buff.tea_of_plenty_em.up",
["action"] = "enveloping_mist",
},
},
["st"] = {
{
["action"] = "thunder_focus_tea",
["enabled"] = true,
},
{
["action"] = "rising_sun_kick",
["enabled"] = true,
},
{
["action"] = "rushing_wind_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.awakened_jadefire.enabled & buff.jadefire_stomp.up & buff.teachings_of_the_monastery.stack < 4 || buff.teachings_of_the_monastery.stack < 1",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "( ( ! talent.awakened_jadefire.enabled || buff.jadefire_stomp.down ) & buff.teachings_of_the_monastery.up || buff.teachings_of_the_monastery.stack > 3 ) & ( ! talent.rushing_wind_kick.enabled & cooldown.rising_sun_kick.remains > 2 * gcd.max || cooldown.rushing_wind_kick.remains > 2 * gcd.max )",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "settings.single_zen_pulse & buff.zen_pulse.up",
["action"] = "vivify",
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["action"] = "tiger_palm",
["enabled"] = true,
},
},
["crane"] = {
{
["enabled"] = true,
["criteria"] = "talent.ancient_teachings.enabled & buff.ancient_teachings.remains < gcd.max",
["action"] = "thunder_focus_tea",
},
{
["enabled"] = true,
["criteria"] = "talent.ancient_teachings.enabled & buff.ancient_teachings.remains < gcd.max",
["action"] = "essence_font",
},
{
["enabled"] = true,
["criteria"] = "talent.ancient_teachings.enabled & buff.ancient_teachings.remains < gcd.max",
["action"] = "jadefire_stomp",
},
{
["enabled"] = true,
["criteria"] = "buff.invoke_chiji.stack > 1",
["action"] = "enveloping_mist",
},
{
["action"] = "rising_sun_kick",
["enabled"] = true,
},
{
["action"] = "rushing_wind_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ( ! talent.awakened_jadefire.enabled || buff.jadefire_stomp.down ) & buff.teachings_of_the_monastery.up || buff.teachings_of_the_monastery.stack > 3 ) & ( ! talent.rushing_wind_kick.enabled & cooldown.rising_sun_kick.remains > 2 * gcd.max || cooldown.rushing_wind_kick.remains > 2 * gcd.max )",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 3 || active_enemies > 1 & ! talent.ancient_concordance.enabled & ! talent.awakened_jadefire.enabled",
["action"] = "spinning_crane_kick",
},
{
["action"] = "blackout_kick",
["enabled"] = true,
},
{
["action"] = "tiger_palm",
["enabled"] = true,
},
},
},
["version"] = 20250329,
["warnings"] = "The import for 'default' required some automated changes.\nLine 13: Converted 'talent.awakened_jadefire' to 'talent.awakened_jadefire.enabled' (1x).\nLine 13: Converted 'talent.jadefire_teachings' to 'talent.jadefire_teachings.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 6: Converted 'talent.celestial_conduit' to 'talent.celestial_conduit.enabled' (1x).\nLine 6: Converted 'talent.xuens_guidance' to 'talent.xuens_guidance.enabled' (1x).\nLine 8: Converted 'talent.rushing_wind_kick' to 'talent.rushing_wind_kick.enabled' (1x).\n\nThe import for 'crane' required some automated changes.\nLine 1: Converted 'talent.ancient_teachings' to 'talent.ancient_teachings.enabled' (1x).\nLine 2: Unsupported action 'essence_font'.\nLine 2: Converted 'talent.ancient_teachings' to 'talent.ancient_teachings.enabled' (1x).\nLine 3: Converted 'talent.ancient_teachings' to 'talent.ancient_teachings.enabled' (1x).\nLine 7: Converted 'talent.awakened_jadefire' to 'talent.awakened_jadefire.enabled' (1x).\nLine 7: Converted 'talent.rushing_wind_kick' to 'talent.rushing_wind_kick.enabled' (1x).\nLine 8: Converted 'talent.ancient_concordance' to 'talent.ancient_concordance.enabled' (1x).\nLine 8: Converted 'talent.awakened_jadefire' to 'talent.awakened_jadefire.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 5: Converted 'talent.awakened_jadefire' to 'talent.awakened_jadefire.enabled' (1x).\nLine 5: Converted 'talent.rushing_wind_kick' to 'talent.rushing_wind_kick.enabled' (1x).\n\nImported 6 action lists.\n",
["profile"] = "actions.precombat+=/potion\nactions.precombat+=/chi_burst\nactions.precombat+=/variable,name=tea_up,value=buff.tea_of_plenty_rsk.up||buff.tea_of_plenty_em.up||buff.tea_of_plenty_eh.up||buff.tea_of_serenity_em.up||buff.tea_of_serenity_rm.up||buff.tea_of_serenity_v.up||buff.thunder_focus_tea.up\n\nactions+=/spear_hand_strike\nactions+=/use_items\nactions+=/blood_fury\nactions+=/berserking\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/potion\nactions+=/renewing_mist,if=time_to_max_charges<=gcd.max\nactions+=/call_action_list,name=focus_tea,if=variable.tea_up\nactions+=/run_action_list,name=crane,strict=1,if=pet.chiji.up\nactions+=/jadefire_stomp,if=!settings.save_faeline||talent.awakened_jadefire&buff.awakened_jadefire.down||talent.jadefire_teachings&buff.jadefire_teachings.down\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>=3\nactions+=/call_action_list,name=st,strict=1,if=active_enemies<3\n\n\nactions.focus_tea+=/renewing_mist,if=raid||buff.tea_of_serenity_rm.up\nactions.focus_tea+=/rising_sun_kick\n## only use these 3 if their rng buffs are up, don't spend real focus tea\nactions.focus_tea+=/expel_harm,if=buff.tea_of_plenty_eh.up\nactions.focus_tea+=/vivify,if=buff.tea_of_serenity_v.up\nactions.focus_tea+=/enveloping_mist,if=buff.tea_of_serenity_em.up||buff.tea_of_plenty_em.up\n\nactions.st+=/thunder_focus_tea\nactions.st+=/rising_sun_kick\nactions.st+=/rushing_wind_kick\nactions.st+=/tiger_palm,if=talent.awakened_jadefire.enabled&buff.jadefire_stomp.up&buff.teachings_of_the_monastery.stack<4||buff.teachings_of_the_monastery.stack<1\nactions.st+=/blackout_kick,if=((!talent.awakened_jadefire||buff.jadefire_stomp.down)&buff.teachings_of_the_monastery.up||buff.teachings_of_the_monastery.stack>3)&(!talent.rushing_wind_kick&cooldown.rising_sun_kick.remains>2*gcd.max||cooldown.rushing_wind_kick.remains>2*gcd.max)\nactions.st+=/vivify,if=settings.single_zen_pulse&buff.zen_pulse.up\nactions.st+=/chi_burst\nactions.st+=/tiger_palm\n\nactions.aoe+=/thunder_focus_tea\nactions.aoe+=/crackling_jade_lightning,if=buff.jade_empowerment.up&buff.jadefire_teachings.up\nactions.aoe+=/vivify,if=buff.zen_pulse.up\nactions.aoe+=/rising_sun_kick,if=settings.aoe_rsk\nactions.aoe+=/rushing_wind_kick,if=settings.aoe_rsk\nactions.aoe+=/spinning_crane_kick,if=(talent.celestial_conduit&!talent.xuens_guidance)||active_enemies>=4\nactions.aoe+=/tiger_palm,if=talent.awakened_jadefire.enabled&buff.jadefire_stomp.up&buff.teachings_of_the_monastery.stack<4||buff.teachings_of_the_monastery.stack<1\nactions.aoe+=/blackout_kick,if=(!talent.rushing_wind_kick&cooldown.rising_sun_kick.remains>2*gcd.max||cooldown.rushing_wind_kick.remains>2*gcd.max)&(buff.teachings_of_the_monastery.stack>3)\nactions.aoe+=/chi_burst\nactions.aoe+=/spinning_crane_kick\n\n\nactions.crane+=/thunder_focus_tea,if=talent.ancient_teachings&buff.ancient_teachings.remains<gcd.max\nactions.crane+=/essence_font,if=talent.ancient_teachings&buff.ancient_teachings.remains<gcd.max\nactions.crane+=/jadefire_stomp,if=talent.ancient_teachings&buff.ancient_teachings.remains<gcd.max\nactions.crane+=/enveloping_mist,if=buff.invoke_chiji.stack>1\nactions.crane+=/rising_sun_kick\nactions.crane+=/rushing_wind_kick\nactions.crane+=/blackout_kick,if=((!talent.awakened_jadefire||buff.jadefire_stomp.down)&buff.teachings_of_the_monastery.up||buff.teachings_of_the_monastery.stack>3)&(!talent.rushing_wind_kick&cooldown.rising_sun_kick.remains>2*gcd.max||cooldown.rushing_wind_kick.remains>2*gcd.max)\nactions.crane+=/spinning_crane_kick,if=active_enemies>3||active_enemies>1&!talent.ancient_concordance&!talent.awakened_jadefire\nactions.crane+=/blackout_kick\nactions.crane+=/tiger_palm",
["author"] = "Aikanaka",
},
["Brewmaster"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20250812,
["author"] = "SimC",
["desc"] = "-- The War Within Season 3\n2025-08-12: APL Sync - 14cbb0c\n2025-08-11: Celestial Infusion Support\n\n-- The War Within Season 2\n2024-10-21: Babyproof Blackout Combo\n2024-10-11: Aspect of Harmony accumulator and SimC update\n2024-09-22: Consume Blackout Combo with Tiger Palm\n2024-09-05: Avoid double-CB\n2024-08-22: Avoid nonsensical Purifying Brews\n2024-07-26: The War Within",
["lists"] = {
["default"] = {
{
["action"] = "spear_hand_strike",
["enabled"] = true,
},
{
["action"] = "diffuse_magic",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "health.pct <= settings.vivify_percent & buff.vivacious_vivification.up",
["action"] = "vivify",
},
{
["enabled"] = true,
["criteria"] = "tanking & settings.purify_for_celestial & ( time_to_max_charges < gcd.max || buff.purified_chi.up & buff.purified_chi.remains < 1.5 * gcd.max ) || cooldown.celestial_brew.remains < 2 * gcd.max & charges_fractional > 1.5",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "tanking & ( buff.celestial_brew.down & buff.celestial_infusion.down ) & ( ! talent.improved_celestial_brew.enabled || buff.purified_chi.up ) & ( ! settings.max_damage || buff.blackout_combo.down )",
["action"] = "celestial_brew",
},
{
["enabled"] = true,
["criteria"] = "group & ( ! settings.max_damage || buff.blackout_combo.down ) & settings.purify_stagger_currhp > 0 & stagger.pct >= settings.purify_stagger_currhp",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "solo & ( ! settings.max_damage || buff.blackout_combo.down ) & settings.purify_stagger_currhp > 0 & stagger.pct >= settings.purify_stagger_currhp * 0.5",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "group & ( settings.max_damage & buff.blackout_combo.down ) & settings.purify_stagger_maxhp > 0 & stagger.pct >= settings.purify_stagger_maxhp",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "solo & ( ! settings.max_damage || buff.blackout_combo.down ) & settings.purify_stagger_maxhp > 0 & stagger.pct >= settings.purify_stagger_maxhp * 0.5",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "group & ( ! settings.max_damage || buff.blackout_combo.down ) & settings.purify_stagger_currhp = 0 & settings.purify_stagger_maxhp = 0 & stagger.pct > 20",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "solo & ( ! settings.max_damage || buff.blackout_combo.down ) & settings.purify_stagger_currhp = 0 & settings.purify_stagger_maxhp = 0 & stagger.pct > 10",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 75 & incoming_damage_3s > health.max * ( 0.2 + ( 0.2 * group ) ) & buff.fortifying_brew.down",
["action"] = "dampen_harm",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 50 & incoming_damage_3s > health.max * ( 0.2 + ( 0.2 * group ) ) & ( buff.dampen_harm.down )",
["action"] = "fortifying_brew",
},
{
["action"] = "touch_of_death",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.gift_of_the_ox.stack > 4 & health.pct < settings.eh_percent",
["action"] = "expel_harm",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "tome_of_lights_devotion",
["criteria"] = "buff.inner_resilience.up",
["name"] = "tome_of_lights_devotion",
},
{
["enabled"] = false,
["criteria"] = "buff.weapons_of_order.up & debuff.weapons_of_order_debuff.stack = 4",
["name"] = "unyielding_netherprism",
},
{
["enabled"] = false,
["criteria"] = "! talent.weapons_of_order.enabled",
["name"] = "unyielding_netherprism",
},
{
["enabled"] = false,
["criteria"] = "buff.weapons_of_order.up & debuff.weapons_of_order_debuff.stack = 4",
["name"] = "lily_of_the_eternal_weave",
},
{
["enabled"] = false,
["criteria"] = "! talent.weapons_of_order.enabled",
["name"] = "lily_of_the_eternal_weave",
},
{
["enabled"] = true,
["action"] = "signet_of_the_priory",
["criteria"] = "buff.weapons_of_order.up & debuff.weapons_of_order_debuff.stack = 4",
["name"] = "signet_of_the_priory",
},
{
["enabled"] = true,
["action"] = "signet_of_the_priory",
["criteria"] = "! talent.weapons_of_order.enabled",
["name"] = "signet_of_the_priory",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "energy < 40 & ( ! talent.aspect_of_harmony.enabled || cooldown.celestial_brew.charges_fractional < 1 )",
["action"] = "black_ox_brew",
},
{
["enabled"] = true,
["criteria"] = "( ! settings.max_damage || buff.blackout_combo.down ) & buff.aspect_of_harmony_accumulator.value > 0.3 * health.max & buff.weapons_of_order.up & ! dot.aspect_of_harmony_damage.ticking",
["action"] = "celestial_brew",
},
{
["enabled"] = true,
["criteria"] = "( ! settings.max_damage || buff.blackout_combo.down ) & buff.aspect_of_harmony_accumulator.value > 0.3 * health.max & ! talent.weapons_of_order.enabled & ! dot.aspect_of_harmony_damage.ticking",
["action"] = "celestial_brew",
},
{
["enabled"] = true,
["criteria"] = "( ! settings.max_damage || buff.blackout_combo.down ) & fight_remains < 20 & fight_remains > 14 & buff.aspect_of_harmony_accumulator.value > 0.2 * health.max",
["action"] = "celestial_brew",
},
{
["enabled"] = true,
["criteria"] = "( ! settings.max_damage || buff.blackout_combo.down ) & buff.aspect_of_harmony_accumulator.value > 0.3 * health.max & cooldown.weapons_of_order.remains > 20 & ! dot.aspect_of_harmony_damage.ticking",
["action"] = "celestial_brew",
},
{
["enabled"] = true,
["criteria"] = "( ! settings.max_damage || buff.blackout_combo.down ) & ( cooldown.celestial_brew.charges_fractional > 1.8 || ( cooldown.celestial_brew.charges_fractional > 1.2 & cooldown.black_ox_brew.up ) )",
["action"] = "celestial_brew",
},
{
["action"] = "blackout_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.aspect_of_harmony.enabled || buff.balanced_stratagem_magic.stack > 3",
["action"] = "chi_burst",
},
{
["action"] = "weapons_of_order",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.call_to_arms.enabled",
["action"] = "invoke_niuzao",
},
{
["enabled"] = true,
["criteria"] = "talent.call_to_arms.enabled & buff.call_to_arms_invoke_niuzao.down & buff.weapons_of_order.remains < 16",
["action"] = "invoke_niuzao",
},
{
["enabled"] = true,
["criteria"] = "! talent.fluidity_of_motion.enabled",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.weapons_of_order.up & ( debuff.weapons_of_order_debuff.remains < 1.8 || debuff.weapons_of_order_debuff.stack < 3 - buff.blackout_combo.up || ( buff.weapons_of_order.remains < 3 - buff.blackout_combo.up & buff.weapons_of_order.remains < 1 + cooldown.rising_sun_kick.remains ) )",
["action"] = "keg_smash",
},
{
["enabled"] = true,
["criteria"] = "buff.blackout_combo.up",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "talent.scalding_brew.enabled",
["action"] = "keg_smash",
},
{
["enabled"] = true,
["criteria"] = "talent.charred_passions.enabled & talent.scalding_brew.enabled & buff.charred_passions.up & buff.charred_passions.remains < 3 & dot.breath_of_fire.remains < 9 & active_enemies > 4",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.fluidity_of_motion.enabled",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.blackout_combo.down & ! ( talent.call_to_arms.enabled || talent.invoke_niuzao_the_black_ox.enabled )",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "buff.blackout_combo.down & ( talent.call_to_arms.enabled || talent.invoke_niuzao_the_black_ox.enabled ) & ( buff.invoke_niuzao_the_black_ox.up || buff.call_to_arms_invoke_niuzao.up )",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "buff.blackout_combo.down & ( talent.call_to_arms.enabled || talent.invoke_niuzao_the_black_ox.enabled ) & cooldown.weapons_of_order.remains > 10 & cooldown.invoke_niuzao_the_black_ox.remains > 10",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "( buff.charred_passions.down & ( ! talent.scalding_brew.enabled || active_enemies < 5 ) ) || ! talent.charred_passions.enabled || ( dot.breath_of_fire.remains < 3 & talent.scalding_brew.enabled )",
["action"] = "breath_of_fire",
},
{
["enabled"] = true,
["criteria"] = "! talent.rushing_jade_wind.enabled || buff.rushing_jade_wind.up",
["action"] = "exploding_keg",
},
{
["enabled"] = true,
["criteria"] = "talent.aspect_of_harmony.enabled & ( ( buff.rushing_jade_wind.remains < 2.5 & buff.rushing_jade_wind.up ) || ! buff.rushing_jade_wind.up )",
["action"] = "rushing_jade_wind",
},
{
["action"] = "keg_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.aspect_of_harmony.enabled & ( ( buff.rushing_jade_wind.remains < 2.5 & buff.rushing_jade_wind.up ) || ! buff.rushing_jade_wind.up )",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "energy > 40 - cooldown.keg_smash.remains * energy.regen",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "energy > 40 - cooldown.keg_smash.remains * energy.regen",
["action"] = "spinning_crane_kick",
},
},
["precombat"] = {
{
["action"] = "potion",
["enabled"] = true,
},
},
},
["version"] = 20250812,
["warnings"] = "The import for 'default' required some automated changes.\nLine 25: Unsupported use_item action [ unyielding_netherprism]; entry disabled.\nLine 26: Unsupported use_item action [ unyielding_netherprism]; entry disabled.\nLine 27: Unsupported use_item action [ lily_of_the_eternal_weave]; entry disabled.\nLine 28: Unsupported use_item action [ lily_of_the_eternal_weave]; entry disabled.\n\nImported 2 action lists.\n",
["profile"] = "## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/monk_brewmaster.simc\n## SimulationCraft Commit Sync: 14cbb0c\n## Date: 2025-08-12\n\n## TODO - squish the celestial brew entries\n\nactions.precombat+=/potion\n\nactions+=/spear_hand_strike\nactions+=/diffuse_magic\nactions+=/vivify,if=health.pct<=settings.vivify_percent&buff.vivacious_vivification.up\nactions+=/purifying_brew,if=tanking&settings.purify_for_celestial&(time_to_max_charges<gcd.max||buff.purified_chi.up&buff.purified_chi.remains<1.5*gcd.max)||cooldown.celestial_brew.remains<2*gcd.max&charges_fractional>1.5\nactions+=/celestial_brew,if=tanking&(buff.celestial_brew.down&buff.celestial_infusion.down)&(!talent.improved_celestial_brew||buff.purified_chi.up)&(!settings.max_damage||buff.blackout_combo.down)\n## actions+=/purifying_brew,line_cd=5,if=talent.improved_invoke_niuzao_the_black_ox&settings.purify_for_niuzao&pet.niuzao_the_black_ox.active\nactions+=/purifying_brew,if=group&(!settings.max_damage||buff.blackout_combo.down)&settings.purify_stagger_currhp>0&stagger.pct>=settings.purify_stagger_currhp\nactions+=/purifying_brew,if=solo&(!settings.max_damage||buff.blackout_combo.down)&settings.purify_stagger_currhp>0&stagger.pct>=settings.purify_stagger_currhp*0.5\nactions+=/purifying_brew,if=group&(settings.max_damage&buff.blackout_combo.down)&settings.purify_stagger_maxhp>0&stagger.pct>=settings.purify_stagger_maxhp\nactions+=/purifying_brew,if=solo&(!settings.max_damage||buff.blackout_combo.down)&settings.purify_stagger_maxhp>0&stagger.pct>=settings.purify_stagger_maxhp*0.5\nactions+=/purifying_brew,if=group&(!settings.max_damage||buff.blackout_combo.down)&settings.purify_stagger_currhp=0&settings.purify_stagger_maxhp=0&stagger.pct>20\nactions+=/purifying_brew,if=solo&(!settings.max_damage||buff.blackout_combo.down)&settings.purify_stagger_currhp=0&settings.purify_stagger_maxhp=0&stagger.pct>10\nactions+=/dampen_harm,if=health.pct<75&incoming_damage_3s>health.max*(0.2+(0.2*group))&buff.fortifying_brew.down\nactions+=/fortifying_brew,if=health.pct<50&incoming_damage_3s>health.max*(0.2+(0.2*group))&(buff.dampen_harm.down)\nactions+=/touch_of_death\nactions+=/expel_harm,if=buff.gift_of_the_ox.stack>4&health.pct<settings.eh_percent\nactions+=/potion\nactions+=/blood_fury\nactions+=/berserking\nactions+=/arcane_torrent\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/use_item,name=tome_of_lights_devotion,if=buff.inner_resilience.up\nactions+=/use_item,name=unyielding_netherprism,if=buff.weapons_of_order.up&debuff.weapons_of_order_debuff.stack=4\nactions+=/use_item,name=unyielding_netherprism,if=!talent.weapons_of_order.enabled\nactions+=/use_item,name=lily_of_the_eternal_weave,if=buff.weapons_of_order.up&debuff.weapons_of_order_debuff.stack=4\nactions+=/use_item,name=lily_of_the_eternal_weave,if=!talent.weapons_of_order.enabled\nactions+=/use_item,name=signet_of_the_priory,if=buff.weapons_of_order.up&debuff.weapons_of_order_debuff.stack=4\nactions+=/use_item,name=signet_of_the_priory,if=!talent.weapons_of_order.enabled\nactions+=/use_item,slot=trinket1\nactions+=/use_item,slot=trinket2\nactions+=/black_ox_brew,if=energy<40&(!talent.aspect_of_harmony.enabled||cooldown.celestial_brew.charges_fractional<1)\nactions+=/celestial_brew,if=(!settings.max_damage||buff.blackout_combo.down)&buff.aspect_of_harmony_accumulator.value>0.3*health.max&buff.weapons_of_order.up&!dot.aspect_of_harmony_damage.ticking\nactions+=/celestial_brew,if=(!settings.max_damage||buff.blackout_combo.down)&buff.aspect_of_harmony_accumulator.value>0.3*health.max&!talent.weapons_of_order.enabled&!dot.aspect_of_harmony_damage.ticking\nactions+=/celestial_brew,if=(!settings.max_damage||buff.blackout_combo.down)&fight_remains<20&fight_remains>14&buff.aspect_of_harmony_accumulator.value>0.2*health.max\nactions+=/celestial_brew,if=(!settings.max_damage||buff.blackout_combo.down)&buff.aspect_of_harmony_accumulator.value>0.3*health.max&cooldown.weapons_of_order.remains>20&!dot.aspect_of_harmony_damage.ticking\nactions+=/celestial_brew,if=(!settings.max_damage||buff.blackout_combo.down)&(cooldown.celestial_brew.charges_fractional>1.8||(cooldown.celestial_brew.charges_fractional>1.2&cooldown.black_ox_brew.up))\nactions+=/blackout_kick\nactions+=/chi_burst,if=!talent.aspect_of_harmony.enabled||buff.balanced_stratagem_magic.stack>3\nactions+=/weapons_of_order\nactions+=/invoke_niuzao,if=!talent.call_to_arms.enabled\nactions+=/invoke_niuzao,if=talent.call_to_arms.enabled&buff.call_to_arms_invoke_niuzao.down&buff.weapons_of_order.remains<16\nactions+=/rising_sun_kick,if=!talent.fluidity_of_motion.enabled\nactions+=/keg_smash,if=buff.weapons_of_order.up&(debuff.weapons_of_order_debuff.remains<1.8||debuff.weapons_of_order_debuff.stack<3-buff.blackout_combo.up||(buff.weapons_of_order.remains<3-buff.blackout_combo.up&buff.weapons_of_order.remains<1+cooldown.rising_sun_kick.remains))\nactions+=/tiger_palm,if=buff.blackout_combo.up\nactions+=/keg_smash,if=talent.scalding_brew.enabled\nactions+=/spinning_crane_kick,if=talent.charred_passions.enabled&talent.scalding_brew.enabled&buff.charred_passions.up&buff.charred_passions.remains<3&dot.breath_of_fire.remains<9&active_enemies>4\nactions+=/rising_sun_kick,if=talent.fluidity_of_motion.enabled\nactions+=/purifying_brew,if=buff.blackout_combo.down&!(talent.call_to_arms.enabled||talent.invoke_niuzao_the_black_ox.enabled)\nactions+=/purifying_brew,if=buff.blackout_combo.down&(talent.call_to_arms.enabled||talent.invoke_niuzao_the_black_ox.enabled)&(buff.invoke_niuzao_the_black_ox.up||buff.call_to_arms_invoke_niuzao.up)\nactions+=/purifying_brew,if=buff.blackout_combo.down&(talent.call_to_arms.enabled||talent.invoke_niuzao_the_black_ox.enabled)&cooldown.weapons_of_order.remains>10&cooldown.invoke_niuzao_the_black_ox.remains>10\nactions+=/breath_of_fire,if=(buff.charred_passions.down&(!talent.scalding_brew.enabled||active_enemies<5))||!talent.charred_passions.enabled||(dot.breath_of_fire.remains<3&talent.scalding_brew.enabled)\nactions+=/exploding_keg,if=!talent.rushing_jade_wind.enabled||buff.rushing_jade_wind.up\nactions+=/rushing_jade_wind,if=talent.aspect_of_harmony.enabled&((buff.rushing_jade_wind.remains<2.5&buff.rushing_jade_wind.up)||!buff.rushing_jade_wind.up)\nactions+=/keg_smash\nactions+=/rushing_jade_wind,if=!talent.aspect_of_harmony.enabled&((buff.rushing_jade_wind.remains<2.5&buff.rushing_jade_wind.up)||!buff.rushing_jade_wind.up)\nactions+=/tiger_palm,if=energy>40-cooldown.keg_smash.remains*energy.regen\nactions+=/spinning_crane_kick,if=energy>40-cooldown.keg_smash.remains*energy.regen",
["spec"] = 268,
},
["Guardian"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20250829,
["author"] = "SimC",
["desc"] = "2025-08-28: SimC Sync\n\n2025-03-14: SimC Sync",
["lists"] = {
["mitigation"] = {
{
["enabled"] = true,
["criteria"] = "tanking & ! variable.if_build & incoming_damage_5s > ironfur_damage_threshold & buff.ironfur.remains < 3 * haste & buff.ironfur.stack < 5",
["action"] = "ironfur",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 65",
["action"] = "regrowth",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 65",
["action"] = "renewal",
},
{
["enabled"] = true,
["criteria"] = "tanking & health.pct < 65",
["action"] = "frenzied_regeneration",
},
{
["enabled"] = true,
["criteria"] = "tanking & health.pct < 75 & incoming_damage_5s > 0.1 * health.max",
["action"] = "barkskin",
},
{
["enabled"] = true,
["criteria"] = "buff.survival_instincts.down & buff.barkskin.down & health.pct < 60 & incoming_damage_5s > 0.25 * health.max",
["action"] = "survival_instincts",
},
},
["precombat"] = {
{
["action"] = "mark_of_the_wild",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "if_build",
["value"] = "1",
["value_else"] = "0",
["criteria"] = "talent.thorns_of_iron.enabled & talent.ursocs_endurance.enabled",
},
{
["enabled"] = true,
["criteria"] = "time = 0 || ! talent.fluid_form.enabled",
["action"] = "bear_form",
},
},
["default"] = {
{
["action"] = "skull_bash",
["enabled"] = true,
},
{
["action"] = "soothe",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.prowl.up",
["action"] = "rake",
},
{
["enabled"] = true,
["name"] = "bestinslots",
["action"] = "bestinslots",
["criteria"] = "buff.incarnation_guardian_of_ursoc.up || buff.berserk_bear.up",
},
{
["enabled"] = true,
["name"] = "tome_of_lights_devotion",
["action"] = "tome_of_lights_devotion",
["criteria"] = "buff.inner_resilience.up",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "( buff.berserk_bear.up || buff.incarnation_guardian_of_ursoc.up )",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "mitigation",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "bear",
},
},
["bear"] = {
{
["enabled"] = true,
["criteria"] = "buff.ravage.up & active_enemies > 1",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "refreshable || ( dot.thrash_bear.stack < 5 & talent.flashing_claws.rank = 2 || dot.thrash_bear.stack < 4 & talent.flashing_claws.rank = 1 || dot.thrash_bear.stack < 3 & ! talent.flashing_claws.enabled )",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["criteria"] = "tanking & cooldown.rage_of_the_sleeper.remains > 8",
["action"] = "bristling_fur",
},
{
["enabled"] = true,
["criteria"] = "buff.bear_form.up",
["action"] = "barkskin",
},
{
["action"] = "lunar_beam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( talent.wildpower_surge.enabled & buff.cat_form.up & buff.feline_potential.up ) || ! talent.wildpower_surge.enabled",
["action"] = "convoke_the_spirits",
},
{
["action"] = "berserk_bear",
["enabled"] = true,
},
{
["action"] = "incarnation",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ( ( buff.incarnation_guardian_of_ursoc.down & cooldown.incarnation_guardian_of_ursoc.remains > 60 ) || buff.berserk_bear.down ) & rage > 40 & ( ! talent.convoke_the_spirits.enabled ) || ( buff.incarnation_guardian_of_ursoc.up || buff.berserk_bear.up ) & rage > 40 & ( ! talent.convoke_the_spirits.enabled ) || ( talent.convoke_the_spirits.enabled ) & rage > 40 )",
["action"] = "rage_of_the_sleeper",
},
{
["enabled"] = true,
["criteria"] = "( buff.berserk_bear.up || buff.incarnation_guardian_of_ursoc.up )",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.ravage.up & active_enemies < 2",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "( buff.tooth_and_claw.stack > 1 || buff.tooth_and_claw.up & buff.tooth_and_claw.remains < 1 + gcd.max || buff.vicious_cycle_maul.stack = 3 )",
["action"] = "raze",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 5 & talent.lunar_calling.enabled",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["criteria"] = "! debuff.tooth_and_claw.up & ! buff.ironfur.up & rage > 50 & tanking & variable.if_build = 0 & ! buff.rage_of_the_sleeper.up || rage > 90 & variable.if_build = 0 || ! debuff.tooth_and_claw.up & ! buff.ironfur.up & rage > 50 & tanking & variable.if_build = 0 & ! buff.rage_of_the_sleeper.up",
["action"] = "ironfur",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.ravage.up & ( ( rage > 40 & variable.if_build = 1 || rage > 90 & variable.if_build = 1 & ! talent.fount_of_strength.enabled || rage > 110 & variable.if_build = 1 & talent.fount_of_strength.enabled || ( buff.incarnation.up || buff.berserk_bear.up ) & rage > 20 & variable.if_build = 1 & buff.rage_of_the_sleeper.up & talent.rage_of_the_sleeper.enabled ) )",
["action"] = "ironfur",
},
{
["enabled"] = true,
["criteria"] = "! buff.ravage.up & ( buff.incarnation.up || buff.berserk_bear.up ) & rage > 20 & variable.if_build = 1",
["action"] = "ironfur",
},
{
["enabled"] = true,
["criteria"] = "( buff.cat_form.up & buff.feline_potential.up & ( buff.incarnation.up || buff.berserk_bear.up ) & ! dot.rip.refreshable )",
["action"] = "ferocious_bite",
},
{
["enabled"] = true,
["criteria"] = "( buff.cat_form.up & buff.feline_potential.up )",
["action"] = "rip",
},
{
["enabled"] = true,
["criteria"] = "buff.gore.up & active_enemies < 11 || buff.incarnation_guardian_of_ursoc.up & buff.feline_potential_counter.stack < 6 & talent.wildpower_surge.enabled",
["action"] = "mangle",
},
{
["enabled"] = true,
["criteria"] = "cooldown.rage_of_the_sleeper.remains <= 52 & buff.feline_potential_counter.stack = 6 & ! buff.cat_form.up & ! dot.rake.refreshable & talent.fluid_form.enabled",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "cooldown.rage_of_the_sleeper.remains <= 52 & buff.feline_potential_counter.stack = 6 & ! buff.cat_form.up & talent.fluid_form.enabled",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "buff.cat_form.up & talent.fluid_form.enabled",
["action"] = "mangle",
},
{
["enabled"] = true,
["criteria"] = "variable.if_build = 1 & ( ( ( buff.tooth_and_claw.stack > 1 || buff.tooth_and_claw.up & buff.tooth_and_claw.remains < 1 + gcd.max ) & active_enemies <= 5 & ! talent.raze.enabled ) || ( ( buff.tooth_and_claw.stack > 1 || buff.tooth_and_claw.up & buff.tooth_and_claw.remains < 1 + gcd.max ) & active_enemies = 1 & talent.raze.enabled ) || ( ( buff.tooth_and_claw.stack > 1 || buff.tooth_and_claw.up & buff.tooth_and_claw.remains < 1 + gcd.max ) & active_enemies <= 5 & ! talent.raze.enabled ) )",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "variable.if_build = 0 & ( ( buff.tooth_and_claw.up & active_enemies <= 5 & ! talent.raze.enabled ) || ( buff.tooth_and_claw.up & active_enemies = 1 & talent.raze.enabled ) )",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies <= 5 & ! talent.raze.enabled & variable.if_build = 0 ) || ( active_enemies = 1 & talent.raze.enabled & variable.if_build = 0 ) || buff.vicious_cycle_maul.stack = 3 & active_enemies <= 5 & ! talent.raze.enabled",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 5",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["criteria"] = "( buff.incarnation.up & active_enemies <= 4 ) || ( buff.incarnation.up & talent.soul_of_the_forest.enabled & active_enemies <= 5 ) || ( ( rage < 88 ) & active_enemies < 11 ) || ( ( rage < 83 ) & active_enemies < 11 & talent.soul_of_the_forest.enabled )",
["action"] = "mangle",
},
{
["enabled"] = true,
["criteria"] = "buff.cat_form.up & ( ! dot.rip.ticking || refreshable ) & combo_points >= 3 & active_enemies < 3 & ! talent.empowered_shapeshifting.enabled",
["action"] = "rip",
},
{
["enabled"] = true,
["criteria"] = "buff.cat_form.up & dot.rip.ticking & combo_points > 4 & active_enemies < 3 & ! talent.empowered_shapeshifting.enabled",
["action"] = "ferocious_bite",
},
{
["enabled"] = true,
["criteria"] = "talent.fluid_form.enabled & buff.bear_form.up & ! buff.incarnation_guardian_of_ursoc.up & ( refreshable || ! dot.rake.ticking ) & active_enemies < 3 & ! talent.lunar_insight.enabled & energy > 70 & ! talent.empowered_shapeshifting.enabled || buff.cat_form.up & active_enemies < 3 & ! talent.lunar_insight.enabled & talent.fluid_form.enabled & energy > 70 & ( refreshable || ! dot.rake.ticking ) & ! talent.empowered_shapeshifting.enabled",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["action"] = "pulverize",
["cycle_targets"] = 1,
},
{
["action"] = "thrash_bear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.fluid_form.enabled & buff.bear_form.up & ! buff.incarnation_guardian_of_ursoc.up & ( refreshable || ! dot.rake.ticking ) & active_enemies > 3 & ! talent.lunar_insight.enabled & cooldown.mangle.remains < gcd.max & ! talent.empowered_shapeshifting.enabled",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "talent.fluid_form.enabled & buff.bear_form.up & ! buff.incarnation_guardian_of_ursoc.up & dot.rake.ticking & active_enemies < 3 & ! talent.lunar_insight.enabled & energy > 70 & ! talent.empowered_shapeshifting.enabled || buff.cat_form.up & active_enemies < 3 & ! talent.lunar_insight.enabled & talent.fluid_form.enabled & energy > 70 & ! talent.empowered_shapeshifting.enabled",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "buff.galactic_guardian.up & buff.bear_form.up & talent.boundless_moonlight.enabled",
["action"] = "moonfire",
},
{
["enabled"] = true,
["criteria"] = "talent.starsurge.enabled & rage < 20",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "( talent.lunar_insight.enabled & active_enemies > 4 ) || ! talent.lunar_insight.enabled || talent.lunar_insight.enabled & active_enemies < 2",
["action"] = "swipe_bear",
},
{
["enabled"] = true,
["criteria"] = "( talent.lunar_insight.enabled & active_enemies > 1 ) & buff.bear_form.up",
["action"] = "moonfire",
},
{
["enabled"] = true,
["criteria"] = "( talent.lunar_insight.enabled & active_enemies > 4 ) || ! talent.lunar_insight.enabled",
["action"] = "swipe_bear",
},
{
["enabled"] = true,
["criteria"] = "( talent.lunar_insight.enabled ) & buff.bear_form.up",
["action"] = "moonfire",
},
},
},
["version"] = 20250829,
["warnings"] = "Imported 4 action lists.\n",
["spec"] = 104,
["basedOn"] = "Guardian",
["profile"] = "## Upstream: https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/druid_guardian.simc\n## SimulationCraft Commit Sync: e9cc3d7\n## Date: 2025-08-27\n\nactions.precombat+=/mark_of_the_wild\nactions.precombat+=/variable,name=if_build,value=1,value_else=0,if=talent.thorns_of_iron.enabled&talent.ursocs_endurance.enabled\n## actions.precombat+=/heart_of_the_wild,if=talent.heart_of_the_wild.enabled&!talent.rip.enabled\nactions.precombat+=/bear_form,if=time=0||!talent.fluid_form.enabled\n## [Hekili] Disabled these because it'll just get tanks to die.\n## actions.precombat+=/cat_form,if=talent.rip.enabled\n## actions.precombat+=/prowl,if=talent.rip.enabled\n## actions.precombat+=/bear_form,if=!talent.rip.enabled\n\nactions+=/skull_bash\nactions+=/soothe\nactions+=/rake,if=buff.prowl.up\nactions+=/use_item,name=bestinslots,if=buff.incarnation_guardian_of_ursoc.up||buff.berserk_bear.up\nactions+=/use_item,name=tome_of_lights_devotion,if=buff.inner_resilience.up\nactions+=/use_item,slot=trinket1\nactions+=/use_item,slot=trinket2\nactions+=/potion,if=(buff.berserk_bear.up||buff.incarnation_guardian_of_ursoc.up)\nactions+=/call_action_list,name=mitigation\n## [Hekili] Disabled until/unless I strategize for off-tank DPS.\n## actions+=/prowl,if=!tanking&talent.rip.enabled\nactions+=/run_action_list,name=bear\n\nactions.bear+=/maul,if=buff.ravage.up&active_enemies>1\n## actions.bear+=/heart_of_the_wild,if=(talent.heart_of_the_wild.enabled&!talent.rip.enabled)||talent.heart_of_the_wild.enabled&buff.feline_potential_counter.stack=6&active_enemies<3\nactions.bear+=/thrash_bear,if=refreshable||(dot.thrash_bear.stack<5&talent.flashing_claws.rank=2||dot.thrash_bear.stack<4&talent.flashing_claws.rank=1||dot.thrash_bear.stack<3&!talent.flashing_claws.enabled)\nactions.bear+=/bristling_fur,if=tanking&cooldown.rage_of_the_sleeper.remains>8\nactions.bear+=/barkskin,if=buff.bear_form.up\nactions.bear+=/lunar_beam\nactions.bear+=/convoke_the_spirits,if=(talent.wildpower_surge.enabled&buff.cat_form.up&buff.feline_potential.up)||!talent.wildpower_surge.enabled\nactions.bear+=/berserk_bear\nactions.bear+=/incarnation\nactions.bear+=/rage_of_the_sleeper,if=(((buff.incarnation_guardian_of_ursoc.down&cooldown.incarnation_guardian_of_ursoc.remains>60)||buff.berserk_bear.down)&rage>40&(!talent.convoke_the_spirits.enabled)||(buff.incarnation_guardian_of_ursoc.up||buff.berserk_bear.up)&rage>40&(!talent.convoke_the_spirits.enabled)||(talent.convoke_the_spirits.enabled)&rage>40)\nactions.bear+=/berserking,if=(buff.berserk_bear.up||buff.incarnation_guardian_of_ursoc.up)\nactions.bear+=/maul,if=buff.ravage.up&active_enemies<2\nactions.bear+=/raze,if=(buff.tooth_and_claw.stack>1||buff.tooth_and_claw.up&buff.tooth_and_claw.remains<1+gcd||buff.vicious_cycle_maul.stack=3)\nactions.bear+=/thrash_bear,if=active_enemies>=5&talent.lunar_calling.enabled\nactions.bear+=/ironfur,cycle_targets=1,if=!debuff.tooth_and_claw.up&!buff.ironfur.up&rage>50&tanking&variable.if_build=0&!buff.rage_of_the_sleeper.up||rage>90&variable.if_build=0||!debuff.tooth_and_claw.up&!buff.ironfur.up&rage>50&tanking&variable.if_build=0&!buff.rage_of_the_sleeper.up\nactions.bear+=/ironfur,if=!buff.ravage.up&((rage>40&variable.if_build=1||rage>90&variable.if_build=1&!talent.fount_of_strength.enabled||rage>110&variable.if_build=1&talent.fount_of_strength.enabled||(buff.incarnation.up||buff.berserk_bear.up)&rage>20&variable.if_build=1&buff.rage_of_the_sleeper.up&talent.rage_of_the_sleeper.enabled))\nactions.bear+=/ironfur,if=!buff.ravage.up&(buff.incarnation.up||buff.berserk_bear.up)&rage>20&variable.if_build=1\nactions.bear+=/ferocious_bite,if=(buff.cat_form.up&buff.feline_potential.up&(buff.incarnation.up||buff.berserk_bear.up)&!dot.rip.refreshable)\nactions.bear+=/rip,if=(buff.cat_form.up&buff.feline_potential.up)\nactions.bear+=/mangle,if=buff.gore.up&active_enemies<11||buff.incarnation_guardian_of_ursoc.up&buff.feline_potential_counter.stack<6&talent.wildpower_surge.enabled\nactions.bear+=/shred,if=cooldown.rage_of_the_sleeper.remains<=52&buff.feline_potential_counter.stack=6&!buff.cat_form.up&!dot.rake.refreshable&talent.fluid_form.enabled\nactions.bear+=/rake,if=cooldown.rage_of_the_sleeper.remains<=52&buff.feline_potential_counter.stack=6&!buff.cat_form.up&talent.fluid_form.enabled\nactions.bear+=/mangle,if=buff.cat_form.up&talent.fluid_form.enabled\nactions.bear+=/maul,if=variable.if_build=1&(((buff.tooth_and_claw.stack>1||buff.tooth_and_claw.up&buff.tooth_and_claw.remains<1+gcd)&active_enemies<=5&!talent.raze.enabled)||((buff.tooth_and_claw.stack>1||buff.tooth_and_claw.up&buff.tooth_and_claw.remains<1+gcd)&active_enemies=1&talent.raze.enabled)||((buff.tooth_and_claw.stack>1||buff.tooth_and_claw.up&buff.tooth_and_claw.remains<1+gcd)&active_enemies<=5&!talent.raze.enabled))\nactions.bear+=/maul,if=variable.if_build=0&((buff.tooth_and_claw.up&active_enemies<=5&!talent.raze.enabled)||(buff.tooth_and_claw.up&active_enemies=1&talent.raze.enabled))\nactions.bear+=/maul,if=(active_enemies<=5&!talent.raze.enabled&variable.if_build=0)||(active_enemies=1&talent.raze.enabled&variable.if_build=0)||buff.vicious_cycle_maul.stack=3&active_enemies<=5&!talent.raze.enabled\nactions.bear+=/thrash_bear,if=active_enemies>=5\nactions.bear+=/mangle,if=(buff.incarnation.up&active_enemies<=4)||(buff.incarnation.up&talent.soul_of_the_forest.enabled&active_enemies<=5)||((rage<88)&active_enemies<11)||((rage<83)&active_enemies<11&talent.soul_of_the_forest.enabled)\nactions.bear+=/rip,if=buff.cat_form.up&(!dot.rip.ticking||refreshable)&combo_points>=3&active_enemies<3&!talent.empowered_shapeshifting.enabled\nactions.bear+=/ferocious_bite,if=buff.cat_form.up&dot.rip.ticking&combo_points>4&active_enemies<3&!talent.empowered_shapeshifting.enabled\nactions.bear+=/rake,if=talent.fluid_form.enabled&buff.bear_form.up&!buff.incarnation_guardian_of_ursoc.up&(refreshable||!dot.rake.ticking)&active_enemies<3&!talent.lunar_insight.enabled&energy>70&!talent.empowered_shapeshifting.enabled||buff.cat_form.up&active_enemies<3&!talent.lunar_insight.enabled&talent.fluid_form.enabled&energy>70&(refreshable||!dot.rake.ticking)&!talent.empowered_shapeshifting.enabled\nactions.bear+=/thrash_bear,if=active_enemies>1\nactions.bear+=/pulverize,cycle_targets=1\nactions.bear+=/thrash_bear\nactions.bear+=/rake,if=talent.fluid_form.enabled&buff.bear_form.up&!buff.incarnation_guardian_of_ursoc.up&(refreshable||!dot.rake.ticking)&active_enemies>3&!talent.lunar_insight.enabled&cooldown.mangle.remains<gcd&!talent.empowered_shapeshifting.enabled\nactions.bear+=/shred,if=talent.fluid_form.enabled&buff.bear_form.up&!buff.incarnation_guardian_of_ursoc.up&dot.rake.ticking&active_enemies<3&!talent.lunar_insight.enabled&energy>70&!talent.empowered_shapeshifting.enabled||buff.cat_form.up&active_enemies<3&!talent.lunar_insight.enabled&talent.fluid_form.enabled&energy>70&!talent.empowered_shapeshifting.enabled\nactions.bear+=/moonfire,if=buff.galactic_guardian.up&buff.bear_form.up&talent.boundless_moonlight.enabled\nactions.bear+=/starsurge,if=talent.starsurge.enabled&rage<20\nactions.bear+=/swipe_bear,if=(talent.lunar_insight.enabled&active_enemies>4)||!talent.lunar_insight.enabled||talent.lunar_insight.enabled&active_enemies<2\nactions.bear+=/moonfire,if=(talent.lunar_insight.enabled&active_enemies>1)&buff.bear_form.up\nactions.bear+=/swipe_bear,if=(talent.lunar_insight.enabled&active_enemies>4)||!talent.lunar_insight.enabled\nactions.bear+=/moonfire,if=(talent.lunar_insight.enabled)&buff.bear_form.up\n\nactions.mitigation+=/ironfur,if=tanking&!variable.if_build&incoming_damage_5s>ironfur_damage_threshold&buff.ironfur.remains<3*haste&buff.ironfur.stack<5\nactions.mitigation+=/regrowth,if=health.pct<65\nactions.mitigation+=/renewal,if=health.pct<65\nactions.mitigation+=/frenzied_regeneration,if=tanking&health.pct<65\nactions.mitigation+=/barkskin,if=tanking&health.pct<75&incoming_damage_5s>0.1*health.max\nactions.mitigation+=/survival_instincts,if=buff.survival_instincts.down&buff.barkskin.down&health.pct<60&incoming_damage_5s>0.25*health.max",
},
["Havoc"] = {
["source"] = "SimulationCraft",
["builtIn"] = true,
["date"] = 20250831,
["spec"] = 577,
["desc"] = "-- The War Within Season 3\n2025-08-31: Finish De-Prune\n2025-08-21: Fix Vengeful Retreat for AR\n2025-08-13: De-Prune\n2025-08-12: Updated for TWW S3",
["profile"] = "## Upstream: https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/demonhunter_havoc.simc\n## SimulationCraft Commit Sync: 04a038d\n## Date: 2025-08-11\n\n# Variables for on use trinkets and filtering out Seaforium\nactions.precombat+=/variable,name=trinket1_steroids,value=trinket.1.has_cooldown&trinket.1.has_stat.any_dps&!trinket.1.is.improvised_seaforium_pacemaker\nactions.precombat+=/variable,name=trinket2_steroids,value=trinket.2.has_cooldown&trinket.2.has_stat.any_dps&!trinket.2.is.improvised_seaforium_pacemaker\n# Blacklist for trinkets to hold trinket cooldowns for Initiative and Necessary Strike line-up outside standard trinket implementation  TODO fix to work off generic conditions instead of specifying individual trinkets for futureproof\nactions.precombat+=/variable,name=trinket1_crit,value=trinket.1.is.mad_queens_mandate||trinket.1.is.junkmaestros_mega_magnet||trinket.1.is.geargrinders_spare_keys||trinket.1.is.ravenous_honey_buzzer||trinket.1.is.grim_codex||trinket.1.is.ratfang_toxin||trinket.1.is.blastmaster3000||trinket.1.is.cursed_stone_idol||trinket.1.is.perfidious_projector\nactions.precombat+=/variable,name=trinket2_crit,value=trinket.2.is.mad_queens_mandate||trinket.2.is.junkmaestros_mega_magnet||trinket.2.is.geargrinders_spare_keys||trinket.2.is.ravenous_honey_buzzer||trinket.2.is.grim_codex||trinket.2.is.ratfang_toxin||trinket.2.is.blastmaster3000||trinket.2.is.cursed_stone_idol||trinket.2.is.perfidious_projector\nactions.precombat+=/variable,name=fs_tier34_2piece,value=set_bonus.thewarwithin_season_3_2pc\nactions.precombat+=/variable,name=rg_ds,default=0,op=reset\nactions.precombat+=/sigil_of_flame\nactions.precombat+=/immolation_aura\n\nactions+=/disrupt\n# Fury generated per second\nactions+=/variable,name=fury_gen,op=set,value=talent.demon_blades*(1%(2.6*attack_haste)*((talent.demonsurge&buff.metamorphosis.up)*3+12))+buff.immolation_aura.stack*6+buff.tactical_retreat.up*10\n# Special check for Seaforium Pacemaker buff being active for Magnet Synching\nactions+=/variable,name=trinket_pacemaker_proc,value=trinket.1.is.improvised_seaforium_pacemaker&trinket.1.stat.crit.up||trinket.2.is.improvised_seaforium_pacemaker&trinket.2.stat.crit.up||!equipped.improvised_seaforium_pacemaker\n# Tier 33 tier set check for trinket lineups withs Necessary Sacrifice\nactions+=/variable,name=tier33_4piece,value=(buff.initiative.up||!talent.initiative||buff.necessary_sacrifice.stack>=5&buff.necessary_sacrifice.remains<0.5+cooldown.vengeful_retreat.remains)&(buff.necessary_sacrifice.up||!set_bonus.thewarwithin_season_2_4pc||cooldown.eye_beam.remains+2>buff.initiative.remains)\n# Tier 33 tier set special case check for magnet due to being able to hold\nactions+=/variable,name=tier33_4piece_magnet,value=(buff.initiative.up||!talent.initiative)&(buff.necessary_sacrifice.up||!set_bonus.thewarwithin_season_2_4pc)&variable.trinket_pacemaker_proc&(trinket.1.is.junkmaestros_mega_magnet&(!trinket.2.has_cooldown||trinket.2.cooldown.remains>20))||(trinket.2.is.junkmaestros_mega_magnet&(!trinket.1.has_cooldown||trinket.1.cooldown.remains>20))\n# Double on use trinket holding for using a stat cooldown trinket and an on use damage trinket\nactions+=/variable,name=double_on_use,value=!equipped.signet_of_the_priory&!equipped.house_of_cards||(trinket.1.is.house_of_cards||trinket.1.is.signet_of_the_priory)&trinket.1.cooldown.remains>20||(trinket.2.is.house_of_cards||trinket.2.is.signet_of_the_priory)&trinket.2.cooldown.remains>20\n# Use to determine if we traversed either of the opener lists.\nactions+=/variable,name=opened,value=false\n# Separate actionlists for each hero tree\nactions+=/run_action_list,name=ar,strict=1,if=hero_tree.aldrachi_reaver\n## [Syrif] - Fallback for people levelling\nactions+=/run_action_list,name=fs,strict=1,if=!hero_tree.aldrachi_reaver\n\n# Aldrachi Reaver\nactions.ar+=/variable,name=rg_inc,op=set,value=buff.rending_strike.down&buff.glaive_flurry.up&cooldown.blade_dance.up&gcd.remains=0||variable.rg_inc&prev_gcd.1.death_sweep\n## actions.ar+=/pick_up_fragment,type=all,use_off_gcd=1,if=fury<=90\nactions.ar+=/variable,name=fel_barrage,op=set,value=talent.fel_barrage&(cooldown.fel_barrage.remains<gcd.max*7&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in<gcd.max*7||raid_event.adds.in>90)&(cooldown.metamorphosis.remains||active_enemies>2)||buff.fel_barrage.up)&!(active_enemies=1&!raid_event.adds.exists)\nactions.ar+=/chaos_strike,if=buff.rending_strike.up&buff.glaive_flurry.up&(variable.rg_ds=2||active_enemies>2)&time>10\nactions.ar+=/annihilation,if=buff.rending_strike.up&buff.glaive_flurry.up&(variable.rg_ds=2||active_enemies>2)\n## [Hekili] Remove `action.reavers_glaive.last_used` check that prevented using Reaver's Glaive after the opener.\nactions.ar+=/reavers_glaive,if=buff.glaive_flurry.down&buff.rending_strike.down&buff.thrill_of_the_fight_damage.remains<gcd.max*4+(variable.rg_ds=2)+(cooldown.the_hunt.remains<gcd.max*3)*3+(cooldown.eye_beam.remains<gcd.max*3&talent.shattered_destiny)*3&(variable.rg_ds=0||variable.rg_ds=1&cooldown.blade_dance.up||variable.rg_ds=2&cooldown.blade_dance.remains)&(buff.thrill_of_the_fight_damage.up||!prev_gcd.1.death_sweep||!variable.rg_inc)&active_enemies<3&debuff.essence_break.down&(buff.art_of_the_glaive.stack>3||buff.metamorphosis.remains>2||cooldown.eye_beam.remains<10||boss&fight_remains<10)\nactions.ar+=/reavers_glaive,if=buff.glaive_flurry.down&buff.rending_strike.down&buff.thrill_of_the_fight_damage.remains<4&(buff.thrill_of_the_fight_damage.up||!prev_gcd.1.death_sweep||!variable.rg_inc)&active_enemies>2&fight_remains>=10&debuff.essence_break.down||boss&fight_remains<10\nactions.ar+=/call_action_list,name=ar_cooldown\n## [Hekili] No performance loss in sims changing from Run Action List to Call Action List; checking CDs toggle will help keep cromulent.\nactions.ar+=/call_action_list,name=ar_opener,strict_if=time<15&toggle.cooldowns,if=time<15&toggle.cooldowns&(cooldown.eye_beam.up||cooldown.metamorphosis.up||talent.essence_break&cooldown.essence_break.up)\n# Lineup Sigil of Spite with initiative and 4-piece while preferring to use outside of metamorphosis\nactions.ar+=/sigil_of_spite,if=debuff.essence_break.down&cooldown.blade_dance.remains&debuff.reavers_mark.remains>=2-talent.quickened_sigils&(buff.necessary_sacrifice.remains>=2-talent.quickened_sigils||!set_bonus.thewarwithin_season_2_4pc||cooldown.eye_beam.remains>8)&(buff.metamorphosis.down||buff.metamorphosis.remains+talent.shattered_destiny>=buff.necessary_sacrifice.remains+2-talent.quickened_sigils)||boss&fight_remains<20\nactions.ar+=/run_action_list,name=ar_fel_barrage,strict_if=active_enemies>1,if=variable.fel_barrage&active_enemies>=2&raid_event.adds.up\nactions.ar+=/immolation_aura,if=active_enemies>2&talent.ragefire&(!talent.fel_barrage||cooldown.fel_barrage.remains>recharge_time)&debuff.essence_break.down&(buff.metamorphosis.down||buff.metamorphosis.remains>5)\nactions.ar+=/immolation_aura,if=active_enemies>2&talent.ragefire&raid_event.adds.up&raid_event.adds.remains<15&raid_event.adds.remains>5&debuff.essence_break.down\n## actions.ar+=/fel_rush,if=buff.unbound_chaos.up&active_enemies>2&(!talent.inertia||cooldown.eye_beam.remains+2>buff.unbound_chaos.remains)  Lineup Vengeful retreat with Eyebeam casts for Tactical retreat builds\nactions.ar+=/vengeful_retreat,if=talent.initiative&talent.tactical_retreat&time>20&(cooldown.eye_beam.up&(talent.restless_hunter||cooldown.metamorphosis.remains>10))&(!talent.inertia&buff.unbound_chaos.down||buff.inertia_trigger.down&buff.metamorphosis.down)\nactions.ar+=/vengeful_retreat,use_off_gcd=1,if=talent.initiative&!talent.tactical_retreat&(cooldown.eye_beam.remains>15&gcd.remains<0.3||gcd.remains<0.2&cooldown.eye_beam.remains<=gcd.remains&cooldown.metamorphosis.remains>10)&(!variable.trinket1_steroids&!variable.trinket2_steroids||variable.trinket1_steroids&(trinket.1.stat.any.cooldown_remains<gcd.max*3||trinket.1.stat.any.cooldown_remains>30)||variable.trinket2_steroids&(trinket.2.stat.any.cooldown_remains<gcd.max*3||trinket.2.stat.any.cooldown_remains>30))&time>20&(!talent.inertia&buff.unbound_chaos.down||buff.inertia_trigger.down&buff.metamorphosis.down)\n## talent.initiative&(cooldown.eye_beam.remains>15&gcd.remains<0.3||gcd.remains<0.2&cooldown.eye_beam.remains<=gcd.remains&(buff.unbound_chaos.up||action.immolation_aura.recharge_time>6||!talent.inertia||talent.momentum)&(cooldown.metamorphosis.remains>10||cooldown.blade_dance.remains<gcd.max*2&(talent.inertia||talent.momentum||buff.metamorphosis.up)))&(!talent.student_of_suffering||cooldown.sigil_of_flame.remains)&time>10&(!variable.trinket1_steroids&!variable.trinket2_steroids||variable.trinket1_steroids&(trinket.1.cooldown.remains<gcd.max*3||trinket.1.cooldown.remains>20)||variable.trinket2_steroids&(trinket.2.cooldown.remains<gcd.max*3||trinket.2.cooldown.remains>20||talent.shattered_destiny))&(cooldown.metamorphosis.remains||hero_tree.aldrachi_reaver)&time>20\nactions.ar+=/run_action_list,name=ar_fel_barrage,if=variable.fel_barrage||!talent.demon_blades&talent.fel_barrage&(buff.fel_barrage.up||cooldown.fel_barrage.up)&buff.metamorphosis.down\nactions.ar+=/felblade,if=!talent.inertia&active_enemies=1&buff.unbound_chaos.up&buff.initiative.up&debuff.essence_break.down&buff.metamorphosis.down\nactions.ar+=/felblade,if=buff.inertia_trigger.up&talent.inertia&cooldown.eye_beam.remains<=0.5&(cooldown.metamorphosis.remains&talent.looks_can_kill||active_enemies>1)\nactions.ar+=/run_action_list,name=ar_meta,strict=1,if=buff.metamorphosis.up\nactions.ar+=/felblade,if=buff.inertia_trigger.up&talent.inertia&buff.inertia.down&cooldown.blade_dance.remains<4&(cooldown.eye_beam.remains>5&cooldown.eye_beam.remains>buff.unbound_chaos.remains||cooldown.eye_beam.remains<=gcd.max&cooldown.vengeful_retreat.remains<=gcd.max+1)\nactions.ar+=/immolation_aura,if=talent.a_fire_inside&talent.burning_wound&full_recharge_time<gcd.max*2&(raid_event.adds.in>full_recharge_time||active_enemies>desired_targets)\nactions.ar+=/immolation_aura,if=active_enemies>desired_targets&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>full_recharge_time)\nactions.ar+=/immolation_aura,if=fight_remains<15&cooldown.blade_dance.remains&talent.ragefire\n## actions.ar+=/blade_dance,if=buff.rending_strike.down&buff.glaive_flurry.up&active_enemies>2&cooldown.eye_beam.remains<=4&buff.thrill_of_the_fight_damage.remains<gcd.max&raid_event.adds.remains>10&(cooldown.immolation_aura.remains||!talent.burning_wound) actions.ar+=/eye_beam,if=!talent.essence_break&(!talent.chaotic_transformation||cooldown.metamorphosis.remains<5+3*talent.shattered_destiny||cooldown.metamorphosis.remains>10)&(active_enemies>desired_targets*2||raid_event.adds.in>30-talent.cycle_of_hatred.rank*2.5*buff.cycle_of_hatred.stack)&(!talent.initiative||cooldown.vengeful_retreat.remains>5||cooldown.vengeful_retreat.up&active_enemies>2||talent.shattered_destiny)\nactions.ar+=/eye_beam,if=(cooldown.blade_dance.remains<7||raid_event.adds.up)&(active_enemies>desired_targets*2&(buff.thrill_of_the_fight_damage.up||buff.rending_strike.down&buff.glaive_flurry.down)||raid_event.adds.in>30-buff.cycle_of_hatred.stack*5)&(!variable.trinket1_steroids&!variable.trinket2_steroids||variable.trinket1_steroids&(trinket.1.stat.any.cooldown_remains<gcd.max*3||trinket.1.stat.any.cooldown_remains>30-buff.cycle_of_hatred.stack*5)||variable.trinket2_steroids&(trinket.2.stat.any.cooldown_remains<gcd.max*3||trinket.2.stat.any.cooldown_remains>30-buff.cycle_of_hatred.stack*5))||fight_remains<10\n## talent.essence_break&(cooldown.essence_break.remains<gcd.max*2+5*talent.shattered_destiny||talent.shattered_destiny&cooldown.essence_break.remains>10)&(cooldown.blade_dance.remains<7||raid_event.adds.up)&(!talent.initiative||cooldown.vengeful_retreat.remains>10||!talent.inertia&!talent.momentum||raid_event.adds.up)&(active_enemies+3>=desired_targets+raid_event.adds.count||raid_event.adds.in>30-talent.cycle_of_hatred.rank*6)&(!talent.inertia||buff.inertia_trigger.up||action.immolation_aura.charges=0&action.immolation_aura.recharge_time>5)&(!raid_event.adds.up||raid_event.adds.remains>8)&(!variable.trinket1_steroids&!variable.trinket2_steroids||variable.trinket1_steroids&(trinket.1.cooldown.remains<gcd.max*3||trinket.1.cooldown.remains>20)||variable.trinket2_steroids&(trinket.2.cooldown.remains<gcd.max*3||trinket.2.cooldown.remains>20))||fight_remains<10\nactions.ar+=/blade_dance,if=(cooldown.eye_beam.remains>=gcd.max*2||active_enemies>=2&buff.glaive_flurry.up&(raid_event.adds.in>30-buff.cycle_of_hatred.stack*5||raid_event.adds.remains>=cooldown.eye_beam.remains&cooldown.eye_beam.remains<gcd.max*2))&buff.rending_strike.down\nactions.ar+=/chaos_strike,if=buff.rending_strike.up\nactions.ar+=/sigil_of_flame,if=active_enemies>3||debuff.essence_break.down\nactions.ar+=/felblade,if=fury.deficit>=40+variable.fury_gen*0.5&!buff.inertia_trigger.up&(!talent.blind_fury||cooldown.eye_beam.remains>5)\nactions.ar+=/glaive_tempest,if=active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>10\nactions.ar+=/chaos_strike,if=debuff.essence_break.up\nactions.ar+=/throw_glaive,if=active_enemies>2&talent.furious_throws&talent.soulscar&(!talent.screaming_brutality||charges=2||full_recharge_time<cooldown.blade_dance.remains)\nactions.ar+=/chaos_strike,if=cooldown.eye_beam.remains>gcd.max*4||fury>=70-variable.fury_gen*gcd.max-talent.blind_fury.rank*15\nactions.ar+=/felblade,if=!talent.a_fire_inside&fury<40\nactions.ar+=/immolation_aura,if=raid_event.adds.in>full_recharge_time||active_enemies>desired_targets&active_enemies>2\nactions.ar+=/sigil_of_flame,if=buff.out_of_range.down&debuff.essence_break.down&(!talent.fel_barrage||cooldown.fel_barrage.remains>25||active_enemies=1&!raid_event.adds.exists)\nactions.ar+=/demons_bite\nactions.ar+=/throw_glaive,if=buff.unbound_chaos.down&recharge_time<cooldown.eye_beam.remains&debuff.essence_break.down&(cooldown.eye_beam.remains>8||charges_fractional>1.01)&buff.out_of_range.down&active_enemies>1&!talent.furious_throws\nactions.ar+=/fel_rush,if=buff.unbound_chaos.down&recharge_time<cooldown.eye_beam.remains&debuff.essence_break.down&(cooldown.eye_beam.remains>8||charges_fractional>1.01)&active_enemies>1\nactions.ar+=/arcane_torrent,if=buff.out_of_range.down&debuff.essence_break.down&fury<100\n\nactions.ar_cooldown+=/metamorphosis,if=(((cooldown.eye_beam.remains>=20||talent.cycle_of_hatred&cooldown.eye_beam.remains>=13)&(!talent.essence_break||debuff.essence_break.up)&buff.fel_barrage.down&(raid_event.adds.in>40||(raid_event.adds.remains>8||!talent.fel_barrage)&active_enemies>desired_targets||!talent.chaotic_transformation||boss&fight_remains<30))&buff.inner_demon.down&(!talent.restless_hunter&cooldown.blade_dance.remains>gcd.max*3||prev_gcd.1.death_sweep||prev_gcd.2.death_sweep||prev_gcd.3.death_sweep))&!talent.inertia&!talent.essence_break&(variable.opened||time>15)\nactions.ar_cooldown+=/metamorphosis,if=(cooldown.blade_dance.remains&((prev_gcd.1.death_sweep||prev_gcd.2.death_sweep||prev_gcd.3.death_sweep||buff.metamorphosis.up&buff.metamorphosis.remains<gcd.max)&cooldown.eye_beam.remains&buff.fel_barrage.down&(raid_event.adds.in>40||(raid_event.adds.remains>8||!talent.fel_barrage)&buff.fel_barrage.down&active_enemies>desired_targets)||!talent.chaotic_transformation||boss&fight_remains<30)&(buff.inner_demon.down&(buff.rending_strike.down||!talent.restless_hunter||prev_gcd.1.death_sweep)))&(talent.inertia||talent.essence_break)&(variable.opened||time>15)\nactions.ar_cooldown+=/potion,if=boss&fight_remains<35||(buff.metamorphosis.up||debuff.essence_break.up)&time>10\n## actions.ar_cooldown+=/invoke_external_buff,name=power_infusion,if=buff.metamorphosis.up||fight_remains<=20\nactions.ar_cooldown+=/variable,name=special_trinket,op=set,value=equipped.mad_queens_mandate||equipped.treacherous_transmitter||equipped.skardyns_grace||equipped.signet_of_the_priory||equipped.cursed_stone_idol\nactions.ar_cooldown+=/use_item,name=mad_queens_mandate,if=((!talent.initiative||buff.initiative.up||time>5)&(buff.metamorphosis.remains>5||buff.metamorphosis.down)&(trinket.1.is.mad_queens_mandate&(trinket.2.cooldown.duration<10||trinket.2.cooldown.remains>10||!trinket.2.has_buff.any)||trinket.2.is.mad_queens_mandate&(trinket.1.cooldown.duration<10||trinket.1.cooldown.remains>10||!trinket.1.has_buff.any))&fight_remains>120||boss&fight_remains<10&fight_remains<buff.metamorphosis.remains)&debuff.essence_break.down||boss&fight_remains<5\nactions.ar_cooldown+=/use_item,name=cursed_stone_idol,if=((buff.metamorphosis.remains>5||buff.metamorphosis.down)&(!buff.inertia.up||!talent.inertia)&(debuff.essence_break.down||!talent.essence_break)&(trinket.1.is.cursed_stone_idol&(trinket.2.cooldown.duration<120||trinket.2.cooldown.remains>10||!trinket.2.has_buff.any||trinket.2.is.signet_of_the_priory||trinket.2.is.unyielding_netherprism)||trinket.2.is.cursed_stone_idol&(trinket.1.cooldown.duration<120||trinket.1.cooldown.remains>10||!trinket.1.has_buff.any||trinket.1.is.signet_of_the_priory||trinket.1.is.unyielding_netherprism))||boss&fight_remains<10&fight_remains<buff.metamorphosis.remains)||boss&fight_remains<5\nactions.ar_cooldown+=/use_item,name=treacherous_transmitter,if=!equipped.mad_queens_mandate||equipped.mad_queens_mandate&(trinket.1.is.mad_queens_mandate&trinket.1.cooldown.remains>fight_remains||trinket.2.is.mad_queens_mandate&trinket.2.cooldown.remains>fight_remains)||fight_remains>25\nactions.ar_cooldown+=/use_item,name=skardyns_grace,if=(!equipped.mad_queens_mandate||fight_remains>25||trinket.2.is.skardyns_grace&trinket.1.cooldown.remains>fight_remains||trinket.1.is.skardyns_grace&trinket.2.cooldown.remains>fight_remains||trinket.1.cooldown.duration<10||trinket.2.cooldown.duration<10)&buff.metamorphosis.up\nactions.ar_cooldown+=/use_item,name=house_of_cards,if=(cooldown.eye_beam.remains<gcd.max||buff.metamorphosis.up)&(raid_event.adds.remains>8||raid_event.adds.in>15)||boss&fight_remains<25\nactions.ar_cooldown+=/use_item,name=signet_of_the_priory,if=time<20&(!talent.inertia||buff.inertia.up)&!equipped.cursed_stone_idol||(cooldown.eye_beam.remains<gcd.max||buff.metamorphosis.remains>8||cooldown.metamorphosis.up&buff.metamorphosis.up)&(raid_event.adds.remains>15||raid_event.adds.in>115)&(!equipped.cursed_stone_idol||(trinket.1.is.signet_of_the_priory&trinket.2.cooldown.remains>20||trinket.2.is.signet_of_the_priory&trinket.1.cooldown.remains>20))||boss&fight_remains<25\nactions.ar_cooldown+=/use_item,name=perfidious_projector,if=variable.tier33_4piece&variable.double_on_use||boss&fight_remains<15\nactions.ar_cooldown+=/use_item,name=ratfang_toxin,if=variable.tier33_4piece&variable.double_on_use||boss&fight_remains<5\nactions.ar_cooldown+=/use_item,name=geargrinders_spare_keys,if=variable.tier33_4piece&variable.double_on_use||boss&fight_remains<10\nactions.ar_cooldown+=/use_item,name=grim_codex,if=variable.tier33_4piece&variable.double_on_use||boss&fight_remains<10\n## actions.ar_cooldown+=/use_item,name=k.u.j.0.s_flame_vents,if=((!talent.initiative||buff.initiative.up||time>5)&(buff.metamorphosis.remains>5||buff.metamorphosis.down)&(trinket.1.is.k.u.j.0.s_flame_vents&(trinket.2.cooldown.duration<10||trinket.2.cooldown.remains>10||!trinket.2.has_buff.any)||trinket.2.is.mk.u.j.0.s_flame_vents&(trinket.1.cooldown.duration<10||trinket.1.cooldown.remains>10||!trinket.1.has_buff.any))&fight_remains>120||fight_remains<10&fight_remains<buff.metamorphosis.remains)&debuff.essence_break.down||fight_remains<5\nactions.ar_cooldown+=/use_item,name=ravenous_honey_buzzer,if=(variable.tier33_4piece&(buff.inertia.down&(cooldown.essence_break.remains&debuff.essence_break.down||!talent.essence_break))&(trinket.1.is.ravenous_honey_buzzer&(trinket.2.cooldown.duration<10||trinket.2.cooldown.remains>10||!trinket.2.has_buff.any)||trinket.2.is.ravenous_honey_buzzer&(trinket.1.cooldown.duration<10||trinket.1.cooldown.remains>10||!trinket.1.has_buff.any))&fight_remains>120||boss&fight_remains<10&fight_remains<buff.metamorphosis.remains)||boss&fight_remains<5\nactions.ar_cooldown+=/use_item,name=blastmaster3000,if=variable.tier33_4piece&variable.double_on_use||boss&fight_remains<10\nactions.ar_cooldown+=/use_item,name=junkmaestros_mega_magnet,if=variable.tier33_4piece_magnet&variable.double_on_use&time>10||boss&fight_remains<5\n## actions.ar_cooldown+=/do_treacherous_transmitter_task,if=cooldown.eye_beam.remains>15||cooldown.eye_beam.remains<5||boss&fight_remains<20||buff.metamorphosis.up\n## actions.ar_cooldown+=/use_item,name=unyielding_netherprism,if=((cooldown.eye_beam.remains<gcd.max&(active_enemies>1||talent.looks_can_kill)&(buff.latent_energy.stack>11)&((trinket.1.is.unyielding_netherprism&trinket.2.cooldown.duration>=90||cooldown.metamorphosis.remains<=5)||(trinket.2.is.unyielding_netherprism&trinket.1.cooldown.duration>=90||cooldown.metamorphosis.remains<=5)))&fight_remains>25||boss&fight_remains<25)&((trinket.1.is.unyielding_netherprism&(!variable.trinket2_steroids&!trinket.2.has_cooldown||trinket.2.cooldown.remains>20)||trinket.2.is.unyielding_netherprism&(!variable.trinket1_steroids&!trinket.1.has_cooldown||trinket.1.cooldown.remains>20))||equipped.improvised_seaforium_pacemaker)\nactions.ar_cooldown+=/use_item,name=unyielding_netherprism,if=((cooldown.eye_beam.remains<gcd.max&(active_enemies>1||talent.looks_can_kill)&((trinket.1.is.unyielding_netherprism&trinket.2.cooldown.duration>=90||cooldown.metamorphosis.remains<=5)||(trinket.2.is.unyielding_netherprism&trinket.1.cooldown.duration>=90||cooldown.metamorphosis.remains<=5))||(buff.metamorphosis.up&((trinket.1.is.unyielding_netherprism&(trinket.2.cooldown.duration>=90||!trinket.2.has_cooldown))||(trinket.2.is.unyielding_netherprism&(trinket.1.cooldown.duration>=90||!trinket.1.has_cooldown))&!equipped.improvised_seaforium_pacemaker)))&(raid_event.adds.in>105||raid_event.adds.remains>8)||fight_remains<25)&((trinket.1.is.unyielding_netherprism&(!variable.trinket2_steroids&!trinket.2.has_cooldown||trinket.2.cooldown.remains>20)||trinket.2.is.unyielding_netherprism&(!variable.trinket1_steroids&!trinket.1.has_cooldown||trinket.1.cooldown.remains>20))||equipped.improvised_seaforium_pacemaker)\nactions.ar_cooldown+=/use_item,slot=trinket1,if=((cooldown.eye_beam.remains<gcd.max&active_enemies>1||buff.metamorphosis.up&(cooldown.metamorphosis.remains<buff.metamorphosis.remains||cooldown.metamorphosis.remains>=20||cooldown.metamorphosis.up))&(raid_event.adds.in>trinket.1.cooldown.duration-15||raid_event.adds.remains>8)||!trinket.1.has_buff.any||fight_remains<25)&!trinket.1.is.mister_locknstalk&!variable.trinket1_crit&!trinket.1.is.skardyns_grace&!trinket.1.is.treacherous_transmitter&!trinket.1.is.unyielding_netherprism&!trinket.1.is.signet_of_the_priory&(!variable.special_trinket||trinket.2.cooldown.remains>20||(trinket.1.cooldown.duration>90&trinket.1.has_buff.agility))\nactions.ar_cooldown+=/use_item,slot=trinket2,if=((cooldown.eye_beam.remains<gcd.max&active_enemies>1||buff.metamorphosis.up&(cooldown.metamorphosis.remains<buff.metamorphosis.remains||cooldown.metamorphosis.remains>=20||cooldown.metamorphosis.up))&(raid_event.adds.in>trinket.2.cooldown.duration-15||raid_event.adds.remains>8)||!trinket.2.has_buff.any||fight_remains<25)&!trinket.2.is.mister_locknstalk&!variable.trinket2_crit&!trinket.2.is.skardyns_grace&!trinket.2.is.treacherous_transmitter&!trinket.2.is.unyielding_netherprism&!trinket.2.is.signet_of_the_priory&(!variable.special_trinket||trinket.1.cooldown.remains>20||(trinket.2.cooldown.duration>90&trinket.2.has_buff.agility))\nactions.ar_cooldown+=/the_hunt,if=debuff.essence_break.down&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>45)&(debuff.reavers_mark.up||raid_event.adds.remains>=15)&buff.reavers_glaive.down&(buff.metamorphosis.remains>5||buff.metamorphosis.down)&(!talent.initiative||buff.initiative.up||time>5)&time>5&(!talent.inertia&buff.unbound_chaos.down||buff.inertia_trigger.down)\nactions.ar_cooldown+=/sigil_of_spite,if=debuff.essence_break.down&(debuff.reavers_mark.remains>=2-talent.quickened_sigils)&cooldown.blade_dance.remains&time>15\n\nactions.ar_fel_barrage+=/variable,name=generator_up,op=set,value=cooldown.felblade.remains<gcd.max||cooldown.sigil_of_flame.remains<gcd.max\nactions.ar_fel_barrage+=/variable,name=gcd_drain,op=set,value=gcd.max*32\nactions.ar_fel_barrage+=/annihilation,if=buff.inner_demon.up\nactions.ar_fel_barrage+=/eye_beam,if=(buff.fel_barrage.down||fury>45&talent.blind_fury)&(active_enemies>1&raid_event.adds.up||raid_event.adds.in>40-buff.cycle_of_hatred.stack*5)\nactions.ar_fel_barrage+=/essence_break,if=buff.fel_barrage.down&buff.metamorphosis.up\nactions.ar_fel_barrage+=/death_sweep,if=buff.fel_barrage.down\nactions.ar_fel_barrage+=/immolation_aura,if=(active_enemies>2||buff.fel_barrage.up)&(cooldown.eye_beam.remains>recharge_time+3)\nactions.ar_fel_barrage+=/glaive_tempest,if=buff.fel_barrage.down&active_enemies>1\nactions.ar_fel_barrage+=/blade_dance,if=buff.fel_barrage.down\nactions.ar_fel_barrage+=/fel_barrage,if=fury>100&(raid_event.adds.in>90||raid_event.adds.in<gcd.max||raid_event.adds.remains>4&active_enemies>2)\nactions.ar_fel_barrage+=/felblade,if=buff.inertia_trigger.up&buff.fel_barrage.up\n## actions.ar_fel_barrage+=/fel_rush,if=buff.unbound_chaos.up&fury>20&buff.fel_barrage.up\nactions.ar_fel_barrage+=/sigil_of_flame,if=fury.deficit>40&buff.fel_barrage.up\nactions.ar_fel_barrage+=/felblade,if=buff.fel_barrage.up&fury.deficit>40\nactions.ar_fel_barrage+=/death_sweep,if=fury-variable.gcd_drain-35>0&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.ar_fel_barrage+=/glaive_tempest,if=fury-variable.gcd_drain-30>0&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.ar_fel_barrage+=/blade_dance,if=fury-variable.gcd_drain-35>0&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.ar_fel_barrage+=/arcane_torrent,if=fury.deficit>40&buff.fel_barrage.up\n## actions.ar_fel_barrage+=/fel_rush,if=buff.unbound_chaos.up\nactions.ar_fel_barrage+=/the_hunt,if=fury>40&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>80)\nactions.ar_fel_barrage+=/annihilation,if=fury-variable.gcd_drain-40>20&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.ar_fel_barrage+=/chaos_strike,if=fury-variable.gcd_drain-40>20&(cooldown.fel_barrage.remains&cooldown.fel_barrage.remains<10&fury>100||buff.fel_barrage.up&(buff.fel_barrage.remains*variable.fury_gen-buff.fel_barrage.remains*32)>0)\nactions.ar_fel_barrage+=/demons_bite\n\nactions.ar_meta+=/death_sweep,if=buff.metamorphosis.remains<gcd.max||debuff.essence_break.up||cooldown.metamorphosis.up&!talent.restless_hunter\nactions.ar_meta+=/vengeful_retreat,use_off_gcd=1,if=talent.initiative&(cooldown.metamorphosis.remains&(cooldown.essence_break.remains<=0.6||cooldown.essence_break.remains>10||!talent.essence_break)||talent.restless_hunter)&cooldown.eye_beam.remains&(!talent.inertia&buff.unbound_chaos.down||buff.inertia_trigger.down)\n## [Hekili] For future consideration, APL revisions that produce better results than using the ar_opener action list in AOE scenarios.\n## actions.ar_meta+=/death_sweep,line_cd=15,if=time<15&cooldown.annihilation.remains&(cooldown.eye_beam.up||cooldown.metamorphosis.up||talent.essence_break&cooldown.essence_break.up)\n## actions.ar_meta+=/annihilation,if=talent.restless_hunter&buff.rending_strike.up&cooldown.essence_break.up&cooldown.metamorphosis.up\nactions.ar_meta+=/felblade,if=talent.inertia&buff.inertia_trigger.up&cooldown.essence_break.remains<=1&cooldown.blade_dance.remains<=gcd.max*2&cooldown.metamorphosis.remains<=gcd.max*3\n## actions.ar_meta+=/fel_rush,if=talent.inertia&buff.inertia_trigger.up&cooldown.essence_break.remains<=1&cooldown.blade_dance.remains<=gcd.max*2&cooldown.metamorphosis.remains<=gcd.max*3\nactions.ar_meta+=/essence_break,if=fury>=30&talent.restless_hunter&cooldown.metamorphosis.up&(talent.inertia&buff.inertia.up||!talent.inertia)&cooldown.blade_dance.remains<=gcd.max\nactions.ar_meta+=/annihilation,if=buff.metamorphosis.remains<gcd.max||debuff.essence_break.remains&debuff.essence_break.remains<0.5&cooldown.blade_dance.remains||buff.inner_demon.up&cooldown.essence_break.up&cooldown.metamorphosis.up\nactions.ar_meta+=/felblade,if=buff.inertia_trigger.up&talent.inertia&cooldown.metamorphosis.remains&(cooldown.eye_beam.remains<=0.5||cooldown.essence_break.remains<=0.5||cooldown.blade_dance.remains<=5.5||buff.initiative.remains<gcd.remains)\nactions.ar_meta+=/fel_rush,if=buff.inertia_trigger.up&talent.inertia&cooldown.metamorphosis.remains&active_enemies>2\n## actions.ar_meta+=/felblade,if=buff.inertia_trigger.up&talent.inertia&cooldown.blade_dance.remains<gcd.max*3&cooldown.metamorphosis.remains\nactions.ar_meta+=/fel_rush,if=buff.inertia_trigger.up&talent.inertia&cooldown.blade_dance.remains<gcd.max*3&cooldown.metamorphosis.remains&active_enemies>2\nactions.ar_meta+=/immolation_aura,if=charges=2&active_enemies>1&debuff.essence_break.down\nactions.ar_meta+=/annihilation,if=buff.inner_demon.up&(cooldown.eye_beam.remains<gcd.max*3&cooldown.blade_dance.remains||cooldown.metamorphosis.remains<gcd.max*3)\nactions.ar_meta+=/essence_break,if=time<20&buff.thrill_of_the_fight_damage.remains>gcd.max*4&buff.metamorphosis.remains>=gcd.max*2&cooldown.metamorphosis.up&cooldown.death_sweep.remains<=gcd.max&buff.inertia.up\nactions.ar_meta+=/essence_break,if=fury>20&(cooldown.blade_dance.remains<gcd.max*3||cooldown.blade_dance.up)&(buff.unbound_chaos.down&!talent.inertia||buff.inertia.up)&buff.out_of_range.remains<gcd.max&(!talent.shattered_destiny||cooldown.eye_beam.remains>4)||boss&fight_remains<10\nactions.ar_meta+=/death_sweep\nactions.ar_meta+=/eye_beam,if=debuff.essence_break.down&buff.inner_demon.down\nactions.ar_meta+=/glaive_tempest,if=debuff.essence_break.down&(cooldown.blade_dance.remains>gcd.max*2||fury>60)&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>10)\nactions.ar_meta+=/sigil_of_flame,if=active_enemies>2&debuff.essence_break.down\nactions.ar_meta+=/throw_glaive,if=talent.soulscar&talent.furious_throws&active_enemies>2&debuff.essence_break.down&(charges=2||full_recharge_time<cooldown.blade_dance.remains)\nactions.ar_meta+=/annihilation,if=cooldown.blade_dance.remains||fury>60||soul_fragments.total>0||buff.metamorphosis.remains<5&cooldown.felblade.up||debuff.essence_break.up\nactions.ar_meta+=/sigil_of_flame,if=buff.metamorphosis.remains>5&buff.out_of_range.down&fury.deficit>=30+variable.fury_gen*gcd.max+active_enemies*talent.flames_of_fury.rank\nactions.ar_meta+=/felblade,if=fury.deficit>=40+variable.fury_gen*0.5&!buff.inertia_trigger.up\nactions.ar_meta+=/sigil_of_flame,if=debuff.essence_break.down&buff.out_of_range.down&fury.deficit>=30+variable.fury_gen*gcd.max+active_enemies*talent.flames_of_fury.rank\nactions.ar_meta+=/immolation_aura,if=buff.out_of_range.down&recharge_time<(cooldown.eye_beam.remains<?buff.metamorphosis.remains)&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>full_recharge_time)\nactions.ar_meta+=/annihilation\nactions.ar_meta+=/throw_glaive,if=buff.unbound_chaos.down&recharge_time<cooldown.eye_beam.remains&debuff.essence_break.down&(cooldown.eye_beam.remains>8||charges_fractional>1.01)&buff.out_of_range.down&active_enemies>1&!talent.furious_throws\nactions.ar_meta+=/fel_rush,if=recharge_time<cooldown.eye_beam.remains&debuff.essence_break.down&(cooldown.eye_beam.remains>8||charges_fractional>1.01)&buff.out_of_range.down&active_enemies>1\nactions.ar_meta+=/demons_bite\n\nactions.ar_opener+=/potion\nactions.ar_opener+=/the_hunt\nactions.ar_opener+=/vengeful_retreat,use_off_gcd=1,if=talent.initiative&time>4&buff.metamorphosis.up&(!talent.inertia||buff.inertia_trigger.down)&buff.inner_demon.down&cooldown.blade_dance.remains&gcd.remains<0.1\nactions.ar_opener+=/death_sweep,if=!talent.chaotic_transformation&cooldown.metamorphosis.up&buff.glaive_flurry.up\nactions.ar_opener+=/annihilation,if=buff.rending_strike.up&buff.thrill_of_the_fight_damage.down\nactions.ar_opener+=/felblade,if=!talent.inertia&talent.unbound_chaos&buff.unbound_chaos.up&buff.initiative.up&debuff.essence_break.down&active_enemies<=2\nactions.ar_opener+=/fel_rush,if=!talent.inertia&talent.unbound_chaos&buff.unbound_chaos.up&buff.initiative.up&debuff.essence_break.down&active_enemies>2\nactions.ar_opener+=/annihilation,if=talent.inner_demon&buff.inner_demon.up&(!talent.essence_break||cooldown.essence_break.up)\nactions.ar_opener+=/essence_break,if=(buff.inertia.up||!talent.inertia)&buff.metamorphosis.up&cooldown.blade_dance.remains<=gcd.max&debuff.reavers_mark.up\nactions.ar_opener+=/felblade,if=buff.inertia_trigger.up&talent.inertia&talent.restless_hunter&cooldown.essence_break.up&cooldown.metamorphosis.up&buff.metamorphosis.up&cooldown.blade_dance.remains<=gcd.max\n## actions.ar_opener+=/fel_rush,if=buff.inertia_trigger.up&talent.inertia&talent.restless_hunter&cooldown.essence_break.up&cooldown.metamorphosis.up&buff.metamorphosis.up&cooldown.blade_dance.remains<=gcd.max\nactions.ar_opener+=/felblade,if=talent.inertia&buff.inertia_trigger.up&(buff.inertia.down&buff.metamorphosis.up)&debuff.essence_break.down&active_enemies<=2\nactions.ar_opener+=/fel_rush,if=talent.inertia&buff.inertia_trigger.up&(buff.inertia.down&buff.metamorphosis.up)&debuff.essence_break.down&(cooldown.felblade.remains||active_enemies>2)\nactions.ar_opener+=/felblade,if=talent.inertia&buff.inertia_trigger.up&buff.metamorphosis.up&cooldown.metamorphosis.remains&debuff.essence_break.down\n## actions.ar_opener+=/fel_rush,if=talent.inertia&buff.inertia_trigger.up&buff.metamorphosis.up&cooldown.metamorphosis.remains\nactions.ar_opener+=/the_hunt,if=(buff.metamorphosis.up&hero_tree.aldrachi_reaver&talent.shattered_destiny||!talent.shattered_destiny&hero_tree.aldrachi_reaver||hero_tree.felscarred)&(!talent.initiative||talent.inertia||buff.initiative.up||time>5)\nactions.ar_opener+=/felblade,if=fury<40&buff.inertia_trigger.down&debuff.essence_break.down\nactions.ar_opener+=/reavers_glaive,if=debuff.reavers_mark.down&debuff.essence_break.down\nactions.ar_opener+=/chaos_strike,if=buff.rending_strike.up&active_enemies>2\nactions.ar_opener+=/blade_dance,if=buff.glaive_flurry.up&active_enemies>2\nactions.ar_opener+=/immolation_aura,if=talent.a_fire_inside&talent.burning_wound&buff.metamorphosis.down\nactions.ar_opener+=/metamorphosis,if=buff.metamorphosis.up&cooldown.blade_dance.remains>gcd.max*2&buff.inner_demon.down&(!talent.restless_hunter||prev_gcd.1.death_sweep)&(cooldown.essence_break.remains||!talent.essence_break||!talent.chaotic_transformation)\nactions.ar_opener+=/sigil_of_spite,if=debuff.reavers_mark.up&(cooldown.eye_beam.remains&cooldown.metamorphosis.remains)&debuff.essence_break.down\nactions.ar_opener+=/eye_beam,if=buff.metamorphosis.down||debuff.essence_break.down&buff.inner_demon.down&(cooldown.blade_dance.remains||talent.essence_break&cooldown.essence_break.up)\nactions.ar_opener+=/essence_break,if=cooldown.blade_dance.remains<gcd.max&!hero_tree.felscarred&!talent.shattered_destiny&buff.metamorphosis.up||cooldown.eye_beam.remains&cooldown.metamorphosis.remains\nactions.ar_opener+=/death_sweep\nactions.ar_opener+=/annihilation\nactions.ar_opener+=/demons_bite\nactions.ar_opener+=/variable,name=opened,value=true\n\n# Fel-Scarred\nactions.fs+=/variable,name=fel_barrage,op=set,value=talent.fel_barrage&(cooldown.fel_barrage.remains<gcd.max*7&active_enemies>=2&(cooldown.metamorphosis.remains||active_enemies>2)||buff.fel_barrage.up)\nactions.fs+=/call_action_list,name=fs_cooldown\nactions.fs+=/call_action_list,name=fs_opener,strict_if=time<15&toggle.cooldowns,if=time<15&toggle.cooldowns&(cooldown.eye_beam.up||cooldown.metamorphosis.up||talent.essence_break&cooldown.essence_break.up||buff.demonsurge.stack<3+talent.student_of_suffering+talent.a_fire_inside)\nactions.fs+=/run_action_list,name=fs_fel_barrage,strict_if=raid_event.adds.up,if=variable.fel_barrage&raid_event.adds.up\nactions.fs+=/immolation_aura,if=active_enemies>2&talent.ragefire&(!talent.fel_barrage||cooldown.fel_barrage.remains>recharge_time)&debuff.essence_break.down&(buff.metamorphosis.down||buff.metamorphosis.remains>5)\nactions.fs+=/immolation_aura,if=active_enemies>2&talent.ragefire&raid_event.adds.up&raid_event.adds.remains<15&raid_event.adds.remains>5&debuff.essence_break.down\nactions.fs+=/felblade,if=talent.unbound_chaos&buff.unbound_chaos.up&!talent.inertia&active_enemies<=2&(talent.student_of_suffering&cooldown.eye_beam.remains-gcd.max*2<=buff.unbound_chaos.remains||hero_tree.aldrachi_reaver)\nactions.fs+=/fel_rush,if=talent.unbound_chaos&buff.unbound_chaos.up&!talent.inertia&active_enemies>3&(talent.student_of_suffering&cooldown.eye_beam.remains-gcd.max*2<=buff.unbound_chaos.remains)\nactions.fs+=/run_action_list,name=fs_meta,strict=1,if=buff.metamorphosis.up\nactions.fs+=/vengeful_retreat,use_off_gcd=1,if=talent.initiative&(cooldown.eye_beam.remains>15&gcd.remains<0.3||gcd.remains<0.2&cooldown.eye_beam.remains<=gcd.remains&(cooldown.metamorphosis.remains>10||cooldown.blade_dance.remains<gcd.max*3))&(!talent.student_of_suffering||cooldown.sigil_of_flame.remains)&(cooldown.essence_break.remains<=gcd.max*2&talent.student_of_suffering&cooldown.sigil_of_flame.remains||cooldown.essence_break.remains>=18||!talent.student_of_suffering)&cooldown.metamorphosis.remains>10&time>20\nactions.fs+=/run_action_list,name=fs_fel_barrage,if=variable.fel_barrage||!talent.demon_blades&talent.fel_barrage&(buff.fel_barrage.up||cooldown.fel_barrage.up)&buff.metamorphosis.down\n## actions.fs+=/felblade,if=!talent.inertia&active_enemies=1&buff.unbound_chaos.up&buff.initiative.up&debuff.essence_break.down&buff.metamorphosis.down actions.fs+=/felblade,if=buff.inertia_trigger.up&talent.inertia&buff.inertia.down&cooldown.blade_dance.remains<4&cooldown.eye_beam.remains>5&cooldown.eye_beam.remains>buff.unbound_chaos.remains-2 actions.fs+=/fel_rush,if=buff.unbound_chaos.up&talent.inertia&buff.inertia.down&cooldown.blade_dance.remains<4&cooldown.eye_beam.remains>5&(action.immolation_aura.charges>0||action.immolation_aura.recharge_time+2<cooldown.eye_beam.remains||cooldown.eye_beam.remains>buff.unbound_chaos.remains-2)\nactions.fs+=/immolation_aura,if=variable.fs_tier34_2piece&(full_recharge_time<gcd.max*3||buff.immolation_aura.down&(cooldown.eye_beam.remains<3&(!talent.essence_break||buff.cycle_of_hatred.stack<4)||talent.essence_break&cooldown.essence_break.remains<=5||talent.essence_break&((cooldown.eye_beam.remains<3)*cooldown.essence_break.remains)>recharge_time))\nactions.fs+=/immolation_aura,if=variable.fs_tier34_2piece&((cooldown.eye_beam.remains+cooldown.metamorphosis.remains)<10)\nactions.fs+=/immolation_aura,if=talent.a_fire_inside&talent.burning_wound&full_recharge_time<gcd.max*2&(raid_event.adds.in>full_recharge_time||active_enemies>desired_targets)\nactions.fs+=/immolation_aura,if=active_enemies>desired_targets&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>full_recharge_time)\nactions.fs+=/immolation_aura,if=fight_remains<15&cooldown.blade_dance.remains&talent.ragefire\nactions.fs+=/sigil_of_flame,if=talent.student_of_suffering&(cooldown.eye_beam.remains<=gcd.max||!talent.initiative)&(cooldown.essence_break.remains<gcd.max*3||!talent.essence_break)&(cooldown.metamorphosis.remains>10||cooldown.blade_dance.remains<gcd.max*2)\n## actions.fs+=/eye_beam,if=!talent.essence_break&(!talent.chaotic_transformation||cooldown.metamorphosis.remains<5+3*talent.shattered_destiny||cooldown.metamorphosis.remains>10)&(active_enemies>desired_targets*2||raid_event.adds.in>30-talent.cycle_of_hatred.rank*2.5*buff.cycle_of_hatred.stack)&(!talent.initiative||cooldown.vengeful_retreat.remains>5||cooldown.vengeful_retreat.up&active_enemies>2||talent.shattered_destiny)&(!talent.student_of_suffering||cooldown.sigil_of_flame.remains)\nactions.fs+=/eye_beam,if=(!talent.initiative||buff.initiative.up||cooldown.vengeful_retreat.remains>=10||cooldown.metamorphosis.up||talent.initiative&!talent.tactical_retreat)&(cooldown.blade_dance.remains<7||raid_event.adds.up)&(active_enemies>desired_targets*2||raid_event.adds.in>30-buff.cycle_of_hatred.stack*5)&(!variable.trinket1_steroids&!variable.trinket2_steroids||variable.trinket1_steroids&(trinket.1.stat.any.cooldown_remains<gcd.max*3||trinket.1.stat.any.cooldown_remains>30-buff.cycle_of_hatred.stack*5)||variable.trinket2_steroids&(trinket.2.stat.any.cooldown_remains<gcd.max*3||trinket.2.stat.any.cooldown_remains>30-buff.cycle_of_hatred.stack*5))||fight_remains<10\nactions.fs+=/felblade,if=variable.fs_tier34_2piece&talent.inertia&buff.inertia_trigger.up&(buff.immolation_aura.up||buff.inertia_trigger.remains<=0.5||cooldown.the_hunt.remains<=0.5)&active_enemies<=2\nactions.fs+=/fel_rush,if=variable.fs_tier34_2piece&talent.inertia&buff.inertia_trigger.up&(buff.immolation_aura.up||buff.inertia_trigger.remains<=gcd.max||cooldown.the_hunt.remains<=gcd.max)&(active_enemies>2||cooldown.felblade.remains>buff.inertia_trigger.remains)\nactions.fs+=/essence_break,if=!talent.initiative&cooldown.eye_beam.remains>5\nactions.fs+=/blade_dance,if=cooldown.eye_beam.remains>=gcd.max*4&(active_enemies>3||talent.screaming_brutality&talent.soulscar)\nactions.fs+=/chaos_strike,if=variable.fs_tier34_2piece&(buff.immolation_aura.up||debuff.essence_break.up)\nactions.fs+=/blade_dance,if=cooldown.eye_beam.remains>=gcd.max*4\nactions.fs+=/glaive_tempest,if=active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>10\nactions.fs+=/sigil_of_flame,if=active_enemies>3&!talent.student_of_suffering\nactions.fs+=/chaos_strike,if=debuff.essence_break.up\n## actions.fs+=/sigil_of_flame,if=talent.student_of_suffering&((cooldown.eye_beam.remains<4&cooldown.metamorphosis.remains>20)||(cooldown.eye_beam.remains<gcd.max&cooldown.metamorphosis.up)) actions.fs+=/felblade,if=buff.out_of_range.up&buff.inertia_trigger.down  actions.fs+=/throw_glaive,if=active_enemies>2&talent.furious_throws&(!talent.screaming_brutality||charges=2||full_recharge_time<cooldown.blade_dance.remains) actions.fs+=/immolation_aura,if=talent.a_fire_inside&talent.isolated_prey&talent.flamebound&active_enemies=1&cooldown.eye_beam.remains>=gcd.max\nactions.fs+=/felblade,if=fury.deficit>40+variable.fury_gen*(0.5%gcd.max)&(cooldown.vengeful_retreat.remains>=action.felblade.cooldown+0.5&talent.inertia&active_enemies=1||!talent.inertia||hero_tree.aldrachi_reaver||cooldown.essence_break.remains)&cooldown.metamorphosis.remains&cooldown.eye_beam.remains>=0.5+gcd.max*(talent.student_of_suffering&cooldown.sigil_of_flame.remains<=gcd.max)&(!variable.fs_tier34_2piece||variable.fs_tier34_2piece&buff.immolation_aura.down&cooldown.immolation_aura.remains)\nactions.fs+=/chaos_strike,if=cooldown.eye_beam.remains>=gcd.max*4||(fury>=70-30*(talent.student_of_suffering&(cooldown.sigil_of_flame.remains<=gcd.max||cooldown.sigil_of_flame.up))-buff.chaos_theory.up*20-variable.fury_gen)\n## actions.fs+=/chaos_strike,if=cooldown.eye_beam.remains>=gcd.max*3||(fury>=70+(talent.untethered_fury*50-20*talent.blind_fury.rank)*hero_tree.felscarred-38*(talent.student_of_suffering&(cooldown.sigil_of_flame.remains<=gcd.max||cooldown.sigil_of_flame.up))-buff.chaos_theory.up*20-variable.fury_gen) actions.fs+=/chaos_strike,if=cooldown.eye_beam.remains>=gcd.max*2||(cooldown.eye_beam.remains>=gcd+gcd.max*(talent.student_of_suffering&(cooldown.sigil_of_flame.remains<=5||cooldown.sigil_of_flame.up))&(fury>=70-20*talent.blind_fury.rank-38*(talent.student_of_suffering&(cooldown.sigil_of_flame.remains<=gcd.max||cooldown.sigil_of_flame.up))-(talent.essence_break&talent.inertia&cooldown.felblade.up*40)-variable.fury_gen*2))\nactions.fs+=/immolation_aura,if=!variable.fs_tier34_2piece&raid_event.adds.in>full_recharge_time&cooldown.eye_beam.remains>=gcd.max*(1+talent.student_of_suffering&(cooldown.sigil_of_flame.remains<=gcd.max||cooldown.sigil_of_flame.up))||active_enemies>desired_targets&active_enemies>2\nactions.fs+=/felblade,if=buff.out_of_range.down&buff.inertia_trigger.down&cooldown.eye_beam.remains>=gcd.max*(1+talent.student_of_suffering&(cooldown.sigil_of_flame.remains<=gcd.max||cooldown.sigil_of_flame.up))\nactions.fs+=/sigil_of_flame,if=buff.out_of_range.down&debuff.essence_break.down&!talent.student_of_suffering&(!talent.fel_barrage||cooldown.fel_barrage.remains>25||(active_enemies=1&!raid_event.adds.exists))\n## actions.fs+=/felblade,if=cooldown.blade_dance.remains>=0.5&cooldown.blade_dance.remains<gcd.max\nactions.fs+=/demons_bite\nactions.fs+=/throw_glaive,if=recharge_time<cooldown.eye_beam.remains&debuff.essence_break.down&(cooldown.eye_beam.remains>8||charges_fractional>1.01)&buff.out_of_range.down&active_enemies>1&!talent.furious_throws\nactions.fs+=/fel_rush,if=buff.unbound_chaos.down&recharge_time<cooldown.eye_beam.remains&debuff.essence_break.down&(cooldown.eye_beam.remains>8||charges_fractional>1.01)&active_enemies>1\nactions.fs+=/arcane_torrent,if=buff.out_of_range.down&debuff.essence_break.down&fury<100\n\nactions.fs_cooldown+=/metamorphosis,if=(((cooldown.eye_beam.remains>=20||talent.cycle_of_hatred&cooldown.eye_beam.remains>=13)&(!talent.essence_break||debuff.essence_break.up)&buff.fel_barrage.down&active_enemies>1||!talent.chaotic_transformation||boss&fight_remains<30)&buff.inner_demon.down&(!talent.restless_hunter&cooldown.blade_dance.remains>gcd.max*3||prev_gcd.1.death_sweep))&!talent.inertia&!talent.essence_break&time>15\nactions.fs_cooldown+=/metamorphosis,if=(cooldown.blade_dance.remains&((prev_gcd.1.death_sweep||prev_gcd.2.death_sweep||prev_gcd.3.death_sweep||buff.metamorphosis.up&buff.metamorphosis.remains<gcd.max)&cooldown.eye_beam.remains&buff.fel_barrage.down&(raid_event.adds.in>40||(raid_event.adds.remains>8||!talent.fel_barrage)&active_enemies>desired_targets||!raid_event.adds.in<=120)||!talent.chaotic_transformation||boss&fight_remains<30)&(buff.inner_demon.down&(buff.rending_strike.down||!talent.restless_hunter||prev_gcd.1.death_sweep)))&(talent.inertia||talent.essence_break)&time>15\nactions.fs_cooldown+=/potion,if=fight_remains<35||(buff.metamorphosis.up||debuff.essence_break.up)&time>10\n## actions.fs_cooldown+=/invoke_external_buff,name=power_infusion,if=buff.metamorphosis.up||boss&fight_remains<=20\nactions.fs_cooldown+=/variable,name=special_trinket,op=set,value=equipped.mad_queens_mandate||equipped.treacherous_transmitter||equipped.skardyns_grace||equipped.signet_of_the_priory||equipped.cursed_stone_idol\nactions.fs_cooldown+=/use_item,name=mad_queens_mandate,if=((!talent.initiative||buff.initiative.up||time>5)&(buff.metamorphosis.remains>5||buff.metamorphosis.down)&(trinket.1.is.mad_queens_mandate&(trinket.2.cooldown.duration<10||trinket.2.cooldown.remains>10||!trinket.2.has_buff.any)||trinket.2.is.mad_queens_mandate&(trinket.1.cooldown.duration<10||trinket.1.cooldown.remains>10||!trinket.1.has_buff.any))&fight_remains>120||boss&fight_remains<10&fight_remains<buff.metamorphosis.remains)&debuff.essence_break.down||boss&fight_remains<5\nactions.fs_cooldown+=/use_item,name=cursed_stone_idol,if=((buff.metamorphosis.remains>5||buff.metamorphosis.down)&(!buff.inertia.up||!talent.inertia)&(debuff.essence_break.down||!talent.essence_break)&(trinket.1.is.cursed_stone_idol&(trinket.2.cooldown.duration<120||trinket.2.cooldown.remains>10||!trinket.2.has_buff.any||trinket.2.is.signet_of_the_priory||trinket.2.is.unyielding_netherprism)||trinket.2.is.cursed_stone_idol&(trinket.1.cooldown.duration<120||trinket.1.cooldown.remains>10||!trinket.1.has_buff.any||trinket.1.is.signet_of_the_priory||trinket.1.is.unyielding_netherprism))||boss&fight_remains<10&fight_remains<buff.metamorphosis.remains)||boss&fight_remains<5\nactions.fs_cooldown+=/use_item,name=treacherous_transmitter,if=!equipped.mad_queens_mandate||equipped.mad_queens_mandate&(trinket.1.is.mad_queens_mandate&trinket.1.cooldown.remains>fight_remains||trinket.2.is.mad_queens_mandate&trinket.2.cooldown.remains>fight_remains)||fight_remains>25\nactions.fs_cooldown+=/use_item,name=skardyns_grace,if=(!equipped.mad_queens_mandate||fight_remains>25||trinket.2.is.skardyns_grace&trinket.1.cooldown.remains>fight_remains||trinket.1.is.skardyns_grace&trinket.2.cooldown.remains>fight_remains||trinket.1.cooldown.duration<10||trinket.2.cooldown.duration<10)&buff.metamorphosis.up\nactions.fs_cooldown+=/use_item,name=house_of_cards,if=(cooldown.eye_beam.remains<gcd.max||buff.metamorphosis.up)&(raid_event.adds.remains>8||raid_event.adds.in>15)||boss&fight_remains<25\nactions.fs_cooldown+=/use_item,name=signet_of_the_priory,if=time<20&(!talent.inertia||buff.inertia.up)&!equipped.cursed_stone_idol||(cooldown.eye_beam.remains<gcd.max||buff.metamorphosis.remains>8||cooldown.metamorphosis.up&buff.metamorphosis.up)&(raid_event.adds.remains>15||raid_event.adds.in>115)&(!equipped.cursed_stone_idol||(trinket.1.is.signet_of_the_priory&trinket.2.cooldown.remains>20||trinket.2.is.signet_of_the_priory&trinket.1.cooldown.remains>20))||boss&fight_remains<25\nactions.fs_cooldown+=/use_item,name=perfidious_projector,if=variable.tier33_4piece&variable.double_on_use||boss&fight_remains<15\nactions.fs_cooldown+=/use_item,name=ratfang_toxin,if=variable.tier33_4piece&variable.double_on_use||boss&fight_remains<5\nactions.fs_cooldown+=/use_item,name=geargrinders_spare_keys,if=variable.tier33_4piece&variable.double_on_use||boss&fight_remains<10\nactions.fs_cooldown+=/use_item,name=grim_codex,if=variable.tier33_4piece&variable.double_on_use||boss&fight_remains<10\n## actions.fs_cooldown+=/use_item,name=k.u.j.0.s_flame_vents,if=((!talent.initiative||buff.initiative.up||time>5)&(buff.metamorphosis.remains>5||buff.metamorphosis.down)&(trinket.1.is.k.u.j.0.s_flame_vents&(trinket.2.cooldown.duration<10||trinket.2.cooldown.remains>10||!trinket.2.has_buff.any)||trinket.2.is.mk.u.j.0.s_flame_vents&(trinket.1.cooldown.duration<10||trinket.1.cooldown.remains>10||!trinket.1.has_buff.any))&fight_remains>120||boss&fight_remains<10&fight_remains<buff.metamorphosis.remains)&debuff.essence_break.down||boss&fight_remains<5\nactions.fs_cooldown+=/use_item,name=ravenous_honey_buzzer,if=(variable.tier33_4piece&(buff.inertia.down&(cooldown.essence_break.remains&debuff.essence_break.down||!talent.essence_break))&(trinket.1.is.ravenous_honey_buzzer&(trinket.2.cooldown.duration<10||trinket.2.cooldown.remains>10||!trinket.2.has_buff.any)||trinket.2.is.ravenous_honey_buzzer&(trinket.1.cooldown.duration<10||trinket.1.cooldown.remains>10||!trinket.1.has_buff.any))&fight_remains>120||boss&fight_remains<10&fight_remains<buff.metamorphosis.remains)||boss&fight_remains<5\nactions.fs_cooldown+=/use_item,name=blastmaster3000,if=variable.tier33_4piece&variable.double_on_use||boss&fight_remains<10\nactions.fs_cooldown+=/use_item,name=junkmaestros_mega_magnet,if=variable.tier33_4piece_magnet&variable.double_on_use&time>10||boss&fight_remains<5\n## actions.fs_cooldown+=/do_treacherous_transmitter_task,if=cooldown.eye_beam.remains>15||cooldown.eye_beam.remains<5||boss&fight_remains<20||buff.metamorphosis.up\n## actions.fs_cooldown+=/use_item,name=unyielding_netherprism,if=((cooldown.eye_beam.remains<gcd.max&(active_enemies>1||talent.looks_can_kill)&(buff.latent_energy.stack>11)&((trinket.1.is.unyielding_netherprism&trinket.2.cooldown.duration>=90||cooldown.metamorphosis.remains<=5)||(trinket.2.is.unyielding_netherprism&trinket.1.cooldown.duration>=90||cooldown.metamorphosis.remains<=5)))&(raid_event.adds.in>105||raid_event.adds.remains>8)||boss&fight_remains<25)&((trinket.1.is.unyielding_netherprism&(!variable.trinket2_steroids&!trinket.2.has_cooldown||trinket.2.cooldown.remains>20)||trinket.2.is.unyielding_netherprism&(!variable.trinket1_steroids&!trinket.1.has_cooldown||trinket.1.cooldown.remains>20))||equipped.improvised_seaforium_pacemaker)\nactions.fs_cooldown+=/use_item,name=unyielding_netherprism,if=((cooldown.eye_beam.remains<gcd.max&(active_enemies>1||talent.looks_can_kill)&((trinket.1.is.unyielding_netherprism&trinket.2.cooldown.duration>=90||cooldown.metamorphosis.remains<=5)||(trinket.2.is.unyielding_netherprism&trinket.1.cooldown.duration>=90||cooldown.metamorphosis.remains<=5))||(buff.metamorphosis.up&((trinket.1.is.unyielding_netherprism&(trinket.2.cooldown.duration>=90||!trinket.2.has_cooldown))||(trinket.2.is.unyielding_netherprism&(trinket.1.cooldown.duration>=90||!trinket.1.has_cooldown))&!equipped.improvised_seaforium_pacemaker)))&(raid_event.adds.in>105||raid_event.adds.remains>8)||boss&fight_remains<25)&((trinket.1.is.unyielding_netherprism&(!variable.trinket2_steroids&!trinket.2.has_cooldown||trinket.2.cooldown.remains>20)||trinket.2.is.unyielding_netherprism&(!variable.trinket1_steroids&!trinket.1.has_cooldown||trinket.1.cooldown.remains>20))||equipped.improvised_seaforium_pacemaker)\nactions.fs_cooldown+=/use_item,slot=trinket1,if=((cooldown.eye_beam.remains<gcd.max&active_enemies>1||buff.metamorphosis.up&(cooldown.metamorphosis.remains<buff.metamorphosis.remains||cooldown.metamorphosis.remains>=20||cooldown.metamorphosis.up))&(raid_event.adds.in>trinket.1.cooldown.duration-15||raid_event.adds.remains>8)||!trinket.1.has_buff.any||boss&fight_remains<25)&!trinket.1.is.mister_locknstalk&!variable.trinket1_crit&!trinket.1.is.skardyns_grace&!trinket.1.is.treacherous_transmitter&!trinket.1.is.unyielding_netherprism&!trinket.1.is.signet_of_the_priory&(!variable.special_trinket||trinket.2.cooldown.remains>20||(trinket.1.cooldown.duration>90&trinket.1.has_buff.agility))\nactions.fs_cooldown+=/use_item,slot=trinket2,if=((cooldown.eye_beam.remains<gcd.max&active_enemies>1||buff.metamorphosis.up&(cooldown.metamorphosis.remains<buff.metamorphosis.remains||cooldown.metamorphosis.remains>=20||cooldown.metamorphosis.up))&(raid_event.adds.in>trinket.2.cooldown.duration-15||raid_event.adds.remains>8)||!trinket.2.has_buff.any||boss&fight_remains<25)&!trinket.2.is.mister_locknstalk&!variable.trinket2_crit&!trinket.2.is.skardyns_grace&!trinket.2.is.treacherous_transmitter&!trinket.2.is.unyielding_netherprism&!trinket.2.is.signet_of_the_priory&(!variable.special_trinket||trinket.1.cooldown.remains>20||(trinket.2.cooldown.duration>90&trinket.2.has_buff.agility))\nactions.fs_cooldown+=/the_hunt,if=debuff.essence_break.down&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>45)&(buff.metamorphosis.remains>5||buff.metamorphosis.down)&(!talent.initiative||buff.initiative.up||time>5)&time>5&(!talent.inertia&buff.unbound_chaos.down||buff.inertia_trigger.down)&buff.metamorphosis.down||boss&fight_remains<=30\n## actions.fs_cooldown+=/the_hunt,if=debuff.essence_break.down&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>90)&(debuff.reavers_mark.up||!hero_tree.aldrachi_reaver)&buff.reavers_glaive.down&(buff.metamorphosis.remains>5||buff.metamorphosis.down)&(!talent.initiative||buff.initiative.up||time>5)&time>5&(!talent.inertia&buff.unbound_chaos.down||buff.inertia_trigger.down)&(!talent.inertia&(hero_tree.aldrachi_reaver||buff.metamorphosis.down)||hero_tree.felscarred&cooldown.metamorphosis.up||boss&fight_remains<cooldown.metamorphosis.remains)\nactions.fs_cooldown+=/sigil_of_spite,if=debuff.essence_break.down&cooldown.blade_dance.remains&time>15\n\nactions.fs_fel_barrage+=/variable,name=generator_up,op=set,value=cooldown.felblade.remains<gcd.max||cooldown.sigil_of_flame.remains<gcd.max\nactions.fs_fel_barrage+=/variable,name=gcd_drain,op=set,value=gcd.max*32\nactions.fs_fel_barrage+=/annihilation,if=buff.inner_demon.up\nactions.fs_fel_barrage+=/eye_beam,if=(buff.fel_barrage.down||fury>45&talent.blind_fury)&(active_enemies>1&raid_event.adds.up||raid_event.adds.in>40-buff.cycle_of_hatred.stack*5)\nactions.fs_fel_barrage+=/essence_break,if=buff.fel_barrage.down&buff.metamorphosis.up\nactions.fs_fel_barrage+=/death_sweep,if=buff.fel_barrage.down\nactions.fs_fel_barrage+=/immolation_aura,if=(active_enemies>2||buff.fel_barrage.up)&(cooldown.eye_beam.remains>recharge_time+3)\nactions.fs_fel_barrage+=/glaive_tempest,if=buff.fel_barrage.down&active_enemies>1\nactions.fs_fel_barrage+=/blade_dance,if=buff.fel_barrage.down\nactions.fs_fel_barrage+=/fel_barrage,if=fury>100&(raid_event.adds.in>90||raid_event.adds.in<gcd.max||raid_event.adds.remains>4&active_enemies>2)\nactions.fs_fel_barrage+=/felblade,if=buff.inertia_trigger.up&buff.fel_barrage.up\nactions.fs_fel_barrage+=/fel_rush,if=buff.unbound_chaos.up&fury>20&buff.fel_barrage.up\nactions.fs_fel_barrage+=/sigil_of_flame,if=fury.deficit>40&buff.fel_barrage.up&(!talent.student_of_suffering||cooldown.eye_beam.remains>30)\nactions.fs_fel_barrage+=/sigil_of_flame,if=buff.demonsurge_hardcast.up&fury.deficit>40&buff.fel_barrage.up\nactions.fs_fel_barrage+=/felblade,if=buff.fel_barrage.up&fury.deficit>40&action.felblade.cooldown_react\nactions.fs_fel_barrage+=/death_sweep,if=fury-variable.gcd_drain-35>0&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.fs_fel_barrage+=/glaive_tempest,if=fury-variable.gcd_drain-30>0&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.fs_fel_barrage+=/blade_dance,if=fury-variable.gcd_drain-35>0&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.fs_fel_barrage+=/arcane_torrent,if=fury.deficit>40&buff.fel_barrage.up\nactions.fs_fel_barrage+=/fel_rush,if=buff.unbound_chaos.up\nactions.fs_fel_barrage+=/the_hunt,if=fury>40&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>80)\nactions.fs_fel_barrage+=/annihilation,if=fury-variable.gcd_drain-40>20&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.fs_fel_barrage+=/chaos_strike,if=fury-variable.gcd_drain-40>20&(cooldown.fel_barrage.remains&cooldown.fel_barrage.remains<10&fury>100||buff.fel_barrage.up&(buff.fel_barrage.remains*variable.fury_gen-buff.fel_barrage.remains*32)>0)\nactions.fs_fel_barrage+=/demons_bite\n\nactions.fs_meta+=/death_sweep,if=buff.metamorphosis.remains<gcd.max||debuff.essence_break.up&(buff.immolation_aura.down||!variable.fs_tier34_2piece)&(buff.demon_soul_tww3.down||!set_bonus.thewarwithin_season_3_4pc)||prev_gcd.1.metamorphosis&!variable.fs_tier34_2piece||buff.demonsurge_death_sweep.up&variable.fs_tier34_2piece&buff.demonsurge.remains<5||(variable.fs_tier34_2piece&cooldown.metamorphosis.up&talent.inertia)||active_enemies>=3&buff.demonsurge_death_sweep.up&(!talent.inertia||buff.inertia_trigger.down&cooldown.vengeful_retreat.remains||buff.inertia.up)&(!talent.essence_break||debuff.essence_break.up||cooldown.essence_break.remains>=5)\nactions.fs_meta+=/sigil_of_flame,if=buff.demonsurge_hardcast.up&talent.student_of_suffering&debuff.essence_break.down&(talent.student_of_suffering&((talent.essence_break&cooldown.essence_break.remains>30-gcd.max||cooldown.essence_break.remains<=gcd.max+talent.inertia&(cooldown.vengeful_retreat.remains<=gcd||buff.initiative.up)+gcd.max*(cooldown.eye_beam.remains<=gcd.max))||(!talent.essence_break&(cooldown.eye_beam.remains>=10||cooldown.eye_beam.remains<=gcd.max))))\nactions.fs_meta+=/vengeful_retreat,use_off_gcd=1,if=talent.initiative&(gcd.remains<0.3||talent.inertia&cooldown.eye_beam.remains>gcd.remains&(buff.cycle_of_hatred.stack=2||buff.cycle_of_hatred.stack=3))&(cooldown.metamorphosis.remains&(buff.demonsurge_annihilation.down&buff.demonsurge_death_sweep.down)||talent.restless_hunter&buff.demonsurge_annihilation.down)&(!talent.inertia&buff.unbound_chaos.down||buff.inertia_trigger.down)&(!talent.essence_break||cooldown.essence_break.remains>18||cooldown.essence_break.remains<=gcd.remains+talent.inertia*1.5&(!talent.student_of_suffering||(buff.student_of_suffering.up||cooldown.sigil_of_flame.remains>5)))&(cooldown.eye_beam.remains>5||cooldown.eye_beam.remains<=gcd.remains||cooldown.eye_beam.up)||cooldown.metamorphosis.up&buff.demonsurge.stack>1&talent.initiative&!talent.inertia&gcd.remains<0.3\nactions.fs_meta+=/vengeful_retreat,use_off_gcd=1,if=variable.fs_tier34_2piece&buff.inertia_trigger.down&talent.initiative\nactions.fs_meta+=/felblade,if=talent.inertia&variable.fs_tier34_2piece&buff.inertia_trigger.up\n## &active_enemies<3 actions.fs_meta+=/fel_rush,if=talent.inertia&variable.fs_tier34_2piece&buff.inertia_trigger.up&(active_enemies>=3||cooldown.felblade.remains) actions.fs_meta+=/felblade,if=talent.inertia&buff.inertia_trigger.up&cooldown.essence_break.remains<=1&hero_tree.aldrachi_reaver&cooldown.blade_dance.remains<=gcd.max*2&cooldown.metamorphosis.remains<=gcd.max*3 actions.fs_meta+=/felblade,if=talent.inertia&buff.inertia_trigger.up&debuff.essence_break.down&buff.demonsurge_hardcast.up&buff.demonsurge.stack=0&buff.demonsurge_death_sweep.up actions.fs_meta+=/fel_rush,if=talent.inertia&buff.inertia_trigger.up&debuff.essence_break.down&buff.demonsurge_hardcast.up&buff.demonsurge.stack=0&buff.demonsurge_death_sweep.up&cooldown.felblade.remains actions.fs_meta+=/fel_rush,if=talent.inertia&buff.inertia_trigger.up&cooldown.essence_break.remains<=1&hero_tree.aldrachi_reaver&cooldown.blade_dance.remains<=gcd.max*2&cooldown.metamorphosis.remains<=gcd.max*3 actions.fs_meta+=/essence_break,if=fury>=30&talent.restless_hunter&cooldown.metamorphosis.up&(talent.inertia&buff.inertia.up||!talent.inertia)&cooldown.blade_dance.remains<=gcd.max&(hero_tree.felscarred&buff.demonsurge_annihilation.down||hero_tree.aldrachi_reaver)\nactions.fs_meta+=/death_sweep,if=(talent.essence_break&buff.demonsurge_death_sweep.up&(buff.inertia.up&(cooldown.essence_break.remains>buff.inertia.remains||!talent.essence_break)||cooldown.metamorphosis.remains<=5&buff.inertia_trigger.down||buff.inertia.up&buff.demonsurge_abyssal_gaze.up)||talent.inertia&buff.inertia_trigger.down&cooldown.vengeful_retreat.remains>=gcd.max&buff.inertia.down)&(!variable.fs_tier34_2piece||!talent.inertia||active_enemies>=3&debuff.essence_break.up)\nactions.fs_meta+=/annihilation,if=buff.metamorphosis.remains<gcd.max&cooldown.blade_dance.remains<buff.metamorphosis.remains||debuff.essence_break.remains&debuff.essence_break.remains<0.5||talent.restless_hunter&(buff.demonsurge_annihilation.up||hero_tree.aldrachi_reaver&buff.inner_demon.up)&cooldown.essence_break.up&cooldown.metamorphosis.up\nactions.fs_meta+=/annihilation,if=(buff.demonsurge_annihilation.up&talent.restless_hunter)&(cooldown.eye_beam.remains<gcd.max*3&cooldown.blade_dance.remains||cooldown.metamorphosis.remains<gcd.max*3)\nactions.fs_meta+=/felblade,if=buff.inertia_trigger.up&talent.inertia&debuff.essence_break.down&cooldown.metamorphosis.remains&cooldown.eye_beam.remains&(cooldown.blade_dance.remains<=5.5&(talent.essence_break&cooldown.essence_break.remains<=0.5||!talent.essence_break||cooldown.essence_break.remains>=buff.inertia_trigger.remains&cooldown.blade_dance.remains<=4.5&(cooldown.blade_dance.remains||cooldown.blade_dance.remains<=0.5))||buff.metamorphosis.remains<=5.5+talent.shattered_destiny*2)\nactions.fs_meta+=/fel_rush,if=buff.inertia_trigger.up&talent.inertia&debuff.essence_break.down&cooldown.metamorphosis.remains&cooldown.eye_beam.remains&(cooldown.felblade.remains&cooldown.essence_break.remains<=0.6||active_enemies>2)\n## ||cooldown.felblade.remains&buff.metamorphosis.remains<=5.6-talent.shattered_destiny*gcd.max*2) actions.fs_meta+=/felblade,if=buff.inertia_trigger.up&talent.inertia&debuff.essence_break.down&cooldown.metamorphosis.remains&(!hero_tree.felscarred||cooldown.eye_beam.remains&(!buff.demonsurge_hardcast.up||cooldown.essence_break.remains<=0.5)||buff.demonsurge_hardcast.up&cooldown.eye_beam.remains<=0.6) actions.fs_meta+=/fel_rush,if=buff.inertia_trigger.up&talent.inertia&debuff.essence_break.down&cooldown.metamorphosis.remains&(!hero_tree.felscarred||cooldown.eye_beam.remains&(!buff.demonsurge_hardcast.up||cooldown.essence_break.remains<=0.5)||buff.demonsurge_hardcast.up&cooldown.eye_beam.remains<=gcd.max)&(active_enemies>2||hero_tree.felscarred)&cooldown.felblade.remains actions.fs_meta+=/felblade,if=buff.inertia_trigger.up&talent.inertia&debuff.essence_break.down&cooldown.blade_dance.remains<gcd.max*3&(!hero_tree.felscarred||cooldown.eye_beam.remains)&cooldown.metamorphosis.remains actions.fs_meta+=/fel_rush,if=buff.inertia_trigger.up&talent.inertia&debuff.essence_break.down&cooldown.blade_dance.remains<gcd.max*3&(!hero_tree.felscarred||cooldown.eye_beam.remains)&cooldown.metamorphosis.remains&(active_enemies>2||hero_tree.felscarred)\nactions.fs_meta+=/immolation_aura,if=(active_enemies>1||talent.a_fire_inside&(talent.isolated_prey||variable.fs_tier34_2piece))&debuff.essence_break.down&(active_enemies>=3||full_recharge_time<gcd.max*2||variable.fs_tier34_2piece&buff.immolation_aura.remains<=gcd.max||variable.fs_tier34_2piece&buff.immolation_aura.down)\nactions.fs_meta+=/annihilation,if=buff.inner_demon.up&cooldown.blade_dance.remains&(cooldown.eye_beam.remains<gcd.max*3||cooldown.metamorphosis.remains<gcd.max*3)\n## actions.fs_meta+=/sigil_of_doom,if=debuff.essence_break.down&(buff.demonsurge_sigil_of_doom.up&cooldown.blade_dance.remains||talent.student_of_suffering&((talent.essence_break&cooldown.essence_break.remains>30-gcd.max||cooldown.essence_break.remains<=gcd.max*3&(!talent.inertia||buff.inertia_trigger.up))||(!talent.essence_break&(cooldown.eye_beam.remains>=30||cooldown.eye_beam.remains<=gcd.max))))\nactions.fs_meta+=/essence_break,if=fury>20&(cooldown.metamorphosis.remains>10||cooldown.blade_dance.remains<gcd.max*2&!variable.fs_tier34_2piece||variable.fs_tier34_2piece&buff.immolation_aura.up)&(buff.inertia_trigger.down||buff.inertia.up&buff.inertia.remains>=gcd.max*3||!talent.inertia||active_enemies>desired_targets&raid_event.adds.remains<cooldown.vengeful_retreat.remains+5||buff.metamorphosis.remains<=cooldown.metamorphosis.remains)&buff.out_of_range.remains<gcd.max&(!talent.shattered_destiny||cooldown.eye_beam.remains>4)&(active_enemies>1||cooldown.metamorphosis.remains>5&cooldown.eye_beam.remains)&(!buff.cycle_of_hatred.stack=3||buff.initiative.up||!talent.initiative||!talent.cycle_of_hatred)||fight_remains<5\nactions.fs_meta+=/sigil_of_flame,if=buff.demonsurge_hardcast.up&buff.demonsurge_death_sweep.down&debuff.essence_break.down&(cooldown.eye_beam.remains>=20||cooldown.eye_beam.remains<=gcd.max)&(!talent.student_of_suffering||buff.demonsurge_sigil_of_doom.up)\nactions.fs_meta+=/immolation_aura,if=!variable.fs_tier34_2piece&buff.demonsurge.up&debuff.essence_break.down&buff.demonsurge_consuming_fire.up&cooldown.blade_dance.remains>=gcd.max&cooldown.eye_beam.remains>=gcd.max&fury.deficit>10+variable.fury_gen\nactions.fs_meta+=/eye_beam,if=debuff.essence_break.down&buff.inner_demon.down&(buff.metamorphosis.remains>=7||!set_bonus.thewarwithin_season_3_4pc)\nactions.fs_meta+=/eye_beam,if=buff.demonsurge_hardcast.up&debuff.essence_break.down&buff.inner_demon.down&(buff.cycle_of_hatred.stack<4||cooldown.essence_break.remains>=20-gcd.max*talent.student_of_suffering||cooldown.sigil_of_flame.remains&talent.student_of_suffering||cooldown.essence_break.remains<=gcd.max||!talent.essence_break)&(buff.metamorphosis.remains>=7||!set_bonus.thewarwithin_season_3_4pc)\nactions.fs_meta+=/death_sweep,if=(cooldown.essence_break.remains>=gcd.max*2+talent.student_of_suffering*gcd.max||debuff.essence_break.up||!talent.essence_break)&(buff.immolation_aura.down||!variable.fs_tier34_2piece||talent.screaming_brutality&talent.soulscar)&(buff.demon_soul_tww3.down||!set_bonus.thewarwithin_season_3_4pc||active_enemies>=3||talent.screaming_brutality&talent.soulscar)\nactions.fs_meta+=/glaive_tempest,if=debuff.essence_break.down&(cooldown.blade_dance.remains>gcd.max*2||fury>60)&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>10)\nactions.fs_meta+=/sigil_of_flame,if=active_enemies>2&debuff.essence_break.down\n## actions.fs_meta+=/throw_glaive,if=talent.soulscar&talent.furious_throws&active_enemies>1&debuff.essence_break.down\nactions.fs_meta+=/annihilation,if=cooldown.blade_dance.remains||fury>60||soul_fragments.total>0||buff.metamorphosis.remains<5\nactions.fs_meta+=/sigil_of_flame,if=buff.metamorphosis.remains>5&buff.out_of_range.down&!talent.student_of_suffering\n## actions.fs_meta+=/felblade,if=(buff.out_of_range.down||fury.deficit>40+variable.fury_gen*(0.5%gcd.max))&!buff.inertia.up actions.fs_meta+=/sigil_of_flame,if=debuff.essence_break.down&buff.out_of_range.down\nactions.fs_meta+=/immolation_aura,if=!variable.fs_tier34_2piece&buff.out_of_range.down&recharge_time<(cooldown.eye_beam.remains<?buff.metamorphosis.remains)&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>full_recharge_time)\nactions.fs_meta+=/felblade,if=(buff.out_of_range.down||fury.deficit>40+variable.fury_gen*(0.5%gcd.max))&!buff.inertia_trigger.up\nactions.fs_meta+=/annihilation\nactions.fs_meta+=/throw_glaive,if=buff.unbound_chaos.down&recharge_time<cooldown.eye_beam.remains&debuff.essence_break.down&(cooldown.eye_beam.remains>8||charges_fractional>1.01)&buff.out_of_range.down&active_enemies>1&!talent.furious_throws\nactions.fs_meta+=/fel_rush,if=recharge_time<cooldown.eye_beam.remains&debuff.essence_break.down&(cooldown.eye_beam.remains>8||charges_fractional>1.01)&buff.out_of_range.down&active_enemies>1\nactions.fs_meta+=/demons_bite\n\nactions.fs_opener+=/potion,if=buff.initiative.up||!talent.initiative\nactions.fs_opener+=/felblade,if=cooldown.the_hunt.up&!talent.a_fire_inside&fury<40\nactions.fs_opener+=/the_hunt,if=talent.inertia||buff.initiative.up||!talent.initiative\nactions.fs_opener+=/felblade,if=talent.inertia&buff.inertia_trigger.up&set_bonus.thewarwithin_season_3_4pc&buff.metamorphosis.up&debuff.essence_break.down&active_enemies<=2\nactions.fs_opener+=/fel_rush,if=talent.inertia&buff.inertia_trigger.up&set_bonus.thewarwithin_season_3_4pc&buff.metamorphosis.up&debuff.essence_break.down&(active_enemies>=2||cooldown.felblade.remains)\nactions.fs_opener+=/immolation_aura,if=variable.fs_tier34_2piece&buff.demonsurge_hardcast.up&(buff.demonsurge_consuming_fire.up||charges=2)\nactions.fs_opener+=/annihilation,if=variable.fs_tier34_2piece&debuff.essence_break.down&cooldown.metamorphosis.remains&buff.demonsurge_annihilation.up&cooldown.eye_beam.up\nactions.fs_opener+=/felblade,if=talent.inertia&buff.inertia_trigger.up&active_enemies=1&buff.metamorphosis.up&cooldown.metamorphosis.up&cooldown.essence_break.up&buff.inner_demon.down&buff.demonsurge_annihilation.down\nactions.fs_opener+=/fel_rush,if=talent.inertia&buff.inertia_trigger.up&(cooldown.felblade.remains||active_enemies>1)&buff.metamorphosis.up&cooldown.metamorphosis.up&cooldown.essence_break.up&buff.inner_demon.down&buff.demonsurge_annihilation.down\nactions.fs_opener+=/essence_break,if=buff.metamorphosis.up&(!talent.inertia||buff.inertia.up&(buff.inner_demon.down||!talent.chaotic_transformation))&(buff.demonsurge_annihilation.down||!talent.chaotic_transformation)&(!variable.fs_tier34_2piece||buff.demonsurge_hardcast.up&cooldown.eye_beam.remains&buff.demonsurge_consuming_fire.down)\nactions.fs_opener+=/vengeful_retreat,use_off_gcd=1,if=talent.initiative&time>4&buff.metamorphosis.up&(!talent.inertia||buff.inertia_trigger.down)&talent.essence_break&buff.inner_demon.down&(buff.initiative.down||gcd.remains<0.1)&cooldown.blade_dance.remains\n## actions.fs_opener+=/felblade,if=!talent.inertia&active_enemies=1&buff.unbound_chaos.up&buff.initiative.up&debuff.essence_break.down\nactions.fs_opener+=/felblade,if=talent.inertia&buff.inertia_trigger.up&hero_tree.felscarred&debuff.essence_break.down&talent.essence_break&cooldown.metamorphosis.remains&active_enemies<=2&cooldown.sigil_of_flame.remains\n## actions.fs_opener+=/immolation_aura,if=hero_tree.felscarred&charges=2&buff.student_of_suffering.up&talent.a_fire_inside&cooldown.sigil_of_flame.remains&debuff.essence_break.down actions.fs_opener+=/immolation_aura,if=hero_tree.felscarred&debuff.essence_break.down&talent.a_fire_inside&buff.metamorphosis.remains&charges=2 actions.fs_opener+=/felblade,if=buff.inertia_trigger.up&talent.inertia&talent.restless_hunter&cooldown.essence_break.up&cooldown.metamorphosis.up&(buff.demonsurge_annihilation.down||hero_tree.aldrachi_reaver)&buff.metamorphosis.up&cooldown.blade_dance.remains<=gcd.max actions.fs_opener+=/fel_rush,if=buff.inertia_trigger.up&talent.inertia&talent.restless_hunter&cooldown.essence_break.up&cooldown.metamorphosis.up&(buff.demonsurge_annihilation.down||hero_tree.aldrachi_reaver)&buff.metamorphosis.up&cooldown.blade_dance.remains<=gcd.max actions.fs_opener+=/felblade,if=talent.inertia&buff.inertia_trigger.up&(buff.inertia.down&buff.metamorphosis.up&!hero_tree.felscarred||hero_tree.felscarred&(buff.metamorphosis.down&charges>1||prev_gcd.1.eye_beam||buff.demonsurge.stack>=5))&debuff.essence_break.down actions.fs_opener+=/fel_rush,if=talent.inertia&buff.unbound_chaos.up&talent.a_fire_inside&(buff.inertia.down&buff.metamorphosis.up&!hero_tree.felscarred||hero_tree.felscarred&(buff.metamorphosis.down&charges>1||prev_gcd.1.eye_beam||buff.demonsurge.stack>=5||charges=2&buff.unbound_chaos.down))&debuff.essence_break.down actions.fs_opener+=/the_hunt,if=(buff.metamorphosis.up&hero_tree.aldrachi_reaver&talent.shattered_destiny||!talent.shattered_destiny&hero_tree.aldrachi_reaver||hero_tree.felscarred)&(!talent.initiative||talent.inertia||buff.initiative.up||time>5)\nactions.fs_opener+=/sigil_of_flame,if=buff.demonsurge_hardcast.up&(buff.inner_demon.down||buff.out_of_range.up)&debuff.essence_break.down&(!variable.fs_tier34_2piece||cooldown.essence_break.remains||!talent.essence_break)\nactions.fs_opener+=/annihilation,if=(buff.inner_demon.up||buff.demonsurge_annihilation.up)&(cooldown.metamorphosis.up||!talent.essence_break&cooldown.blade_dance.remains)\nactions.fs_opener+=/death_sweep,if=buff.demonsurge_death_sweep.up&!talent.restless_hunter&(!variable.fs_tier34_2piece||buff.demonsurge_hardcast.down)\nactions.fs_opener+=/annihilation,if=buff.demonsurge_annihilation.up&(!talent.essence_break||buff.inner_demon.up)\nactions.fs_opener+=/immolation_aura,if=talent.a_fire_inside&talent.burning_wound&buff.metamorphosis.down\nactions.fs_opener+=/felblade,if=fury<40&debuff.essence_break.down&buff.inertia_trigger.down&cooldown.metamorphosis.up\nactions.fs_opener+=/metamorphosis,if=buff.metamorphosis.up&buff.inner_demon.down&buff.demonsurge_annihilation.down&cooldown.blade_dance.remains\n## actions.fs_opener+=/sigil_of_spite,if=hero_tree.felscarred\nactions.fs_opener+=/eye_beam,if=buff.metamorphosis.down||debuff.essence_break.down&buff.inner_demon.down&(cooldown.blade_dance.remains||talent.essence_break&cooldown.essence_break.up)&(!talent.a_fire_inside||action.immolation_aura.charges=0)\nactions.fs_opener+=/eye_beam,if=buff.demonsurge_hardcast.up&debuff.essence_break.down&buff.inner_demon.down\n## actions.fs_opener+=/essence_break,if=cooldown.blade_dance.remains<gcd.max&!hero_tree.felscarred&!talent.shattered_destiny&buff.metamorphosis.up||(cooldown.eye_beam.remains||buff.demonsurge_abyssal_gaze.down)&cooldown.metamorphosis.remains&(!talent.inertia||buff.inertia_trigger.down)\nactions.fs_opener+=/annihilation,if=variable.fs_tier34_2piece&(buff.immolation_aura.up||buff.demon_soul_tww3.up)\nactions.fs_opener+=/death_sweep\nactions.fs_opener+=/annihilation\nactions.fs_opener+=/demons_bite\nactions.fs_opener+=/variable,name=opened,value=true",
["version"] = 20250831,
["warnings"] = "The import for 'fs_cooldown' required some automated changes.\nLine 5: Converted 'trinket.1.is.mad_queens_mandate' to 'trinket.t1.is.mad_queens_mandate' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_buff.any' (1x).\nLine 5: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.is.mad_queens_mandate' to 'trinket.t2.is.mad_queens_mandate' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_buff.any' (1x).\nLine 5: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.is.cursed_stone_idol' to 'trinket.t1.is.cursed_stone_idol' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_buff.any' (1x).\nLine 6: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.is.signet_of_the_priory' to 'trinket.t2.is.signet_of_the_priory' (1x).\nLine 6: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 6: Converted 'trinket.2.is.cursed_stone_idol' to 'trinket.t2.is.cursed_stone_idol' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_buff.any' (1x).\nLine 6: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.is.signet_of_the_priory' to 'trinket.t1.is.signet_of_the_priory' (1x).\nLine 6: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 7: Converted 'trinket.1.is.mad_queens_mandate' to 'trinket.t1.is.mad_queens_mandate' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.2.is.mad_queens_mandate' to 'trinket.t2.is.mad_queens_mandate' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.2.is.skardyns_grace' to 'trinket.t2.is.skardyns_grace' (1x).\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 8: Converted 'trinket.1.is.skardyns_grace' to 'trinket.t1.is.skardyns_grace' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 10: Converted 'trinket.1.is.signet_of_the_priory' to 'trinket.t1.is.signet_of_the_priory' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'trinket.2.is.signet_of_the_priory' to 'trinket.t2.is.signet_of_the_priory' (1x).\nLine 10: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 10: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 15: Converted 'trinket.1.is.ravenous_honey_buzzer' to 'trinket.t1.is.ravenous_honey_buzzer' (1x).\nLine 15: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 15: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 15: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 15: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 15: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_buff.any' (1x).\nLine 15: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_use_buff' (1x).\nLine 15: Converted 'trinket.2.is.ravenous_honey_buzzer' to 'trinket.t2.is.ravenous_honey_buzzer' (1x).\nLine 15: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 15: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 15: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 15: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 15: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_buff.any' (1x).\nLine 15: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_use_buff' (1x).\nLine 18: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 18: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 18: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 18: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 18: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 18: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 18: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 18: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 18: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 18: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 18: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 18: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 18: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 18: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 18: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 18: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 18: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 18: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 18: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 18: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 19: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 19: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 19: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_buff.any' (1x).\nLine 19: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_use_buff' (1x).\nLine 19: Converted 'trinket.1.is.mister_locknstalk' to 'trinket.t1.is.mister_locknstalk' (1x).\nLine 19: Converted 'trinket.1.is.skardyns_grace' to 'trinket.t1.is.skardyns_grace' (1x).\nLine 19: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 19: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 19: Converted 'trinket.1.is.signet_of_the_priory' to 'trinket.t1.is.signet_of_the_priory' (1x).\nLine 19: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 19: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 19: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 19: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 19: Converted 'trinket.1.has_buff.agility' to 'trinket.t1.has_buff.agility' (1x).\nLine 19: Converted 'trinket.1.has_buff.agility' to 'trinket.t1.has_use_buff' (1x).\nLine 20: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 20: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 20: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_buff.any' (1x).\nLine 20: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_use_buff' (1x).\nLine 20: Converted 'trinket.2.is.mister_locknstalk' to 'trinket.t2.is.mister_locknstalk' (1x).\nLine 20: Converted 'trinket.2.is.skardyns_grace' to 'trinket.t2.is.skardyns_grace' (1x).\nLine 20: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 20: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 20: Converted 'trinket.2.is.signet_of_the_priory' to 'trinket.t2.is.signet_of_the_priory' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 20: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 20: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 20: Converted 'trinket.2.has_buff.agility' to 'trinket.t2.has_buff.agility' (1x).\nLine 20: Converted 'trinket.2.has_buff.agility' to 'trinket.t2.has_use_buff' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - any\n\nThe import for 'fs' required some automated changes.\nLine 18: Converted 'trinket.1.stat.any.cooldown_remains' to 'trinket.t1.stat.any.cooldown_remains' (1x).\nLine 18: Converted 'trinket.1.stat.any.cooldown_remains' to 'trinket.t1.stat.any.cooldown_remains' (1x).\nLine 18: Converted 'trinket.2.stat.any.cooldown_remains' to 'trinket.t2.stat.any.cooldown_remains' (1x).\nLine 18: Converted 'trinket.2.stat.any.cooldown_remains' to 'trinket.t2.stat.any.cooldown_remains' (1x).\nLine 28: Converted operations in 'fury.deficit>40+variable.fury_gen*(0.5%gcd.max)&(cooldown.vengeful_retreat.remains>=action.felblade.cooldown+0.5&talent.inertia.enabled&active_enemies=1||!talent.inertia.enabled||hero_tree.aldrachi_reaver||cooldown.essence_break.remains)&cooldown.metamorphosis.remains&cooldown.eye_beam.remains>=0.5+gcd.max*(talent.student_of_suffering.enabled&cooldown.sigil_of_flame.remains<=gcd.max)&(!variable.fs_tier34_2piece||variable.fs_tier34_2piece&buff.immolation_aura.down&cooldown.immolation_aura.remains)' to 'fury.deficit>40+variable.fury_gen*(0.5/gcd.max)&(cooldown.vengeful_retreat.remains>=action.felblade.cooldown+0.5&talent.inertia.enabled&active_enemies=1||!talent.inertia.enabled||hero_tree.aldrachi_reaver||cooldown.essence_break.remains)&cooldown.metamorphosis.remains&cooldown.eye_beam.remains>=0.5+gcd.max*(talent.student_of_suffering.enabled&cooldown.sigil_of_flame.remains<=gcd.max)&(!variable.fs_tier34_2piece||variable.fs_tier34_2piece&buff.immolation_aura.down&cooldown.immolation_aura.remains)'.\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 1: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 1: Converted 'trinket.1.is.improvised_seaforium_pacemaker' to 'trinket.t1.is.improvised_seaforium_pacemaker' (1x).\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 2: Converted 'trinket.2.is.improvised_seaforium_pacemaker' to 'trinket.t2.is.improvised_seaforium_pacemaker' (1x).\nLine 3: Converted 'trinket.1.is.mad_queens_mandate' to 'trinket.t1.is.mad_queens_mandate' (1x).\nLine 3: Converted 'trinket.1.is.junkmaestros_mega_magnet' to 'trinket.t1.is.junkmaestros_mega_magnet' (1x).\nLine 3: Converted 'trinket.1.is.geargrinders_spare_keys' to 'trinket.t1.is.geargrinders_spare_keys' (1x).\nLine 3: Converted 'trinket.1.is.ravenous_honey_buzzer' to 'trinket.t1.is.ravenous_honey_buzzer' (1x).\nLine 3: Converted 'trinket.1.is.grim_codex' to 'trinket.t1.is.grim_codex' (1x).\nLine 3: Converted 'trinket.1.is.ratfang_toxin' to 'trinket.t1.is.ratfang_toxin' (1x).\nLine 3: Converted 'trinket.1.is.blastmaster3000' to 'trinket.t1.is.blastmaster3000' (1x).\nLine 3: Converted 'trinket.1.is.cursed_stone_idol' to 'trinket.t1.is.cursed_stone_idol' (1x).\nLine 3: Converted 'trinket.1.is.perfidious_projector' to 'trinket.t1.is.perfidious_projector' (1x).\nLine 4: Converted 'trinket.2.is.mad_queens_mandate' to 'trinket.t2.is.mad_queens_mandate' (1x).\nLine 4: Converted 'trinket.2.is.junkmaestros_mega_magnet' to 'trinket.t2.is.junkmaestros_mega_magnet' (1x).\nLine 4: Converted 'trinket.2.is.geargrinders_spare_keys' to 'trinket.t2.is.geargrinders_spare_keys' (1x).\nLine 4: Converted 'trinket.2.is.ravenous_honey_buzzer' to 'trinket.t2.is.ravenous_honey_buzzer' (1x).\nLine 4: Converted 'trinket.2.is.grim_codex' to 'trinket.t2.is.grim_codex' (1x).\nLine 4: Converted 'trinket.2.is.ratfang_toxin' to 'trinket.t2.is.ratfang_toxin' (1x).\nLine 4: Converted 'trinket.2.is.blastmaster3000' to 'trinket.t2.is.blastmaster3000' (1x).\nLine 4: Converted 'trinket.2.is.cursed_stone_idol' to 'trinket.t2.is.cursed_stone_idol' (1x).\nLine 4: Converted 'trinket.2.is.perfidious_projector' to 'trinket.t2.is.perfidious_projector' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted operations in 'talent.demon_blades.enabled*(1%(2.6*attack_haste)*((talent.demonsurge.enabled&buff.metamorphosis.up)*3+12))+buff.immolation_aura.stack*6+buff.tactical_retreat.up*10' to 'talent.demon_blades.enabled*(1/(2.6*attack_haste)*((talent.demonsurge.enabled&buff.metamorphosis.up)*3+12))+buff.immolation_aura.stack*6+buff.tactical_retreat.up*10'.\nLine 3: Converted 'trinket.1.is.improvised_seaforium_pacemaker' to 'trinket.t1.is.improvised_seaforium_pacemaker' (1x).\nLine 3: Converted 'trinket.1.stat.crit.up' to 'trinket.t1.stat.crit.up' (1x).\nLine 3: Converted 'trinket.2.is.improvised_seaforium_pacemaker' to 'trinket.t2.is.improvised_seaforium_pacemaker' (1x).\nLine 3: Converted 'trinket.2.stat.crit.up' to 'trinket.t2.stat.crit.up' (1x).\nLine 5: Converted 'trinket.1.is.junkmaestros_mega_magnet' to 'trinket.t1.is.junkmaestros_mega_magnet' (1x).\nLine 5: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.2.is.junkmaestros_mega_magnet' to 'trinket.t2.is.junkmaestros_mega_magnet' (1x).\nLine 5: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.1.is.house_of_cards' to 'trinket.t1.is.house_of_cards' (1x).\nLine 6: Converted 'trinket.1.is.signet_of_the_priory' to 'trinket.t1.is.signet_of_the_priory' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.is.house_of_cards' to 'trinket.t2.is.house_of_cards' (1x).\nLine 6: Converted 'trinket.2.is.signet_of_the_priory' to 'trinket.t2.is.signet_of_the_priory' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\n\nThe import for 'ar_cooldown' required some automated changes.\nLine 5: Converted 'trinket.1.is.mad_queens_mandate' to 'trinket.t1.is.mad_queens_mandate' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_buff.any' (1x).\nLine 5: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.is.mad_queens_mandate' to 'trinket.t2.is.mad_queens_mandate' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_buff.any' (1x).\nLine 5: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.is.cursed_stone_idol' to 'trinket.t1.is.cursed_stone_idol' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_buff.any' (1x).\nLine 6: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.is.signet_of_the_priory' to 'trinket.t2.is.signet_of_the_priory' (1x).\nLine 6: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 6: Converted 'trinket.2.is.cursed_stone_idol' to 'trinket.t2.is.cursed_stone_idol' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_buff.any' (1x).\nLine 6: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.is.signet_of_the_priory' to 'trinket.t1.is.signet_of_the_priory' (1x).\nLine 6: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 7: Converted 'trinket.1.is.mad_queens_mandate' to 'trinket.t1.is.mad_queens_mandate' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.2.is.mad_queens_mandate' to 'trinket.t2.is.mad_queens_mandate' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.2.is.skardyns_grace' to 'trinket.t2.is.skardyns_grace' (1x).\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 8: Converted 'trinket.1.is.skardyns_grace' to 'trinket.t1.is.skardyns_grace' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 10: Converted 'trinket.1.is.signet_of_the_priory' to 'trinket.t1.is.signet_of_the_priory' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'trinket.2.is.signet_of_the_priory' to 'trinket.t2.is.signet_of_the_priory' (1x).\nLine 10: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 10: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 15: Converted 'trinket.1.is.ravenous_honey_buzzer' to 'trinket.t1.is.ravenous_honey_buzzer' (1x).\nLine 15: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 15: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 15: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 15: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 15: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_buff.any' (1x).\nLine 15: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_use_buff' (1x).\nLine 15: Converted 'trinket.2.is.ravenous_honey_buzzer' to 'trinket.t2.is.ravenous_honey_buzzer' (1x).\nLine 15: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 15: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 15: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 15: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 15: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_buff.any' (1x).\nLine 15: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_use_buff' (1x).\nLine 18: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 18: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 18: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 18: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 18: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 18: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 18: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 18: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 18: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 18: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 18: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 18: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 18: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 18: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 18: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 18: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 18: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 18: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 18: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 18: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 19: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 19: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 19: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_buff.any' (1x).\nLine 19: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_use_buff' (1x).\nLine 19: Converted 'trinket.1.is.mister_locknstalk' to 'trinket.t1.is.mister_locknstalk' (1x).\nLine 19: Converted 'trinket.1.is.skardyns_grace' to 'trinket.t1.is.skardyns_grace' (1x).\nLine 19: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 19: Converted 'trinket.1.is.unyielding_netherprism' to 'trinket.t1.is.unyielding_netherprism' (1x).\nLine 19: Converted 'trinket.1.is.signet_of_the_priory' to 'trinket.t1.is.signet_of_the_priory' (1x).\nLine 19: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 19: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 19: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 19: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 19: Converted 'trinket.1.has_buff.agility' to 'trinket.t1.has_buff.agility' (1x).\nLine 19: Converted 'trinket.1.has_buff.agility' to 'trinket.t1.has_use_buff' (1x).\nLine 20: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 20: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 20: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_buff.any' (1x).\nLine 20: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_use_buff' (1x).\nLine 20: Converted 'trinket.2.is.mister_locknstalk' to 'trinket.t2.is.mister_locknstalk' (1x).\nLine 20: Converted 'trinket.2.is.skardyns_grace' to 'trinket.t2.is.skardyns_grace' (1x).\nLine 20: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 20: Converted 'trinket.2.is.unyielding_netherprism' to 'trinket.t2.is.unyielding_netherprism' (1x).\nLine 20: Converted 'trinket.2.is.signet_of_the_priory' to 'trinket.t2.is.signet_of_the_priory' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 20: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 20: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 20: Converted 'trinket.2.has_buff.agility' to 'trinket.t2.has_buff.agility' (1x).\nLine 20: Converted 'trinket.2.has_buff.agility' to 'trinket.t2.has_use_buff' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - any\n\nThe import for 'fs_meta' required some automated changes.\nLine 24: Converted operations in '(buff.out_of_range.down||fury.deficit>40+variable.fury_gen*(0.5%gcd.max))&!buff.inertia_trigger.up' to '(buff.out_of_range.down||fury.deficit>40+variable.fury_gen*(0.5/gcd.max))&!buff.inertia_trigger.up'.\n\nThe import for 'ar' required some automated changes.\nLine 14: Converted 'trinket.1.stat.any.cooldown_remains' to 'trinket.t1.stat.any.cooldown_remains' (1x).\nLine 14: Converted 'trinket.1.stat.any.cooldown_remains' to 'trinket.t1.stat.any.cooldown_remains' (1x).\nLine 14: Converted 'trinket.2.stat.any.cooldown_remains' to 'trinket.t2.stat.any.cooldown_remains' (1x).\nLine 14: Converted 'trinket.2.stat.any.cooldown_remains' to 'trinket.t2.stat.any.cooldown_remains' (1x).\nLine 23: Converted 'trinket.1.stat.any.cooldown_remains' to 'trinket.t1.stat.any.cooldown_remains' (1x).\nLine 23: Converted 'trinket.1.stat.any.cooldown_remains' to 'trinket.t1.stat.any.cooldown_remains' (1x).\nLine 23: Converted 'trinket.2.stat.any.cooldown_remains' to 'trinket.t2.stat.any.cooldown_remains' (1x).\nLine 23: Converted 'trinket.2.stat.any.cooldown_remains' to 'trinket.t2.stat.any.cooldown_remains' (1x).\n\nImported 12 action lists.\n",
["author"] = "SimC",
["lists"] = {
["fs_cooldown"] = {
{
["enabled"] = true,
["criteria"] = "( ( ( cooldown.eye_beam.remains >= 20 || talent.cycle_of_hatred.enabled & cooldown.eye_beam.remains >= 13 ) & ( ! talent.essence_break.enabled || debuff.essence_break.up ) & buff.fel_barrage.down & active_enemies > 1 || ! talent.chaotic_transformation.enabled || boss & fight_remains < 30 ) & buff.inner_demon.down & ( ! talent.restless_hunter.enabled & cooldown.blade_dance.remains > gcd.max * 3 || prev_gcd.1.death_sweep ) ) & ! talent.inertia.enabled & ! talent.essence_break.enabled & time > 15",
["action"] = "metamorphosis",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.blade_dance.remains & ( ( prev_gcd.1.death_sweep || prev_gcd.2.death_sweep || prev_gcd.3.death_sweep || buff.metamorphosis.up & buff.metamorphosis.remains < gcd.max ) & cooldown.eye_beam.remains & buff.fel_barrage.down & ( raid_event.adds.in > 40 || ( raid_event.adds.remains > 8 || ! talent.fel_barrage.enabled ) & active_enemies > desired_targets || ! raid_event.adds.in <= 120 ) || ! talent.chaotic_transformation.enabled || boss & fight_remains < 30 ) & ( buff.inner_demon.down & ( buff.rending_strike.down || ! talent.restless_hunter.enabled || prev_gcd.1.death_sweep ) ) ) & ( talent.inertia.enabled || talent.essence_break.enabled ) & time > 15",
["action"] = "metamorphosis",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 35 || ( buff.metamorphosis.up || debuff.essence_break.up ) & time > 10",
["action"] = "potion",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "equipped.mad_queens_mandate || equipped.treacherous_transmitter || equipped.skardyns_grace || equipped.signet_of_the_priory || equipped.cursed_stone_idol",
["var_name"] = "special_trinket",
},
{
["enabled"] = true,
["name"] = "mad_queens_mandate",
["action"] = "mad_queens_mandate",
["criteria"] = "( ( ! talent.initiative.enabled || buff.initiative.up || time > 5 ) & ( buff.metamorphosis.remains > 5 || buff.metamorphosis.down ) & ( trinket.t1.is.mad_queens_mandate & ( trinket.t2.cooldown.duration < 10 || trinket.t2.cooldown.remains > 10 || ! trinket.t2.has_use_buff ) || trinket.t2.is.mad_queens_mandate & ( trinket.t1.cooldown.duration < 10 || trinket.t1.cooldown.remains > 10 || ! trinket.t1.has_use_buff ) ) & fight_remains > 120 || boss & fight_remains < 10 & fight_remains < buff.metamorphosis.remains ) & debuff.essence_break.down || boss & fight_remains < 5",
},
{
["enabled"] = true,
["name"] = "cursed_stone_idol",
["action"] = "cursed_stone_idol",
["criteria"] = "( ( buff.metamorphosis.remains > 5 || buff.metamorphosis.down ) & ( ! buff.inertia.up || ! talent.inertia.enabled ) & ( debuff.essence_break.down || ! talent.essence_break.enabled ) & ( trinket.t1.is.cursed_stone_idol & ( trinket.t2.cooldown.duration < 120 || trinket.t2.cooldown.remains > 10 || ! trinket.t2.has_use_buff || trinket.t2.is.signet_of_the_priory || trinket.t2.is.unyielding_netherprism ) || trinket.t2.is.cursed_stone_idol & ( trinket.t1.cooldown.duration < 120 || trinket.t1.cooldown.remains > 10 || ! trinket.t1.has_use_buff || trinket.t1.is.signet_of_the_priory || trinket.t1.is.unyielding_netherprism ) ) || boss & fight_remains < 10 & fight_remains < buff.metamorphosis.remains ) || boss & fight_remains < 5",
},
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
["criteria"] = "! equipped.mad_queens_mandate || equipped.mad_queens_mandate & ( trinket.t1.is.mad_queens_mandate & trinket.t1.cooldown.remains > fight_remains || trinket.t2.is.mad_queens_mandate & trinket.t2.cooldown.remains > fight_remains ) || fight_remains > 25",
},
{
["enabled"] = true,
["name"] = "skardyns_grace",
["action"] = "skardyns_grace",
["criteria"] = "( ! equipped.mad_queens_mandate || fight_remains > 25 || trinket.t2.is.skardyns_grace & trinket.t1.cooldown.remains > fight_remains || trinket.t1.is.skardyns_grace & trinket.t2.cooldown.remains > fight_remains || trinket.t1.cooldown.duration < 10 || trinket.t2.cooldown.duration < 10 ) & buff.metamorphosis.up",
},
{
["enabled"] = true,
["name"] = "house_of_cards",
["action"] = "house_of_cards",
["criteria"] = "( cooldown.eye_beam.remains < gcd.max || buff.metamorphosis.up ) & ( raid_event.adds.remains > 8 || raid_event.adds.in > 15 ) || boss & fight_remains < 25",
},
{
["enabled"] = true,
["name"] = "signet_of_the_priory",
["action"] = "signet_of_the_priory",
["criteria"] = "time < 20 & ( ! talent.inertia.enabled || buff.inertia.up ) & ! equipped.cursed_stone_idol || ( cooldown.eye_beam.remains < gcd.max || buff.metamorphosis.remains > 8 || cooldown.metamorphosis.up & buff.metamorphosis.up ) & ( raid_event.adds.remains > 15 || raid_event.adds.in > 115 ) & ( ! equipped.cursed_stone_idol || ( trinket.t1.is.signet_of_the_priory & trinket.t2.cooldown.remains > 20 || trinket.t2.is.signet_of_the_priory & trinket.t1.cooldown.remains > 20 ) ) || boss & fight_remains < 25",
},
{
["enabled"] = true,
["name"] = "perfidious_projector",
["action"] = "perfidious_projector",
["criteria"] = "variable.tier33_4piece & variable.double_on_use || boss & fight_remains < 15",
},
{
["enabled"] = true,
["name"] = "ratfang_toxin",
["action"] = "ratfang_toxin",
["criteria"] = "variable.tier33_4piece & variable.double_on_use || boss & fight_remains < 5",
},
{
["enabled"] = true,
["name"] = "geargrinders_spare_keys",
["action"] = "geargrinders_spare_keys",
["criteria"] = "variable.tier33_4piece & variable.double_on_use || boss & fight_remains < 10",
},
{
["enabled"] = true,
["name"] = "grim_codex",
["action"] = "grim_codex",
["criteria"] = "variable.tier33_4piece & variable.double_on_use || boss & fight_remains < 10",
},
{
["enabled"] = true,
["name"] = "ravenous_honey_buzzer",
["action"] = "ravenous_honey_buzzer",
["criteria"] = "( variable.tier33_4piece & ( buff.inertia.down & ( cooldown.essence_break.remains & debuff.essence_break.down || ! talent.essence_break.enabled ) ) & ( trinket.t1.is.ravenous_honey_buzzer & ( trinket.t2.cooldown.duration < 10 || trinket.t2.cooldown.remains > 10 || ! trinket.t2.has_use_buff ) || trinket.t2.is.ravenous_honey_buzzer & ( trinket.t1.cooldown.duration < 10 || trinket.t1.cooldown.remains > 10 || ! trinket.t1.has_use_buff ) ) & fight_remains > 120 || boss & fight_remains < 10 & fight_remains < buff.metamorphosis.remains ) || boss & fight_remains < 5",
},
{
["enabled"] = true,
["name"] = "blastmaster3000",
["action"] = "blastmaster3000",
["criteria"] = "variable.tier33_4piece & variable.double_on_use || boss & fight_remains < 10",
},
{
["enabled"] = true,
["name"] = "junkmaestros_mega_magnet",
["action"] = "junkmaestros_mega_magnet",
["criteria"] = "variable.tier33_4piece_magnet & variable.double_on_use & time > 10 || boss & fight_remains < 5",
},
{
["enabled"] = true,
["name"] = "unyielding_netherprism",
["action"] = "unyielding_netherprism",
["criteria"] = "( ( cooldown.eye_beam.remains < gcd.max & ( active_enemies > 1 || talent.looks_can_kill.enabled ) & ( ( trinket.t1.is.unyielding_netherprism & trinket.t2.cooldown.duration >= 90 || cooldown.metamorphosis.remains <= 5 ) || ( trinket.t2.is.unyielding_netherprism & trinket.t1.cooldown.duration >= 90 || cooldown.metamorphosis.remains <= 5 ) ) || ( buff.metamorphosis.up & ( ( trinket.t1.is.unyielding_netherprism & ( trinket.t2.cooldown.duration >= 90 || ! trinket.t2.has_cooldown ) ) || ( trinket.t2.is.unyielding_netherprism & ( trinket.t1.cooldown.duration >= 90 || ! trinket.t1.has_cooldown ) ) & ! equipped.improvised_seaforium_pacemaker ) ) ) & ( raid_event.adds.in > 105 || raid_event.adds.remains > 8 ) || boss & fight_remains < 25 ) & ( ( trinket.t1.is.unyielding_netherprism & ( ! variable.trinket2_steroids & ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains > 20 ) || trinket.t2.is.unyielding_netherprism & ( ! variable.trinket1_steroids & ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains > 20 ) ) || equipped.improvised_seaforium_pacemaker )",
},
{
["enabled"] = true,
["criteria"] = "( ( cooldown.eye_beam.remains < gcd.max & active_enemies > 1 || buff.metamorphosis.up & ( cooldown.metamorphosis.remains < buff.metamorphosis.remains || cooldown.metamorphosis.remains >= 20 || cooldown.metamorphosis.up ) ) & ( raid_event.adds.in > trinket.t1.cooldown.duration - 15 || raid_event.adds.remains > 8 ) || ! trinket.t1.has_use_buff || boss & fight_remains < 25 ) & ! trinket.t1.is.mister_locknstalk & ! variable.trinket1_crit & ! trinket.t1.is.skardyns_grace & ! trinket.t1.is.treacherous_transmitter & ! trinket.t1.is.unyielding_netherprism & ! trinket.t1.is.signet_of_the_priory & ( ! variable.special_trinket || trinket.t2.cooldown.remains > 20 || ( trinket.t1.cooldown.duration > 90 & trinket.t1.has_use_buff ) )",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "( ( cooldown.eye_beam.remains < gcd.max & active_enemies > 1 || buff.metamorphosis.up & ( cooldown.metamorphosis.remains < buff.metamorphosis.remains || cooldown.metamorphosis.remains >= 20 || cooldown.metamorphosis.up ) ) & ( raid_event.adds.in > trinket.t2.cooldown.duration - 15 || raid_event.adds.remains > 8 ) || ! trinket.t2.has_use_buff || boss & fight_remains < 25 ) & ! trinket.t2.is.mister_locknstalk & ! variable.trinket2_crit & ! trinket.t2.is.skardyns_grace & ! trinket.t2.is.treacherous_transmitter & ! trinket.t2.is.unyielding_netherprism & ! trinket.t2.is.signet_of_the_priory & ( ! variable.special_trinket || trinket.t1.cooldown.remains > 20 || ( trinket.t2.cooldown.duration > 90 & trinket.t2.has_use_buff ) )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > 45 ) & ( buff.metamorphosis.remains > 5 || buff.metamorphosis.down ) & ( ! talent.initiative.enabled || buff.initiative.up || time > 5 ) & time > 5 & ( ! talent.inertia.enabled & buff.unbound_chaos.down || buff.inertia_trigger.down ) & buff.metamorphosis.down || boss & fight_remains <= 30",
["action"] = "the_hunt",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & cooldown.blade_dance.remains & time > 15",
["action"] = "sigil_of_spite",
},
},
["fs_fel_barrage"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.felblade.remains < gcd.max || cooldown.sigil_of_flame.remains < gcd.max",
["var_name"] = "generator_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "gcd.max * 32",
["var_name"] = "gcd_drain",
},
{
["enabled"] = true,
["criteria"] = "buff.inner_demon.up",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "( buff.fel_barrage.down || fury > 45 & talent.blind_fury.enabled ) & ( active_enemies > 1 & raid_event.adds.up || raid_event.adds.in > 40 - buff.cycle_of_hatred.stack * 5 )",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down & buff.metamorphosis.up",
["action"] = "essence_break",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies > 2 || buff.fel_barrage.up ) & ( cooldown.eye_beam.remains > recharge_time + 3 )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down & active_enemies > 1",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "fury > 100 & ( raid_event.adds.in > 90 || raid_event.adds.in < gcd.max || raid_event.adds.remains > 4 & active_enemies > 2 )",
["action"] = "fel_barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.inertia_trigger.up & buff.fel_barrage.up",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up & fury > 20 & buff.fel_barrage.up",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit > 40 & buff.fel_barrage.up & ( ! talent.student_of_suffering.enabled || cooldown.eye_beam.remains > 30 )",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "buff.demonsurge_hardcast.up & fury.deficit > 40 & buff.fel_barrage.up",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.up & fury.deficit > 40 & action.felblade.cooldown_react",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 35 > 0 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 30 > 0 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 35 > 0 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit > 40 & buff.fel_barrage.up",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "fury > 40 & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > 80 )",
["action"] = "the_hunt",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 40 > 20 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 40 > 20 & ( cooldown.fel_barrage.remains & cooldown.fel_barrage.remains < 10 & fury > 100 || buff.fel_barrage.up & ( buff.fel_barrage.remains * variable.fury_gen - buff.fel_barrage.remains * 32 ) > 0 )",
["action"] = "chaos_strike",
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
},
["fs"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.fel_barrage.enabled & ( cooldown.fel_barrage.remains < gcd.max * 7 & active_enemies >= 2 & ( cooldown.metamorphosis.remains || active_enemies > 2 ) || buff.fel_barrage.up )",
["var_name"] = "fel_barrage",
["description"] = "Fel-Scarred",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "fs_cooldown",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "time < 15 & toggle.cooldowns & ( cooldown.eye_beam.up || cooldown.metamorphosis.up || talent.essence_break.enabled & cooldown.essence_break.up || buff.demonsurge.stack < 3 + talent.student_of_suffering.enabled + talent.a_fire_inside.enabled )",
["strict_if"] = "time < 15 & toggle.cooldowns",
["list_name"] = "fs_opener",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "variable.fel_barrage & raid_event.adds.up",
["strict_if"] = "raid_event.adds.up",
["list_name"] = "fs_fel_barrage",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & talent.ragefire.enabled & ( ! talent.fel_barrage.enabled || cooldown.fel_barrage.remains > recharge_time ) & debuff.essence_break.down & ( buff.metamorphosis.down || buff.metamorphosis.remains > 5 )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & talent.ragefire.enabled & raid_event.adds.up & raid_event.adds.remains < 15 & raid_event.adds.remains > 5 & debuff.essence_break.down",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "talent.unbound_chaos.enabled & buff.unbound_chaos.up & ! talent.inertia.enabled & active_enemies <= 2 & ( talent.student_of_suffering.enabled & cooldown.eye_beam.remains - gcd.max * 2 <= buff.unbound_chaos.remains || hero_tree.aldrachi_reaver )",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "talent.unbound_chaos.enabled & buff.unbound_chaos.up & ! talent.inertia.enabled & active_enemies > 3 & ( talent.student_of_suffering.enabled & cooldown.eye_beam.remains - gcd.max * 2 <= buff.unbound_chaos.remains )",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "buff.metamorphosis.up",
["list_name"] = "fs_meta",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "talent.initiative.enabled & ( cooldown.eye_beam.remains > 15 & gcd.remains < 0.3 || gcd.remains < 0.2 & cooldown.eye_beam.remains <= gcd.remains & ( cooldown.metamorphosis.remains > 10 || cooldown.blade_dance.remains < gcd.max * 3 ) ) & ( ! talent.student_of_suffering.enabled || cooldown.sigil_of_flame.remains ) & ( cooldown.essence_break.remains <= gcd.max * 2 & talent.student_of_suffering.enabled & cooldown.sigil_of_flame.remains || cooldown.essence_break.remains >= 18 || ! talent.student_of_suffering.enabled ) & cooldown.metamorphosis.remains > 10 & time > 20",
["action"] = "vengeful_retreat",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "variable.fel_barrage || ! talent.demon_blades.enabled & talent.fel_barrage.enabled & ( buff.fel_barrage.up || cooldown.fel_barrage.up ) & buff.metamorphosis.down",
["list_name"] = "fs_fel_barrage",
},
{
["enabled"] = true,
["criteria"] = "variable.fs_tier34_2piece & ( full_recharge_time < gcd.max * 3 || buff.immolation_aura.down & ( cooldown.eye_beam.remains < 3 & ( ! talent.essence_break.enabled || buff.cycle_of_hatred.stack < 4 ) || talent.essence_break.enabled & cooldown.essence_break.remains <= 5 || talent.essence_break.enabled & ( ( cooldown.eye_beam.remains < 3 ) * cooldown.essence_break.remains ) > recharge_time ) )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "variable.fs_tier34_2piece & ( ( cooldown.eye_beam.remains + cooldown.metamorphosis.remains ) < 10 )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "talent.a_fire_inside.enabled & talent.burning_wound.enabled & full_recharge_time < gcd.max * 2 & ( raid_event.adds.in > full_recharge_time || active_enemies > desired_targets )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > desired_targets & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > full_recharge_time )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 15 & cooldown.blade_dance.remains & talent.ragefire.enabled",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "talent.student_of_suffering.enabled & ( cooldown.eye_beam.remains <= gcd.max || ! talent.initiative.enabled ) & ( cooldown.essence_break.remains < gcd.max * 3 || ! talent.essence_break.enabled ) & ( cooldown.metamorphosis.remains > 10 || cooldown.blade_dance.remains < gcd.max * 2 )",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.initiative.enabled || buff.initiative.up || cooldown.vengeful_retreat.remains >= 10 || cooldown.metamorphosis.up || talent.initiative.enabled & ! talent.tactical_retreat.enabled ) & ( cooldown.blade_dance.remains < 7 || raid_event.adds.up ) & ( active_enemies > desired_targets * 2 || raid_event.adds.in > 30 - buff.cycle_of_hatred.stack * 5 ) & ( ! variable.trinket1_steroids & ! variable.trinket2_steroids || variable.trinket1_steroids & ( trinket.t1.stat.any.cooldown_remains < gcd.max * 3 || trinket.t1.stat.any.cooldown_remains > 30 - buff.cycle_of_hatred.stack * 5 ) || variable.trinket2_steroids & ( trinket.t2.stat.any.cooldown_remains < gcd.max * 3 || trinket.t2.stat.any.cooldown_remains > 30 - buff.cycle_of_hatred.stack * 5 ) ) || fight_remains < 10",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "variable.fs_tier34_2piece & talent.inertia.enabled & buff.inertia_trigger.up & ( buff.immolation_aura.up || buff.inertia_trigger.remains <= 0.5 || cooldown.the_hunt.remains <= 0.5 ) & active_enemies <= 2",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "variable.fs_tier34_2piece & talent.inertia.enabled & buff.inertia_trigger.up & ( buff.immolation_aura.up || buff.inertia_trigger.remains <= gcd.max || cooldown.the_hunt.remains <= gcd.max ) & ( active_enemies > 2 || cooldown.felblade.remains > buff.inertia_trigger.remains )",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "! talent.initiative.enabled & cooldown.eye_beam.remains > 5",
["action"] = "essence_break",
},
{
["enabled"] = true,
["criteria"] = "cooldown.eye_beam.remains >= gcd.max * 4 & ( active_enemies > 3 || talent.screaming_brutality.enabled & talent.soulscar.enabled )",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "variable.fs_tier34_2piece & ( buff.immolation_aura.up || debuff.essence_break.up )",
["action"] = "chaos_strike",
},
{
["enabled"] = true,
["criteria"] = "cooldown.eye_beam.remains >= gcd.max * 4",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > 10",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 3 & ! talent.student_of_suffering.enabled",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.up",
["action"] = "chaos_strike",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit > 40 + variable.fury_gen * ( 0.5 / gcd.max ) & ( cooldown.vengeful_retreat.remains >= action.felblade.cooldown + 0.5 & talent.inertia.enabled & active_enemies = 1 || ! talent.inertia.enabled || hero_tree.aldrachi_reaver || cooldown.essence_break.remains ) & cooldown.metamorphosis.remains & cooldown.eye_beam.remains >= 0.5 + gcd.max * ( talent.student_of_suffering.enabled & cooldown.sigil_of_flame.remains <= gcd.max ) & ( ! variable.fs_tier34_2piece || variable.fs_tier34_2piece & buff.immolation_aura.down & cooldown.immolation_aura.remains )",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "cooldown.eye_beam.remains >= gcd.max * 4 || ( fury >= 70 - 30 * ( talent.student_of_suffering.enabled & ( cooldown.sigil_of_flame.remains <= gcd.max || cooldown.sigil_of_flame.up ) ) - buff.chaos_theory.up * 20 - variable.fury_gen )",
["action"] = "chaos_strike",
},
{
["enabled"] = true,
["criteria"] = "! variable.fs_tier34_2piece & raid_event.adds.in > full_recharge_time & cooldown.eye_beam.remains >= gcd.max * ( 1 + talent.student_of_suffering.enabled & ( cooldown.sigil_of_flame.remains <= gcd.max || cooldown.sigil_of_flame.up ) ) || active_enemies > desired_targets & active_enemies > 2",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.out_of_range.down & buff.inertia_trigger.down & cooldown.eye_beam.remains >= gcd.max * ( 1 + talent.student_of_suffering.enabled & ( cooldown.sigil_of_flame.remains <= gcd.max || cooldown.sigil_of_flame.up ) )",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "buff.out_of_range.down & debuff.essence_break.down & ! talent.student_of_suffering.enabled & ( ! talent.fel_barrage.enabled || cooldown.fel_barrage.remains > 25 || ( active_enemies = 1 & ! raid_event.adds.exists ) )",
["action"] = "sigil_of_flame",
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "recharge_time < cooldown.eye_beam.remains & debuff.essence_break.down & ( cooldown.eye_beam.remains > 8 || charges_fractional > 1.01 ) & buff.out_of_range.down & active_enemies > 1 & ! talent.furious_throws.enabled",
["action"] = "throw_glaive",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.down & recharge_time < cooldown.eye_beam.remains & debuff.essence_break.down & ( cooldown.eye_beam.remains > 8 || charges_fractional > 1.01 ) & active_enemies > 1",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "buff.out_of_range.down & debuff.essence_break.down & fury < 100",
["action"] = "arcane_torrent",
},
},
["fs_opener"] = {
{
["enabled"] = true,
["criteria"] = "buff.initiative.up || ! talent.initiative.enabled",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "cooldown.the_hunt.up & ! talent.a_fire_inside.enabled & fury < 40",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled || buff.initiative.up || ! talent.initiative.enabled",
["action"] = "the_hunt",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & buff.inertia_trigger.up & set_bonus.thewarwithin_season_3_4pc & buff.metamorphosis.up & debuff.essence_break.down & active_enemies <= 2",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & buff.inertia_trigger.up & set_bonus.thewarwithin_season_3_4pc & buff.metamorphosis.up & debuff.essence_break.down & ( active_enemies >= 2 || cooldown.felblade.remains )",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "variable.fs_tier34_2piece & buff.demonsurge_hardcast.up & ( buff.demonsurge_consuming_fire.up || charges = 2 )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "variable.fs_tier34_2piece & debuff.essence_break.down & cooldown.metamorphosis.remains & buff.demonsurge_annihilation.up & cooldown.eye_beam.up",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & buff.inertia_trigger.up & active_enemies = 1 & buff.metamorphosis.up & cooldown.metamorphosis.up & cooldown.essence_break.up & buff.inner_demon.down & buff.demonsurge_annihilation.down",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & buff.inertia_trigger.up & ( cooldown.felblade.remains || active_enemies > 1 ) & buff.metamorphosis.up & cooldown.metamorphosis.up & cooldown.essence_break.up & buff.inner_demon.down & buff.demonsurge_annihilation.down",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.up & ( ! talent.inertia.enabled || buff.inertia.up & ( buff.inner_demon.down || ! talent.chaotic_transformation.enabled ) ) & ( buff.demonsurge_annihilation.down || ! talent.chaotic_transformation.enabled ) & ( ! variable.fs_tier34_2piece || buff.demonsurge_hardcast.up & cooldown.eye_beam.remains & buff.demonsurge_consuming_fire.down )",
["action"] = "essence_break",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "talent.initiative.enabled & time > 4 & buff.metamorphosis.up & ( ! talent.inertia.enabled || buff.inertia_trigger.down ) & talent.essence_break.enabled & buff.inner_demon.down & ( buff.initiative.down || gcd.remains < 0.1 ) & cooldown.blade_dance.remains",
["action"] = "vengeful_retreat",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & buff.inertia_trigger.up & hero_tree.felscarred & debuff.essence_break.down & talent.essence_break.enabled & cooldown.metamorphosis.remains & active_enemies <= 2 & cooldown.sigil_of_flame.remains",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "buff.demonsurge_hardcast.up & ( buff.inner_demon.down || buff.out_of_range.up ) & debuff.essence_break.down & ( ! variable.fs_tier34_2piece || cooldown.essence_break.remains || ! talent.essence_break.enabled )",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "( buff.inner_demon.up || buff.demonsurge_annihilation.up ) & ( cooldown.metamorphosis.up || ! talent.essence_break.enabled & cooldown.blade_dance.remains )",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "buff.demonsurge_death_sweep.up & ! talent.restless_hunter.enabled & ( ! variable.fs_tier34_2piece || buff.demonsurge_hardcast.down )",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "buff.demonsurge_annihilation.up & ( ! talent.essence_break.enabled || buff.inner_demon.up )",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "talent.a_fire_inside.enabled & talent.burning_wound.enabled & buff.metamorphosis.down",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "fury < 40 & debuff.essence_break.down & buff.inertia_trigger.down & cooldown.metamorphosis.up",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.up & buff.inner_demon.down & buff.demonsurge_annihilation.down & cooldown.blade_dance.remains",
["action"] = "metamorphosis",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.down || debuff.essence_break.down & buff.inner_demon.down & ( cooldown.blade_dance.remains || talent.essence_break.enabled & cooldown.essence_break.up ) & ( ! talent.a_fire_inside.enabled || action.immolation_aura.charges = 0 )",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "buff.demonsurge_hardcast.up & debuff.essence_break.down & buff.inner_demon.down",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "variable.fs_tier34_2piece & ( buff.immolation_aura.up || buff.demon_soul_tww3.up )",
["action"] = "annihilation",
},
{
["action"] = "death_sweep",
["enabled"] = true,
},
{
["action"] = "annihilation",
["enabled"] = true,
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "true",
["var_name"] = "opened",
},
},
["ar"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.rending_strike.down & buff.glaive_flurry.up & cooldown.blade_dance.up & gcd.remains = 0 || variable.rg_inc & prev_gcd.1.death_sweep",
["var_name"] = "rg_inc",
["description"] = "Aldrachi Reaver",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.fel_barrage.enabled & ( cooldown.fel_barrage.remains < gcd.max * 7 & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in < gcd.max * 7 || raid_event.adds.in > 90 ) & ( cooldown.metamorphosis.remains || active_enemies > 2 ) || buff.fel_barrage.up ) & ! ( active_enemies = 1 & ! raid_event.adds.exists )",
["var_name"] = "fel_barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.rending_strike.up & buff.glaive_flurry.up & ( variable.rg_ds = 2 || active_enemies > 2 ) & time > 10",
["action"] = "chaos_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.rending_strike.up & buff.glaive_flurry.up & ( variable.rg_ds = 2 || active_enemies > 2 )",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "buff.glaive_flurry.down & buff.rending_strike.down & buff.thrill_of_the_fight_damage.remains < gcd.max * 4 + ( variable.rg_ds = 2 ) + ( cooldown.the_hunt.remains < gcd.max * 3 ) * 3 + ( cooldown.eye_beam.remains < gcd.max * 3 & talent.shattered_destiny.enabled ) * 3 & ( variable.rg_ds = 0 || variable.rg_ds = 1 & cooldown.blade_dance.up || variable.rg_ds = 2 & cooldown.blade_dance.remains ) & ( buff.thrill_of_the_fight_damage.up || ! prev_gcd.1.death_sweep || ! variable.rg_inc ) & active_enemies < 3 & debuff.essence_break.down & ( buff.art_of_the_glaive.stack > 3 || buff.metamorphosis.remains > 2 || cooldown.eye_beam.remains < 10 || boss & fight_remains < 10 )",
["action"] = "reavers_glaive",
},
{
["enabled"] = true,
["criteria"] = "buff.glaive_flurry.down & buff.rending_strike.down & buff.thrill_of_the_fight_damage.remains < 4 & ( buff.thrill_of_the_fight_damage.up || ! prev_gcd.1.death_sweep || ! variable.rg_inc ) & active_enemies > 2 & fight_remains >= 10 & debuff.essence_break.down || boss & fight_remains < 10",
["action"] = "reavers_glaive",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "ar_cooldown",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "time < 15 & toggle.cooldowns & ( cooldown.eye_beam.up || cooldown.metamorphosis.up || talent.essence_break.enabled & cooldown.essence_break.up )",
["strict_if"] = "time < 15 & toggle.cooldowns",
["list_name"] = "ar_opener",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & cooldown.blade_dance.remains & debuff.reavers_mark.remains >= 2 - talent.quickened_sigils.enabled & ( buff.necessary_sacrifice.remains >= 2 - talent.quickened_sigils.enabled || ! set_bonus.thewarwithin_season_2_4pc || cooldown.eye_beam.remains > 8 ) & ( buff.metamorphosis.down || buff.metamorphosis.remains + talent.shattered_destiny.enabled >= buff.necessary_sacrifice.remains + 2 - talent.quickened_sigils.enabled ) || boss & fight_remains < 20",
["action"] = "sigil_of_spite",
["description"] = "Lineup Sigil of Spite with initiative and 4-piece while preferring to use outside of metamorphosis",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "variable.fel_barrage & active_enemies >= 2 & raid_event.adds.up",
["strict_if"] = "active_enemies > 1",
["list_name"] = "ar_fel_barrage",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & talent.ragefire.enabled & ( ! talent.fel_barrage.enabled || cooldown.fel_barrage.remains > recharge_time ) & debuff.essence_break.down & ( buff.metamorphosis.down || buff.metamorphosis.remains > 5 )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & talent.ragefire.enabled & raid_event.adds.up & raid_event.adds.remains < 15 & raid_event.adds.remains > 5 & debuff.essence_break.down",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "talent.initiative.enabled & talent.tactical_retreat.enabled & time > 20 & ( cooldown.eye_beam.up & ( talent.restless_hunter.enabled || cooldown.metamorphosis.remains > 10 ) ) & ( ! talent.inertia.enabled & buff.unbound_chaos.down || buff.inertia_trigger.down & buff.metamorphosis.down )",
["action"] = "vengeful_retreat",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "talent.initiative.enabled & ! talent.tactical_retreat.enabled & ( cooldown.eye_beam.remains > 15 & gcd.remains < 0.3 || gcd.remains < 0.2 & cooldown.eye_beam.remains <= gcd.remains & cooldown.metamorphosis.remains > 10 ) & ( ! variable.trinket1_steroids & ! variable.trinket2_steroids || variable.trinket1_steroids & ( trinket.t1.stat.any.cooldown_remains < gcd.max * 3 || trinket.t1.stat.any.cooldown_remains > 30 ) || variable.trinket2_steroids & ( trinket.t2.stat.any.cooldown_remains < gcd.max * 3 || trinket.t2.stat.any.cooldown_remains > 30 ) ) & time > 20 & ( ! talent.inertia.enabled & buff.unbound_chaos.down || buff.inertia_trigger.down & buff.metamorphosis.down )",
["action"] = "vengeful_retreat",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "variable.fel_barrage || ! talent.demon_blades.enabled & talent.fel_barrage.enabled & ( buff.fel_barrage.up || cooldown.fel_barrage.up ) & buff.metamorphosis.down",
["list_name"] = "ar_fel_barrage",
},
{
["enabled"] = true,
["criteria"] = "! talent.inertia.enabled & active_enemies = 1 & buff.unbound_chaos.up & buff.initiative.up & debuff.essence_break.down & buff.metamorphosis.down",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "buff.inertia_trigger.up & talent.inertia.enabled & cooldown.eye_beam.remains <= 0.5 & ( cooldown.metamorphosis.remains & talent.looks_can_kill.enabled || active_enemies > 1 )",
["action"] = "felblade",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "buff.metamorphosis.up",
["list_name"] = "ar_meta",
},
{
["enabled"] = true,
["criteria"] = "buff.inertia_trigger.up & talent.inertia.enabled & buff.inertia.down & cooldown.blade_dance.remains < 4 & ( cooldown.eye_beam.remains > 5 & cooldown.eye_beam.remains > buff.unbound_chaos.remains || cooldown.eye_beam.remains <= gcd.max & cooldown.vengeful_retreat.remains <= gcd.max + 1 )",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "talent.a_fire_inside.enabled & talent.burning_wound.enabled & full_recharge_time < gcd.max * 2 & ( raid_event.adds.in > full_recharge_time || active_enemies > desired_targets )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > desired_targets & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > full_recharge_time )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 15 & cooldown.blade_dance.remains & talent.ragefire.enabled",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.blade_dance.remains < 7 || raid_event.adds.up ) & ( active_enemies > desired_targets * 2 & ( buff.thrill_of_the_fight_damage.up || buff.rending_strike.down & buff.glaive_flurry.down ) || raid_event.adds.in > 30 - buff.cycle_of_hatred.stack * 5 ) & ( ! variable.trinket1_steroids & ! variable.trinket2_steroids || variable.trinket1_steroids & ( trinket.t1.stat.any.cooldown_remains < gcd.max * 3 || trinket.t1.stat.any.cooldown_remains > 30 - buff.cycle_of_hatred.stack * 5 ) || variable.trinket2_steroids & ( trinket.t2.stat.any.cooldown_remains < gcd.max * 3 || trinket.t2.stat.any.cooldown_remains > 30 - buff.cycle_of_hatred.stack * 5 ) ) || fight_remains < 10",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.eye_beam.remains >= gcd.max * 2 || active_enemies >= 2 & buff.glaive_flurry.up & ( raid_event.adds.in > 30 - buff.cycle_of_hatred.stack * 5 || raid_event.adds.remains >= cooldown.eye_beam.remains & cooldown.eye_beam.remains < gcd.max * 2 ) ) & buff.rending_strike.down",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "buff.rending_strike.up",
["action"] = "chaos_strike",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 3 || debuff.essence_break.down",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit >= 40 + variable.fury_gen * 0.5 & ! buff.inertia_trigger.up & ( ! talent.blind_fury.enabled || cooldown.eye_beam.remains > 5 )",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > 10",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.up",
["action"] = "chaos_strike",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & talent.furious_throws.enabled & talent.soulscar.enabled & ( ! talent.screaming_brutality.enabled || charges = 2 || full_recharge_time < cooldown.blade_dance.remains )",
["action"] = "throw_glaive",
},
{
["enabled"] = true,
["criteria"] = "cooldown.eye_beam.remains > gcd.max * 4 || fury >= 70 - variable.fury_gen * gcd.max - talent.blind_fury.rank * 15",
["action"] = "chaos_strike",
},
{
["enabled"] = true,
["criteria"] = "! talent.a_fire_inside.enabled & fury < 40",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > full_recharge_time || active_enemies > desired_targets & active_enemies > 2",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.out_of_range.down & debuff.essence_break.down & ( ! talent.fel_barrage.enabled || cooldown.fel_barrage.remains > 25 || active_enemies = 1 & ! raid_event.adds.exists )",
["action"] = "sigil_of_flame",
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.down & recharge_time < cooldown.eye_beam.remains & debuff.essence_break.down & ( cooldown.eye_beam.remains > 8 || charges_fractional > 1.01 ) & buff.out_of_range.down & active_enemies > 1 & ! talent.furious_throws.enabled",
["action"] = "throw_glaive",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.down & recharge_time < cooldown.eye_beam.remains & debuff.essence_break.down & ( cooldown.eye_beam.remains > 8 || charges_fractional > 1.01 ) & active_enemies > 1",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "buff.out_of_range.down & debuff.essence_break.down & fury < 100",
["action"] = "arcane_torrent",
},
},
["ar_meta"] = {
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains < gcd.max || debuff.essence_break.up || cooldown.metamorphosis.up & ! talent.restless_hunter.enabled",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "talent.initiative.enabled & ( cooldown.metamorphosis.remains & ( cooldown.essence_break.remains <= 0.6 || cooldown.essence_break.remains > 10 || ! talent.essence_break.enabled ) || talent.restless_hunter.enabled ) & cooldown.eye_beam.remains & ( ! talent.inertia.enabled & buff.unbound_chaos.down || buff.inertia_trigger.down )",
["action"] = "vengeful_retreat",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & buff.inertia_trigger.up & cooldown.essence_break.remains <= 1 & cooldown.blade_dance.remains <= gcd.max * 2 & cooldown.metamorphosis.remains <= gcd.max * 3",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "fury >= 30 & talent.restless_hunter.enabled & cooldown.metamorphosis.up & ( talent.inertia.enabled & buff.inertia.up || ! talent.inertia.enabled ) & cooldown.blade_dance.remains <= gcd.max",
["action"] = "essence_break",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains < gcd.max || debuff.essence_break.remains & debuff.essence_break.remains < 0.5 & cooldown.blade_dance.remains || buff.inner_demon.up & cooldown.essence_break.up & cooldown.metamorphosis.up",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "buff.inertia_trigger.up & talent.inertia.enabled & cooldown.metamorphosis.remains & ( cooldown.eye_beam.remains <= 0.5 || cooldown.essence_break.remains <= 0.5 || cooldown.blade_dance.remains <= 5.5 || buff.initiative.remains < gcd.remains )",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "buff.inertia_trigger.up & talent.inertia.enabled & cooldown.metamorphosis.remains & active_enemies > 2",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "buff.inertia_trigger.up & talent.inertia.enabled & cooldown.blade_dance.remains < gcd.max * 3 & cooldown.metamorphosis.remains & active_enemies > 2",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "charges = 2 & active_enemies > 1 & debuff.essence_break.down",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.inner_demon.up & ( cooldown.eye_beam.remains < gcd.max * 3 & cooldown.blade_dance.remains || cooldown.metamorphosis.remains < gcd.max * 3 )",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "time < 20 & buff.thrill_of_the_fight_damage.remains > gcd.max * 4 & buff.metamorphosis.remains >= gcd.max * 2 & cooldown.metamorphosis.up & cooldown.death_sweep.remains <= gcd.max & buff.inertia.up",
["action"] = "essence_break",
},
{
["enabled"] = true,
["criteria"] = "fury > 20 & ( cooldown.blade_dance.remains < gcd.max * 3 || cooldown.blade_dance.up ) & ( buff.unbound_chaos.down & ! talent.inertia.enabled || buff.inertia.up ) & buff.out_of_range.remains < gcd.max & ( ! talent.shattered_destiny.enabled || cooldown.eye_beam.remains > 4 ) || boss & fight_remains < 10",
["action"] = "essence_break",
},
{
["action"] = "death_sweep",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & buff.inner_demon.down",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & ( cooldown.blade_dance.remains > gcd.max * 2 || fury > 60 ) & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > 10 )",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & debuff.essence_break.down",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "talent.soulscar.enabled & talent.furious_throws.enabled & active_enemies > 2 & debuff.essence_break.down & ( charges = 2 || full_recharge_time < cooldown.blade_dance.remains )",
["action"] = "throw_glaive",
},
{
["enabled"] = true,
["criteria"] = "cooldown.blade_dance.remains || fury > 60 || soul_fragments.total > 0 || buff.metamorphosis.remains < 5 & cooldown.felblade.up || debuff.essence_break.up",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains > 5 & buff.out_of_range.down & fury.deficit >= 30 + variable.fury_gen * gcd.max + active_enemies * talent.flames_of_fury.rank",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit >= 40 + variable.fury_gen * 0.5 & ! buff.inertia_trigger.up",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & buff.out_of_range.down & fury.deficit >= 30 + variable.fury_gen * gcd.max + active_enemies * talent.flames_of_fury.rank",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "buff.out_of_range.down & recharge_time < ( cooldown.eye_beam.remains <? buff.metamorphosis.remains ) & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > full_recharge_time )",
["action"] = "immolation_aura",
},
{
["action"] = "annihilation",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.down & recharge_time < cooldown.eye_beam.remains & debuff.essence_break.down & ( cooldown.eye_beam.remains > 8 || charges_fractional > 1.01 ) & buff.out_of_range.down & active_enemies > 1 & ! talent.furious_throws.enabled",
["action"] = "throw_glaive",
},
{
["enabled"] = true,
["criteria"] = "recharge_time < cooldown.eye_beam.remains & debuff.essence_break.down & ( cooldown.eye_beam.remains > 8 || charges_fractional > 1.01 ) & buff.out_of_range.down & active_enemies > 1",
["action"] = "fel_rush",
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "disrupt",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.demon_blades.enabled * ( 1 / ( 2.6 * attack_haste ) * ( ( talent.demonsurge.enabled & buff.metamorphosis.up ) * 3 + 12 ) ) + buff.immolation_aura.stack * 6 + buff.tactical_retreat.up * 10",
["var_name"] = "fury_gen",
["description"] = "Fury generated per second",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.improvised_seaforium_pacemaker & trinket.t1.stat.crit.up || trinket.t2.is.improvised_seaforium_pacemaker & trinket.t2.stat.crit.up || ! equipped.improvised_seaforium_pacemaker",
["var_name"] = "trinket_pacemaker_proc",
["description"] = "Special check for Seaforium Pacemaker buff being active for Magnet Synching",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( buff.initiative.up || ! talent.initiative.enabled || buff.necessary_sacrifice.stack >= 5 & buff.necessary_sacrifice.remains < 0.5 + cooldown.vengeful_retreat.remains ) & ( buff.necessary_sacrifice.up || ! set_bonus.thewarwithin_season_2_4pc || cooldown.eye_beam.remains + 2 > buff.initiative.remains )",
["var_name"] = "tier33_4piece",
["description"] = "Tier 33 tier set check for trinket lineups withs Necessary Sacrifice",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( buff.initiative.up || ! talent.initiative.enabled ) & ( buff.necessary_sacrifice.up || ! set_bonus.thewarwithin_season_2_4pc ) & variable.trinket_pacemaker_proc & ( trinket.t1.is.junkmaestros_mega_magnet & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains > 20 ) ) || ( trinket.t2.is.junkmaestros_mega_magnet & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains > 20 ) )",
["var_name"] = "tier33_4piece_magnet",
["description"] = "Tier 33 tier set special case check for magnet due to being able to hold",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! equipped.signet_of_the_priory & ! equipped.house_of_cards || ( trinket.t1.is.house_of_cards || trinket.t1.is.signet_of_the_priory ) & trinket.t1.cooldown.remains > 20 || ( trinket.t2.is.house_of_cards || trinket.t2.is.signet_of_the_priory ) & trinket.t2.cooldown.remains > 20",
["var_name"] = "double_on_use",
["description"] = "Double on use trinket holding for using a stat cooldown trinket and an on use damage trinket",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "false",
["var_name"] = "opened",
["description"] = "Use to determine if we traversed either of the opener lists.",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Separate actionlists for each hero tree",
["strict"] = 1,
["criteria"] = "hero_tree.aldrachi_reaver",
["list_name"] = "ar",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! hero_tree.aldrachi_reaver",
["list_name"] = "fs",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_cooldown & trinket.t1.has_stat.any_dps & ! trinket.t1.is.improvised_seaforium_pacemaker",
["var_name"] = "trinket1_steroids",
["description"] = "Variables for on use trinkets and filtering out Seaforium",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_cooldown & trinket.t2.has_stat.any_dps & ! trinket.t2.is.improvised_seaforium_pacemaker",
["var_name"] = "trinket2_steroids",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.mad_queens_mandate || trinket.t1.is.junkmaestros_mega_magnet || trinket.t1.is.geargrinders_spare_keys || trinket.t1.is.ravenous_honey_buzzer || trinket.t1.is.grim_codex || trinket.t1.is.ratfang_toxin || trinket.t1.is.blastmaster3000 || trinket.t1.is.cursed_stone_idol || trinket.t1.is.perfidious_projector",
["var_name"] = "trinket1_crit",
["description"] = "Blacklist for trinkets to hold trinket cooldowns for Initiative and Necessary Strike line-up outside standard trinket implementation  TODO fix to work off generic conditions instead of specifying individual trinkets for futureproof",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.mad_queens_mandate || trinket.t2.is.junkmaestros_mega_magnet || trinket.t2.is.geargrinders_spare_keys || trinket.t2.is.ravenous_honey_buzzer || trinket.t2.is.grim_codex || trinket.t2.is.ratfang_toxin || trinket.t2.is.blastmaster3000 || trinket.t2.is.cursed_stone_idol || trinket.t2.is.perfidious_projector",
["var_name"] = "trinket2_crit",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "set_bonus.thewarwithin_season_3_2pc",
["var_name"] = "fs_tier34_2piece",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "rg_ds",
["default"] = "0",
},
{
["action"] = "sigil_of_flame",
["enabled"] = true,
},
{
["action"] = "immolation_aura",
["enabled"] = true,
},
},
["ar_opener"] = {
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "the_hunt",
["enabled"] = true,
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "talent.initiative.enabled & time > 4 & buff.metamorphosis.up & ( ! talent.inertia.enabled || buff.inertia_trigger.down ) & buff.inner_demon.down & cooldown.blade_dance.remains & gcd.remains < 0.1",
["action"] = "vengeful_retreat",
},
{
["enabled"] = true,
["criteria"] = "! talent.chaotic_transformation.enabled & cooldown.metamorphosis.up & buff.glaive_flurry.up",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "buff.rending_strike.up & buff.thrill_of_the_fight_damage.down",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "! talent.inertia.enabled & talent.unbound_chaos.enabled & buff.unbound_chaos.up & buff.initiative.up & debuff.essence_break.down & active_enemies <= 2",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "! talent.inertia.enabled & talent.unbound_chaos.enabled & buff.unbound_chaos.up & buff.initiative.up & debuff.essence_break.down & active_enemies > 2",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "talent.inner_demon.enabled & buff.inner_demon.up & ( ! talent.essence_break.enabled || cooldown.essence_break.up )",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "( buff.inertia.up || ! talent.inertia.enabled ) & buff.metamorphosis.up & cooldown.blade_dance.remains <= gcd.max & debuff.reavers_mark.up",
["action"] = "essence_break",
},
{
["enabled"] = true,
["criteria"] = "buff.inertia_trigger.up & talent.inertia.enabled & talent.restless_hunter.enabled & cooldown.essence_break.up & cooldown.metamorphosis.up & buff.metamorphosis.up & cooldown.blade_dance.remains <= gcd.max",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & buff.inertia_trigger.up & ( buff.inertia.down & buff.metamorphosis.up ) & debuff.essence_break.down & active_enemies <= 2",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & buff.inertia_trigger.up & ( buff.inertia.down & buff.metamorphosis.up ) & debuff.essence_break.down & ( cooldown.felblade.remains || active_enemies > 2 )",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & buff.inertia_trigger.up & buff.metamorphosis.up & cooldown.metamorphosis.remains & debuff.essence_break.down",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "( buff.metamorphosis.up & hero_tree.aldrachi_reaver & talent.shattered_destiny.enabled || ! talent.shattered_destiny.enabled & hero_tree.aldrachi_reaver || hero_tree.felscarred ) & ( ! talent.initiative.enabled || talent.inertia.enabled || buff.initiative.up || time > 5 )",
["action"] = "the_hunt",
},
{
["enabled"] = true,
["criteria"] = "fury < 40 & buff.inertia_trigger.down & debuff.essence_break.down",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "debuff.reavers_mark.down & debuff.essence_break.down",
["action"] = "reavers_glaive",
},
{
["enabled"] = true,
["criteria"] = "buff.rending_strike.up & active_enemies > 2",
["action"] = "chaos_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.glaive_flurry.up & active_enemies > 2",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "talent.a_fire_inside.enabled & talent.burning_wound.enabled & buff.metamorphosis.down",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.up & cooldown.blade_dance.remains > gcd.max * 2 & buff.inner_demon.down & ( ! talent.restless_hunter.enabled || prev_gcd.1.death_sweep ) & ( cooldown.essence_break.remains || ! talent.essence_break.enabled || ! talent.chaotic_transformation.enabled )",
["action"] = "metamorphosis",
},
{
["enabled"] = true,
["criteria"] = "debuff.reavers_mark.up & ( cooldown.eye_beam.remains & cooldown.metamorphosis.remains ) & debuff.essence_break.down",
["action"] = "sigil_of_spite",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.down || debuff.essence_break.down & buff.inner_demon.down & ( cooldown.blade_dance.remains || talent.essence_break.enabled & cooldown.essence_break.up )",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "cooldown.blade_dance.remains < gcd.max & ! hero_tree.felscarred & ! talent.shattered_destiny.enabled & buff.metamorphosis.up || cooldown.eye_beam.remains & cooldown.metamorphosis.remains",
["action"] = "essence_break",
},
{
["action"] = "death_sweep",
["enabled"] = true,
},
{
["action"] = "annihilation",
["enabled"] = true,
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "true",
["var_name"] = "opened",
},
},
["ar_fel_barrage"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.felblade.remains < gcd.max || cooldown.sigil_of_flame.remains < gcd.max",
["var_name"] = "generator_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "gcd.max * 32",
["var_name"] = "gcd_drain",
},
{
["enabled"] = true,
["criteria"] = "buff.inner_demon.up",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "( buff.fel_barrage.down || fury > 45 & talent.blind_fury.enabled ) & ( active_enemies > 1 & raid_event.adds.up || raid_event.adds.in > 40 - buff.cycle_of_hatred.stack * 5 )",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down & buff.metamorphosis.up",
["action"] = "essence_break",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies > 2 || buff.fel_barrage.up ) & ( cooldown.eye_beam.remains > recharge_time + 3 )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down & active_enemies > 1",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "fury > 100 & ( raid_event.adds.in > 90 || raid_event.adds.in < gcd.max || raid_event.adds.remains > 4 & active_enemies > 2 )",
["action"] = "fel_barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.inertia_trigger.up & buff.fel_barrage.up",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit > 40 & buff.fel_barrage.up",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.up & fury.deficit > 40",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 35 > 0 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 30 > 0 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 35 > 0 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit > 40 & buff.fel_barrage.up",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "fury > 40 & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > 80 )",
["action"] = "the_hunt",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 40 > 20 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 40 > 20 & ( cooldown.fel_barrage.remains & cooldown.fel_barrage.remains < 10 & fury > 100 || buff.fel_barrage.up & ( buff.fel_barrage.remains * variable.fury_gen - buff.fel_barrage.remains * 32 ) > 0 )",
["action"] = "chaos_strike",
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
},
["fs_meta"] = {
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains < gcd.max || debuff.essence_break.up & ( buff.immolation_aura.down || ! variable.fs_tier34_2piece ) & ( buff.demon_soul_tww3.down || ! set_bonus.thewarwithin_season_3_4pc ) || prev_gcd.1.metamorphosis & ! variable.fs_tier34_2piece || buff.demonsurge_death_sweep.up & variable.fs_tier34_2piece & buff.demonsurge.remains < 5 || ( variable.fs_tier34_2piece & cooldown.metamorphosis.up & talent.inertia.enabled ) || active_enemies >= 3 & buff.demonsurge_death_sweep.up & ( ! talent.inertia.enabled || buff.inertia_trigger.down & cooldown.vengeful_retreat.remains || buff.inertia.up ) & ( ! talent.essence_break.enabled || debuff.essence_break.up || cooldown.essence_break.remains >= 5 )",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "buff.demonsurge_hardcast.up & talent.student_of_suffering.enabled & debuff.essence_break.down & ( talent.student_of_suffering.enabled & ( ( talent.essence_break.enabled & cooldown.essence_break.remains > 30 - gcd.max || cooldown.essence_break.remains <= gcd.max + talent.inertia.enabled & ( cooldown.vengeful_retreat.remains <= gcd.max || buff.initiative.up ) + gcd.max * ( cooldown.eye_beam.remains <= gcd.max ) ) || ( ! talent.essence_break.enabled & ( cooldown.eye_beam.remains >= 10 || cooldown.eye_beam.remains <= gcd.max ) ) ) )",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "talent.initiative.enabled & ( gcd.remains < 0.3 || talent.inertia.enabled & cooldown.eye_beam.remains > gcd.remains & ( buff.cycle_of_hatred.stack = 2 || buff.cycle_of_hatred.stack = 3 ) ) & ( cooldown.metamorphosis.remains & ( buff.demonsurge_annihilation.down & buff.demonsurge_death_sweep.down ) || talent.restless_hunter.enabled & buff.demonsurge_annihilation.down ) & ( ! talent.inertia.enabled & buff.unbound_chaos.down || buff.inertia_trigger.down ) & ( ! talent.essence_break.enabled || cooldown.essence_break.remains > 18 || cooldown.essence_break.remains <= gcd.remains + talent.inertia.enabled * 1.5 & ( ! talent.student_of_suffering.enabled || ( buff.student_of_suffering.up || cooldown.sigil_of_flame.remains > 5 ) ) ) & ( cooldown.eye_beam.remains > 5 || cooldown.eye_beam.remains <= gcd.remains || cooldown.eye_beam.up ) || cooldown.metamorphosis.up & buff.demonsurge.stack > 1 & talent.initiative.enabled & ! talent.inertia.enabled & gcd.remains < 0.3",
["action"] = "vengeful_retreat",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "variable.fs_tier34_2piece & buff.inertia_trigger.down & talent.initiative.enabled",
["action"] = "vengeful_retreat",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & variable.fs_tier34_2piece & buff.inertia_trigger.up",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "( talent.essence_break.enabled & buff.demonsurge_death_sweep.up & ( buff.inertia.up & ( cooldown.essence_break.remains > buff.inertia.remains || ! talent.essence_break.enabled ) || cooldown.metamorphosis.remains <= 5 & buff.inertia_trigger.down || buff.inertia.up & buff.demonsurge_abyssal_gaze.up ) || talent.inertia.enabled & buff.inertia_trigger.down & cooldown.vengeful_retreat.remains >= gcd.max & buff.inertia.down ) & ( ! variable.fs_tier34_2piece || ! talent.inertia.enabled || active_enemies >= 3 & debuff.essence_break.up )",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains < gcd.max & cooldown.blade_dance.remains < buff.metamorphosis.remains || debuff.essence_break.remains & debuff.essence_break.remains < 0.5 || talent.restless_hunter.enabled & ( buff.demonsurge_annihilation.up || hero_tree.aldrachi_reaver & buff.inner_demon.up ) & cooldown.essence_break.up & cooldown.metamorphosis.up",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "( buff.demonsurge_annihilation.up & talent.restless_hunter.enabled ) & ( cooldown.eye_beam.remains < gcd.max * 3 & cooldown.blade_dance.remains || cooldown.metamorphosis.remains < gcd.max * 3 )",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "buff.inertia_trigger.up & talent.inertia.enabled & debuff.essence_break.down & cooldown.metamorphosis.remains & cooldown.eye_beam.remains & ( cooldown.blade_dance.remains <= 5.5 & ( talent.essence_break.enabled & cooldown.essence_break.remains <= 0.5 || ! talent.essence_break.enabled || cooldown.essence_break.remains >= buff.inertia_trigger.remains & cooldown.blade_dance.remains <= 4.5 & ( cooldown.blade_dance.remains || cooldown.blade_dance.remains <= 0.5 ) ) || buff.metamorphosis.remains <= 5.5 + talent.shattered_destiny.enabled * 2 )",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "buff.inertia_trigger.up & talent.inertia.enabled & debuff.essence_break.down & cooldown.metamorphosis.remains & cooldown.eye_beam.remains & ( cooldown.felblade.remains & cooldown.essence_break.remains <= 0.6 || active_enemies > 2 )",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies > 1 || talent.a_fire_inside.enabled & ( talent.isolated_prey.enabled || variable.fs_tier34_2piece ) ) & debuff.essence_break.down & ( active_enemies >= 3 || full_recharge_time < gcd.max * 2 || variable.fs_tier34_2piece & buff.immolation_aura.remains <= gcd.max || variable.fs_tier34_2piece & buff.immolation_aura.down )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.inner_demon.up & cooldown.blade_dance.remains & ( cooldown.eye_beam.remains < gcd.max * 3 || cooldown.metamorphosis.remains < gcd.max * 3 )",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "fury > 20 & ( cooldown.metamorphosis.remains > 10 || cooldown.blade_dance.remains < gcd.max * 2 & ! variable.fs_tier34_2piece || variable.fs_tier34_2piece & buff.immolation_aura.up ) & ( buff.inertia_trigger.down || buff.inertia.up & buff.inertia.remains >= gcd.max * 3 || ! talent.inertia.enabled || active_enemies > desired_targets & raid_event.adds.remains < cooldown.vengeful_retreat.remains + 5 || buff.metamorphosis.remains <= cooldown.metamorphosis.remains ) & buff.out_of_range.remains < gcd.max & ( ! talent.shattered_destiny.enabled || cooldown.eye_beam.remains > 4 ) & ( active_enemies > 1 || cooldown.metamorphosis.remains > 5 & cooldown.eye_beam.remains ) & ( ! buff.cycle_of_hatred.stack = 3 || buff.initiative.up || ! talent.initiative.enabled || ! talent.cycle_of_hatred.enabled ) || fight_remains < 5",
["action"] = "essence_break",
},
{
["enabled"] = true,
["criteria"] = "buff.demonsurge_hardcast.up & buff.demonsurge_death_sweep.down & debuff.essence_break.down & ( cooldown.eye_beam.remains >= 20 || cooldown.eye_beam.remains <= gcd.max ) & ( ! talent.student_of_suffering.enabled || buff.demonsurge_sigil_of_doom.up )",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "! variable.fs_tier34_2piece & buff.demonsurge.up & debuff.essence_break.down & buff.demonsurge_consuming_fire.up & cooldown.blade_dance.remains >= gcd.max & cooldown.eye_beam.remains >= gcd.max & fury.deficit > 10 + variable.fury_gen",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & buff.inner_demon.down & ( buff.metamorphosis.remains >= 7 || ! set_bonus.thewarwithin_season_3_4pc )",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "buff.demonsurge_hardcast.up & debuff.essence_break.down & buff.inner_demon.down & ( buff.cycle_of_hatred.stack < 4 || cooldown.essence_break.remains >= 20 - gcd.max * talent.student_of_suffering.enabled || cooldown.sigil_of_flame.remains & talent.student_of_suffering.enabled || cooldown.essence_break.remains <= gcd.max || ! talent.essence_break.enabled ) & ( buff.metamorphosis.remains >= 7 || ! set_bonus.thewarwithin_season_3_4pc )",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.essence_break.remains >= gcd.max * 2 + talent.student_of_suffering.enabled * gcd.max || debuff.essence_break.up || ! talent.essence_break.enabled ) & ( buff.immolation_aura.down || ! variable.fs_tier34_2piece || talent.screaming_brutality.enabled & talent.soulscar.enabled ) & ( buff.demon_soul_tww3.down || ! set_bonus.thewarwithin_season_3_4pc || active_enemies >= 3 || talent.screaming_brutality.enabled & talent.soulscar.enabled )",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & ( cooldown.blade_dance.remains > gcd.max * 2 || fury > 60 ) & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > 10 )",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & debuff.essence_break.down",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "cooldown.blade_dance.remains || fury > 60 || soul_fragments.total > 0 || buff.metamorphosis.remains < 5",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains > 5 & buff.out_of_range.down & ! talent.student_of_suffering.enabled",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "! variable.fs_tier34_2piece & buff.out_of_range.down & recharge_time < ( cooldown.eye_beam.remains <? buff.metamorphosis.remains ) & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > full_recharge_time )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "( buff.out_of_range.down || fury.deficit > 40 + variable.fury_gen * ( 0.5 / gcd.max ) ) & ! buff.inertia_trigger.up",
["action"] = "felblade",
},
{
["action"] = "annihilation",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.down & recharge_time < cooldown.eye_beam.remains & debuff.essence_break.down & ( cooldown.eye_beam.remains > 8 || charges_fractional > 1.01 ) & buff.out_of_range.down & active_enemies > 1 & ! talent.furious_throws.enabled",
["action"] = "throw_glaive",
},
{
["enabled"] = true,
["criteria"] = "recharge_time < cooldown.eye_beam.remains & debuff.essence_break.down & ( cooldown.eye_beam.remains > 8 || charges_fractional > 1.01 ) & buff.out_of_range.down & active_enemies > 1",
["action"] = "fel_rush",
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
},
["ar_cooldown"] = {
{
["enabled"] = true,
["criteria"] = "( ( ( cooldown.eye_beam.remains >= 20 || talent.cycle_of_hatred.enabled & cooldown.eye_beam.remains >= 13 ) & ( ! talent.essence_break.enabled || debuff.essence_break.up ) & buff.fel_barrage.down & ( raid_event.adds.in > 40 || ( raid_event.adds.remains > 8 || ! talent.fel_barrage.enabled ) & active_enemies > desired_targets || ! talent.chaotic_transformation.enabled || boss & fight_remains < 30 ) ) & buff.inner_demon.down & ( ! talent.restless_hunter.enabled & cooldown.blade_dance.remains > gcd.max * 3 || prev_gcd.1.death_sweep || prev_gcd.2.death_sweep || prev_gcd.3.death_sweep ) ) & ! talent.inertia.enabled & ! talent.essence_break.enabled & ( variable.opened || time > 15 )",
["action"] = "metamorphosis",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.blade_dance.remains & ( ( prev_gcd.1.death_sweep || prev_gcd.2.death_sweep || prev_gcd.3.death_sweep || buff.metamorphosis.up & buff.metamorphosis.remains < gcd.max ) & cooldown.eye_beam.remains & buff.fel_barrage.down & ( raid_event.adds.in > 40 || ( raid_event.adds.remains > 8 || ! talent.fel_barrage.enabled ) & buff.fel_barrage.down & active_enemies > desired_targets ) || ! talent.chaotic_transformation.enabled || boss & fight_remains < 30 ) & ( buff.inner_demon.down & ( buff.rending_strike.down || ! talent.restless_hunter.enabled || prev_gcd.1.death_sweep ) ) ) & ( talent.inertia.enabled || talent.essence_break.enabled ) & ( variable.opened || time > 15 )",
["action"] = "metamorphosis",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 35 || ( buff.metamorphosis.up || debuff.essence_break.up ) & time > 10",
["action"] = "potion",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "equipped.mad_queens_mandate || equipped.treacherous_transmitter || equipped.skardyns_grace || equipped.signet_of_the_priory || equipped.cursed_stone_idol",
["var_name"] = "special_trinket",
},
{
["enabled"] = true,
["name"] = "mad_queens_mandate",
["action"] = "mad_queens_mandate",
["criteria"] = "( ( ! talent.initiative.enabled || buff.initiative.up || time > 5 ) & ( buff.metamorphosis.remains > 5 || buff.metamorphosis.down ) & ( trinket.t1.is.mad_queens_mandate & ( trinket.t2.cooldown.duration < 10 || trinket.t2.cooldown.remains > 10 || ! trinket.t2.has_use_buff ) || trinket.t2.is.mad_queens_mandate & ( trinket.t1.cooldown.duration < 10 || trinket.t1.cooldown.remains > 10 || ! trinket.t1.has_use_buff ) ) & fight_remains > 120 || boss & fight_remains < 10 & fight_remains < buff.metamorphosis.remains ) & debuff.essence_break.down || boss & fight_remains < 5",
},
{
["enabled"] = true,
["name"] = "cursed_stone_idol",
["action"] = "cursed_stone_idol",
["criteria"] = "( ( buff.metamorphosis.remains > 5 || buff.metamorphosis.down ) & ( ! buff.inertia.up || ! talent.inertia.enabled ) & ( debuff.essence_break.down || ! talent.essence_break.enabled ) & ( trinket.t1.is.cursed_stone_idol & ( trinket.t2.cooldown.duration < 120 || trinket.t2.cooldown.remains > 10 || ! trinket.t2.has_use_buff || trinket.t2.is.signet_of_the_priory || trinket.t2.is.unyielding_netherprism ) || trinket.t2.is.cursed_stone_idol & ( trinket.t1.cooldown.duration < 120 || trinket.t1.cooldown.remains > 10 || ! trinket.t1.has_use_buff || trinket.t1.is.signet_of_the_priory || trinket.t1.is.unyielding_netherprism ) ) || boss & fight_remains < 10 & fight_remains < buff.metamorphosis.remains ) || boss & fight_remains < 5",
},
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
["criteria"] = "! equipped.mad_queens_mandate || equipped.mad_queens_mandate & ( trinket.t1.is.mad_queens_mandate & trinket.t1.cooldown.remains > fight_remains || trinket.t2.is.mad_queens_mandate & trinket.t2.cooldown.remains > fight_remains ) || fight_remains > 25",
},
{
["enabled"] = true,
["name"] = "skardyns_grace",
["action"] = "skardyns_grace",
["criteria"] = "( ! equipped.mad_queens_mandate || fight_remains > 25 || trinket.t2.is.skardyns_grace & trinket.t1.cooldown.remains > fight_remains || trinket.t1.is.skardyns_grace & trinket.t2.cooldown.remains > fight_remains || trinket.t1.cooldown.duration < 10 || trinket.t2.cooldown.duration < 10 ) & buff.metamorphosis.up",
},
{
["enabled"] = true,
["name"] = "house_of_cards",
["action"] = "house_of_cards",
["criteria"] = "( cooldown.eye_beam.remains < gcd.max || buff.metamorphosis.up ) & ( raid_event.adds.remains > 8 || raid_event.adds.in > 15 ) || boss & fight_remains < 25",
},
{
["enabled"] = true,
["name"] = "signet_of_the_priory",
["action"] = "signet_of_the_priory",
["criteria"] = "time < 20 & ( ! talent.inertia.enabled || buff.inertia.up ) & ! equipped.cursed_stone_idol || ( cooldown.eye_beam.remains < gcd.max || buff.metamorphosis.remains > 8 || cooldown.metamorphosis.up & buff.metamorphosis.up ) & ( raid_event.adds.remains > 15 || raid_event.adds.in > 115 ) & ( ! equipped.cursed_stone_idol || ( trinket.t1.is.signet_of_the_priory & trinket.t2.cooldown.remains > 20 || trinket.t2.is.signet_of_the_priory & trinket.t1.cooldown.remains > 20 ) ) || boss & fight_remains < 25",
},
{
["enabled"] = true,
["name"] = "perfidious_projector",
["action"] = "perfidious_projector",
["criteria"] = "variable.tier33_4piece & variable.double_on_use || boss & fight_remains < 15",
},
{
["enabled"] = true,
["name"] = "ratfang_toxin",
["action"] = "ratfang_toxin",
["criteria"] = "variable.tier33_4piece & variable.double_on_use || boss & fight_remains < 5",
},
{
["enabled"] = true,
["name"] = "geargrinders_spare_keys",
["action"] = "geargrinders_spare_keys",
["criteria"] = "variable.tier33_4piece & variable.double_on_use || boss & fight_remains < 10",
},
{
["enabled"] = true,
["name"] = "grim_codex",
["action"] = "grim_codex",
["criteria"] = "variable.tier33_4piece & variable.double_on_use || boss & fight_remains < 10",
},
{
["enabled"] = true,
["name"] = "ravenous_honey_buzzer",
["action"] = "ravenous_honey_buzzer",
["criteria"] = "( variable.tier33_4piece & ( buff.inertia.down & ( cooldown.essence_break.remains & debuff.essence_break.down || ! talent.essence_break.enabled ) ) & ( trinket.t1.is.ravenous_honey_buzzer & ( trinket.t2.cooldown.duration < 10 || trinket.t2.cooldown.remains > 10 || ! trinket.t2.has_use_buff ) || trinket.t2.is.ravenous_honey_buzzer & ( trinket.t1.cooldown.duration < 10 || trinket.t1.cooldown.remains > 10 || ! trinket.t1.has_use_buff ) ) & fight_remains > 120 || boss & fight_remains < 10 & fight_remains < buff.metamorphosis.remains ) || boss & fight_remains < 5",
},
{
["enabled"] = true,
["name"] = "blastmaster3000",
["action"] = "blastmaster3000",
["criteria"] = "variable.tier33_4piece & variable.double_on_use || boss & fight_remains < 10",
},
{
["enabled"] = true,
["name"] = "junkmaestros_mega_magnet",
["action"] = "junkmaestros_mega_magnet",
["criteria"] = "variable.tier33_4piece_magnet & variable.double_on_use & time > 10 || boss & fight_remains < 5",
},
{
["enabled"] = true,
["name"] = "unyielding_netherprism",
["action"] = "unyielding_netherprism",
["criteria"] = "( ( cooldown.eye_beam.remains < gcd.max & ( active_enemies > 1 || talent.looks_can_kill.enabled ) & ( ( trinket.t1.is.unyielding_netherprism & trinket.t2.cooldown.duration >= 90 || cooldown.metamorphosis.remains <= 5 ) || ( trinket.t2.is.unyielding_netherprism & trinket.t1.cooldown.duration >= 90 || cooldown.metamorphosis.remains <= 5 ) ) || ( buff.metamorphosis.up & ( ( trinket.t1.is.unyielding_netherprism & ( trinket.t2.cooldown.duration >= 90 || ! trinket.t2.has_cooldown ) ) || ( trinket.t2.is.unyielding_netherprism & ( trinket.t1.cooldown.duration >= 90 || ! trinket.t1.has_cooldown ) ) & ! equipped.improvised_seaforium_pacemaker ) ) ) & ( raid_event.adds.in > 105 || raid_event.adds.remains > 8 ) || fight_remains < 25 ) & ( ( trinket.t1.is.unyielding_netherprism & ( ! variable.trinket2_steroids & ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains > 20 ) || trinket.t2.is.unyielding_netherprism & ( ! variable.trinket1_steroids & ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains > 20 ) ) || equipped.improvised_seaforium_pacemaker )",
},
{
["enabled"] = true,
["criteria"] = "( ( cooldown.eye_beam.remains < gcd.max & active_enemies > 1 || buff.metamorphosis.up & ( cooldown.metamorphosis.remains < buff.metamorphosis.remains || cooldown.metamorphosis.remains >= 20 || cooldown.metamorphosis.up ) ) & ( raid_event.adds.in > trinket.t1.cooldown.duration - 15 || raid_event.adds.remains > 8 ) || ! trinket.t1.has_use_buff || fight_remains < 25 ) & ! trinket.t1.is.mister_locknstalk & ! variable.trinket1_crit & ! trinket.t1.is.skardyns_grace & ! trinket.t1.is.treacherous_transmitter & ! trinket.t1.is.unyielding_netherprism & ! trinket.t1.is.signet_of_the_priory & ( ! variable.special_trinket || trinket.t2.cooldown.remains > 20 || ( trinket.t1.cooldown.duration > 90 & trinket.t1.has_use_buff ) )",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "( ( cooldown.eye_beam.remains < gcd.max & active_enemies > 1 || buff.metamorphosis.up & ( cooldown.metamorphosis.remains < buff.metamorphosis.remains || cooldown.metamorphosis.remains >= 20 || cooldown.metamorphosis.up ) ) & ( raid_event.adds.in > trinket.t2.cooldown.duration - 15 || raid_event.adds.remains > 8 ) || ! trinket.t2.has_use_buff || fight_remains < 25 ) & ! trinket.t2.is.mister_locknstalk & ! variable.trinket2_crit & ! trinket.t2.is.skardyns_grace & ! trinket.t2.is.treacherous_transmitter & ! trinket.t2.is.unyielding_netherprism & ! trinket.t2.is.signet_of_the_priory & ( ! variable.special_trinket || trinket.t1.cooldown.remains > 20 || ( trinket.t2.cooldown.duration > 90 & trinket.t2.has_use_buff ) )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > 45 ) & ( debuff.reavers_mark.up || raid_event.adds.remains >= 15 ) & buff.reavers_glaive.down & ( buff.metamorphosis.remains > 5 || buff.metamorphosis.down ) & ( ! talent.initiative.enabled || buff.initiative.up || time > 5 ) & time > 5 & ( ! talent.inertia.enabled & buff.unbound_chaos.down || buff.inertia_trigger.down )",
["action"] = "the_hunt",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & ( debuff.reavers_mark.remains >= 2 - talent.quickened_sigils.enabled ) & cooldown.blade_dance.remains & time > 15",
["action"] = "sigil_of_spite",
},
},
},
},
["Holy Paladin"] = {
["builtIn"] = true,
["date"] = 20240908,
["spec"] = 65,
["desc"] = "Healer priorities are DPS-focused only\n\n2024-07-30, 09-08: The War Within",
["lists"] = {
["spenders"] = {
{
["enabled"] = true,
["criteria"] = "solo & ( health.pct < 70 || ! equipped.shield ) & buff.shining_righteousness_ready.up || buff.empyrean_legacy.up",
["action"] = "word_of_glory",
},
{
["enabled"] = true,
["criteria"] = "group & buff.shining_righteousness_ready.up",
["action"] = "light_of_dawn",
},
{
["action"] = "shield_of_the_righteous",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "rebuke",
["enabled"] = true,
},
{
["action"] = "avenging_wrath",
["enabled"] = true,
},
{
["action"] = "avenging_crusader",
["enabled"] = true,
},
{
["action"] = "holy_armaments",
["enabled"] = true,
},
{
["action"] = "blessing_of_summer",
["enabled"] = true,
},
{
["action"] = "blessing_of_autumn",
["enabled"] = true,
},
{
["action"] = "blessing_of_winter",
["enabled"] = true,
},
{
["action"] = "blessing_of_spring",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up || buff.avenging_wrath.up || buff.avenging_crusader.up",
["action"] = "fireblood",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! talent.avenging_crusader.enabled || cooldown.avenging_crusader.remains > gcd.max || holy_power.deficit = 0",
["list_name"] = "spenders",
},
{
["action"] = "divine_toll",
["enabled"] = true,
},
{
["action"] = "holy_prism",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "group",
["action"] = "beacon_of_virtue",
},
{
["enabled"] = true,
["criteria"] = "talent.avenging_crusader.enabled & full_recharge_time < gcd.max",
["action"] = "crusader_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.avenging_crusader.enabled & full_recharge_time < gcd.max",
["action"] = "judgment",
},
{
["enabled"] = true,
["criteria"] = "! consecration.up & action.crusader_strike.in_range",
["action"] = "consecration",
},
{
["action"] = "hammer_of_wrath",
["enabled"] = true,
},
{
["action"] = "judgment",
["enabled"] = true,
},
{
["action"] = "holy_shock",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.holy_shock.remains > gcd.max",
["action"] = "crusader_strike",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "buff.paladin_aura.down",
["action"] = "devotion_aura",
},
{
["enabled"] = true,
["criteria"] = "active_dot.beacon_of_light = 0",
["action"] = "beacon_of_light",
},
{
["enabled"] = true,
["criteria"] = "group & active_dot.beacon_of_faith = 0",
["action"] = "beacon_of_faith",
},
},
},
["version"] = 20240908,
["warnings"] = "The import for 'default' required some automated changes.\nLine 13: Converted 'talent.avenging_crusader' to 'talent.avenging_crusader.enabled' (1x).\nLine 17: Converted 'talent.avenging_crusader' to 'talent.avenging_crusader.enabled' (1x).\nLine 18: Converted 'talent.avenging_crusader' to 'talent.avenging_crusader.enabled' (1x).\n\nImported 3 action lists.\n",
["author"] = "Kaleokalani",
["profile"] = "actions.precombat+=/devotion_aura,if=buff.paladin_aura.down\nactions.precombat+=/beacon_of_light,if=active_dot.beacon_of_light=0\nactions.precombat+=/beacon_of_faith,if=group&active_dot.beacon_of_faith=0\n\nactions+=/rebuke\nactions+=/avenging_wrath\nactions+=/avenging_crusader\nactions+=/holy_armaments\nactions+=/blessing_of_summer\nactions+=/blessing_of_autumn\nactions+=/blessing_of_winter\nactions+=/blessing_of_spring\nactions+=/lights_judgment\nactions+=/potion\nactions+=/fireblood,if=buff.bloodlust.up||buff.avenging_wrath.up||buff.avenging_crusader.up\nactions+=/use_items\nactions+=/call_action_list,name=spenders,strict=1,if=!talent.avenging_crusader||cooldown.avenging_crusader.remains>gcd.max||holy_power.deficit=0\nactions+=/divine_toll\nactions+=/holy_prism\nactions+=/beacon_of_virtue,if=group\nactions+=/crusader_strike,if=talent.avenging_crusader&full_recharge_time<gcd.max\nactions+=/judgment,if=talent.avenging_crusader&full_recharge_time<gcd.max\nactions+=/consecration,if=!consecration.up&action.crusader_strike.in_range\nactions+=/hammer_of_wrath\nactions+=/judgment\nactions+=/holy_shock\nactions+=/crusader_strike,if=cooldown.holy_shock.remains>gcd.max\nactions+=/arcane_torrent\n\nactions.spenders+=/word_of_glory,if=solo&(health.pct<70||!equipped.shield)&buff.shining_righteousness_ready.up||buff.empyrean_legacy.up\nactions.spenders+=/light_of_dawn,if=group&buff.shining_righteousness_ready.up\nactions.spenders+=/shield_of_the_righteous",
},
["Protection Paladin"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20250831,
["author"] = "SimC",
["desc"] = "2025-08-31: Increase Consecration usage\n\n2025-08-29: Sync with SimC",
["lists"] = {
["default"] = {
{
["action"] = "rebuke",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "mitigation",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "standard",
},
},
["precombat"] = {
{
["action"] = "devotion_aura",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "consecration",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t1.has_cooldown & trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration ) || ! trinket.t2.has_cooldown",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t2.has_cooldown & trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration ) || ! trinket.t1.has_cooldown",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.lights_judgment >= 2 || ! raid_event.adds.exists || raid_event.adds.in > 75 || raid_event.adds.up",
["action"] = "lights_judgment",
},
{
["action"] = "avenging_wrath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "( buff.avenging_wrath.remains < 15 || ( time > 10 ) )",
["action"] = "moment_of_glory",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.shield_of_the_righteous >= 3",
["action"] = "divine_toll",
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up || cooldown.avenging_wrath.remains <= 30",
["action"] = "bastion_of_light",
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.remains > 8",
["action"] = "fireblood",
},
},
["trinkets"] = {
{
["enabled"] = true,
["criteria"] = "buff.inner_resilience.up",
["name"] = "tome_of_lights_devotion",
["action"] = "tome_of_lights_devotion",
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.remains > 15",
["name"] = "unyielding_netherprism",
["action"] = "unyielding_netherprism",
},
{
["enabled"] = true,
["criteria"] = "( variable.trinket_sync_slot = 1 & ( buff.avenging_wrath.up || fight_remains <= 40 ) || ( variable.trinket_sync_slot = 2 & ( ! trinket.t2.cooldown.ready || ! buff.avenging_wrath.up ) ) || ! variable.trinket_sync_slot )",
["slots"] = "trinket1",
["action"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "( variable.trinket_sync_slot = 2 & ( buff.avenging_wrath.up || fight_remains <= 40 ) || ( variable.trinket_sync_slot = 1 & ( ! trinket.t1.cooldown.ready || ! buff.avenging_wrath.up ) ) || ! variable.trinket_sync_slot )",
["slots"] = "trinket2",
["action"] = "trinket2",
},
},
["standard"] = {
{
["enabled"] = true,
["criteria"] = "charges >= 2 || full_recharge_time <= gcd.max",
["action"] = "judgment",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( buff.blessing_of_dawn.up || fight_remains < 2 ) & ( debuff.judgment.up || buff.hammer_of_light_ready.remains < 2 || buff.hammer_of_light_ready.stack > 1 || buff.hammer_of_light_free.up || ( cooldown.eye_of_tyr.remains < 3 ) )",
["action"] = "hammer_of_light",
},
{
["enabled"] = true,
["criteria"] = "talent.lights_guidance.enabled",
["action"] = "eye_of_tyr",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.righteous_protector.enabled || cooldown.righteous_protector_icd.remains = 0 ) & ! buff.hammer_of_light_ready.up",
["action"] = "shield_of_the_righteous",
},
{
["enabled"] = true,
["description"] = "during luck of the draw(TWW2 4P)spam sotr as much as possible without wasting icd where possible",
["criteria"] = "! buff.hammer_of_light_ready.up & ( buff.luck_of_the_draw.up & ( ( holy_power + judgment_holy_power >= 5 ) || ( ! talent.righteous_protector.enabled || cooldown.righteous_protector_icd.remains = 0 ) ) )",
["action"] = "shield_of_the_righteous",
},
{
["enabled"] = true,
["description"] = "outside of luck of the draw, pool holy power as much as possible to be able to enter luck of the draw windows with more holy power",
["criteria"] = "set_bonus.thewarwithin_season_2_4pc & ! buff.hammer_of_light_ready.up & ( ( holy_power + judgment_holy_power > 5 ) || ( holy_power + judgment_holy_power >= 5 & cooldown.righteous_protector_icd.remains = 0 ) )",
["action"] = "shield_of_the_righteous",
},
{
["enabled"] = true,
["criteria"] = "! set_bonus.thewarwithin_season_2_4pc & ( ! talent.righteous_protector.enabled || cooldown.righteous_protector_icd.remains = 0 ) & ! buff.hammer_of_light_ready.up",
["action"] = "shield_of_the_righteous",
},
{
["enabled"] = true,
["criteria"] = "holy_power = 5 & ( ! buff.blessing_of_dawn.up || ! talent.lights_guidance.enabled )",
["action"] = "shield_of_the_righteous",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.shield_of_the_righteous > 3 & buff.bulwark_of_righteous_fury.stack >= 3 & holy_power < 3",
["action"] = "judgment",
["target_if"] = "debuff.judgment.remains",
},
{
["enabled"] = true,
["description"] = "Lightsmith wants to not waste any masterwork stacks on holy bulwark, if it overflows its 50/50 it spawns a lesser weapon, rather than 0% chance",
["criteria"] = "next_armament = holy_bulwark & set_bonus.thewarwithin_season_3_4pc",
["action"] = "holy_armaments",
},
{
["enabled"] = true,
["description"] = "Lightsmith with 4pc spams blessed hammer if it can, trying to trigger the 2pc effect as much as possible",
["criteria"] = "set_bonus.thewarwithin_season_3_4pc & talent.hammer_and_anvil.enabled",
["action"] = "blessed_hammer",
},
{
["enabled"] = true,
["criteria"] = "! buff.bulwark_of_righteous_fury.up & talent.bulwark_of_righteous_fury.enabled & spell_targets.shield_of_the_righteous >= 3",
["action"] = "avengers_shield",
},
{
["enabled"] = true,
["criteria"] = "buff.blessed_assurance.up & spell_targets.shield_of_the_righteous < 3 & ! buff.avenging_wrath.up",
["action"] = "hammer_of_the_righteous",
},
{
["enabled"] = true,
["criteria"] = "buff.blessed_assurance.up & spell_targets.shield_of_the_righteous < 3",
["action"] = "blessed_hammer",
},
{
["enabled"] = true,
["criteria"] = "buff.blessed_assurance.up & spell_targets.shield_of_the_righteous < 2 & ! buff.avenging_wrath.up",
["action"] = "crusader_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.divine_guidance.stack = 5",
["action"] = "consecration",
},
{
["enabled"] = true,
["criteria"] = "next_armament = sacred_weapon & ( ( ! buff.sacred_weapon.up || ( buff.sacred_weapon.remains < 6 & ! buff.avenging_wrath.up & cooldown.avenging_wrath.remains <= 30 ) ) & ( ! set_bonus.thewarwithin_season_3_4pc || buff.masterwork.stack = 5 ) )",
["action"] = "holy_armaments",
},
{
["action"] = "hammer_of_wrath",
["enabled"] = true,
},
{
["action"] = "divine_toll",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up & talent.hammer_and_anvil.enabled",
["action"] = "judgment",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "next_armament = holy_bulwark & charges = 2",
["action"] = "holy_armaments",
},
{
["enabled"] = true,
["action"] = "judgment",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( buff.blessed_assurance.up & spell_targets.shield_of_the_righteous < 3 ) || buff.shake_the_heavens.up",
["action"] = "hammer_of_the_righteous",
},
{
["enabled"] = true,
["criteria"] = "( buff.blessed_assurance.up & spell_targets.shield_of_the_righteous < 3 ) || buff.shake_the_heavens.up",
["action"] = "blessed_hammer",
},
{
["enabled"] = true,
["criteria"] = "( buff.blessed_assurance.up & spell_targets.shield_of_the_righteous < 2 ) || buff.shake_the_heavens.up",
["action"] = "crusader_strike",
},
{
["enabled"] = true,
["criteria"] = "! talent.lights_guidance.enabled",
["action"] = "avengers_shield",
},
{
["enabled"] = true,
["criteria"] = "! consecration.up",
["action"] = "consecration",
},
{
["enabled"] = true,
["criteria"] = "( talent.inmost_light.enabled & raid_event.adds.in >= 45 || spell_targets.shield_of_the_righteous >= 3 ) & ! talent.lights_deliverance.enabled",
["action"] = "eye_of_tyr",
},
{
["enabled"] = true,
["criteria"] = "next_armament = holy_bulwark",
["action"] = "holy_armaments",
},
{
["action"] = "blessed_hammer",
["enabled"] = true,
},
{
["action"] = "hammer_of_the_righteous",
["enabled"] = true,
},
{
["action"] = "crusader_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.shining_light_free.up & ( talent.blessed_assurance.enabled || ( talent.lights_guidance.enabled & cooldown.hammerfall_icd.remains = 0 ) )",
["action"] = "word_of_glory",
},
{
["enabled"] = true,
["criteria"] = "! talent.lights_deliverance.enabled",
["action"] = "eye_of_tyr",
},
{
["enabled"] = true,
["criteria"] = "buff.shining_light_free.up",
["action"] = "word_of_glory",
},
{
["enabled"] = true,
["criteria"] = "holy_power < 5",
["action"] = "arcane_torrent",
},
{
["action"] = "avengers_shield",
["enabled"] = true,
},
{
["action"] = "consecration",
["enabled"] = true,
},
},
["mitigation"] = {
{
["enabled"] = true,
["criteria"] = "tanking & buff.shield_of_the_righteous.down & ( holy_power.deficit = 0 || buff.divine_purpose.up )",
["action"] = "shield_of_the_righteous",
},
{
["enabled"] = true,
["description"] = "[Hekili] Recommend BoSP if the filter is enabled in spec options. Custom priorities can use BoSP with or without this feature.",
["criteria"] = "settings.bosp_filter",
["action"] = "blessing_of_spellwarding",
},
{
["enabled"] = true,
["criteria"] = "health.pct < wog_health & ( holy_power.deficit = 0 || buff.divine_purpose.up || buff.shining_light_free.up )",
["action"] = "word_of_glory",
},
{
["enabled"] = true,
["criteria"] = "talent.final_stand.enabled & tanking & incoming_damage_5s > ds_damage & ! ( buff.ardent_defender.up || buff.guardian_of_ancient_kings.up || buff.divine_shield.up || buff.potion.up )",
["action"] = "divine_shield",
},
{
["enabled"] = true,
["criteria"] = "tanking & incoming_damage_5s > goak_damage & ! ( buff.ardent_defender.up || buff.guardian_of_ancient_kings.up || buff.divine_shield.up || buff.potion.up )",
["action"] = "guardian_of_ancient_kings",
},
{
["enabled"] = true,
["criteria"] = "defensive_sentinel & tanking & incoming_damage_5s > goak_damage & ! ( buff.ardent_defender.up || buff.guardian_of_ancient_kings.up || buff.divine_shield.up || buff.potion.up )",
["action"] = "sentinel",
},
{
["enabled"] = true,
["criteria"] = "tanking & incoming_damage_5s > ad_damage & ! ( buff.ardent_defender.up || buff.guardian_of_ancient_kings.up || buff.divine_shield.up || buff.potion.up )",
["action"] = "ardent_defender",
},
{
["enabled"] = true,
["criteria"] = "health.pct < loh_health",
["action"] = "lay_on_hands",
},
},
},
["version"] = 20250831,
["warnings"] = "The import for 'precombat' required some automated changes.\nLine 5: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 5: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 5: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 6: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 6: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 6: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 3: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 3: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 4: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 4: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\n\nImported 6 action lists.\n",
["profile"] = "## Upstream: https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/paladin_protection.simc\n## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/paladin_protection.simc\n## Up to date with SimC: August 28 2025 - 5340e2f\n\n## actions.precombat+=/rite_of_sanctification\n## actions.precombat+=/rite_of_adjuration\nactions.precombat+=/devotion_aura\nactions.precombat+=/lights_judgment\nactions.precombat+=/arcane_torrent\nactions.precombat+=/consecration\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_cooldown&trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)||!trinket.2.has_cooldown\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_cooldown&trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)||!trinket.1.has_cooldown\n\nactions+=/rebuke\nactions+=/call_action_list,name=mitigation\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=standard\n\nactions.cooldowns+=/lights_judgment,if=spell_targets.lights_judgment>=2||!raid_event.adds.exists||raid_event.adds.in>75||raid_event.adds.up\nactions.cooldowns+=/avenging_wrath\nactions.cooldowns+=/potion,if=buff.avenging_wrath.up\nactions.cooldowns+=/moment_of_glory,if=(buff.avenging_wrath.remains<15||(time>10))\nactions.cooldowns+=/divine_toll,if=spell_targets.shield_of_the_righteous>=3\nactions.cooldowns+=/bastion_of_light,if=buff.avenging_wrath.up||cooldown.avenging_wrath.remains<=30\n## actions.cooldowns+=/invoke_external_buff,name=power_infusion,if=buff.avenging_wrath.up\nactions.cooldowns+=/fireblood,if=buff.avenging_wrath.remains>8\n\nactions.mitigation+=/shield_of_the_righteous,if=tanking&buff.shield_of_the_righteous.down&(holy_power.deficit=0||buff.divine_purpose.up)\n# [Hekili] Recommend BoSP if the filter is enabled in spec options. Custom priorities can use BoSP with or without this feature.\nactions.mitigation+=/blessing_of_spellwarding,if=settings.bosp_filter\nactions.mitigation+=/word_of_glory,if=health.pct<wog_health&(holy_power.deficit=0||buff.divine_purpose.up||buff.shining_light_free.up)\nactions.mitigation+=/divine_shield,if=talent.final_stand.enabled&tanking&incoming_damage_5s>ds_damage&!(buff.ardent_defender.up||buff.guardian_of_ancient_kings.up||buff.divine_shield.up||buff.potion.up)\nactions.mitigation+=/guardian_of_ancient_kings,if=tanking&incoming_damage_5s>goak_damage&!(buff.ardent_defender.up||buff.guardian_of_ancient_kings.up||buff.divine_shield.up||buff.potion.up)\nactions.mitigation+=/sentinel,if=defensive_sentinel&tanking&incoming_damage_5s>goak_damage&!(buff.ardent_defender.up||buff.guardian_of_ancient_kings.up||buff.divine_shield.up||buff.potion.up)\nactions.mitigation+=/ardent_defender,if=tanking&incoming_damage_5s>ad_damage&!(buff.ardent_defender.up||buff.guardian_of_ancient_kings.up||buff.divine_shield.up||buff.potion.up)\nactions.mitigation+=/lay_on_hands,if=health.pct<loh_health\n\nactions.standard+=/judgment,cycle_targets=1,if=charges>=2||full_recharge_time<=gcd.max\nactions.standard+=/hammer_of_light,if=(buff.blessing_of_dawn.up||fight_remains<2)&(debuff.judgment.up||buff.hammer_of_light_ready.remains<2||buff.hammer_of_light_ready.stack>1||buff.hammer_of_light_free.up||(cooldown.eye_of_tyr.remains<3))\nactions.standard+=/eye_of_tyr,if=talent.lights_guidance.enabled\nactions.standard+=/shield_of_the_righteous,if=(!talent.righteous_protector.enabled||cooldown.righteous_protector_icd.remains=0)&!buff.hammer_of_light_ready.up\n# during luck of the draw(TWW2 4P)spam sotr as much as possible without wasting icd where possible\nactions.standard+=/shield_of_the_righteous,if=!buff.hammer_of_light_ready.up&(buff.luck_of_the_draw.up&((holy_power+judgment_holy_power>=5)||(!talent.righteous_protector.enabled||cooldown.righteous_protector_icd.remains=0)))\n# outside of luck of the draw, pool holy power as much as possible to be able to enter luck of the draw windows with more holy power\nactions.standard+=/shield_of_the_righteous,if=set_bonus.thewarwithin_season_2_4pc&!buff.hammer_of_light_ready.up&((holy_power+judgment_holy_power>5)||(holy_power+judgment_holy_power>=5&cooldown.righteous_protector_icd.remains=0))\nactions.standard+=/shield_of_the_righteous,if=!set_bonus.thewarwithin_season_2_4pc&(!talent.righteous_protector.enabled||cooldown.righteous_protector_icd.remains=0)&!buff.hammer_of_light_ready.up\nactions.standard+=/shield_of_the_righteous,if=holy_power=5&(!buff.blessing_of_dawn.up||!talent.lights_guidance.enabled)\nactions.standard+=/judgment,target_if=min:debuff.judgment.remains,if=spell_targets.shield_of_the_righteous>3&buff.bulwark_of_righteous_fury.stack>=3&holy_power<3\n# Lightsmith wants to not waste any masterwork stacks on holy bulwark, if it overflows its 50/50 it spawns a lesser weapon, rather than 0% chance\nactions.standard+=/holy_armaments,if=next_armament=holy_bulwark&set_bonus.thewarwithin_season_3_4pc\n# Lightsmith with 4pc spams blessed hammer if it can, trying to trigger the 2pc effect as much as possible\nactions.standard+=/blessed_hammer,if=set_bonus.thewarwithin_season_3_4pc&talent.hammer_and_anvil.enabled\nactions.standard+=/avengers_shield,if=!buff.bulwark_of_righteous_fury.up&talent.bulwark_of_righteous_fury.enabled&spell_targets.shield_of_the_righteous>=3\nactions.standard+=/hammer_of_the_righteous,if=buff.blessed_assurance.up&spell_targets.shield_of_the_righteous<3&!buff.avenging_wrath.up\nactions.standard+=/blessed_hammer,if=buff.blessed_assurance.up&spell_targets.shield_of_the_righteous<3\nactions.standard+=/crusader_strike,if=buff.blessed_assurance.up&spell_targets.shield_of_the_righteous<2&!buff.avenging_wrath.up\nactions.standard+=/consecration,if=buff.divine_guidance.stack=5\nactions.standard+=/holy_armaments,if=next_armament=sacred_weapon&((!buff.sacred_weapon.up||(buff.sacred_weapon.remains<6&!buff.avenging_wrath.up&cooldown.avenging_wrath.remains<=30))&(!set_bonus.thewarwithin_season_3_4pc||buff.masterwork.stack=5))\nactions.standard+=/hammer_of_wrath\nactions.standard+=/divine_toll\nactions.standard+=/judgment,cycle_targets=1,if=buff.avenging_wrath.up&talent.hammer_and_anvil.enabled\nactions.standard+=/holy_armaments,if=next_armament=holy_bulwark&charges=2\nactions.standard+=/judgment,cycle_targets=1\nactions.standard+=/hammer_of_the_righteous,if=(buff.blessed_assurance.up&spell_targets.shield_of_the_righteous<3)||buff.shake_the_heavens.up\nactions.standard+=/blessed_hammer,if=(buff.blessed_assurance.up&spell_targets.shield_of_the_righteous<3)||buff.shake_the_heavens.up\nactions.standard+=/crusader_strike,if=(buff.blessed_assurance.up&spell_targets.shield_of_the_righteous<2)||buff.shake_the_heavens.up\nactions.standard+=/avengers_shield,if=!talent.lights_guidance.enabled\nactions.standard+=/consecration,if=!consecration.up\nactions.standard+=/eye_of_tyr,if=(talent.inmost_light.enabled&raid_event.adds.in>=45||spell_targets.shield_of_the_righteous>=3)&!talent.lights_deliverance.enabled\nactions.standard+=/holy_armaments,if=next_armament=holy_bulwark\nactions.standard+=/blessed_hammer\nactions.standard+=/hammer_of_the_righteous\nactions.standard+=/crusader_strike\nactions.standard+=/word_of_glory,if=buff.shining_light_free.up&(talent.blessed_assurance.enabled||(talent.lights_guidance.enabled&cooldown.hammerfall_icd.remains=0))\nactions.standard+=/eye_of_tyr,if=!talent.lights_deliverance.enabled\nactions.standard+=/word_of_glory,if=buff.shining_light_free.up\nactions.standard+=/arcane_torrent,if=holy_power<5\nactions.standard+=/avengers_shield\nactions.standard+=/consecration\n\nactions.trinkets+=/use_item,name=tome_of_lights_devotion,if=buff.inner_resilience.up\nactions.trinkets+=/use_item,name=unyielding_netherprism,if=buff.avenging_wrath.remains>15\nactions.trinkets+=/use_items,slots=trinket1,if=(variable.trinket_sync_slot=1&(buff.avenging_wrath.up||fight_remains<=40)||(variable.trinket_sync_slot=2&(!trinket.2.cooldown.ready||!buff.avenging_wrath.up))||!variable.trinket_sync_slot)\nactions.trinkets+=/use_items,slots=trinket2,if=(variable.trinket_sync_slot=2&(buff.avenging_wrath.up||fight_remains<=40)||(variable.trinket_sync_slot=1&(!trinket.1.cooldown.ready||!buff.avenging_wrath.up))||!variable.trinket_sync_slot)",
["spec"] = 66,
},
["Holy Priest"] = {
["builtIn"] = true,
["date"] = 20240828,
["spec"] = 257,
["desc"] = "Healer priorities are DPS-focused only\n\n2024-08-28: Use cooldowns action list\n\n2024-07-30: The War Within",
["profile"] = "actions.precombat+=/power_word_fortitude\n\nactions+=/call_action_list,name=cooldowns\n# Always use HF if we have empyreal blaze (dot extension) or harmonious apparatus (cd reduction) or if it's not currently ticking. Otherwise, only use when refreshable to be sure we get the longest duration possible. It's worth it to cast even when the target will die soon based on just the initial hit damage. We also don't want to cast immediately once empyreal blaze is up when we are prepping divine word\nactions+=/holy_fire,cycle_targets=1,if=(talent.empyreal_blaze||talent.harmonious_apparatus||!ticking||refreshable)&!(buff.empyreal_blaze.up&(cooldown.divine_word.up||buff.divine_word.up)&cooldown.holy_word_chastise.up)\n# Don't cast SW:P during apotheosis or divine favor: chastise. We also don't cycle targets because it isn't worth the GCDs, since Smite deals slightly more damage than a full SW:P.\nactions+=/shadow_word_pain,if=(refreshable||!ticking)&(target.time_to_die>=dot.shadow_word_pain.duration)&!buff.divine_favor_chastise.up&!buff.apotheosis.up\n# Prepare to enter divine favor: chastise\nactions+=/call_action_list,name=divine_favor_chastise_prep,if=talent.divine_word&talent.holy_word_chastise&buff.divine_favor_chastise.down\n# Enter Divine Favor rotation with divine favor: chastise buff up\nactions+=/run_action_list,name=divine_favor_chastise_active,strict=1,if=buff.divine_favor_chastise.up\n# Run divine favor fillers rotation with buff down\nactions+=/run_action_list,name=divine_favor_filler,if=talent.divine_word&talent.holy_word_chastise&buff.divine_favor_chastise.down\n# Run divine image rotation with divine image talented\nactions+=/run_action_list,name=divine_image,strict=1,if=talent.divine_image\n# Otherwise generic rotation\nactions+=/run_action_list,name=generic\n\nactions.divine_favor_chastise_prep+=/variable,name=empyreal_exec_time,op=set,value=0\n# apotheosis_exec_time: Store how long Apotheosis will take to execute\nactions.divine_favor_chastise_prep+=/variable,name=apotheosis_exec_time,op=setif,condition=talent.apotheosis,value=action.apotheosis.execute_time,value_else=0\n# Use apotheosis to get Chastise back if its on cooldown and Divine Word will be up soon. We can use Apotheosis (2min CD) to reset Chastise for every other Divine Word (1min CD).\nactions.divine_favor_chastise_prep+=/apotheosis,if=(cooldown.holy_word_chastise.remains>cooldown.divine_word.remains)&(cooldown.divine_word.remains<=(variable.empyreal_exec_time+variable.apotheosis_exec_time))\n# Divine Word only if we can sync with Chastise and (if talented) Empyreal Blaze\nactions.divine_favor_chastise_prep+=/divine_word,if=cooldown.holy_word_chastise.up&(!talent.empyreal_blaze||buff.empyreal_blaze.up)\n# Holy word chastise to trigger divine favor: chastise\nactions.divine_favor_chastise_prep+=/holy_word_chastise,if=!talent.empyreal_blaze&buff.divine_word.up||talent.empyreal_blaze&buff.empyreal_blaze.down\n\nactions.divine_favor_chastise_active+=/halo,if=spell_targets.halo>=2\nactions.divine_favor_chastise_active+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_favor_chastise_active+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_favor_chastise_active+=/mindgames\nactions.divine_favor_chastise_active+=/shadow_word_death,if=target.health.pct<20\nactions.divine_favor_chastise_active+=/holy_word_chastise\n# We want to cycle smite to different targets to spread holy fire dots in AOE situations, this will buff holy nova's damage\nactions.divine_favor_chastise_active+=/smite,cycle_targets=1,if=spell_targets.holy_nova>=2\nactions.divine_favor_chastise_active+=/smite\n\nactions.divine_favor_filler+=/halo,if=spell_targets.halo>=2\nactions.divine_favor_filler+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_favor_filler+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_favor_filler+=/mindgames\nactions.divine_favor_filler+=/shadow_word_death,if=target.health.pct<20\n# We can use chastise for damage as long as we will have apotheosis available before the next divine word, otherwise only use it when it will be back up at the same time as divine word\nactions.divine_favor_filler+=/holy_word_chastise,if=(cooldown.apotheosis.remains<cooldown.divine_word.remains)||(cooldown.holy_word_chastise.duration_expected<=cooldown.divine_word.remains)\nactions.divine_favor_filler+=/smite\n\nactions.divine_image+=/apotheosis,if=buff.answered_prayers.down&!(cooldown.holy_word_sanctify.up||cooldown.holy_word_serenity.up||cooldown.holy_word_chastise.up)\n# line_cd prevents re-casting sanctify and serenity right away, wasting GCDs that could be used to proc divine image damage. In testing, the sweet spot balance between adding more divine images, triggering apotheosis, and casting damage CDs was to let the image from each healing holy word expire before re-casting\nactions.divine_image+=/holy_word_sanctify,line_cd=9\nactions.divine_image+=/holy_word_serenity,line_cd=9\nactions.divine_image+=/holy_word_chastise\nactions.divine_image+=/halo,if=spell_targets.halo>=2\nactions.divine_image+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_image+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_image+=/mindgames\nactions.divine_image+=/shadow_word_death,if=target.health.pct<20\nactions.divine_image+=/smite\n\nactions.generic+=/holy_word_chastise\n# Hold Apotheosis if chastise will be up soon\nactions.generic+=/apotheosis,if=cooldown.holy_word_chastise.remains>(gcd.max*3)\nactions.generic+=/halo,if=spell_targets.halo>=2\nactions.generic+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.generic+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.generic+=/mindgames\nactions.generic+=/shadow_word_death,if=target.health.pct<20\nactions.generic+=/smite\n\nactions.cooldowns+=/shadowfiend\n# Sync PI with divine favor: chastise if we took divine word\nactions.cooldowns+=/power_infusion,if=(!talent.divine_word||(cooldown.divine_word.up&cooldown.holy_word_chastise.up))\n# Only potion in sync with power infusion\nactions.cooldowns+=/potion,if=buff.power_infusion.up\n# hold trinkets to use with PI\nactions.cooldowns+=/use_items,if=buff.power_infusion.up",
["version"] = 20240828,
["warnings"] = "The import for 'cooldowns' required some automated changes.\nLine 2: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\nLine 2: Converted 'talent.harmonious_apparatus' to 'talent.harmonious_apparatus.enabled' (1x).\nLine 4: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\nLine 4: Converted 'talent.holy_word_chastise' to 'talent.holy_word_chastise.enabled' (1x).\nLine 6: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\nLine 6: Converted 'talent.holy_word_chastise' to 'talent.holy_word_chastise.enabled' (1x).\nLine 7: Converted 'talent.divine_image' to 'talent.divine_image.enabled' (1x).\n\nThe import for 'divine_favor_chastise_prep' required some automated changes.\nLine 2: Converted 'talent.apotheosis' to 'talent.apotheosis.enabled' (1x).\nLine 4: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\nLine 5: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\nLine 5: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\n\nImported 8 action lists.\n",
["lists"] = {
["default"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "holy_fire",
["cycle_targets"] = 1,
["criteria"] = "( talent.empyreal_blaze.enabled || talent.harmonious_apparatus.enabled || ! ticking || refreshable ) & ! ( buff.empyreal_blaze.up & ( cooldown.divine_word.up || buff.divine_word.up ) & cooldown.holy_word_chastise.up )",
["description"] = "Always use HF if we have empyreal blaze (dot extension) or harmonious apparatus (cd reduction) or if it's not currently ticking. Otherwise, only use when refreshable to be sure we get the longest duration possible. It's worth it to cast even when the target will die soon based on just the initial hit damage. We also don't want to cast immediately once empyreal blaze is up when we are prepping divine word",
},
{
["enabled"] = true,
["description"] = "Don't cast SW:P during apotheosis or divine favor: chastise. We also don't cycle targets because it isn't worth the GCDs, since Smite deals slightly more damage than a full SW:P.",
["criteria"] = "( refreshable || ! ticking ) & ( target.time_to_die >= dot.shadow_word_pain.duration ) & ! buff.divine_favor_chastise.up & ! buff.apotheosis.up",
["action"] = "shadow_word_pain",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Prepare to enter divine favor: chastise",
["criteria"] = "talent.divine_word.enabled & talent.holy_word_chastise.enabled & buff.divine_favor_chastise.down",
["list_name"] = "divine_favor_chastise_prep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Enter Divine Favor rotation with divine favor: chastise buff up",
["strict"] = 1,
["criteria"] = "buff.divine_favor_chastise.up",
["list_name"] = "divine_favor_chastise_active",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run divine favor fillers rotation with buff down",
["criteria"] = "talent.divine_word.enabled & talent.holy_word_chastise.enabled & buff.divine_favor_chastise.down",
["list_name"] = "divine_favor_filler",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run divine image rotation with divine image talented",
["strict"] = 1,
["criteria"] = "talent.divine_image.enabled",
["list_name"] = "divine_image",
},
{
["enabled"] = true,
["description"] = "Otherwise generic rotation",
["action"] = "run_action_list",
["list_name"] = "generic",
},
},
["divine_image"] = {
{
["enabled"] = true,
["criteria"] = "buff.answered_prayers.down & ! ( cooldown.holy_word_sanctify.up || cooldown.holy_word_serenity.up || cooldown.holy_word_chastise.up )",
["action"] = "apotheosis",
},
{
["enabled"] = true,
["action"] = "holy_word_sanctify",
["description"] = "line_cd prevents re-casting sanctify and serenity right away, wasting GCDs that could be used to proc divine image damage. In testing, the sweet spot balance between adding more divine images, triggering apotheosis, and casting damage CDs was to let the image from each healing holy word expire before re-casting",
["line_cd"] = "9",
},
{
["enabled"] = true,
["action"] = "holy_word_serenity",
["line_cd"] = "9",
},
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["divine_favor_filler"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["description"] = "We can use chastise for damage as long as we will have apotheosis available before the next divine word, otherwise only use it when it will be back up at the same time as divine word",
["criteria"] = "( cooldown.apotheosis.remains < cooldown.divine_word.remains ) || ( cooldown.holy_word_chastise.duration_expected <= cooldown.divine_word.remains )",
["action"] = "holy_word_chastise",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "power_word_fortitude",
["enabled"] = true,
},
},
["divine_favor_chastise_active"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "smite",
["cycle_targets"] = 1,
["criteria"] = "spell_targets.holy_nova >= 2",
["description"] = "We want to cycle smite to different targets to spread holy fire dots in AOE situations, this will buff holy nova's damage",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["generic"] = {
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Hold Apotheosis if chastise will be up soon",
["criteria"] = "cooldown.holy_word_chastise.remains > ( gcd.max * 3 )",
["action"] = "apotheosis",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["cooldowns"] = {
{
["action"] = "mindbender",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Sync PI with divine favor: chastise if we took divine word",
["criteria"] = "( ! talent.divine_word.enabled || ( cooldown.divine_word.up & cooldown.holy_word_chastise.up ) )",
["action"] = "power_infusion",
},
{
["enabled"] = true,
["description"] = "Only potion in sync with power infusion",
["criteria"] = "buff.power_infusion.up",
["action"] = "potion",
},
{
["enabled"] = true,
["description"] = "hold trinkets to use with PI",
["criteria"] = "buff.power_infusion.up",
["action"] = "use_items",
},
},
["divine_favor_chastise_prep"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "empyreal_exec_time",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "apotheosis_exec_time: Store how long Apotheosis will take to execute",
["criteria"] = "talent.apotheosis.enabled",
["value"] = "action.apotheosis.execute_time",
["action"] = "variable",
["value_else"] = "0",
["var_name"] = "apotheosis_exec_time",
},
{
["enabled"] = true,
["description"] = "Use apotheosis to get Chastise back if its on cooldown and Divine Word will be up soon. We can use Apotheosis (2min CD) to reset Chastise for every other Divine Word (1min CD).",
["criteria"] = "( cooldown.holy_word_chastise.remains > cooldown.divine_word.remains ) & ( cooldown.divine_word.remains <= ( variable.empyreal_exec_time + variable.apotheosis_exec_time ) )",
["action"] = "apotheosis",
},
{
["enabled"] = true,
["description"] = "Divine Word only if we can sync with Chastise and (if talented) Empyreal Blaze",
["criteria"] = "cooldown.holy_word_chastise.up & ( ! talent.empyreal_blaze.enabled || buff.empyreal_blaze.up )",
["action"] = "divine_word",
},
{
["enabled"] = true,
["description"] = "Holy word chastise to trigger divine favor: chastise",
["criteria"] = "! talent.empyreal_blaze.enabled & buff.divine_word.up || talent.empyreal_blaze.enabled & buff.empyreal_blaze.down",
["action"] = "holy_word_chastise",
},
},
},
["author"] = "Kapulani",
},
["Fury"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/warrior_fury.simc",
["builtIn"] = true,
["date"] = 20250905,
["author"] = "SimC",
["desc"] = "2025-08-05: Fix storm bolt during Bladestorm\n2025-09-03: APL Sync\n2025-08-06: Initial APL",
["profile"] = "## Upstream: https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/default/warrior_fury.simc\n## SimulationCraft Commit Sync: 89266d4\n## Date: 2025-09-05\n\nactions.precombat+=/battle_shout\nactions.precombat+=/berserker_stance,toggle=on\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.treacherous_transmitter\n# Evaluates a trinkets cooldown, divided by avatar or odyns fury. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(trinket.1.cooldown.duration%%cooldown.avatar.duration=0||trinket.1.cooldown.duration%%cooldown.odyns_fury.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(trinket.2.cooldown.duration%%cooldown.avatar.duration=0||trinket.2.cooldown.duration%%cooldown.odyns_fury.duration=0)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_stat.any_dps&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_stat.any_dps&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\nactions.precombat+=/variable,name=treacherous_transmitter_precombat_cast,value=2\nactions.precombat+=/use_item,name=treacherous_transmitter\nactions.precombat+=/recklessness,if=!equipped.fyralath_the_dreamrender\nactions.precombat+=/avatar,if=!equipped.cursed_stone_idol\n\n# Executed every time the actor is available.\nactions+=/charge,if=time<=0.5||movement.distance>5\nactions+=/heroic_leap,if=movement.distance>25\nactions+=/potion,if=fight_remains>300||fight_remains<300&target.health.pct<35&buff.recklessness.up||boss&fight_remains<25\nactions+=/use_item,name=treacherous_transmitter\nactions+=/pummel\n# Trinkets\n## actions+=/do_treacherous_transmitter_task\nactions+=/use_item,name=cursed_stone_idol,if=cooldown.avatar.remains<2\nactions+=/use_item,name=unyielding_netherprism,if=cooldown.avatar.remains<=85\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.\nactions+=/use_item,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!buff.avatar.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&buff.avatar.up&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains\nactions+=/use_item,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!buff.avatar.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&buff.avatar.up&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions+=/use_item,slot=main_hand,if=!equipped.fyralath_the_dreamrender&!equipped.bestinslots&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\nactions+=/use_item,name=bestinslots,if=target.time_to_die>120&(cooldown.avatar.remains>20&(trinket.1.cooldown.remains||trinket.2.cooldown.remains)||cooldown.avatar.remains>20&(!trinket.1.has_cooldown||!trinket.2.has_cooldown))||target.time_to_die<=120&target.health.pct<35&cooldown.avatar.remains>85||target.time_to_die<15\n# Variables\nactions+=/variable,name=st_planning,value=active_enemies=1&(raid_event.adds.in>15||!raid_event.adds.exists)\nactions+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>5)\nactions+=/variable,name=execute_phase,value=(talent.massacre.enabled&target.health.pct<35)||target.health.pct<20\nactions+=/variable,name=on_gcd_racials,value=buff.recklessness.down&buff.avatar.down&rage<80&buff.sudden_death.down&!cooldown.bladestorm.ready&(!cooldown.execute.ready||!variable.execute_phase)\nactions+=/lights_judgment,if=variable.on_gcd_racials\nactions+=/bag_of_tricks,if=variable.on_gcd_racials\nactions+=/berserking,if=buff.recklessness.up\nactions+=/blood_fury\nactions+=/fireblood\nactions+=/ancestral_call\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.avatar.remains>15&fight_remains>=135||variable.execute_phase&buff.avatar.up||fight_remains<=25\nactions+=/run_action_list,name=slayer,strict=1,if=!talent.lightning_strikes\nactions+=/run_action_list,name=thane,strict=1,if=talent.lightning_strikes\n\nactions.slayer+=/recklessness\nactions.slayer+=/avatar\nactions.slayer+=/execute,if=buff.ashen_juggernaut.up&buff.ashen_juggernaut.remains<=gcd\nactions.slayer+=/execute,if=buff.sudden_death.remains<2&!variable.execute_phase\nactions.slayer+=/thunderous_roar,if=active_enemies>1&buff.enrage.up\nactions.slayer+=/champions_spear,if=!cooldown.bladestorm.remains&(!cooldown.avatar.remains||!cooldown.recklessness.remains||buff.avatar.up||buff.recklessness.up)&buff.enrage.up\nactions.slayer+=/odyns_fury,if=active_enemies>1&talent.titanic_rage&buff.meat_cleaver.stack=0\nactions.slayer+=/bladestorm,if=buff.enrage.up&(talent.reckless_abandon&cooldown.avatar.remains>=24||talent.anger_management&cooldown.recklessness.remains>=15&(buff.avatar.up||cooldown.avatar.remains>=8))\nactions.slayer+=/whirlwind,if=active_enemies>=2&talent.meat_cleaver&buff.meat_cleaver.stack=0\nactions.slayer+=/onslaught,if=talent.tenderize&buff.brutal_finish.up\nactions.slayer+=/rampage,if=buff.enrage.remains<gcd\nactions.slayer+=/execute,if=buff.sudden_death.stack=2&buff.enrage.up\nactions.slayer+=/execute,if=debuff.marked_for_execution.stack>1&buff.enrage.up\nactions.slayer+=/odyns_fury,if=active_enemies>1&!talent.titanic_rage\nactions.slayer+=/crushing_blow,if=action.raging_blow.charges=2||buff.brutal_finish.up&(!debuff.champions_might.up||debuff.champions_might.up&debuff.champions_might.remains>gcd)\nactions.slayer+=/bloodbath,if=buff.bloodcraze.stack>=1||(talent.uproar&dot.bloodbath_dot.remains<40&talent.bloodborne)||buff.enrage.up&buff.enrage.remains<gcd\nactions.slayer+=/raging_blow,if=buff.brutal_finish.up&buff.slaughtering_strikes.stack<5&(!debuff.champions_might.up||debuff.champions_might.up&debuff.champions_might.remains>gcd)\nactions.slayer+=/rampage,if=rage>115\nactions.slayer+=/execute,if=variable.execute_phase&debuff.marked_for_execution.up&buff.enrage.up&active_enemies=1\nactions.slayer+=/bloodthirst,if=target.health.pct<35&talent.vicious_contempt&buff.brutal_finish.up&buff.enrage.up&crit_pct_current>=85&active_enemies=1||(!set_bonus.tww3_4pc&active_enemies>4)\nactions.slayer+=/crushing_blow\nactions.slayer+=/bloodbath\nactions.slayer+=/raging_blow,if=buff.opportunist.up\nactions.slayer+=/bloodthirst,if=target.health.pct<35&talent.vicious_contempt&crit_pct_current>=70\nactions.slayer+=/raging_blow,if=action.raging_blow.charges=2\nactions.slayer+=/onslaught,if=talent.tenderize\nactions.slayer+=/raging_blow\nactions.slayer+=/rampage\nactions.slayer+=/odyns_fury,if=buff.enrage.up||talent.titanic_rage\nactions.slayer+=/execute,if=buff.sudden_death.up\nactions.slayer+=/bloodthirst\nactions.slayer+=/thunderous_roar\nactions.slayer+=/wrecking_throw\nactions.slayer+=/whirlwind\n## [Syrif] - use_off_gcd isn't in SimC, but is needed for the addon to handle storm bolt while bladestorming\nactions.slayer+=/storm_bolt,if=buff.bladestorm.up,use_off_gcd=1\n\nactions.thane+=/recklessness\nactions.thane+=/avatar\nactions.thane+=/ravager\nactions.thane+=/thunderous_roar,if=active_enemies>1&buff.enrage.up\nactions.thane+=/champions_spear,if=buff.enrage.up&talent.champions_might\nactions.thane+=/thunder_clap,if=buff.meat_cleaver.stack=0&talent.meat_cleaver&active_enemies>=2\nactions.thane+=/thunder_blast,if=buff.enrage.up&talent.meat_cleaver\nactions.thane+=/rampage,if=buff.enrage.down||(talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up)\nactions.thane+=/execute,if=talent.ashen_juggernaut&buff.ashen_juggernaut.remains<=gcd\nactions.thane+=/bladestorm,if=buff.enrage.up&talent.unhinged\nactions.thane+=/bloodbath\nactions.thane+=/rampage,if=rage>=115&talent.reckless_abandon&buff.recklessness.up&buff.slaughtering_strikes.stack>=3\nactions.thane+=/crushing_blow\nactions.thane+=/onslaught,if=talent.tenderize\nactions.thane+=/bloodthirst,if=talent.vicious_contempt&target.health.pct<35\nactions.thane+=/rampage,if=rage>=100\nactions.thane+=/bloodthirst\nactions.thane+=/odyns_fury,if=active_enemies>1&(buff.enrage.up||talent.titanic_rage)\nactions.thane+=/raging_blow\nactions.thane+=/rampage\nactions.thane+=/thunder_blast,if=!talent.meat_cleaver\nactions.thane+=/thunderous_roar\nactions.thane+=/odyns_fury,if=buff.enrage.up||talent.titanic_rage\nactions.thane+=/champions_spear,if=!talent.champions_might\nactions.thane+=/execute\nactions.thane+=/wrecking_throw\nactions.thane+=/thunder_clap\nactions.thane+=/whirlwind",
["version"] = 20250905,
["warnings"] = "The import for 'default' required some automated changes.\nLine 8: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 8: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 8: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 9: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 9: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 10: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 10: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 10: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 11: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 11: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 11: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 11: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 13: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 13: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 13: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 13: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 13: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 13: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 4: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted operations in 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%%cooldown.avatar.duration=0||trinket.t1.cooldown.duration%%cooldown.odyns_fury.duration=0)' to 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%cooldown.avatar.duration=0||trinket.t1.cooldown.duration%cooldown.odyns_fury.duration=0)'.\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted operations in 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%%cooldown.avatar.duration=0||trinket.t2.cooldown.duration%%cooldown.odyns_fury.duration=0)' to 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%cooldown.avatar.duration=0||trinket.t2.cooldown.duration%cooldown.odyns_fury.duration=0)'.\nLine 7: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 8: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 9: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.proc.any_dps.duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.proc.any_dps.duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.proc.any_dps.duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.proc.any_dps.duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 10: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 11: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\n\nImported 4 action lists.\n",
["spec"] = 72,
["lists"] = {
["precombat"] = {
{
["action"] = "battle_shout",
["enabled"] = true,
},
{
["toggle"] = "on",
["action"] = "berserker_stance",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.treacherous_transmitter",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.treacherous_transmitter",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by avatar or odyns fury. If it's value has no remainder return 1, else return 0.5.",
["criteria"] = "trinket.t1.has_use_buff & ( trinket.t1.cooldown.duration % cooldown.avatar.duration = 0 || trinket.t1.cooldown.duration % cooldown.odyns_fury.duration = 0 )",
["value"] = "1",
["action"] = "variable",
["value_else"] = "0.5",
["var_name"] = "trinket_1_sync",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration % cooldown.avatar.duration = 0 || trinket.t2.cooldown.duration % cooldown.odyns_fury.duration = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_stat.any_dps & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_stat.any_dps & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.proc.any_dps.duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.proc.any_dps.duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "treacherous_transmitter_precombat_cast",
},
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["criteria"] = "! equipped.fyralath_the_dreamrender",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "! equipped.cursed_stone_idol",
["action"] = "avatar",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Executed every time the actor is available.",
["criteria"] = "time <= 0.5 || movement.distance > 5",
["action"] = "charge",
},
{
["enabled"] = true,
["criteria"] = "movement.distance > 25",
["action"] = "heroic_leap",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 300 || fight_remains < 300 & target.health.pct < 35 & buff.recklessness.up || boss & fight_remains < 25",
["action"] = "potion",
},
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
},
{
["action"] = "pummel",
["enabled"] = true,
},
{
["enabled"] = true,
["name"] = "cursed_stone_idol",
["description"] = "Trinkets",
["criteria"] = "cooldown.avatar.remains < 2",
["action"] = "cursed_stone_idol",
},
{
["enabled"] = true,
["criteria"] = "cooldown.avatar.remains <= 85",
["name"] = "unyielding_netherprism",
["action"] = "unyielding_netherprism",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! buff.avatar.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.proc.any_dps.duration >= fight_remains",
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! buff.avatar.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.proc.any_dps.duration >= fight_remains",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["criteria"] = "! variable.trinket_1_buffs & ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! variable.trinket_2_buffs & ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "main_hand",
["criteria"] = "! equipped.fyralath_the_dreamrender & ! equipped.bestinslots & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
["slot"] = "main_hand",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_die > 120 & ( cooldown.avatar.remains > 20 & ( trinket.t1.cooldown.remains || trinket.t2.cooldown.remains ) || cooldown.avatar.remains > 20 & ( ! trinket.t1.has_cooldown || ! trinket.t2.has_cooldown ) ) || target.time_to_die <= 120 & target.health.pct < 35 & cooldown.avatar.remains > 85 || target.time_to_die < 15",
["name"] = "bestinslots",
["action"] = "bestinslots",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1 & ( raid_event.adds.in > 15 || ! raid_event.adds.exists )",
["description"] = "Variables",
["var_name"] = "st_planning",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 5 )",
["var_name"] = "adds_remain",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.massacre.enabled & target.health.pct < 35 ) || target.health.pct < 20",
["var_name"] = "execute_phase",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.recklessness.down & buff.avatar.down & rage < 80 & buff.sudden_death.down & ! cooldown.bladestorm.ready & ( ! cooldown.execute.ready || ! variable.execute_phase )",
["var_name"] = "on_gcd_racials",
},
{
["enabled"] = true,
["criteria"] = "variable.on_gcd_racials",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "variable.on_gcd_racials",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness.up",
["action"] = "berserking",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.lightning_strikes.enabled",
["list_name"] = "slayer",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.lightning_strikes.enabled",
["list_name"] = "thane",
},
},
["slayer"] = {
{
["action"] = "recklessness",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.ashen_juggernaut.up & buff.ashen_juggernaut.remains <= gcd.max",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.remains < 2 & ! variable.execute_phase",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "! cooldown.bladestorm.remains & ( ! cooldown.avatar.remains || ! cooldown.recklessness.remains || buff.avatar.up || buff.recklessness.up ) & buff.enrage.up",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & talent.titanic_rage.enabled & buff.meat_cleaver.stack = 0",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( talent.reckless_abandon.enabled & cooldown.avatar.remains >= 24 || talent.anger_management.enabled & cooldown.recklessness.remains >= 15 & ( buff.avatar.up || cooldown.avatar.remains >= 8 ) )",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & talent.meat_cleaver.enabled & buff.meat_cleaver.stack = 0",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled & buff.brutal_finish.up",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.remains < gcd.max",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.stack = 2 & buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "debuff.marked_for_execution.stack > 1 & buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & ! talent.titanic_rage.enabled",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "action.raging_blow.charges = 2 || buff.brutal_finish.up & ( ! debuff.champions_might.up || debuff.champions_might.up & debuff.champions_might.remains > gcd.max )",
["action"] = "crushing_blow",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodcraze.stack >= 1 || ( talent.uproar.enabled & dot.bloodbath_dot.remains < 40 & talent.bloodborne.enabled ) || buff.enrage.up & buff.enrage.remains < gcd.max",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "buff.brutal_finish.up & buff.slaughtering_strikes.stack < 5 & ( ! debuff.champions_might.up || debuff.champions_might.up & debuff.champions_might.remains > gcd.max )",
["action"] = "raging_blow",
},
{
["enabled"] = true,
["criteria"] = "rage > 115",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "variable.execute_phase & debuff.marked_for_execution.up & buff.enrage.up & active_enemies = 1",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 35 & talent.vicious_contempt.enabled & buff.brutal_finish.up & buff.enrage.up & crit_pct_current >= 85 & active_enemies = 1 || ( ! set_bonus.tww3_4pc & active_enemies > 4 )",
["action"] = "bloodthirst",
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.opportunist.up",
["action"] = "raging_blow",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 35 & talent.vicious_contempt.enabled & crit_pct_current >= 70",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "action.raging_blow.charges = 2",
["action"] = "raging_blow",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up || talent.titanic_rage.enabled",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.up",
["action"] = "execute",
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "wrecking_throw",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
["use_off_gcd"] = 1,
},
},
["thane"] = {
{
["action"] = "recklessness",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.champions_might.enabled",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "buff.meat_cleaver.stack = 0 & talent.meat_cleaver.enabled & active_enemies >= 2",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.meat_cleaver.enabled",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.down || ( talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up )",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled & buff.ashen_juggernaut.remains <= gcd.max",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.unhinged.enabled",
["action"] = "bladestorm",
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "rage >= 115 & talent.reckless_abandon.enabled & buff.recklessness.up & buff.slaughtering_strikes.stack >= 3",
["action"] = "rampage",
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "talent.vicious_contempt.enabled & target.health.pct < 35",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "rage >= 100",
["action"] = "rampage",
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & ( buff.enrage.up || talent.titanic_rage.enabled )",
["action"] = "odyns_fury",
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.meat_cleaver.enabled",
["action"] = "thunder_blast",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up || talent.titanic_rage.enabled",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "! talent.champions_might.enabled",
["action"] = "champions_spear",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "wrecking_throw",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
},
},
},
},
},
},
}
