
HekiliDB = {
["namespaces"] = {
["LibDualSpec-1.0"] = {
},
},
["profileKeys"] = {
["Hijiwar - Tichondrius"] = "Default",
["Tempos - Tichondrius"] = "Default",
["Thoradin - Tichondrius"] = "Default",
["Beppan - Tichondrius"] = "Default",
["Moradin - Tichondrius"] = "Default",
["Mituofo - Tichondrius"] = "Default",
["Epic - 国王之谷"] = "Default",
["Notalentpal - Tichondrius"] = "Default",
["Diirinka - Tichondrius"] = "Default",
["Yesrpg - Tichondrius"] = "Default",
["Lolth - 国王之谷"] = "Default",
["Amitabha - Tichondrius"] = "Default",
["Pazuru - Tichondrius"] = "Default",
},
["profiles"] = {
["Default"] = {
["displays"] = {
["Interrupts"] = {
["rel"] = "CENTER",
["x"] = -54.99999618530273,
},
["Cooldowns"] = {
["rel"] = "CENTER",
},
["Primary"] = {
["rel"] = "CENTER",
["y"] = -393.2980651855469,
["x"] = -820.452880859375,
},
["AOE"] = {
["rel"] = "CENTER",
},
["Defensives"] = {
["rel"] = "CENTER",
["x"] = -109.9999923706055,
},
},
["iconStore"] = {
["minimapPos"] = 157.2981308499025,
},
["toggles"] = {
["essences"] = {
["value"] = false,
},
["interrupts"] = {
["value"] = false,
},
["cooldowns"] = {
["value"] = false,
["override"] = true,
["key"] = "ALT-1",
},
["defensives"] = {
["value"] = false,
},
},
["runOnce"] = {
["forceReloadClassDefaultOptions_20220306_70"] = true,
["forceReloadClassDefaultOptions_20220306_65"] = true,
["forceReloadClassDefaultOptions_20220306_252"] = true,
["forceReloadClassDefaultOptions_20220306_71"] = true,
["resetAberrantPackageDates_20190728_1"] = true,
["forceReloadClassDefaultOptions_20220306_259"] = true,
["forceReloadAllDefaultPriorities_20220228"] = true,
["forceReloadClassDefaultOptions_20220306_250"] = true,
["forceReloadClassDefaultOptions_20220306_268"] = true,
["updateMaxRefreshToNewSpecOptions_20220222"] = true,
["forceReloadClassDefaultOptions_20220306_73"] = true,
["forceReloadClassDefaultOptions_20220306_66"] = true,
["forceEnableAllClassesOnceDueToBug_20220225"] = true,
["forceReloadClassDefaultOptions_20220306_269"] = true,
["forceReloadClassDefaultOptions_20220306_261"] = true,
["forceReloadClassDefaultOptions_20220306_72"] = true,
["forceReloadClassDefaultOptions_20220306_251"] = true,
["fixHavocPriorityVersion_20240805"] = true,
["forceReloadClassDefaultOptions_20220306_270"] = true,
["forceReloadClassDefaultOptions_20220306_260"] = true,
["forceSpellFlashBrightness_20221030"] = true,
},
["specs"] = {
[260] = {
["settings"] = {
["allow_shadowmeld"] = false,
["use_ld_opener"] = false,
["sinister_clash"] = -0.5,
["solo_vanish"] = true,
["check_blade_rush_range"] = true,
["stealth_padding"] = 0.1,
["never_roll_in_window"] = false,
},
},
[261] = {
["settings"] = {
["rupture_duration"] = 12,
["mfd_points"] = 3,
["solo_vanish"] = true,
["priority_rotation"] = false,
},
},
[66] = {
["settings"] = {
["goak_damage"] = 40,
["wog_health"] = 40,
["ds_damage"] = 60,
["sentinel_def"] = false,
},
},
[70] = {
["settings"] = {
["sov_damage"] = 20,
["check_wake_range"] = false,
},
},
[251] = {
["settings"] = {
["bos_rp"] = 50,
["ams_usage"] = "damage",
},
},
[71] = {
["settings"] = {
["heroic_charge"] = false,
["shockwave_interrupt"] = true,
},
},
[268] = {
["settings"] = {
["vivify_percent"] = 65,
["max_damage"] = true,
["purify_stagger_maxhp"] = 6,
["purify_for_celestial"] = true,
["purify_for_niuzao"] = true,
["bof_percent"] = 50,
["eh_percent"] = 65,
["purify_stagger_currhp"] = 12,
},
},
[269] = {
["settings"] = {
["sef_one_charge"] = false,
["tok_damage"] = 1,
["check_wdp_range"] = false,
["allow_fsk"] = false,
["use_diffuse"] = false,
["check_sck_range"] = false,
},
},
[270] = {
["settings"] = {
["aoe_rsk"] = false,
["single_zen_pulse"] = false,
["save_faeline"] = false,
},
},
[72] = {
["settings"] = {
["check_ww_range"] = false,
["shockwave_interrupt"] = true,
["t30_bloodthirst_crit"] = 95,
["heroic_charge"] = false,
},
},
[259] = {
["settings"] = {
["mfd_points"] = 3,
["envenom_pool_pct"] = 50,
["dot_threshold"] = 7,
["priority_rotation"] = false,
["solo_vanish"] = true,
},
},
[252] = {
["settings"] = {
["dps_shell"] = false,
},
},
[250] = {
["settings"] = {
["death_strike_pool_amount"] = 80,
["save_blood_shield"] = true,
["vb_damage"] = 50,
["ibf_damage"] = 40,
["rt_damage"] = 30,
},
},
[73] = {
["settings"] = {
["shield_wall_amount"] = 50,
["rallying_cry_amount"] = 50,
["reserve_rage"] = 60,
["rallying_cry_health"] = 50,
["shockwave_interrupt"] = true,
["shield_wall_health"] = 50,
["last_stand_health"] = 50,
["last_stand_offensively"] = false,
["stack_shield_block"] = false,
["stance_weaving"] = false,
["shield_wall_condition"] = false,
["last_stand_amount"] = 50,
["rallying_cry_condition"] = false,
["last_stand_condition"] = false,
["overlap_ignore_pain"] = false,
},
},
},
["notifications"] = {
["y"] = -340.9789123535156,
["x"] = -871.2927856445312,
},
["packs"] = {
["Windwalker"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewrwithin/profiles/PreRaids/PR_Monk_Windwalker.simc",
["builtIn"] = true,
["date"] = 20240829.1,
["spec"] = 269,
["desc"] = "2024-08-29: SimC update\n\n2024-08-25: Relax opener outside of boss fights\n\n2024-08-22: SimC update\n\n2024-07-26: The War Within",
["lists"] = {
["default_cleave"] = {
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
["description"] = "2-4 targets",
["criteria"] = "buff.pressure_point.up & active_enemies < 4 & cooldown.fists_of_fury.remains > 4",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.stack = 2 & active_enemies > 3",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( energy > 55 & talent.inner_peace.enabled || energy > 60 & ! talent.inner_peace.enabled ) & combo_strike & chi.max - chi >= 2 & buff.teachings_of_the_monastery.stack < buff.teachings_of_the_monastery.max_stack & ( talent.energy_burst.enabled & ! buff.bok_proc.up || ! talent.energy_burst.enabled ) & ! buff.ordered_elements.up || ( talent.energy_burst.enabled & ! buff.bok_proc.up || ! talent.energy_burst.enabled ) & ! buff.ordered_elements.up & ! cooldown.fists_of_fury.remains & chi < 3 || ( prev.strike_of_the_windlord || cooldown.strike_of_the_windlord.remains ) & cooldown.celestial_conduit.remains < 2 & buff.ordered_elements.up & chi < 5 & combo_strike || ( ! buff.heart_of_the_jade_serpent_cdr.up || ! buff.heart_of_the_jade_serpent_cdr_celestial.up ) & combo_strike & chi.deficit >= 2 & ! buff.ordered_elements.up",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["action"] = "touch_of_death",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.storm_earth_and_fire.up & cooldown.strike_of_the_windlord.remains & ( talent.xuens_bond.enabled || ! talent.xuens_bond.enabled & buff.invokers_delight.up ) || boss & fight_remains < 15",
["action"] = "celestial_conduit",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! pet.xuen_the_white_tiger.active & prev.tiger_palm & time < 5 || buff.heart_of_the_jade_serpent_cdr_celestial.up & buff.pressure_point.up",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.heart_of_the_jade_serpent_cdr_celestial.up",
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.heart_of_the_jade_serpent_cdr_celestial.up",
["action"] = "whirling_dragon_punch",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.gale_force.enabled & buff.invokers_delight.up & ( buff.bloodlust.up || cooldown.celestial_conduit.remains & ! buff.heart_of_the_jade_serpent_cdr_celestial.up )",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & buff.bloodlust.up",
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & buff.bloodlust.up & active_enemies < 3",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 8 & ( active_enemies < 3 || talent.shadowboxing_treads.enabled )",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! talent.revolving_whirl.enabled || talent.revolving_whirl.enabled & buff.dance_of_chiji.stack < 2 & active_enemies > 2 || active_enemies < 3",
["action"] = "whirling_dragon_punch",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "time > 5 & ( cooldown.invoke_xuen_the_white_tiger.remains > 15 || talent.flurry_strikes.enabled )",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.the_emperors_capacitor.stack > 19 & combo_strike & talent.power_of_the_thunder_king.enabled",
["action"] = "crackling_jade_lightning",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.stack = 2",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled & active_enemies < 5 & buff.wisdom_of_the_wall_flurry.up & active_enemies < 4",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.ordered_elements.remains > execute_time || ! buff.ordered_elements.up || buff.ordered_elements.remains <= gcd.max || active_enemies > 2",
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled & active_enemies < 5 & buff.wisdom_of_the_wall_flurry.up",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up & buff.chi_energy.stack > 29",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "chi > 4 & ( active_enemies < 3 || talent.glory_of_the_dawn.enabled ) || chi > 2 & energy > 50 & ( active_enemies < 3 || talent.glory_of_the_dawn.enabled ) || cooldown.fists_of_fury.remains > 2 & ( active_enemies < 3 || talent.glory_of_the_dawn.enabled )",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 4 & ! talent.knowledge_of_the_broken_temple.enabled & talent.shadowboxing_treads.enabled & active_enemies < 3",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & talent.crane_vortex.enabled & active_enemies > 2",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled & active_enemies < 5",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi.deficit >= 2 & ( ! buff.ordered_elements.up || energy.time_to_max <= gcd.max * 3 )",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains & buff.teachings_of_the_monastery.stack > 3 & cooldown.rising_sun_kick.remains",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.singularly_focused_jade.enabled || talent.jadefire_harmony.enabled",
["action"] = "jadefire_stomp",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains & ( buff.teachings_of_the_monastery.stack > 3 || buff.ordered_elements.up ) & ( talent.shadowboxing_treads.enabled || buff.bok_proc.up || buff.ordered_elements.up )",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ! buff.ordered_elements.up & talent.crane_vortex.enabled & active_enemies > 2 & chi > 4",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.ordered_elements.up",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( buff.ordered_elements.up || buff.bok_proc.up & chi.deficit >= 1 & talent.energy_burst.enabled ) & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains & ( chi > 2 || energy > 60 || buff.bok_proc.up )",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "jadefire_stomp",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & chi.deficit >= 1",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & talent.hit_combo.enabled",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.ordered_elements.up & ! talent.hit_combo.enabled & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "prev.tiger_palm & chi < 3 & ! cooldown.fists_of_fury.remains",
["action"] = "tiger_palm",
},
},
["aoe_opener"] = {
{
["enabled"] = true,
["action"] = "tiger_palm",
["cycle_targets"] = 1,
["description"] = "aoe opener",
["criteria"] = "chi < 6",
},
},
["precombat"] = {
{
["name"] = "imperfect_ascendancy_serum",
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.react",
["action"] = "spear_hand_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.storm_earth_and_fire.up & ( ! talent.invoke_xuen.enabled || pet.xuen_the_white_tiger.active ) || boss & fight_remains <= 30",
["action"] = "potion",
["description"] = "Potion",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "false",
["var_name"] = "has_external_pi",
["description"] = "Enable PI if available",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Use Trinkets",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Openers",
["strict"] = 1,
["criteria"] = "boss & time < 3 & active_enemies > 2 & chi.deficit > 0",
["list_name"] = "aoe_opener",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "boss & time < 4 & active_enemies < 3 & chi.deficit > 0",
["list_name"] = "normal_opener",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Use Cooldowns",
["strict"] = 1,
["criteria"] = "talent.storm_earth_and_fire.enabled",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Default Priority",
["strict"] = 1,
["criteria"] = "active_enemies >= 5",
["list_name"] = "default_aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "active_enemies > 1 & ( ! boss || chi.deficit = 0 || time > 7 || ! talent.celestial_conduit.enabled ) & active_enemies < 5",
["list_name"] = "default_cleave",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies < 2",
["list_name"] = "default_st",
},
},
["default_aoe"] = {
{
["enabled"] = true,
["action"] = "tiger_palm",
["cycle_targets"] = 1,
["description"] = ">=5 Targets",
["criteria"] = "( energy > 55 & talent.inner_peace.enabled || energy > 60 & ! talent.inner_peace.enabled ) & combo_strike & chi.max - chi >= 2 & buff.teachings_of_the_monastery.stack < buff.teachings_of_the_monastery.max_stack & ( talent.energy_burst.enabled & ! buff.bok_proc.up ) & ! buff.ordered_elements.up || ( talent.energy_burst.enabled & ! buff.bok_proc.up ) & ! buff.ordered_elements.up & ! cooldown.fists_of_fury.remains & chi < 3 || ( prev.strike_of_the_windlord || cooldown.strike_of_the_windlord.remains ) & cooldown.celestial_conduit.remains < 2 & buff.ordered_elements.up & chi < 5 & combo_strike",
},
{
["action"] = "touch_of_death",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.dance_of_chiji.stack = 2 & combo_strike",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.chi_energy.stack > 29 & cooldown.fists_of_fury.remains < 5",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.storm_earth_and_fire.up & cooldown.strike_of_the_windlord.remains & ( talent.xuens_bond.enabled || ! talent.xuens_bond.enabled & buff.invokers_delight.up ) || boss & fight_remains < 15",
["action"] = "celestial_conduit",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! talent.xuens_battlegear.enabled & ! cooldown.whirling_dragon_punch.remains & cooldown.fists_of_fury.remains > 1 & ( ! talent.revolving_whirl.enabled || talent.revolving_whirl.enabled & buff.dance_of_chiji.stack < 2 & active_enemies > 2 ) || ! buff.storm_earth_and_fire.up & buff.pressure_point.up",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! talent.revolving_whirl.enabled || talent.revolving_whirl.enabled & buff.dance_of_chiji.stack < 2 & active_enemies > 2",
["action"] = "whirling_dragon_punch",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.bok_proc.up & chi < 2 & talent.energy_burst.enabled & energy < 55",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "time > 5 & ( cooldown.invoke_xuen_the_white_tiger.remains > 15 || talent.flurry_strikes.enabled )",
["action"] = "strike_of_the_windlord",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 8 & talent.shadowboxing_treads.enabled",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.the_emperors_capacitor.stack > 19 & combo_strike & talent.power_of_the_thunder_king.enabled",
["action"] = "crackling_jade_lightning",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled & buff.wisdom_of_the_wall_flurry.up & chi < 6",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi > 5",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up & buff.chi_energy.stack > 29 & cooldown.fists_of_fury.remains < 5",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up & cooldown.fists_of_fury.remains > 2",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & talent.crane_vortex.enabled & active_enemies > 2 & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled & buff.ordered_elements.up",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi.deficit >= 2 & ( ! buff.ordered_elements.up || energy.time_to_max <= gcd.max * 3 )",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.singularly_focused_jade.enabled || talent.jadefire_harmony.enabled",
["action"] = "jadefire_stomp",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ! buff.ordered_elements.up & talent.crane_vortex.enabled & active_enemies > 2 & chi > 4 & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains & ( buff.teachings_of_the_monastery.stack > 3 || buff.ordered_elements.up ) & ( talent.shadowboxing_treads.enabled || buff.bok_proc.up )",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ! cooldown.fists_of_fury.remains & chi < 3",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( chi > 3 || energy > 55 )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( buff.ordered_elements.up || buff.bok_proc.up & chi.deficit >= 1 & talent.energy_burst.enabled ) & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains & ( chi > 2 || energy > 60 || buff.bok_proc.up )",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "jadefire_stomp",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & chi.deficit >= 1",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.ordered_elements.up",
["action"] = "chi_burst",
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & talent.hit_combo.enabled & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.ordered_elements.up & ! talent.hit_combo.enabled & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "prev.tiger_palm & chi < 3 & ! cooldown.fists_of_fury.remains",
["action"] = "tiger_palm",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "( target.time_to_die > 14 & boss || target.time_to_die > 22 ) & ! cooldown.invoke_xuen_the_white_tiger.remains & ( chi < 5 & ! talent.ordered_elements.enabled || chi < 3 ) & ( combo_strike || ! talent.hit_combo.enabled )",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "cooldown.storm_earth_and_fire.ready & ( target.time_to_die > 14 & boss || target.time_to_die > 22 ) & ( active_enemies > 2 || debuff.acclamation.up ) & ( chi > 2 & talent.ordered_elements.enabled || chi > 5 || chi > 3 & energy < 50 || energy < 50 & active_enemies = 1 ) || boss & fight_remains < 30",
["action"] = "invoke_xuen",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( target.time_to_die > 14 & boss || target.time_to_die > 22 ) & ( active_enemies > 2 || cooldown.rising_sun_kick.remains || ! talent.ordered_elements.enabled ) & ( ( buff.invokers_delight.up & ! buff.bloodlust.up || buff.bloodlust.up & cooldown.storm_earth_and_fire.full_recharge_time < 1 ) || cooldown.storm_earth_and_fire.full_recharge_time < cooldown.invoke_xuen_the_white_tiger.remains & ! buff.bloodlust.up & ( active_enemies > 1 || cooldown.strike_of_the_windlord.remains < 2 & ( talent.flurry_strikes.enabled || buff.heart_of_the_jade_serpent.up ) ) & ( chi > 3 || chi > 1 & talent.ordered_elements.enabled ) || cooldown.storm_earth_and_fire.full_recharge_time < 10 & ( chi > 3 || chi > 1 & talent.ordered_elements.enabled ) ) || boss & fight_remains < 30 || prev.invoke_xuen_the_white_tiger",
["action"] = "storm_earth_and_fire",
},
{
["action"] = "touch_of_karma",
["enabled"] = true,
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
["criteria"] = "( pet.xuen_the_white_tiger.active || ! talent.invoke_xuen_the_white_tiger.enabled ) & ! buff.storm_earth_and_fire.up || boss & fight_remains < 25",
["description"] = "Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=123904/invoke-xuen-the-white-tiger'>Invoke Xuen, the White Tiger</a> is active.",
},
{
["enabled"] = true,
["name"] = "erupting_spear_fragment",
["action"] = "erupting_spear_fragment",
["criteria"] = "buff.storm_earth_and_fire.up",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t1.has_use_buff & ! trinket.t2.has_use_buff & ! buff.storm_earth_and_fire.up & ! pet.xuen_the_white_tiger.active || ( trinket.t1.has_use_buff || trinket.t2.has_use_buff ) & cooldown.invoke_xuen_the_white_tiger.remains > 30 || boss & fight_remains < 5",
["action"] = "manic_grieftorch",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t1.has_use_buff & ! trinket.t2.has_use_buff & ! buff.storm_earth_and_fire.up & ! pet.xuen_the_white_tiger.active || ( trinket.t1.has_use_buff || trinket.t2.has_use_buff ) & cooldown.invoke_xuen_the_white_tiger.remains > 30 || boss & fight_remains < 10",
["action"] = "beacon_to_the_beyond",
},
{
["enabled"] = true,
["criteria"] = "cooldown.fists_of_fury.remains < 2 & cooldown.invoke_xuen_the_white_tiger.remains > 10 || boss & fight_remains < 12",
["action"] = "djaruun_pillar_of_the_elder_flame",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t1.has_use_buff & ! trinket.t2.has_use_buff || ( trinket.t1.has_use_buff || trinket.t2.has_use_buff ) & cooldown.invoke_xuen_the_white_tiger.remains > 10 || boss & fight_remains < 10",
["action"] = "dragonfire_bomb_dispenser",
},
{
["enabled"] = true,
["criteria"] = "( pet.xuen_the_white_tiger.active || ! talent.invoke_xuen_the_white_tiger.enabled ) & buff.storm_earth_and_fire.up || boss & fight_remains < 25",
["action"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t1.has_use_buff & ! trinket.t2.has_use_buff || ( trinket.t1.has_use_buff || trinket.t2.has_use_buff ) & cooldown.invoke_xuen_the_white_tiger.remains > 30",
["action"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "( pet.xuen_the_white_tiger.active || ! talent.invoke_xuen_the_white_tiger.enabled ) & buff.storm_earth_and_fire.up || boss & fight_remains < 25",
["action"] = "mydas_talisman",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t1.has_use_buff & ! trinket.t2.has_use_buff || ( trinket.t1.has_use_buff || trinket.t2.has_use_buff ) & cooldown.invoke_xuen_the_white_tiger.remains > 30",
["action"] = "mydas_talisman",
},
},
["normal_opener"] = {
{
["enabled"] = true,
["action"] = "tiger_palm",
["cycle_targets"] = 1,
["description"] = "normal opener",
["criteria"] = "chi < 6 & combo_strike",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
},
["default_st"] = {
{
["enabled"] = true,
["criteria"] = "buff.pressure_point.up || buff.ordered_elements.remains <= gcd.max * 3 & buff.storm_earth_and_fire.up",
["action"] = "rising_sun_kick",
["description"] = "1 target",
},
{
["enabled"] = true,
["criteria"] = "( energy > 55 & talent.inner_peace.enabled || energy > 60 & ! talent.inner_peace.enabled ) & combo_strike & chi.max - chi >= 2 & buff.teachings_of_the_monastery.stack < buff.teachings_of_the_monastery.max_stack & ( talent.energy_burst.enabled & ! buff.bok_proc.up || ! talent.energy_burst.enabled ) & ! buff.ordered_elements.up || ( talent.energy_burst.enabled & ! buff.bok_proc.up || ! talent.energy_burst.enabled ) & ! buff.ordered_elements.up & ! cooldown.fists_of_fury.remains & chi < 3 || ( prev.strike_of_the_windlord || cooldown.strike_of_the_windlord.remains ) & cooldown.celestial_conduit.remains < 2 & buff.ordered_elements.up & chi < 5 & combo_strike || ( ! buff.heart_of_the_jade_serpent_cdr.up || ! buff.heart_of_the_jade_serpent_cdr_celestial.up ) & combo_strike & chi.deficit >= 2 & ! buff.ordered_elements.up",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["action"] = "touch_of_death",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.storm_earth_and_fire.up & buff.ordered_elements.up & cooldown.strike_of_the_windlord.remains & ( talent.xuens_bond.enabled || ! talent.xuens_bond.enabled & buff.invokers_delight.up ) || boss & fight_remains < 15",
["action"] = "celestial_conduit",
},
{
["enabled"] = true,
["criteria"] = "! pet.xuen_the_white_tiger.active & prev.tiger_palm & time < 5 || buff.storm_earth_and_fire.up & talent.ordered_elements.enabled",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.gale_force.enabled & buff.invokers_delight.up & ( buff.bloodlust.up || cooldown.celestial_conduit.remains & ! buff.heart_of_the_jade_serpent_cdr_celestial.up )",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & buff.bloodlust.up",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & buff.bloodlust.up",
["action"] = "fists_of_fury",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack > 3 & buff.ordered_elements.up & cooldown.rising_sun_kick.remains > 1 & cooldown.fists_of_fury.remains > 2",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.dance_of_chiji.stack = 2 & combo_strike & buff.power_infusion.up & buff.bloodlust.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & buff.bloodlust.up",
["action"] = "whirling_dragon_punch",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled & buff.power_infusion.up & buff.bloodlust.up",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack > 4 & cooldown.rising_sun_kick.remains > 1 & cooldown.fists_of_fury.remains > 2",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.heart_of_the_jade_serpent_cdr_celestial.up & ! buff.dance_of_chiji.stack = 2 || buff.ordered_elements.up || talent.knowledge_of_the_broken_temple.enabled",
["action"] = "whirling_dragon_punch",
},
{
["enabled"] = true,
["criteria"] = "time > 5 & ( cooldown.invoke_xuen_the_white_tiger.remains > 15 || talent.flurry_strikes.enabled )",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "chi > 4 || chi > 2 & energy > 50 || cooldown.fists_of_fury.remains > 2",
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled & buff.wisdom_of_the_wall_flurry.up",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & chi.deficit >= 2 & energy.time_to_max <= gcd.max * 3",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack > 7 & talent.memory_of_the_monastery.enabled & ! buff.memory_of_the_monastery.up & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.ordered_elements.remains > execute_time || ! buff.ordered_elements.up || buff.ordered_elements.remains <= gcd.max",
["action"] = "fists_of_fury",
},
{
["enabled"] = true,
["criteria"] = "( buff.dance_of_chiji.stack = 2 || buff.dance_of_chiji.remains < 2 & buff.dance_of_chiji.up ) & combo_strike & ! buff.ordered_elements.up",
["action"] = "spinning_crane_kick",
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.teachings_of_the_monastery.stack = 4 & ! talent.knowledge_of_the_broken_temple.enabled & cooldown.rising_sun_kick.remains > 1 & cooldown.fists_of_fury.remains > 2",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.dance_of_chiji.stack = 2 & combo_strike",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & cooldown.rising_sun_kick.remains > 1 & cooldown.fists_of_fury.remains > 2",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up & ( buff.ordered_elements.up || energy.time_to_max >= gcd.max * 3 & talent.sequenced_strikes.enabled & talent.energy_burst.enabled || ! talent.sequenced_strikes.enabled || ! talent.energy_burst.enabled || buff.dance_of_chiji.remains <= gcd.max * 3 )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & energy.time_to_max <= gcd.max * 3 & talent.flurry_strikes.enabled",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.singularly_focused_jade.enabled || talent.jadefire_harmony.enabled",
["action"] = "jadefire_stomp",
},
{
["enabled"] = true,
["criteria"] = "! buff.ordered_elements.up",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( buff.ordered_elements.up || buff.bok_proc.up & chi.deficit >= 1 & talent.energy_burst.enabled ) & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.the_emperors_capacitor.stack > 19 & ! buff.ordered_elements.up & combo_strike",
["action"] = "crackling_jade_lightning",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains & ( chi > 2 || energy > 60 || buff.bok_proc.up )",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["action"] = "jadefire_stomp",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & chi.deficit >= 1",
["action"] = "tiger_palm",
["cycle_targets"] = 1,
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.ordered_elements.up & talent.hit_combo.enabled",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.ordered_elements.up & ! talent.hit_combo.enabled & cooldown.fists_of_fury.remains",
["action"] = "blackout_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "prev.tiger_palm & chi < 3 & ! cooldown.fists_of_fury.remains",
["action"] = "tiger_palm",
},
},
},
["version"] = 20240829.1,
["warnings"] = "The import for 'default_cleave' required some automated changes.\nLine 3: Converted 'talent.inner_peace' to 'talent.inner_peace.enabled' (1x).\nLine 3: Converted 'talent.inner_peace' to 'talent.inner_peace.enabled' (1x).\nLine 3: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 3: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 3: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 3: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 5: Converted 'talent.xuens_bond' to 'talent.xuens_bond.enabled' (1x).\nLine 5: Converted 'talent.xuens_bond' to 'talent.xuens_bond.enabled' (1x).\nLine 9: Converted 'talent.gale_force' to 'talent.gale_force.enabled' (1x).\nLine 12: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 13: Converted 'talent.revolving_whirl' to 'talent.revolving_whirl.enabled' (1x).\nLine 13: Converted 'talent.revolving_whirl' to 'talent.revolving_whirl.enabled' (1x).\nLine 14: Converted 'talent.flurry_strikes' to 'talent.flurry_strikes.enabled' (1x).\nLine 15: Converted 'talent.power_of_the_thunder_king' to 'talent.power_of_the_thunder_king.enabled' (1x).\nLine 17: Converted 'talent.flurry_strikes' to 'talent.flurry_strikes.enabled' (1x).\nLine 19: Converted 'talent.flurry_strikes' to 'talent.flurry_strikes.enabled' (1x).\nLine 21: Converted 'talent.glory_of_the_dawn' to 'talent.glory_of_the_dawn.enabled' (1x).\nLine 21: Converted 'talent.glory_of_the_dawn' to 'talent.glory_of_the_dawn.enabled' (1x).\nLine 21: Converted 'talent.glory_of_the_dawn' to 'talent.glory_of_the_dawn.enabled' (1x).\nLine 22: Converted 'talent.knowledge_of_the_broken_temple' to 'talent.knowledge_of_the_broken_temple.enabled' (1x).\nLine 22: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 24: Converted 'talent.crane_vortex' to 'talent.crane_vortex.enabled' (1x).\nLine 25: Converted 'talent.flurry_strikes' to 'talent.flurry_strikes.enabled' (1x).\nLine 28: Converted 'talent.singularly_focused_jade' to 'talent.singularly_focused_jade.enabled' (1x).\nLine 28: Converted 'talent.jadefire_harmony' to 'talent.jadefire_harmony.enabled' (1x).\nLine 29: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 30: Converted 'talent.crane_vortex' to 'talent.crane_vortex.enabled' (1x).\nLine 32: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 37: Converted 'talent.hit_combo' to 'talent.hit_combo.enabled' (1x).\nLine 38: Converted 'talent.hit_combo' to 'talent.hit_combo.enabled' (1x).\n\nThe import for 'default_st' required some automated changes.\nLine 2: Converted 'talent.inner_peace' to 'talent.inner_peace.enabled' (1x).\nLine 2: Converted 'talent.inner_peace' to 'talent.inner_peace.enabled' (1x).\nLine 2: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 2: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 2: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 2: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 4: Converted 'talent.xuens_bond' to 'talent.xuens_bond.enabled' (1x).\nLine 4: Converted 'talent.xuens_bond' to 'talent.xuens_bond.enabled' (1x).\nLine 5: Converted 'talent.ordered_elements' to 'talent.ordered_elements.enabled' (1x).\nLine 6: Converted 'talent.gale_force' to 'talent.gale_force.enabled' (1x).\nLine 12: Converted 'talent.flurry_strikes' to 'talent.flurry_strikes.enabled' (1x).\nLine 14: Converted 'talent.knowledge_of_the_broken_temple' to 'talent.knowledge_of_the_broken_temple.enabled' (1x).\nLine 15: Converted 'talent.flurry_strikes' to 'talent.flurry_strikes.enabled' (1x).\nLine 17: Converted 'talent.flurry_strikes' to 'talent.flurry_strikes.enabled' (1x).\nLine 19: Converted 'talent.memory_of_the_monastery' to 'talent.memory_of_the_monastery.enabled' (1x).\nLine 23: Converted 'talent.knowledge_of_the_broken_temple' to 'talent.knowledge_of_the_broken_temple.enabled' (1x).\nLine 26: Converted 'talent.flurry_strikes' to 'talent.flurry_strikes.enabled' (1x).\nLine 27: Converted 'talent.sequenced_strikes' to 'talent.sequenced_strikes.enabled' (1x).\nLine 27: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 27: Converted 'talent.sequenced_strikes' to 'talent.sequenced_strikes.enabled' (1x).\nLine 27: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 28: Converted 'talent.flurry_strikes' to 'talent.flurry_strikes.enabled' (1x).\nLine 29: Converted 'talent.singularly_focused_jade' to 'talent.singularly_focused_jade.enabled' (1x).\nLine 29: Converted 'talent.jadefire_harmony' to 'talent.jadefire_harmony.enabled' (1x).\nLine 31: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 37: Converted 'talent.hit_combo' to 'talent.hit_combo.enabled' (1x).\nLine 38: Converted 'talent.hit_combo' to 'talent.hit_combo.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.invoke_xuen' to 'talent.invoke_xuen.enabled' (1x).\nLine 7: Converted 'talent.storm_earth_and_fire' to 'talent.storm_earth_and_fire.enabled' (1x).\nLine 9: Converted 'talent.celestial_conduit' to 'talent.celestial_conduit.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Unsupported use_item action [ imperfect_ascendancy_serum]; entry disabled.\n\nThe import for 'cooldowns' required some automated changes.\nLine 1: Converted 'talent.ordered_elements' to 'talent.ordered_elements.enabled' (1x).\nLine 1: Converted 'talent.hit_combo' to 'talent.hit_combo.enabled' (1x).\nLine 2: Converted 'talent.ordered_elements' to 'talent.ordered_elements.enabled' (1x).\nLine 3: Converted 'talent.ordered_elements' to 'talent.ordered_elements.enabled' (1x).\nLine 3: Converted 'talent.flurry_strikes' to 'talent.flurry_strikes.enabled' (1x).\nLine 3: Converted 'talent.ordered_elements' to 'talent.ordered_elements.enabled' (1x).\nLine 3: Converted 'talent.ordered_elements' to 'talent.ordered_elements.enabled' (1x).\n\nThe import for 'default_aoe' required some automated changes.\nLine 1: Converted 'talent.inner_peace' to 'talent.inner_peace.enabled' (1x).\nLine 1: Converted 'talent.inner_peace' to 'talent.inner_peace.enabled' (1x).\nLine 1: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 1: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 5: Converted 'talent.xuens_bond' to 'talent.xuens_bond.enabled' (1x).\nLine 5: Converted 'talent.xuens_bond' to 'talent.xuens_bond.enabled' (1x).\nLine 6: Converted 'talent.xuens_battlegear' to 'talent.xuens_battlegear.enabled' (1x).\nLine 6: Converted 'talent.revolving_whirl' to 'talent.revolving_whirl.enabled' (1x).\nLine 6: Converted 'talent.revolving_whirl' to 'talent.revolving_whirl.enabled' (1x).\nLine 7: Converted 'talent.revolving_whirl' to 'talent.revolving_whirl.enabled' (1x).\nLine 7: Converted 'talent.revolving_whirl' to 'talent.revolving_whirl.enabled' (1x).\nLine 8: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 9: Converted 'talent.flurry_strikes' to 'talent.flurry_strikes.enabled' (1x).\nLine 10: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 11: Converted 'talent.power_of_the_thunder_king' to 'talent.power_of_the_thunder_king.enabled' (1x).\nLine 13: Converted 'talent.flurry_strikes' to 'talent.flurry_strikes.enabled' (1x).\nLine 18: Converted 'talent.crane_vortex' to 'talent.crane_vortex.enabled' (1x).\nLine 19: Converted 'talent.flurry_strikes' to 'talent.flurry_strikes.enabled' (1x).\nLine 21: Converted 'talent.singularly_focused_jade' to 'talent.singularly_focused_jade.enabled' (1x).\nLine 21: Converted 'talent.jadefire_harmony' to 'talent.jadefire_harmony.enabled' (1x).\nLine 22: Converted 'talent.crane_vortex' to 'talent.crane_vortex.enabled' (1x).\nLine 23: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 26: Converted 'talent.energy_burst' to 'talent.energy_burst.enabled' (1x).\nLine 32: Converted 'talent.hit_combo' to 'talent.hit_combo.enabled' (1x).\nLine 33: Converted 'talent.hit_combo' to 'talent.hit_combo.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 1: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 8: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 9: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 10: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 10: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 10: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 10: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\n\nThis profile is missing support for generic trinkets.  It is recommended that every priority includes either:\n - [Use Items], which includes any trinkets not explicitly included in the priority; or\n - [Trinket 1] and [Trinket 2], which will recommend the trinket for the numbered slot.\nImported 9 action lists.\n",
["author"] = "SimC",
["profile"] = "actions.precombat+=/use_item,name=imperfect_ascendancy_serum\n\nactions+=/spear_hand_strike,if=target.debuff.casting.react\n# Potion\nactions+=/potion,if=buff.storm_earth_and_fire.up&(!talent.invoke_xuen||pet.xuen_the_white_tiger.active)||boss&fight_remains<=30\n# Enable PI if available\nactions+=/variable,name=has_external_pi,value=false\n# Use Trinkets\nactions+=/call_action_list,name=trinkets\n# Openers\nactions+=/call_action_list,name=aoe_opener,strict=1,if=boss&time<3&active_enemies>2&chi.deficit>0\nactions+=/call_action_list,name=normal_opener,strict=1,if=boss&time<4&active_enemies<3&chi.deficit>0\n# Use Cooldowns\nactions+=/call_action_list,name=cooldowns,strict=1,if=talent.storm_earth_and_fire\n# Default Priority\nactions+=/call_action_list,name=default_aoe,strict=1,if=active_enemies>=5\nactions+=/call_action_list,name=default_cleave,if=active_enemies>1&(!boss||chi.deficit=0||time>7||!talent.celestial_conduit)&active_enemies<5\nactions+=/call_action_list,name=default_st,strict=1,if=active_enemies<2\n\n# Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=123904/invoke-xuen-the-white-tiger'>Invoke Xuen, the White Tiger</a> is active.\nactions.trinkets+=/use_item,name=algethar_puzzle_box,if=(pet.xuen_the_white_tiger.active||!talent.invoke_xuen_the_white_tiger)&!buff.storm_earth_and_fire.up||boss&fight_remains<25\nactions.trinkets+=/use_item,name=erupting_spear_fragment,if=buff.storm_earth_and_fire.up\nactions.trinkets+=/manic_grieftorch,if=!trinket.1.has_use_buff&!trinket.2.has_use_buff&!buff.storm_earth_and_fire.up&!pet.xuen_the_white_tiger.active||(trinket.1.has_use_buff||trinket.2.has_use_buff)&cooldown.invoke_xuen_the_white_tiger.remains>30||boss&fight_remains<5\nactions.trinkets+=/beacon_to_the_beyond,if=!trinket.1.has_use_buff&!trinket.2.has_use_buff&!buff.storm_earth_and_fire.up&!pet.xuen_the_white_tiger.active||(trinket.1.has_use_buff||trinket.2.has_use_buff)&cooldown.invoke_xuen_the_white_tiger.remains>30||boss&fight_remains<10\nactions.trinkets+=/djaruun_pillar_of_the_elder_flame,if=cooldown.fists_of_fury.remains<2&cooldown.invoke_xuen_the_white_tiger.remains>10||boss&fight_remains<12\nactions.trinkets+=/dragonfire_bomb_dispenser,if=!trinket.1.has_use_buff&!trinket.2.has_use_buff||(trinket.1.has_use_buff||trinket.2.has_use_buff)&cooldown.invoke_xuen_the_white_tiger.remains>10||boss&fight_remains<10\nactions.trinkets+=/trinket1,if=(pet.xuen_the_white_tiger.active||!talent.invoke_xuen_the_white_tiger)&buff.storm_earth_and_fire.up||boss&fight_remains<25\nactions.trinkets+=/trinket1,if=!trinket.1.has_use_buff&!trinket.2.has_use_buff||(trinket.1.has_use_buff||trinket.2.has_use_buff)&cooldown.invoke_xuen_the_white_tiger.remains>30\nactions.trinkets+=/trinket2,if=(pet.xuen_the_white_tiger.active||!talent.invoke_xuen_the_white_tiger)&buff.storm_earth_and_fire.up||boss&fight_remains<25\nactions.trinkets+=/trinket2,if=!trinket.1.has_use_buff&!trinket.2.has_use_buff||(trinket.1.has_use_buff||trinket.2.has_use_buff)&cooldown.invoke_xuen_the_white_tiger.remains>30\n\nactions.cooldowns+=/tiger_palm,cycle_targets=1,if=(target.time_to_die>14&boss||target.time_to_die>22)&!cooldown.invoke_xuen_the_white_tiger.remains&(chi<5&!talent.ordered_elements||chi<3)&(combo_strike||!talent.hit_combo)\nactions.cooldowns+=/invoke_xuen_the_white_tiger,cycle_targets=1,if=cooldown.storm_earth_and_fire.ready&(target.time_to_die>14&boss||target.time_to_die>22)&(active_enemies>2||debuff.acclamation.up)&(chi>2&talent.ordered_elements||chi>5||chi>3&energy<50||energy<50&active_enemies=1)||boss&fight_remains<30\nactions.cooldowns+=/storm_earth_and_fire,if=(target.time_to_die>14&boss||target.time_to_die>22)&(active_enemies>2||cooldown.rising_sun_kick.remains||!talent.ordered_elements)&((buff.invokers_delight.up&!buff.bloodlust.up||buff.bloodlust.up&cooldown.storm_earth_and_fire.full_recharge_time<1)||cooldown.storm_earth_and_fire.full_recharge_time<cooldown.invoke_xuen_the_white_tiger.remains&!buff.bloodlust.up&(active_enemies>1||cooldown.strike_of_the_windlord.remains<2&(talent.flurry_strikes||buff.heart_of_the_jade_serpent.up))&(chi>3||chi>1&talent.ordered_elements)||cooldown.storm_earth_and_fire.full_recharge_time<10&(chi>3||chi>1&talent.ordered_elements))||boss&fight_remains<30||prev.invoke_xuen_the_white_tiger\nactions.cooldowns+=/touch_of_karma\n\n# aoe opener\nactions.aoe_opener+=/tiger_palm,cycle_targets=1,if=chi<6\n\n# normal opener\nactions.normal_opener+=/tiger_palm,cycle_targets=1,if=chi<6&combo_strike\nactions.normal_opener+=/rising_sun_kick,cycle_targets=1\n\n# >=5 Targets\nactions.default_aoe+=/tiger_palm,cycle_targets=1,if=(energy>55&talent.inner_peace||energy>60&!talent.inner_peace)&combo_strike&chi.max-chi>=2&buff.teachings_of_the_monastery.stack<buff.teachings_of_the_monastery.max_stack&(talent.energy_burst&!buff.bok_proc.up)&!buff.ordered_elements.up||(talent.energy_burst&!buff.bok_proc.up)&!buff.ordered_elements.up&!cooldown.fists_of_fury.remains&chi<3||(prev.strike_of_the_windlord||cooldown.strike_of_the_windlord.remains)&cooldown.celestial_conduit.remains<2&buff.ordered_elements.up&chi<5&combo_strike\nactions.default_aoe+=/touch_of_death\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=buff.dance_of_chiji.stack=2&combo_strike\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.chi_energy.stack>29&cooldown.fists_of_fury.remains<5\nactions.default_aoe+=/celestial_conduit,cycle_targets=1,if=buff.storm_earth_and_fire.up&cooldown.strike_of_the_windlord.remains&(talent.xuens_bond||!talent.xuens_bond&buff.invokers_delight.up)||boss&fight_remains<15\nactions.default_aoe+=/rising_sun_kick,,cycle_targets=1,if=!talent.xuens_battlegear&!cooldown.whirling_dragon_punch.remains&cooldown.fists_of_fury.remains>1&(!talent.revolving_whirl||talent.revolving_whirl&buff.dance_of_chiji.stack<2&active_enemies>2)||!buff.storm_earth_and_fire.up&buff.pressure_point.up\nactions.default_aoe+=/whirling_dragon_punch,cycle_targets=1,if=!talent.revolving_whirl||talent.revolving_whirl&buff.dance_of_chiji.stack<2&active_enemies>2\nactions.default_aoe+=/blackout_kick,cycle_targets=1,if=combo_strike&buff.bok_proc.up&chi<2&talent.energy_burst&energy<55\nactions.default_aoe+=/strike_of_the_windlord,cycle_targets=1,if=time>5&(cooldown.invoke_xuen_the_white_tiger.remains>15||talent.flurry_strikes)\nactions.default_aoe+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=8&talent.shadowboxing_treads\nactions.default_aoe+=/crackling_jade_lightning,cycle_targets=1,if=buff.the_emperors_capacitor.stack>19&combo_strike&talent.power_of_the_thunder_king\nactions.default_aoe+=/fists_of_fury,cycle_targets=1\nactions.default_aoe+=/tiger_palm,cycle_targets=1,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes&buff.wisdom_of_the_wall_flurry.up&chi<6\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&chi>5\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.dance_of_chiji.up&buff.chi_energy.stack>29&cooldown.fists_of_fury.remains<5\nactions.default_aoe+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up&cooldown.fists_of_fury.remains>2\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.dance_of_chiji.up&spinning_crane_kick.max\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.ordered_elements.up&talent.crane_vortex&active_enemies>2&spinning_crane_kick.max\nactions.default_aoe+=/tiger_palm,cycle_targets=1,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes&buff.ordered_elements.up\nactions.default_aoe+=/tiger_palm,cycle_targets=1,if=combo_strike&chi.deficit>=2&(!buff.ordered_elements.up||energy.time_to_max<=gcd.max*3)\nactions.default_aoe+=/jadefire_stomp,cycle_targets=1,if=talent.singularly_focused_jade||talent.jadefire_harmony\nactions.default_aoe+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&!buff.ordered_elements.up&talent.crane_vortex&active_enemies>2&chi>4&spinning_crane_kick.max\nactions.default_aoe+=/blackout_kick,cycle_targets=1,if=combo_strike&cooldown.fists_of_fury.remains&(buff.teachings_of_the_monastery.stack>3||buff.ordered_elements.up)&(talent.shadowboxing_treads||buff.bok_proc.up)\nactions.default_aoe+=/blackout_kick,cycle_targets=1,if=combo_strike&!cooldown.fists_of_fury.remains&chi<3\nactions.default_aoe+=/spinning_crane_kick,if=combo_strike&(chi>3||energy>55)\nactions.default_aoe+=/blackout_kick,cycle_targets=1,if=combo_strike&(buff.ordered_elements.up||buff.bok_proc.up&chi.deficit>=1&talent.energy_burst)&cooldown.fists_of_fury.remains\nactions.default_aoe+=/blackout_kick,cycle_targets=1,if=combo_strike&cooldown.fists_of_fury.remains&(chi>2||energy>60||buff.bok_proc.up)\nactions.default_aoe+=/jadefire_stomp,cycle_targets=1\nactions.default_aoe+=/tiger_palm,cycle_targets=1,if=combo_strike&buff.ordered_elements.up&chi.deficit>=1\nactions.default_aoe+=/chi_burst,if=!buff.ordered_elements.up\nactions.default_aoe+=/chi_burst\nactions.default_aoe+=/spinning_crane_kick,if=combo_strike&buff.ordered_elements.up&talent.hit_combo&spinning_crane_kick.max\nactions.default_aoe+=/blackout_kick,cycle_targets=1,if=buff.ordered_elements.up&!talent.hit_combo&cooldown.fists_of_fury.remains\nactions.default_aoe+=/tiger_palm,if=prev.tiger_palm&chi<3&!cooldown.fists_of_fury.remains\n\n# 2-4 targets\nactions.default_cleave+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up&active_enemies<4&cooldown.fists_of_fury.remains>4\nactions.default_cleave+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.dance_of_chiji.stack=2&active_enemies>3\nactions.default_cleave+=/tiger_palm,cycle_targets=1,if=(energy>55&talent.inner_peace||energy>60&!talent.inner_peace)&combo_strike&chi.max-chi>=2&buff.teachings_of_the_monastery.stack<buff.teachings_of_the_monastery.max_stack&(talent.energy_burst&!buff.bok_proc.up||!talent.energy_burst)&!buff.ordered_elements.up||(talent.energy_burst&!buff.bok_proc.up||!talent.energy_burst)&!buff.ordered_elements.up&!cooldown.fists_of_fury.remains&chi<3||(prev.strike_of_the_windlord||cooldown.strike_of_the_windlord.remains)&cooldown.celestial_conduit.remains<2&buff.ordered_elements.up&chi<5&combo_strike||(!buff.heart_of_the_jade_serpent_cdr.up||!buff.heart_of_the_jade_serpent_cdr_celestial.up)&combo_strike&chi.deficit>=2&!buff.ordered_elements.up\nactions.default_cleave+=/touch_of_death\nactions.default_cleave+=/celestial_conduit,cycle_targets=1,if=buff.storm_earth_and_fire.up&cooldown.strike_of_the_windlord.remains&(talent.xuens_bond||!talent.xuens_bond&buff.invokers_delight.up)||boss&fight_remains<15\nactions.default_cleave+=/rising_sun_kick,cycle_targets=1,if=!pet.xuen_the_white_tiger.active&prev.tiger_palm&time<5||buff.heart_of_the_jade_serpent_cdr_celestial.up&buff.pressure_point.up\nactions.default_cleave+=/fists_of_fury,cycle_targets=1,if=buff.heart_of_the_jade_serpent_cdr_celestial.up\nactions.default_cleave+=/whirling_dragon_punch,cycle_targets=1,if=buff.heart_of_the_jade_serpent_cdr_celestial.up\nactions.default_cleave+=/strike_of_the_windlord,cycle_targets=1,if=talent.gale_force&buff.invokers_delight.up&(buff.bloodlust.up||cooldown.celestial_conduit.remains&!buff.heart_of_the_jade_serpent_cdr_celestial.up)\nactions.default_cleave+=/fists_of_fury,cycle_targets=1,if=buff.power_infusion.up&buff.bloodlust.up\nactions.default_cleave+=/rising_sun_kick,cycle_targets=1,if=buff.power_infusion.up&buff.bloodlust.up&active_enemies<3\nactions.default_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=8&(active_enemies<3||talent.shadowboxing_treads)\nactions.default_cleave+=/whirling_dragon_punch,cycle_targets=1,if=!talent.revolving_whirl||talent.revolving_whirl&buff.dance_of_chiji.stack<2&active_enemies>2||active_enemies<3\nactions.default_cleave+=/strike_of_the_windlord,cycle_targets=1,if=time>5&(cooldown.invoke_xuen_the_white_tiger.remains>15||talent.flurry_strikes)\nactions.default_cleave+=/crackling_jade_lightning,cycle_targets=1,if=buff.the_emperors_capacitor.stack>19&combo_strike&talent.power_of_the_thunder_king\nactions.default_cleave+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.dance_of_chiji.stack=2\nactions.default_cleave+=/tiger_palm,cycle_targets=1,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes&active_enemies<5&buff.wisdom_of_the_wall_flurry.up&active_enemies<4\nactions.default_cleave+=/fists_of_fury,cycle_targets=1,if=buff.ordered_elements.remains>execute_time||!buff.ordered_elements.up||buff.ordered_elements.remains<=gcd.max||active_enemies>2\nactions.default_cleave+=/tiger_palm,cycle_targets=1,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes&active_enemies<5&buff.wisdom_of_the_wall_flurry.up\nactions.default_cleave+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.dance_of_chiji.up&buff.chi_energy.stack>29\nactions.default_cleave+=/rising_sun_kick,cycle_targets=1,if=chi>4&(active_enemies<3||talent.glory_of_the_dawn)||chi>2&energy>50&(active_enemies<3||talent.glory_of_the_dawn)||cooldown.fists_of_fury.remains>2&(active_enemies<3||talent.glory_of_the_dawn)\nactions.default_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=4&!talent.knowledge_of_the_broken_temple&talent.shadowboxing_treads&active_enemies<3\nactions.default_cleave+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.dance_of_chiji.up\nactions.default_cleave+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&buff.ordered_elements.up&talent.crane_vortex&active_enemies>2\nactions.default_cleave+=/tiger_palm,cycle_targets=1,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes&active_enemies<5\nactions.default_cleave+=/tiger_palm,cycle_targets=1,if=combo_strike&chi.deficit>=2&(!buff.ordered_elements.up||energy.time_to_max<=gcd.max*3)\nactions.default_cleave+=/blackout_kick,cycle_targets=1,if=combo_strike&cooldown.fists_of_fury.remains&buff.teachings_of_the_monastery.stack>3&cooldown.rising_sun_kick.remains\nactions.default_cleave+=/jadefire_stomp,cycle_targets=1,if=talent.singularly_focused_jade||talent.jadefire_harmony\nactions.default_cleave+=/blackout_kick,cycle_targets=1,if=combo_strike&cooldown.fists_of_fury.remains&(buff.teachings_of_the_monastery.stack>3||buff.ordered_elements.up)&(talent.shadowboxing_treads||buff.bok_proc.up||buff.ordered_elements.up)\nactions.default_cleave+=/spinning_crane_kick,cycle_targets=1,if=combo_strike&!buff.ordered_elements.up&talent.crane_vortex&active_enemies>2&chi>4\nactions.default_cleave+=/chi_burst,if=!buff.ordered_elements.up\nactions.default_cleave+=/blackout_kick,cycle_targets=1,if=combo_strike&(buff.ordered_elements.up||buff.bok_proc.up&chi.deficit>=1&talent.energy_burst)&cooldown.fists_of_fury.remains\nactions.default_cleave+=/blackout_kick,cycle_targets=1,if=combo_strike&cooldown.fists_of_fury.remains&(chi>2||energy>60||buff.bok_proc.up)\nactions.default_cleave+=/jadefire_stomp,cycle_targets=1\nactions.default_cleave+=/tiger_palm,cycle_targets=1,if=combo_strike&buff.ordered_elements.up&chi.deficit>=1\nactions.default_cleave+=/chi_burst\nactions.default_cleave+=/spinning_crane_kick,if=combo_strike&buff.ordered_elements.up&talent.hit_combo\nactions.default_cleave+=/blackout_kick,cycle_targets=1,if=buff.ordered_elements.up&!talent.hit_combo&cooldown.fists_of_fury.remains\nactions.default_cleave+=/tiger_palm,if=prev.tiger_palm&chi<3&!cooldown.fists_of_fury.remains\n\n# 1 target\nactions.default_st+=/rising_sun_kick,if=buff.pressure_point.up||buff.ordered_elements.remains<=gcd.max*3&buff.storm_earth_and_fire.up\nactions.default_st+=/tiger_palm,cycle_targets=1,if=(energy>55&talent.inner_peace||energy>60&!talent.inner_peace)&combo_strike&chi.max-chi>=2&buff.teachings_of_the_monastery.stack<buff.teachings_of_the_monastery.max_stack&(talent.energy_burst&!buff.bok_proc.up||!talent.energy_burst)&!buff.ordered_elements.up||(talent.energy_burst&!buff.bok_proc.up||!talent.energy_burst)&!buff.ordered_elements.up&!cooldown.fists_of_fury.remains&chi<3||(prev.strike_of_the_windlord||cooldown.strike_of_the_windlord.remains)&cooldown.celestial_conduit.remains<2&buff.ordered_elements.up&chi<5&combo_strike||(!buff.heart_of_the_jade_serpent_cdr.up||!buff.heart_of_the_jade_serpent_cdr_celestial.up)&combo_strike&chi.deficit>=2&!buff.ordered_elements.up\nactions.default_st+=/touch_of_death\nactions.default_st+=/celestial_conduit,if=buff.storm_earth_and_fire.up&buff.ordered_elements.up&cooldown.strike_of_the_windlord.remains&(talent.xuens_bond||!talent.xuens_bond&buff.invokers_delight.up)||boss&fight_remains<15\nactions.default_st+=/rising_sun_kick,cycle_targets=1,if=!pet.xuen_the_white_tiger.active&prev.tiger_palm&time<5||buff.storm_earth_and_fire.up&talent.ordered_elements\nactions.default_st+=/strike_of_the_windlord,if=talent.gale_force&buff.invokers_delight.up&(buff.bloodlust.up||cooldown.celestial_conduit.remains&!buff.heart_of_the_jade_serpent_cdr_celestial.up)\nactions.default_st+=/rising_sun_kick,cycle_targets=1,if=buff.power_infusion.up&buff.bloodlust.up\nactions.default_st+=/fists_of_fury,cycle_targets=1,if=buff.power_infusion.up&buff.bloodlust.up\nactions.default_st+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack>3&buff.ordered_elements.up&cooldown.rising_sun_kick.remains>1&cooldown.fists_of_fury.remains>2\nactions.default_st+=/spinning_crane_kick,if=buff.dance_of_chiji.stack=2&combo_strike&buff.power_infusion.up&buff.bloodlust.up\nactions.default_st+=/whirling_dragon_punch,if=buff.power_infusion.up&buff.bloodlust.up\nactions.default_st+=/tiger_palm,cycle_targets=1,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes&buff.power_infusion.up&buff.bloodlust.up\nactions.default_st+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack>4&cooldown.rising_sun_kick.remains>1&cooldown.fists_of_fury.remains>2\nactions.default_st+=/whirling_dragon_punch,if=!buff.heart_of_the_jade_serpent_cdr_celestial.up&!buff.dance_of_chiji.stack=2||buff.ordered_elements.up||talent.knowledge_of_the_broken_temple\nactions.default_st+=/strike_of_the_windlord,if=time>5&(cooldown.invoke_xuen_the_white_tiger.remains>15||talent.flurry_strikes)\nactions.default_st+=/rising_sun_kick,cycle_targets=1,if=chi>4||chi>2&energy>50||cooldown.fists_of_fury.remains>2\nactions.default_st+=/tiger_palm,cycle_targets=1,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes&buff.wisdom_of_the_wall_flurry.up\nactions.default_st+=/tiger_palm,cycle_targets=1,if=combo_strike&chi.deficit>=2&energy.time_to_max<=gcd.max*3\nactions.default_st+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack>7&talent.memory_of_the_monastery&!buff.memory_of_the_monastery.up&cooldown.fists_of_fury.remains\nactions.default_st+=/fists_of_fury,if=buff.ordered_elements.remains>execute_time||!buff.ordered_elements.up||buff.ordered_elements.remains<=gcd.max\nactions.default_st+=/spinning_crane_kick,if=(buff.dance_of_chiji.stack=2||buff.dance_of_chiji.remains<2&buff.dance_of_chiji.up)&combo_strike&!buff.ordered_elements.up\nactions.default_st+=/whirling_dragon_punch\nactions.default_st+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=4&!talent.knowledge_of_the_broken_temple&cooldown.rising_sun_kick.remains>1&cooldown.fists_of_fury.remains>2\nactions.default_st+=/spinning_crane_kick,if=buff.dance_of_chiji.stack=2&combo_strike\nactions.default_st+=/blackout_kick,cycle_targets=1,if=combo_strike&buff.ordered_elements.up&cooldown.rising_sun_kick.remains>1&cooldown.fists_of_fury.remains>2\nactions.default_st+=/tiger_palm,cycle_targets=1,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes\nactions.default_st+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up&(buff.ordered_elements.up||energy.time_to_max>=gcd.max*3&talent.sequenced_strikes&talent.energy_burst||!talent.sequenced_strikes||!talent.energy_burst||buff.dance_of_chiji.remains<=gcd.max*3)\nactions.default_st+=/tiger_palm,cycle_targets=1,if=combo_strike&energy.time_to_max<=gcd.max*3&talent.flurry_strikes\nactions.default_st+=/jadefire_stomp,if=talent.singularly_focused_jade||talent.jadefire_harmony\nactions.default_st+=/chi_burst,if=!buff.ordered_elements.up\nactions.default_st+=/blackout_kick,cycle_targets=1,if=combo_strike&(buff.ordered_elements.up||buff.bok_proc.up&chi.deficit>=1&talent.energy_burst)&cooldown.fists_of_fury.remains\nactions.default_st+=/crackling_jade_lightning,if=buff.the_emperors_capacitor.stack>19&!buff.ordered_elements.up&combo_strike\nactions.default_st+=/blackout_kick,cycle_targets=1,if=combo_strike&cooldown.fists_of_fury.remains&(chi>2||energy>60||buff.bok_proc.up)\nactions.default_st+=/jadefire_stomp\nactions.default_st+=/tiger_palm,cycle_targets=1,if=combo_strike&buff.ordered_elements.up&chi.deficit>=1\nactions.default_st+=/chi_burst\nactions.default_st+=/spinning_crane_kick,if=combo_strike&buff.ordered_elements.up&talent.hit_combo\nactions.default_st+=/blackout_kick,cycle_targets=1,if=buff.ordered_elements.up&!talent.hit_combo&cooldown.fists_of_fury.remains\nactions.default_st+=/tiger_palm,if=prev.tiger_palm&chi<3&!cooldown.fists_of_fury.remains",
},
["Holy Paladin"] = {
["builtIn"] = true,
["date"] = 20240805,
["spec"] = 65,
["desc"] = "Healer priorities are DPS-focused only\n\n2024-07-30: The War Within",
["lists"] = {
["spenders"] = {
{
["enabled"] = true,
["criteria"] = "solo & ( health.pct < 70 || ! equipped.shield ) & buff.shining_righteousness_ready.up || buff.empyrean_legacy.up",
["action"] = "word_of_glory",
},
{
["enabled"] = true,
["criteria"] = "group & buff.shining_righteousness_ready.up",
["action"] = "light_of_dawn",
},
{
["action"] = "shield_of_the_righteous",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "rebuke",
["enabled"] = true,
},
{
["action"] = "avenging_wrath",
["enabled"] = true,
},
{
["action"] = "avenging_crusader",
["enabled"] = true,
},
{
["action"] = "blessing_of_summer",
["enabled"] = true,
},
{
["action"] = "blessing_of_autumn",
["enabled"] = true,
},
{
["action"] = "blessing_of_winter",
["enabled"] = true,
},
{
["action"] = "blessing_of_spring",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up || buff.avenging_wrath.up || buff.avenging_crusader.up",
["action"] = "fireblood",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! talent.avenging_crusader.enabled || cooldown.avenging_crusader.remains > gcd.max || holy_power.deficit = 0",
["list_name"] = "spenders",
},
{
["action"] = "divine_toll",
["enabled"] = true,
},
{
["action"] = "holy_prism",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "group",
["action"] = "beacon_of_virtue",
},
{
["enabled"] = true,
["criteria"] = "! consecration.up & action.crusader_strike.in_range",
["action"] = "consecration",
},
{
["action"] = "hammer_of_wrath",
["enabled"] = true,
},
{
["action"] = "judgment",
["enabled"] = true,
},
{
["action"] = "holy_shock",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.holy_shock.remains > gcd.max",
["action"] = "crusader_strike",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "buff.paladin_aura.down",
["action"] = "devotion_aura",
},
{
["enabled"] = true,
["criteria"] = "active_dot.beacon_of_light = 0",
["action"] = "beacon_of_light",
},
{
["enabled"] = true,
["criteria"] = "group & active_dot.beacon_of_faith = 0",
["action"] = "beacon_of_faith",
},
},
},
["version"] = 20240805,
["warnings"] = "The import for 'default' required some automated changes.\nLine 12: Converted 'talent.avenging_crusader' to 'talent.avenging_crusader.enabled' (1x).\n\nImported 3 action lists.\n",
["profile"] = "actions.precombat+=/devotion_aura,if=buff.paladin_aura.down\nactions.precombat+=/beacon_of_light,if=active_dot.beacon_of_light=0\nactions.precombat+=/beacon_of_faith,if=group&active_dot.beacon_of_faith=0\n\nactions+=/rebuke\nactions+=/avenging_wrath\nactions+=/avenging_crusader\nactions+=/blessing_of_summer\nactions+=/blessing_of_autumn\nactions+=/blessing_of_winter\nactions+=/blessing_of_spring\nactions+=/lights_judgment\nactions+=/potion\nactions+=/fireblood,if=buff.bloodlust.up||buff.avenging_wrath.up||buff.avenging_crusader.up\nactions+=/use_items\nactions+=/call_action_list,name=spenders,strict=1,if=!talent.avenging_crusader||cooldown.avenging_crusader.remains>gcd.max||holy_power.deficit=0\nactions+=/divine_toll\nactions+=/holy_prism\nactions+=/beacon_of_virtue,if=group\nactions+=/consecration,if=!consecration.up&action.crusader_strike.in_range\nactions+=/hammer_of_wrath\nactions+=/judgment\nactions+=/holy_shock\nactions+=/crusader_strike,if=cooldown.holy_shock.remains>gcd.max\nactions+=/arcane_torrent\n\nactions.spenders+=/word_of_glory,if=solo&(health.pct<70||!equipped.shield)&buff.shining_righteousness_ready.up||buff.empyrean_legacy.up\nactions.spenders+=/light_of_dawn,if=group&buff.shining_righteousness_ready.up\nactions.spenders+=/shield_of_the_righteous",
["author"] = "Kaleokalani",
},
["Assassination"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240829,
["author"] = "SimC",
["desc"] = "2024-08-29: Allow filler Envenom\n\n2024-08-24: SimC update; relax energy regen requirements\n\n2024-08-22: Enable more AOE\n\n2024-08-14: Fix scent_saturation variable\n\n2024-08-09, 10: Updates from SimC\n\n2024-07-27: The War Within",
["lists"] = {
["stealthed"] = {
{
["enabled"] = true,
["action"] = "pool_resource",
["description"] = "Stealthed Actions",
["for_next"] = 1,
},
{
["enabled"] = true,
["action"] = "ambush",
["description"] = "Apply Deathstalkers Mark if it has fallen off and we have no way to reapply otherwise",
["criteria"] = "! debuff.deathstalkers_mark.up & talent.deathstalkers_mark.enabled & ! buff.darkest_night.up",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Make sure to have Shiv up during Kingsbane as a final check",
["criteria"] = "talent.kingsbane.enabled & ( dot.kingsbane.ticking || cooldown.kingsbane.up ) & ( ! debuff.shiv.up & debuff.shiv.remains < 1 ) & buff.envenom.up",
},
{
["enabled"] = true,
["action"] = "envenom",
["description"] = "Envenom to maintain the buff during Subterfuge",
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & dot.kingsbane.ticking & buff.envenom.remains <= 3",
},
{
["enabled"] = true,
["action"] = "envenom",
["description"] = "Envenom during Master Assassin in single target",
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & buff.master_assassin_aura.up & variable.single_target",
},
{
["enabled"] = true,
["action"] = "rupture",
["cycle_targets"] = 1,
["description"] = "Rupture during Indiscriminate Carnage",
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & buff.indiscriminate_carnage.up & refreshable & ( ! variable.regen_saturated || ! variable.scent_saturation || ! dot.rupture.ticking )",
},
{
["enabled"] = true,
["action"] = "garrote",
["cycle_targets"] = 1,
["description"] = "Improved Garrote: Apply or Refresh with buffed Garrotes, accounting for Indiscriminate Carnage",
["criteria"] = "stealthed.improved_garrote & ( remains < 12 || pmultiplier <= 1 || ( buff.indiscriminate_carnage.up & active_dot.garrote < cycle_enemies ) ) & ! variable.single_target & target.time_to_die - remains > 2",
},
{
["enabled"] = true,
["criteria"] = "stealthed.improved_garrote & ( pmultiplier <= 1 || remains < 12 || ! variable.single_target & buff.master_assassin_aura.remains < 3 ) & combo_points.deficit >= 1 + 2 * talent.shrouded_suffocation.enabled",
["action"] = "garrote",
},
},
["vanish"] = {
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
["extra_amount"] = "45",
["description"] = "Stealth Cooldowns   Vanish Sync for Improved Garrote with Deathmark",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish to fish for Fateful Ending if possible",
["criteria"] = "! buff.fatebound_lucky_coin.up & ( buff.fatebound_coin_tails.stack >= 5 || buff.fatebound_coin_heads.stack >= 5 )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish to spread Garrote during Deathmark without Indiscriminate Carnage",
["criteria"] = "! talent.master_assassin.enabled & ! talent.indiscriminate_carnage.enabled & talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & ( debuff.deathmark.up || cooldown.deathmark.remains < 4 ) & combo_points.deficit >= ( spell_targets.fan_of_knives >? 4 )",
},
{
["enabled"] = true,
["action"] = "pool_resource",
["extra_amount"] = "45",
["for_next"] = 1,
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish for cleaving Garrotes with Indiscriminate Carnage",
["criteria"] = "! talent.master_assassin.enabled & talent.indiscriminate_carnage.enabled & talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & spell_targets.fan_of_knives > 2",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish for Master Assassin during Kingsbane",
["criteria"] = "talent.master_assassin.enabled & talent.kingsbane.enabled & dot.kingsbane.remains <= 3 & dot.kingsbane.ticking & debuff.deathmark.remains <= 3 & dot.deathmark.ticking",
},
{
["enabled"] = true,
["criteria"] = "! talent.master_assassin.enabled & talent.indiscriminate_carnage.enabled & talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & spell_targets.fan_of_knives > 2 & ( target.time_to_die - remains > 15 || raid_event.adds.in > 20 )",
["action"] = "vanish",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish fallback for Master Assassin",
["criteria"] = "! talent.improved_garrote.enabled & talent.master_assassin.enabled & ! dot.rupture.refreshable & dot.garrote.remains > 3 & debuff.deathmark.up & ( debuff.shiv.up || debuff.deathmark.remains < 4 )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish fallback for Improved Garrote during Deathmark if no add waves are expected",
["criteria"] = "talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & ( debuff.deathmark.up || cooldown.deathmark.remains < 4 ) & raid_event.adds.in > 30",
},
},
["core_dot"] = {
{
["enabled"] = true,
["action"] = "garrote",
["description"] = "Core damage over time abilities used everywhere  Maintain Garrote",
["criteria"] = "combo_points.deficit >= 1 & ( pmultiplier <= 1 ) & refreshable & target.time_to_die - remains > 12",
},
{
["enabled"] = true,
["action"] = "rupture",
["description"] = "Maintain Rupture unless darkest night is up",
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & ( pmultiplier <= 1 ) & refreshable & target.time_to_die - remains > ( 4 + ( talent.dashing_scoundrel.enabled * 5 ) + ( variable.regen_saturated * 6 ) ) & ! buff.darkest_night.up",
},
},
["shiv"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking",
["var_name"] = "shiv_condition",
["description"] = "Shiv conditions",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.kingsbane.enabled & buff.envenom.up & variable.shiv_condition",
["var_name"] = "shiv_kingsbane_condition",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Shiv for aoe with Arterial Precision",
["criteria"] = "talent.arterial_precision.enabled & variable.shiv_condition & spell_targets.fan_of_knives >= 4 & dot.crimson_tempest.ticking || fight_remains <= charges * 8",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Shiv cases for Kingsbane",
["criteria"] = "! talent.lightweight_shiv.enabled & variable.shiv_kingsbane_condition & ( dot.kingsbane.ticking & dot.kingsbane.remains < 8 || cooldown.kingsbane.remains >= 24 ) & ( ! talent.crimson_tempest.enabled || variable.single_target || dot.crimson_tempest.ticking ) || fight_remains <= charges * 8",
},
{
["enabled"] = true,
["criteria"] = "talent.lightweight_shiv.enabled & variable.shiv_kingsbane_condition & ( dot.kingsbane.ticking || cooldown.kingsbane.remains <= 1 ) || fight_remains <= charges * 8",
["action"] = "shiv",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Fallback shiv for arterial during deathmark",
["criteria"] = "talent.arterial_precision.enabled & variable.shiv_condition & debuff.deathmark.up || fight_remains <= charges * 8",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Fallback if no special cases apply",
["criteria"] = "! talent.kingsbane.enabled & ! talent.arterial_precision.enabled & variable.shiv_condition & ( ! talent.crimson_tempest.enabled || variable.single_target || dot.crimson_tempest.ticking ) || fight_remains <= charges * 8",
},
},
["misc_cds"] = {
{
["enabled"] = true,
["action"] = "potion",
["description"] = "Miscellaneous Cooldowns Potion",
["criteria"] = "buff.bloodlust.react || boss & fight_remains < 30 || debuff.deathmark.up",
},
{
["enabled"] = true,
["action"] = "blood_fury",
["description"] = "Various special racials to be synced with cooldowns",
["criteria"] = "debuff.deathmark.up",
},
{
["enabled"] = true,
["criteria"] = "debuff.deathmark.up",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "debuff.deathmark.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.kingsbane.enabled & debuff.deathmark.up & debuff.shiv.up ) || ( talent.kingsbane.enabled & debuff.deathmark.up & dot.kingsbane.ticking & dot.kingsbane.remains < 8 )",
["action"] = "ancestral_call",
},
},
["aoe_dot"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "effective_combo_points >= variable.effective_spend_cp & ( pmultiplier <= 1 )",
["var_name"] = "dot_finisher_condition",
["description"] = "Helper Variable to check basic finisher conditions",
},
{
["enabled"] = true,
["action"] = "crimson_tempest",
["description"] = "Crimson Tempest on 3+ Targets if we have enough energy regen",
["criteria"] = "spell_targets >= 3 & variable.dot_finisher_condition & refreshable & ! cooldown.deathmark.ready & target.time_to_die - remains > 6",
},
{
["enabled"] = true,
["action"] = "garrote",
["cycle_targets"] = 1,
["description"] = "Garrote upkeep, also uses it in AoE to reach energy saturation",
["criteria"] = "combo_points.deficit >= 1 & ( pmultiplier <= 1 ) & refreshable & ! variable.regen_saturated & spell_targets.fan_of_knives >= 2 & target.time_to_die - remains > 12",
},
{
["enabled"] = true,
["action"] = "rupture",
["cycle_targets"] = 1,
["description"] = "Rupture upkeep, also uses it in AoE to reach energy saturation",
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & ( pmultiplier <= 1 ) & refreshable & ( ! variable.regen_saturated & ( talent.scent_of_blood.rank = 2 || talent.scent_of_blood.rank <= 1 & ( buff.indiscriminate_carnage.up || target.time_to_die - remains > 15 ) ) ) & target.time_to_die - remains > ( 4 + ( talent.dashing_scoundrel.enabled * 5 ) + ( variable.regen_saturated * 6 ) ) & ! buff.darkest_night.up",
},
{
["enabled"] = true,
["criteria"] = "combo_points.deficit >= 1 & ( pmultiplier <= 1 ) & refreshable & ! variable.regen_saturated & target.time_to_die - remains > 12",
["action"] = "garrote",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rupture",
["cycle_targets"] = 1,
["description"] = "Rupture upkeep, also uses it in AoE to reach energy or scent of blood saturation",
["criteria"] = "variable.dot_finisher_condition & refreshable & ( ! variable.regen_saturated & ( talent.scent_of_blood.rank = 2 || talent.scent_of_blood.rank <= 1 & ( buff.indiscriminate_carnage.up || target.time_to_die - remains > 15 ) ) ) & target.time_to_die - remains > ( 4 + ( talent.dashing_scoundrel.enabled * 5 ) + ( variable.regen_saturated * 6 ) ) & ! buff.darkest_night.up",
},
{
["enabled"] = true,
["criteria"] = "variable.dot_finisher_condition & refreshable & variable.regen_saturated & ! variable.scent_saturation & target.time_to_die - remains > 15 & ! buff.darkest_night.up",
["action"] = "rupture",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "garrote",
["description"] = "Garrote as a special generator for the last CP before a finisher for edge case handling",
["criteria"] = "refreshable & combo_points.deficit >= 1 & ( pmultiplier <= 1 || remains <= tick_time & spell_targets.fan_of_knives >= 3 ) & ( remains <= tick_time * 2 & spell_targets.fan_of_knives >= 3 ) & ( target.time_to_die - remains ) > 4 & master_assassin_remains = 0",
},
},
["items"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "dot.rupture.ticking & cooldown.deathmark.remains < 2 || boss & fight_remains <= 22",
["var_name"] = "base_trinket_condition",
["description"] = "Special Case Trinkets",
},
{
["enabled"] = true,
["action"] = "ashes_of_the_embersoul",
["use_off_gcd"] = 1,
["criteria"] = "( dot.kingsbane.ticking & dot.kingsbane.remains <= 11 ) || boss & fight_remains <= 22",
["name"] = "ashes_of_the_embersoul",
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["criteria"] = "variable.base_trinket_condition",
["name"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["action"] = "treacherous_transmitter",
["use_off_gcd"] = 1,
["criteria"] = "variable.base_trinket_condition",
["name"] = "treacherous_transmitter",
},
{
["enabled"] = false,
["use_off_gcd"] = 1,
["criteria"] = "variable.base_trinket_condition",
["name"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["criteria"] = "dot.rupture.ticking & cooldown.deathmark.remains < 2 || boss & fight_remains <= 22",
["name"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["criteria"] = "( variable.trinket_sync_slot = 1 & ( debuff.deathmark.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 2 & ( ! trinket.t2.cooldown.ready || ! debuff.deathmark.up & cooldown.deathmark.remains > 20 ) ) || ! variable.trinket_sync_slot )",
["action"] = "trinket1",
["slots"] = "trinket1",
["description"] = "Fallback case for using stat trinkets",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "( variable.trinket_sync_slot = 2 & ( debuff.deathmark.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 1 & ( ! trinket.t1.cooldown.ready || ! debuff.deathmark.up & cooldown.deathmark.remains > 20 ) ) || ! variable.trinket_sync_slot )",
["slots"] = "trinket2",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Restealth if possible (no vulnerable enemies in combat)",
["action"] = "stealth",
},
{
["enabled"] = true,
["description"] = "Interrupt on cooldown to allow simming interactions with that",
["action"] = "kick",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.fan_of_knives < 2",
["var_name"] = "single_target",
["description"] = "Conditional to check if there is only one enemy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "energy.regen_combined > 15",
["var_name"] = "regen_saturated",
["description"] = "Combined Energy Regen needed to saturate (TODO: estimate poisoned_bleeds better)",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( dot.deathmark.ticking || dot.kingsbane.ticking || debuff.shiv.up ) || ( buff.envenom.up & buff.envenom.remains <= 1 ) || energy.pct >= ( 40 + 30 * talent.hand_of_fate.enabled - 15 * talent.vicious_venoms.enabled ) || boss & fight_remains <= 20",
["var_name"] = "not_pooling",
["description"] = "Check if we should be using our energy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( spell_targets.fan_of_knives * talent.scent_of_blood.rank * 2 ) >? 20",
["var_name"] = "scent_effective_max_stacks",
["description"] = "AoE Damage over time abilities Check what the maximum Scent of Blood stacks is currently",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.scent_of_blood.stack >= variable.scent_effective_max_stacks",
["var_name"] = "scent_saturation",
["description"] = "We are Scent Saturated when our stack count is hitting the maximum",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "stealthed.rogue || stealthed.improved_garrote || master_assassin_remains > 0",
["list_name"] = "stealthed",
},
{
["enabled"] = true,
["action"] = "slice_and_dice",
["description"] = "Put SnD up initially for Cut to the Chase, refresh with Envenom if at low duration",
["criteria"] = "! buff.slice_and_dice.up & dot.rupture.ticking & combo_points >= 1 & ( ! buff.indiscriminate_carnage.up || variable.single_target )",
},
{
["enabled"] = true,
["criteria"] = "buff.slice_and_dice.up & buff.slice_and_dice.remains < 5 & combo_points >= 5",
["action"] = "envenom",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "core_dot",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! variable.single_target",
["list_name"] = "aoe_dot",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "direct",
},
{
["enabled"] = true,
["criteria"] = "energy.deficit >= 15 + energy.regen_combined",
["action"] = "arcane_torrent",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "apply_poison",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "trinket_sync_slot",
["value"] = "1",
["description"] = "Check which trinket slots have Stat Values",
["criteria"] = "trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration ) & ! trinket.t2.is.witherbarks_branch || trinket.t1.is.witherbarks_branch",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration ) & ! trinket.t1.is.witherbarks_branch || trinket.t2.is.witherbarks_branch",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cp_max_spend - 2 <? 5 * talent.hand_of_fate.enabled",
["var_name"] = "effective_spend_cp",
["description"] = "Determine combo point finish condition",
},
{
["enabled"] = true,
["description"] = "Pre-cast Slice and Dice if possible",
["action"] = "stealth",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! buff.indiscriminate_carnage.up",
["action"] = "slice_and_dice",
["precombat_seconds"] = "1",
},
},
["direct"] = {
{
["enabled"] = true,
["action"] = "envenom",
["description"] = "Direct Damage Abilities   Envenom at applicable cp if not pooling, capped on amplifying poison stacks, on an animacharged CP, or in aoe.",
["criteria"] = "! buff.darkest_night.up & effective_combo_points >= variable.effective_spend_cp & ( variable.not_pooling || debuff.amplifying_poison.stack >= 20 || effective_combo_points > cp_max_spend || ! variable.single_target ) & ! buff.vanish.up",
},
{
["enabled"] = true,
["action"] = "envenom",
["description"] = "Special Envenom handling for Darkest Night",
["criteria"] = "buff.darkest_night.up & effective_combo_points >= cp_max_spend",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "combo_points.deficit > 1 || variable.not_pooling || ! variable.single_target",
["var_name"] = "use_filler",
["description"] = "Check if we should be using a filler",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.caustic_spatter.enabled & dot.rupture.ticking & ( ! debuff.caustic_spatter.up || debuff.caustic_spatter.remains <= 2 ) & combo_points.deficit > 1 & ! variable.single_target",
["var_name"] = "use_caustic_filler",
["description"] = "Maintain Caustic Spatter",
},
{
["enabled"] = true,
["criteria"] = "variable.use_caustic_filler",
["action"] = "mutilate",
},
{
["enabled"] = true,
["criteria"] = "variable.use_caustic_filler",
["action"] = "ambush",
},
{
["enabled"] = true,
["action"] = "echoing_reprimand",
["description"] = "Use Echoing Reprimand on cooldown",
["criteria"] = "variable.use_filler || boss & fight_remains < 20",
},
{
["enabled"] = true,
["action"] = "fan_of_knives",
["description"] = "Fan of Knives at 3+ targets or with clear the witnesses active without vicious venoms",
["criteria"] = "variable.use_filler & ! priority_rotation & ( spell_targets.fan_of_knives >= 3 || buff.clear_the_witnesses.up & ! talent.vicious_venoms.enabled )",
},
{
["enabled"] = true,
["action"] = "fan_of_knives",
["description"] = "Fan of Knives at 2+ targets or 3+ with DTB",
["criteria"] = "variable.use_filler & ( ! priority_rotation & spell_targets.fan_of_knives >= 2 + stealthed.rogue + talent.dragontempered_blades.enabled )",
},
{
["enabled"] = true,
["action"] = "fan_of_knives",
["description"] = "Fan of Knives to apply poisons if inactive on any target (or any bleeding targets with priority rotation) at 3T",
["criteria"] = "variable.use_filler & spell_targets.fan_of_knives >= 3",
},
{
["enabled"] = true,
["action"] = "ambush",
["description"] = "Ambush on Blindside/Subterfuge. Do not use Ambush from stealth during Kingsbane & Deathmark.",
["criteria"] = "variable.use_filler & ( buff.blindside.up || stealthed.rogue ) & ( ! dot.kingsbane.ticking || debuff.deathmark.down || buff.blindside.up )",
},
{
["enabled"] = true,
["action"] = "mutilate",
["cycle_targets"] = 1,
["description"] = "Tab-Mutilate to apply Deadly Poison at 2 targets",
["criteria"] = "! dot.deadly_poison_dot.ticking & ! debuff.amplifying_poison.up & variable.use_filler & spell_targets.fan_of_knives = 2",
},
{
["enabled"] = true,
["action"] = "mutilate",
["description"] = "Fallback Mutilate",
["criteria"] = "variable.use_filler",
},
{
["enabled"] = true,
["action"] = "envenom",
["description"] = "Fallback Envenom",
["criteria"] = "! variable.use_filler & effective_combo_points >= cp_max_spend",
},
},
["cds"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.master_assassin.enabled || dot.garrote.ticking",
["var_name"] = "deathmark_ma_condition",
["description"] = "Cooldowns  Wait on Deathmark for Garrote with MA and check for Kingsbane",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.kingsbane.enabled || cooldown.kingsbane.remains <= 2",
["var_name"] = "deathmark_kingsbane_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! stealthed.rogue & buff.slice_and_dice.remains > 5 & dot.rupture.ticking & buff.envenom.up & ! debuff.deathmark.up & variable.deathmark_ma_condition & variable.deathmark_kingsbane_condition",
["var_name"] = "deathmark_condition",
["description"] = "Deathmark to be used if not stealthed, Rupture is up, and all other talent conditions are satisfied",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Usages for various special-case Trinkets and other Cantrips if applicable",
["list_name"] = "items",
},
{
["enabled"] = true,
["action"] = "deathmark",
["description"] = "Cast Deathmark if the target will survive long enough",
["criteria"] = "( variable.deathmark_condition & target.time_to_die >= 10 ) || boss & fight_remains <= 20",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Check for Applicable Shiv usage",
["list_name"] = "shiv",
},
{
["enabled"] = true,
["criteria"] = "( debuff.shiv.up || cooldown.shiv.remains < 6 ) & buff.envenom.up & ( cooldown.deathmark.remains >= 50 || dot.deathmark.ticking ) || boss & fight_remains <= 15",
["action"] = "kingsbane",
},
{
["enabled"] = true,
["action"] = "thistle_tea",
["description"] = "Avoid overcapped energy, use with shiv, or dump charges at the end of a fight",
["criteria"] = "! buff.thistle_tea.up & ( ( ( energy.deficit >= 100 + energy.regen_combined || charges >= 3 ) & debuff.shiv.remains >= 4 ) || spell_targets.fan_of_knives >= 4 & debuff.shiv.remains >= 6 ) || fight_remains < charges * 6",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Potion/Racials/Other misc cooldowns",
["list_name"] = "misc_cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "! stealthed.all & master_assassin_remains = 0",
["list_name"] = "vanish",
},
{
["enabled"] = true,
["action"] = "cold_blood",
["description"] = "Cold Blood as an Envenom buff, avoiding potential waste through edge case",
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & ! dot.rupture.refreshable & ! buff.edge_case.up & ! buff.darkest_night.up & cooldown.deathmark.remains > 10",
},
},
},
["version"] = 20240829,
["warnings"] = "The import for 'stealthed' required some automated changes.\nLine 2: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 3: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 8: Converted 'talent.shrouded_suffocation' to 'talent.shrouded_suffocation.enabled' (1x).\n\nThe import for 'vanish' required some automated changes.\nLine 3: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 3: Converted 'talent.indiscriminate_carnage' to 'talent.indiscriminate_carnage.enabled' (1x).\nLine 3: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 5: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 5: Converted 'talent.indiscriminate_carnage' to 'talent.indiscriminate_carnage.enabled' (1x).\nLine 5: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 6: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 6: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 7: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 7: Converted 'talent.indiscriminate_carnage' to 'talent.indiscriminate_carnage.enabled' (1x).\nLine 7: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 8: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 8: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 9: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\n\nThe import for 'core_dot' required some automated changes.\nLine 2: Converted 'talent.dashing_scoundrel' to 'talent.dashing_scoundrel.enabled' (1x).\n\nThe import for 'shiv' required some automated changes.\nLine 2: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 3: Converted 'talent.arterial_precision' to 'talent.arterial_precision.enabled' (1x).\nLine 6: Converted 'talent.arterial_precision' to 'talent.arterial_precision.enabled' (1x).\nLine 7: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 7: Converted 'talent.arterial_precision' to 'talent.arterial_precision.enabled' (1x).\n\nThe import for 'misc_cds' required some automated changes.\nLine 5: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 5: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\n\nThe import for 'aoe_dot' required some automated changes.\nLine 4: Converted 'talent.dashing_scoundrel' to 'talent.dashing_scoundrel.enabled' (1x).\nLine 6: Converted 'talent.dashing_scoundrel' to 'talent.dashing_scoundrel.enabled' (1x).\n\nThe import for 'items' required some automated changes.\nLine 5: Unsupported use_item action [ imperfect_ascendancy_serum]; entry disabled.\nLine 7: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 7: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 8: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 8: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\n\nThe import for 'default' required some automated changes.\nLine 5: Converted 'talent.hand_of_fate' to 'talent.hand_of_fate.enabled' (1x).\nLine 5: Converted 'talent.vicious_venoms' to 'talent.vicious_venoms.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 2: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.2.is.witherbarks_branch' to 'trinket.t2.is.witherbarks_branch' (1x).\nLine 2: Converted 'trinket.1.is.witherbarks_branch' to 'trinket.t1.is.witherbarks_branch' (1x).\nLine 3: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.1.is.witherbarks_branch' to 'trinket.t1.is.witherbarks_branch' (1x).\nLine 3: Converted 'trinket.2.is.witherbarks_branch' to 'trinket.t2.is.witherbarks_branch' (1x).\nLine 4: Converted 'talent.hand_of_fate' to 'talent.hand_of_fate.enabled' (1x).\n\nThe import for 'direct' required some automated changes.\nLine 4: Converted 'talent.caustic_spatter' to 'talent.caustic_spatter.enabled' (1x).\nLine 8: Converted 'talent.vicious_venoms' to 'talent.vicious_venoms.enabled' (1x).\nLine 9: Converted 'talent.dragontempered_blades' to 'talent.dragontempered_blades.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 2: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\n\nImported 11 action lists.\n",
["profile"] = "actions.precombat+=/apply_poison\n# Check which trinket slots have Stat Values\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)&!trinket.2.is.witherbarks_branch||trinket.1.is.witherbarks_branch\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)&!trinket.1.is.witherbarks_branch||trinket.2.is.witherbarks_branch\n# Determine combo point finish condition\nactions.precombat+=/variable,name=effective_spend_cp,value=cp_max_spend-2<?5*talent.hand_of_fate\n# Pre-cast Slice and Dice if possible\nactions.precombat+=/stealth\nactions.precombat+=/slice_and_dice,precombat_seconds=1,if=refreshable&!buff.indiscriminate_carnage.up\n\n# Restealth if possible (no vulnerable enemies in combat)\nactions+=/stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick\n# Conditional to check if there is only one enemy\nactions+=/variable,name=single_target,value=spell_targets.fan_of_knives<2\n# Combined Energy Regen needed to saturate (TODO: estimate poisoned_bleeds better)\nactions+=/variable,name=regen_saturated,value=energy.regen_combined>15\n# Check if we should be using our energy\nactions+=/variable,name=not_pooling,value=(dot.deathmark.ticking||dot.kingsbane.ticking||debuff.shiv.up)||(buff.envenom.up&buff.envenom.remains<=1)||energy.pct>=(40+30*talent.hand_of_fate-15*talent.vicious_venoms)||boss&fight_remains<=20\n# AoE Damage over time abilities Check what the maximum Scent of Blood stacks is currently\nactions+=/variable,name=scent_effective_max_stacks,value=(spell_targets.fan_of_knives*talent.scent_of_blood.rank*2)>?20\n# We are Scent Saturated when our stack count is hitting the maximum\nactions+=/variable,name=scent_saturation,value=buff.scent_of_blood.stack>=variable.scent_effective_max_stacks\nactions+=/call_action_list,name=stealthed,strict=1,if=stealthed.rogue||stealthed.improved_garrote||master_assassin_remains>0\n# Put SnD up initially for Cut to the Chase, refresh with Envenom if at low duration\nactions+=/slice_and_dice,if=!buff.slice_and_dice.up&dot.rupture.ticking&combo_points>=1&(!buff.indiscriminate_carnage.up||variable.single_target)\nactions+=/envenom,if=buff.slice_and_dice.up&buff.slice_and_dice.remains<5&combo_points>=5\nactions+=/call_action_list,name=cds\nactions+=/call_action_list,name=core_dot\nactions+=/call_action_list,name=aoe_dot,strict=1,if=!variable.single_target\nactions+=/call_action_list,name=direct\nactions+=/arcane_torrent,if=energy.deficit>=15+energy.regen_combined\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n# Cooldowns  Wait on Deathmark for Garrote with MA and check for Kingsbane\nactions.cds+=/variable,name=deathmark_ma_condition,value=!talent.master_assassin.enabled||dot.garrote.ticking\nactions.cds+=/variable,name=deathmark_kingsbane_condition,value=!talent.kingsbane||cooldown.kingsbane.remains<=2\n# Deathmark to be used if not stealthed, Rupture is up, and all other talent conditions are satisfied\nactions.cds+=/variable,name=deathmark_condition,value=!stealthed.rogue&buff.slice_and_dice.remains>5&dot.rupture.ticking&buff.envenom.up&!debuff.deathmark.up&variable.deathmark_ma_condition&variable.deathmark_kingsbane_condition\n# Usages for various special-case Trinkets and other Cantrips if applicable\nactions.cds+=/call_action_list,name=items\n## Invoke Externals to Deathmark\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=dot.deathmark.ticking\n# Cast Deathmark if the target will survive long enough\nactions.cds+=/deathmark,if=(variable.deathmark_condition&target.time_to_die>=10)||boss&fight_remains<=20\n# Check for Applicable Shiv usage\nactions.cds+=/call_action_list,name=shiv\nactions.cds+=/kingsbane,if=(debuff.shiv.up||cooldown.shiv.remains<6)&buff.envenom.up&(cooldown.deathmark.remains>=50||dot.deathmark.ticking)||boss&fight_remains<=15\n# Avoid overcapped energy, use with shiv, or dump charges at the end of a fight\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&(((energy.deficit>=100+energy.regen_combined||charges>=3)&debuff.shiv.remains>=4)||spell_targets.fan_of_knives>=4&debuff.shiv.remains>=6)||fight_remains<charges*6\n# Potion/Racials/Other misc cooldowns\nactions.cds+=/call_action_list,name=misc_cds\nactions.cds+=/call_action_list,name=vanish,if=!stealthed.all&master_assassin_remains=0\n# Cold Blood as an Envenom buff, avoiding potential waste through edge case\nactions.cds+=/cold_blood,if=effective_combo_points>=variable.effective_spend_cp&!dot.rupture.refreshable&!buff.edge_case.up&!buff.darkest_night.up&cooldown.deathmark.remains>10\n\n# Direct Damage Abilities   Envenom at applicable cp if not pooling, capped on amplifying poison stacks, on an animacharged CP, or in aoe.\nactions.direct+=/envenom,if=!buff.darkest_night.up&effective_combo_points>=variable.effective_spend_cp&(variable.not_pooling||debuff.amplifying_poison.stack>=20||effective_combo_points>cp_max_spend||!variable.single_target)&!buff.vanish.up\n# Special Envenom handling for Darkest Night\nactions.direct+=/envenom,if=buff.darkest_night.up&effective_combo_points>=cp_max_spend\n# Check if we should be using a filler\nactions.direct+=/variable,name=use_filler,value=combo_points.deficit>1||variable.not_pooling||!variable.single_target\n# Maintain Caustic Spatter\nactions.direct+=/variable,name=use_caustic_filler,value=talent.caustic_spatter&dot.rupture.ticking&(!debuff.caustic_spatter.up||debuff.caustic_spatter.remains<=2)&combo_points.deficit>1&!variable.single_target\nactions.direct+=/mutilate,if=variable.use_caustic_filler\nactions.direct+=/ambush,if=variable.use_caustic_filler\n# Use Echoing Reprimand on cooldown\nactions.direct+=/echoing_reprimand,if=variable.use_filler||boss&fight_remains<20\n# Fan of Knives at 3+ targets or with clear the witnesses active without vicious venoms\nactions.direct+=/fan_of_knives,if=variable.use_filler&!priority_rotation&(spell_targets.fan_of_knives>=3||buff.clear_the_witnesses.up&!talent.vicious_venoms)\n# Fan of Knives at 2+ targets or 3+ with DTB\nactions.direct+=/fan_of_knives,if=variable.use_filler&(!priority_rotation&spell_targets.fan_of_knives>=2+stealthed.rogue+talent.dragontempered_blades)\n# Fan of Knives to apply poisons if inactive on any target (or any bleeding targets with priority rotation) at 3T\nactions.direct+=/fan_of_knives,if=variable.use_filler&spell_targets.fan_of_knives>=3\n# Ambush on Blindside/Subterfuge. Do not use Ambush from stealth during Kingsbane & Deathmark.\nactions.direct+=/ambush,if=variable.use_filler&(buff.blindside.up||stealthed.rogue)&(!dot.kingsbane.ticking||debuff.deathmark.down||buff.blindside.up)\n# Tab-Mutilate to apply Deadly Poison at 2 targets\nactions.direct+=/mutilate,cycle_targets=1,if=!dot.deadly_poison_dot.ticking&!debuff.amplifying_poison.up&variable.use_filler&spell_targets.fan_of_knives=2\n# Fallback Mutilate\nactions.direct+=/mutilate,if=variable.use_filler\n# Fallback Envenom\nactions.direct+=/envenom,if=!variable.use_filler&effective_combo_points>=cp_max_spend\n\n# Core damage over time abilities used everywhere  Maintain Garrote\nactions.core_dot+=/garrote,if=combo_points.deficit>=1&(pmultiplier<=1)&refreshable&target.time_to_die-remains>12\n# Maintain Rupture unless darkest night is up\nactions.core_dot+=/rupture,if=effective_combo_points>=variable.effective_spend_cp&(pmultiplier<=1)&refreshable&target.time_to_die-remains>(4+(talent.dashing_scoundrel*5)+(variable.regen_saturated*6))&!buff.darkest_night.up\n\n\n# Helper Variable to check basic finisher conditions\nactions.aoe_dot+=/variable,name=dot_finisher_condition,value=effective_combo_points>=variable.effective_spend_cp&(pmultiplier<=1)\n# Crimson Tempest on 3+ Targets if we have enough energy regen\nactions.aoe_dot+=/crimson_tempest,if=spell_targets>=3&variable.dot_finisher_condition&refreshable&!cooldown.deathmark.ready&target.time_to_die-remains>6\n# Garrote upkeep, also uses it in AoE to reach energy saturation\nactions.aoe_dot+=/garrote,cycle_targets=1,if=combo_points.deficit>=1&(pmultiplier<=1)&refreshable&!variable.regen_saturated&spell_targets.fan_of_knives>=2&target.time_to_die-remains>12\n# Rupture upkeep, also uses it in AoE to reach energy saturation\nactions.aoe_dot+=/rupture,cycle_targets=1,if=effective_combo_points>=variable.effective_spend_cp&(pmultiplier<=1)&refreshable&(!variable.regen_saturated&(talent.scent_of_blood.rank=2||talent.scent_of_blood.rank<=1&(buff.indiscriminate_carnage.up||target.time_to_die-remains>15)))&target.time_to_die-remains>(4+(talent.dashing_scoundrel*5)+(variable.regen_saturated*6))&!buff.darkest_night.up\nactions.aoe_dot+=/garrote,cycle_targets=1,if=combo_points.deficit>=1&(pmultiplier<=1)&refreshable&!variable.regen_saturated&target.time_to_die-remains>12\n# Rupture upkeep, also uses it in AoE to reach energy or scent of blood saturation\nactions.aoe_dot+=/rupture,cycle_targets=1,if=variable.dot_finisher_condition&refreshable&(!variable.regen_saturated&(talent.scent_of_blood.rank=2||talent.scent_of_blood.rank<=1&(buff.indiscriminate_carnage.up||target.time_to_die-remains>15)))&target.time_to_die-remains>(4+(talent.dashing_scoundrel*5)+(variable.regen_saturated*6))&!buff.darkest_night.up\nactions.aoe_dot+=/rupture,cycle_targets=1,if=variable.dot_finisher_condition&refreshable&variable.regen_saturated&!variable.scent_saturation&target.time_to_die-remains>15&!buff.darkest_night.up\n# Garrote as a special generator for the last CP before a finisher for edge case handling\nactions.aoe_dot+=/garrote,if=refreshable&combo_points.deficit>=1&(pmultiplier<=1||remains<=tick_time&spell_targets.fan_of_knives>=3)&(remains<=tick_time*2&spell_targets.fan_of_knives>=3)&(target.time_to_die-remains)>4&master_assassin_remains=0\n\n# Special Case Trinkets\nactions.items+=/variable,name=base_trinket_condition,value=dot.rupture.ticking&cooldown.deathmark.remains<2||boss&fight_remains<=22\nactions.items+=/use_item,name=ashes_of_the_embersoul,use_off_gcd=1,if=(dot.kingsbane.ticking&dot.kingsbane.remains<=11)||boss&fight_remains<=22\nactions.items+=/use_item,name=algethar_puzzle_box,use_off_gcd=1,if=variable.base_trinket_condition\nactions.items+=/use_item,name=treacherous_transmitter,use_off_gcd=1,if=variable.base_trinket_condition\n## actions.items+=/do_treacherous_transmitter_task,use_off_gcd=1,if=dot.deathmark.ticking||fight_remains<=20\nactions.items+=/use_item,name=imperfect_ascendancy_serum,use_off_gcd=1,if=variable.base_trinket_condition\nactions.items+=/use_item,name=algethar_puzzle_box,use_off_gcd=1,if=dot.rupture.ticking&cooldown.deathmark.remains<2||boss&fight_remains<=22\n# Fallback case for using stat trinkets\nactions.items+=/use_items,slots=trinket1,if=(variable.trinket_sync_slot=1&(debuff.deathmark.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=2&(!trinket.2.cooldown.ready||!debuff.deathmark.up&cooldown.deathmark.remains>20))||!variable.trinket_sync_slot)\nactions.items+=/use_items,slots=trinket2,if=(variable.trinket_sync_slot=2&(debuff.deathmark.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=1&(!trinket.1.cooldown.ready||!debuff.deathmark.up&cooldown.deathmark.remains>20))||!variable.trinket_sync_slot)\n\n# Miscellaneous Cooldowns Potion\nactions.misc_cds+=/potion,if=buff.bloodlust.react||boss&fight_remains<30||debuff.deathmark.up\n# Various special racials to be synced with cooldowns\nactions.misc_cds+=/blood_fury,if=debuff.deathmark.up\nactions.misc_cds+=/berserking,if=debuff.deathmark.up\nactions.misc_cds+=/fireblood,if=debuff.deathmark.up\nactions.misc_cds+=/ancestral_call,if=(!talent.kingsbane&debuff.deathmark.up&debuff.shiv.up)||(talent.kingsbane&debuff.deathmark.up&dot.kingsbane.ticking&dot.kingsbane.remains<8)\n\n# Shiv conditions\nactions.shiv+=/variable,name=shiv_condition,value=!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking\nactions.shiv+=/variable,name=shiv_kingsbane_condition,value=talent.kingsbane&buff.envenom.up&variable.shiv_condition\n# Shiv for aoe with Arterial Precision\nactions.shiv+=/shiv,if=talent.arterial_precision&variable.shiv_condition&spell_targets.fan_of_knives>=4&dot.crimson_tempest.ticking||fight_remains<=charges*8\n# Shiv cases for Kingsbane\nactions.shiv+=/shiv,if=!talent.lightweight_shiv.enabled&variable.shiv_kingsbane_condition&(dot.kingsbane.ticking&dot.kingsbane.remains<8||cooldown.kingsbane.remains>=24)&(!talent.crimson_tempest.enabled||variable.single_target||dot.crimson_tempest.ticking)||fight_remains<=charges*8\nactions.shiv+=/shiv,if=talent.lightweight_shiv.enabled&variable.shiv_kingsbane_condition&(dot.kingsbane.ticking||cooldown.kingsbane.remains<=1)||fight_remains<=charges*8\n# Fallback shiv for arterial during deathmark\nactions.shiv+=/shiv,if=talent.arterial_precision&variable.shiv_condition&debuff.deathmark.up||fight_remains<=charges*8\n# Fallback if no special cases apply\nactions.shiv+=/shiv,if=!talent.kingsbane&!talent.arterial_precision&variable.shiv_condition&(!talent.crimson_tempest.enabled||variable.single_target||dot.crimson_tempest.ticking)||fight_remains<=charges*8\n\n\n# Stealthed Actions\nactions.stealthed+=/pool_resource,for_next=1\n# Apply Deathstalkers Mark if it has fallen off and we have no way to reapply otherwise\nactions.stealthed+=/ambush,if=!debuff.deathstalkers_mark.up&talent.deathstalkers_mark&!buff.darkest_night.up\n# Make sure to have Shiv up during Kingsbane as a final check\nactions.stealthed+=/shiv,if=talent.kingsbane&(dot.kingsbane.ticking||cooldown.kingsbane.up)&(!debuff.shiv.up&debuff.shiv.remains<1)&buff.envenom.up\n# Envenom to maintain the buff during Subterfuge\nactions.stealthed+=/envenom,if=effective_combo_points>=variable.effective_spend_cp&dot.kingsbane.ticking&buff.envenom.remains<=3\n# Envenom during Master Assassin in single target\nactions.stealthed+=/envenom,if=effective_combo_points>=variable.effective_spend_cp&buff.master_assassin_aura.up&variable.single_target\n# Rupture during Indiscriminate Carnage\nactions.stealthed+=/rupture,cycle_targets=1,if=effective_combo_points>=variable.effective_spend_cp&buff.indiscriminate_carnage.up&refreshable&(!variable.regen_saturated||!variable.scent_saturation||!dot.rupture.ticking)\n# Improved Garrote: Apply or Refresh with buffed Garrotes, accounting for Indiscriminate Carnage\nactions.stealthed+=/garrote,cycle_targets=1,if=stealthed.improved_garrote&(remains<12||pmultiplier<=1||(buff.indiscriminate_carnage.up&active_dot.garrote<cycle_enemies))&!variable.single_target&target.time_to_die-remains>2\nactions.stealthed+=/garrote,if=stealthed.improved_garrote&(pmultiplier<=1||remains<12||!variable.single_target&buff.master_assassin_aura.remains<3)&combo_points.deficit>=1+2*talent.shrouded_suffocation\n\n# Stealth Cooldowns   Vanish Sync for Improved Garrote with Deathmark\nactions.vanish+=/pool_resource,for_next=1,extra_amount=45\n# Vanish to fish for Fateful Ending if possible\nactions.vanish+=/vanish,if=!buff.fatebound_lucky_coin.up&(buff.fatebound_coin_tails.stack>=5||buff.fatebound_coin_heads.stack>=5)\n# Vanish to spread Garrote during Deathmark without Indiscriminate Carnage\nactions.vanish+=/vanish,if=!talent.master_assassin&!talent.indiscriminate_carnage&talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&(debuff.deathmark.up||cooldown.deathmark.remains<4)&combo_points.deficit>=(spell_targets.fan_of_knives>?4)\nactions.vanish+=/pool_resource,for_next=1,extra_amount=45\n# Vanish for cleaving Garrotes with Indiscriminate Carnage\nactions.vanish+=/vanish,if=!talent.master_assassin&talent.indiscriminate_carnage&talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&spell_targets.fan_of_knives>2\n# Vanish for Master Assassin during Kingsbane\nactions.vanish+=/vanish,if=talent.master_assassin&talent.kingsbane&dot.kingsbane.remains<=3&dot.kingsbane.ticking&debuff.deathmark.remains<=3&dot.deathmark.ticking\nactions.vanish+=/vanish,if=!talent.master_assassin&talent.indiscriminate_carnage&talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&spell_targets.fan_of_knives>2&(target.time_to_die-remains>15||raid_event.adds.in>20)\n# Vanish fallback for Master Assassin\nactions.vanish+=/vanish,if=!talent.improved_garrote&talent.master_assassin&!dot.rupture.refreshable&dot.garrote.remains>3&debuff.deathmark.up&(debuff.shiv.up||debuff.deathmark.remains<4)\n# Vanish fallback for Improved Garrote during Deathmark if no add waves are expected\nactions.vanish+=/vanish,if=talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&(debuff.deathmark.up||cooldown.deathmark.remains<4)&raid_event.adds.in>30",
["spec"] = 259,
},
["Unholy"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240828,
["spec"] = 252,
["desc"] = "2024-08-28: SimC update\n\n2024-08-07, 09, 11: Updated priority from SimC\n\n2024-07-23: The War Within",
["lists"] = {
["aoe_setup"] = {
{
["enabled"] = true,
["description"] = "AoE Setup",
["criteria"] = "! death_and_decay.ticking & ( ! talent.bursting_sores.enabled & ! talent.vile_contagion.enabled || death_knight.fwounded_targets >= cycle_enemies || death_knight.fwounded_targets >= 8 || raid_event.adds.exists & raid_event.adds.remains <= 11 & raid_event.adds.remains > 5 )",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["action"] = "wound_spender",
["criteria"] = "debuff.chains_of_ice_trollbane_slow.up & debuff.chains_of_ice_trollbane_slow.remains < gcd.max",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "festering_strike",
["criteria"] = "cooldown.vile_contagion.remains < 5 || death_knight.fwounded_targets >= cycle_enemies & debuff.festering_wound.stack <= 4 || buff.festering_scythe.react",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & buff.sudden_doom.react",
["action"] = "epidemic",
},
{
["enabled"] = true,
["action"] = "festering_strike",
["criteria"] = "cooldown.apocalypse.remains < gcd.max & debuff.festering_wound.stack = 0 || death_knight.fwounded_targets < cycle_enemies",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power",
["action"] = "epidemic",
},
},
["cds_aoe"] = {
{
["enabled"] = true,
["action"] = "vile_contagion",
["cycle_targets"] = 1,
["criteria"] = "debuff.festering_wound.stack >= 4 & ( raid_event.adds.remains > 4 || ! raid_event.adds.exists & fight_remains > 4 ) & ( raid_event.adds.exists & raid_event.adds.remains <= 11 || cooldown.any_dnd.remains < 3 || buff.death_and_decay.up & debuff.festering_wound.stack >= 4 ) || variable.adds_remain & debuff.festering_wound.stack = 6",
["description"] = "Non-San'layn AoE Cooldowns",
},
{
["enabled"] = true,
["action"] = "unholy_assault",
["criteria"] = "variable.adds_remain & ( debuff.festering_wound.stack >= 2 & cooldown.vile_contagion.remains < 3 || ! talent.vile_contagion.enabled )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.adds_remain & ( cooldown.vile_contagion.remains > 5 || ! talent.vile_contagion.enabled || death_and_decay.ticking || cooldown.death_and_decay.remains < 3 )",
["action"] = "dark_transformation",
},
{
["enabled"] = true,
["criteria"] = "dot.virulent_plague.ticks_remain < 5 & ( dot.virulent_plague.refreshable || talent.morbidity.enabled & ! buff.gift_of_the_sanlayn.up & talent.superstrain.enabled & dot.frost_fever.refreshable & dot.blood_plague.refreshable ) & ( ! talent.unholy_blight.enabled || talent.unholy_blight.enabled & cooldown.dark_transformation.remains ) & ( ! talent.raise_abomination.enabled || talent.raise_abomination.enabled & cooldown.raise_abomination.remains )",
["action"] = "outbreak",
},
{
["enabled"] = true,
["action"] = "apocalypse",
["criteria"] = "variable.adds_remain & rune <= 3",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.adds_remain",
["action"] = "abomination_limb",
},
},
["cleave"] = {
{
["enabled"] = true,
["description"] = "Cleave",
["criteria"] = "! death_and_decay.ticking",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & talent.improved_death_coil.enabled",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! talent.improved_death_coil.enabled",
["action"] = "epidemic",
},
{
["enabled"] = true,
["action"] = "festering_strike",
["criteria"] = "! variable.pop_wounds & debuff.festering_wound.stack < 4 || buff.festering_scythe.react",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "festering_strike",
["criteria"] = "cooldown.apocalypse.remains < variable.apoc_timing & debuff.festering_wound.stack < 4",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.pop_wounds",
["action"] = "wound_spender",
},
},
["cds_shared"] = {
{
["enabled"] = true,
["description"] = "Shared Cooldowns",
["criteria"] = "active_enemies >= 1 & ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( buff.dark_transformation.up & 30 >= buff.dark_transformation.remains || pet.army_ghoul.active & pet.army_ghoul.remains <= 30 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 30 || pet.abomination.active & pet.abomination.remains <= 30 ) || boss & fight_remains <= 30",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "( variable.st_planning || variable.adds_remain ) & ( talent.commander_of_the_dead.enabled & cooldown.dark_transformation.remains < 5 || ! talent.commander_of_the_dead.enabled & active_enemies >= 1 ) || boss & fight_remains < 35",
["action"] = "army_of_the_dead",
},
{
["enabled"] = true,
["criteria"] = "( variable.st_planning || variable.adds_remain ) || boss & fight_remains < 30",
["action"] = "army_of_the_dead",
},
{
["enabled"] = true,
["action"] = "summon_gargoyle",
["criteria"] = "( variable.st_planning || variable.adds_remain ) & ( buff.commander_of_the_dead.up || ! talent.commander_of_the_dead.enabled & active_enemies >= 1 )",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "death_knight.ams_absorb_percent > 0 & runic_power < 30 & rune < 2",
["action"] = "antimagic_shell",
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Variables",
["criteria"] = "active_enemies = 1 & ( ! raid_event.adds.exists || raid_event.adds.in > 15 )",
["value"] = "1",
["action"] = "variable",
["value_else"] = "0",
["var_name"] = "st_planning",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "adds_remain",
["criteria"] = "active_enemies >= 2 & ( ! raid_event.adds.exists & fight_remains > 6 || raid_event.adds.exists & raid_event.adds.remains > 6 )",
["value_else"] = "0",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "apoc_timing",
["criteria"] = "cooldown.apocalypse.remains < 10 & debuff.festering_wound.stack <= 4 & cooldown.unholy_assault.remains > 10",
["value_else"] = "3",
["value"] = "7",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "pop_wounds",
["criteria"] = "( cooldown.apocalypse.remains > variable.apoc_timing || ! talent.apocalypse.enabled ) & ( debuff.festering_wound.stack >= 1 & cooldown.unholy_assault.remains < 20 & talent.unholy_assault.enabled & variable.st_planning || debuff.rotten_touch.up & debuff.festering_wound.stack >= 1 || debuff.festering_wound.stack >= 4 - pet.abomination.active ) || fight_remains < 5 & debuff.festering_wound.stack >= 1",
["value_else"] = "0",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "pooling_runic_power",
["criteria"] = "talent.vile_contagion.enabled & cooldown.vile_contagion.remains < 5 & runic_power < 30",
["value_else"] = "0",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "spend_rp",
["criteria"] = "( ! talent.rotten_touch.enabled || talent.rotten_touch.enabled & ! debuff.rotten_touch.up || runic_power.deficit < 20 ) & ( ( talent.improved_death_coil.enabled & ( active_enemies = 2 || talent.coil_of_devastation.enabled ) || rune < 3 || pet.gargoyle.active || buff.sudden_doom.up || ! variable.pop_wounds & debuff.festering_wound.stack >= 4 ) )",
["value_else"] = "0",
["value"] = "1",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "fyralath_the_dreamrender",
["description"] = "Trinkets Non-San'layn",
["criteria"] = "dot.mark_of_fyralath.ticking & ( active_enemies < 5 || active_enemies > 21 || boss & fight_remains < 4 ) & ( pet.abomination.active || pet.army_ghoul.active || ! talent.raise_abomination.enabled & ! talent.army_of_the_dead.enabled || time > 15 )",
["action"] = "fyralath_the_dreamrender",
},
{
["enabled"] = true,
["criteria"] = "( variable.adds_remain || variable.st_planning ) & cooldown.dark_transformation.remains < 3",
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_1_buffs & ( ( ! talent.summon_gargoyle.enabled & ( ( ! talent.army_of_the_dead.enabled || talent.army_of_the_dead.enabled & cooldown.army_of_the_dead.remains > trinket.t1.cooldown.duration * 0.51 || death_knight.disable_aotd || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > trinket.t1.cooldown.duration * 0.51 ) & ( ( 20 > variable.trinket_1_duration & pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= variable.trinket_1_duration * 1.2 || 20 <= variable.trinket_1_duration & cooldown.apocalypse.remains < gcd.max & buff.dark_transformation.up ) || ( ! talent.apocalypse.enabled || active_enemies >= 2 ) & buff.dark_transformation.up ) || pet.army_ghoul.active & pet.army_ghoul.remains < variable.trinket_1_duration * 1.2 || pet.abomination.active & pet.abomination.remains < variable.trinket_1_duration * 1.2 ) || talent.summon_gargoyle.enabled & pet.gargoyle.active & pet.gargoyle.remains < variable.trinket_1_duration * 1.2 || cooldown.summon_gargoyle.remains > 80 ) & ( variable.trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown ) ) || boss & variable.trinket_1_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ( ( ! talent.summon_gargoyle.enabled & ( ( ! talent.army_of_the_dead.enabled || talent.army_of_the_dead.enabled & cooldown.army_of_the_dead.remains > trinket.t2.cooldown.duration * 0.51 || death_knight.disable_aotd || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > trinket.t2.cooldown.duration * 0.51 ) & ( ( 20 > variable.trinket_2_duration & pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= variable.trinket_2_duration * 1.2 || 20 <= variable.trinket_2_duration & cooldown.apocalypse.remains < gcd.max & buff.dark_transformation.up ) || ( ! talent.apocalypse.enabled || active_enemies >= 2 ) & buff.dark_transformation.up ) || pet.army_ghoul.active & pet.army_ghoul.remains < variable.trinket_2_duration * 1.2 || pet.abomination.active & pet.abomination.remains < variable.trinket_2_duration * 1.2 ) || talent.summon_gargoyle.enabled & pet.gargoyle.active & pet.gargoyle.remains < variable.trinket_2_duration * 1.2 || cooldown.summon_gargoyle.remains > 80 ) & ( variable.trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown ) ) || boss & variable.trinket_2_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled || ! talent.summon_gargoyle.enabled & talent.army_of_the_dead.enabled & ( ! talent.raise_abomination.enabled & cooldown.army_of_the_dead.remains > 20 || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > 20 ) || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled & cooldown.dark_transformation.remains > 20 || talent.summon_gargoyle.enabled & cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || boss & fight_remains < 15",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled || ! talent.summon_gargoyle.enabled & talent.army_of_the_dead.enabled & ( ! talent.raise_abomination.enabled & cooldown.army_of_the_dead.remains > 20 || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > 20 ) || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled & cooldown.dark_transformation.remains > 20 || talent.summon_gargoyle.enabled & cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || boss & fight_remains < 15",
},
},
["san_fishing"] = {
{
["enabled"] = true,
["description"] = "San'layn Fishing",
["criteria"] = "death_knight.ams_absorb_percent > 0 & runic_power < 40",
["action"] = "antimagic_shell",
},
{
["enabled"] = true,
["criteria"] = "! buff.death_and_decay.up & ! buff.vampiric_strike.up",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_doom.up & talent.doomed_bidding.enabled",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct <= 35 & fight_remains > 5",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "! buff.vampiric_strike.up",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "( debuff.festering_wound.stack >= 3 - pet.abomination.active & cooldown.apocalypse.remains > variable.apoc_timing ) || buff.vampiric_strike.up",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack < 3 - pet.abomination.active",
["action"] = "festering_strike",
},
},
["cds_aoe_san"] = {
{
["enabled"] = true,
["description"] = "San'layn AoE Cooldowns",
["criteria"] = "variable.adds_remain & buff.death_and_decay.up",
["action"] = "dark_transformation",
},
{
["enabled"] = true,
["action"] = "vile_contagion",
["criteria"] = "debuff.festering_wound.stack >= 4 & ( raid_event.adds.remains > 4 || ! raid_event.adds.exists & fight_remains > 4 ) & ( raid_event.adds.exists & raid_event.adds.remains <= 11 || cooldown.any_dnd.remains < 3 || buff.death_and_decay.up & debuff.festering_wound.stack >= 4 ) || variable.adds_remain & debuff.festering_wound.stack = 6",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "unholy_assault",
["criteria"] = "variable.adds_remain & ( debuff.festering_wound.stack >= 2 & cooldown.vile_contagion.remains < 6 || ! talent.vile_contagion.enabled )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( dot.virulent_plague.refreshable || talent.morbidity.enabled & ! buff.gift_of_the_sanlayn.up & talent.superstrain.enabled & dot.frost_fever.refreshable & dot.blood_plague.refreshable ) & ( ! talent.unholy_blight.enabled || talent.unholy_blight.enabled & cooldown.dark_transformation.remains > 15 / ( ( 2 * talent.superstrain.enabled ) + ( 2 * talent.ebon_fever.enabled ) + ( 2 * talent.plaguebringer.enabled ) ) ) & ( ! talent.raise_abomination.enabled || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > 15 / ( ( 2 * talent.superstrain.enabled ) + ( 2 * talent.ebon_fever.enabled ) + ( 2 * talent.plaguebringer.enabled ) ) )",
["action"] = "outbreak",
},
{
["enabled"] = true,
["action"] = "apocalypse",
["criteria"] = "variable.adds_remain & rune <= 3",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.adds_remain",
["action"] = "abomination_limb",
},
},
["san_st"] = {
{
["enabled"] = true,
["description"] = "Single Target San'layn",
["criteria"] = "! death_and_decay.ticking & talent.unholy_ground.enabled & cooldown.dark_transformation.remains < 5",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_doom.react & buff.gift_of_the_sanlayn.remains & ( talent.doomed_bidding.enabled || talent.rotten_touch.enabled ) || rune < 2 & ! buff.runic_corruption.up",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "buff.essence_of_the_blood_queen.remains < 3 & buff.vampiric_strike.up || talent.gift_of_the_sanlayn.enabled & buff.dark_transformation.up & buff.dark_transformation.remains < gcd.max",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct <= 35 & ! buff.gift_of_the_sanlayn.up & fight_remains > 5",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "( debuff.festering_wound.stack < 4 & cooldown.apocalypse.remains < variable.apoc_timing ) || ( talent.gift_of_the_sanlayn.enabled & ! buff.gift_of_the_sanlayn.up || ! talent.gift_of_the_sanlayn.enabled ) & ( buff.festering_scythe.up || debuff.festering_wound.stack <= 1 - pet.abomination.active )",
["action"] = "festering_strike",
},
{
["enabled"] = true,
["criteria"] = "( debuff.festering_wound.stack >= 3 - pet.abomination.active & cooldown.apocalypse.remains > variable.apoc_timing ) || buff.vampiric_strike.up & cooldown.apocalypse.remains > variable.apoc_timing",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & debuff.death_rot.remains < gcd.max || ( buff.sudden_doom.up & debuff.festering_wound.stack >= 1 || rune < 2 )",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack > 4",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power",
["action"] = "death_coil",
},
},
["aoe"] = {
{
["enabled"] = true,
["action"] = "wound_spender",
["cycle_targets"] = 1,
["criteria"] = "debuff.festering_wound.stack >= 1 & buff.death_and_decay.up & talent.bursting_sores.enabled & cooldown.apocalypse.remains > variable.apoc_timing",
["description"] = "AOE",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power",
["action"] = "epidemic",
},
{
["enabled"] = true,
["action"] = "wound_spender",
["criteria"] = "debuff.chains_of_ice_trollbane_slow.up & debuff.chains_of_ice_trollbane_slow.remains < gcd.max",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "festering_strike",
["criteria"] = "cooldown.apocalypse.remains < variable.apoc_timing || buff.festering_scythe.react",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "festering_strike",
["criteria"] = "debuff.festering_wound.stack < 2",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "wound_spender",
["criteria"] = "debuff.festering_wound.stack >= 1 & cooldown.apocalypse.remains > gcd.max || buff.vampiric_strike.react & dot.virulent_plague.ticking",
["cycle_targets"] = 1,
},
},
["san_trinkets"] = {
{
["enabled"] = true,
["name"] = "fyralath_the_dreamrender",
["description"] = "Trinkets San'layn",
["criteria"] = "dot.mark_of_fyralath.ticking & ( active_enemies < 5 || active_enemies > 21 || boss & fight_remains < 4 ) & ( pet.abomination.active || pet.army_ghoul.active || ! talent.raise_abomination.enabled & ! talent.army_of_the_dead.enabled || time > 15 )",
["action"] = "fyralath_the_dreamrender",
},
{
["enabled"] = true,
["criteria"] = "( variable.adds_remain || variable.st_planning ) & cooldown.dark_transformation.remains < 3",
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_1_buffs & ( buff.dark_transformation.up & buff.dark_transformation.remains < variable.trinket_1_duration * 0.73 & ( variable.trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown ) ) || boss & variable.trinket_1_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ( buff.dark_transformation.up & buff.dark_transformation.remains < variable.trinket_2_duration * 0.73 & ( variable.trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown ) ) || boss & variable.trinket_2_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled || ! talent.summon_gargoyle.enabled & talent.army_of_the_dead.enabled & ( ! talent.raise_abomination.enabled & cooldown.army_of_the_dead.remains > 20 || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > 20 ) || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled & cooldown.dark_transformation.remains > 20 || talent.summon_gargoyle.enabled & cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || boss & fight_remains < 15",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled || ! talent.summon_gargoyle.enabled & talent.army_of_the_dead.enabled & ( ! talent.raise_abomination.enabled & cooldown.army_of_the_dead.remains > 20 || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > 20 ) || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & ! talent.raise_abomination.enabled & cooldown.dark_transformation.remains > 20 || talent.summon_gargoyle.enabled & cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || boss & fight_remains < 15",
},
},
["st"] = {
{
["enabled"] = true,
["description"] = "Single Taget Non-San'layn",
["criteria"] = "target.health.pct <= 35 & fight_remains > 5",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "talent.unholy_ground.enabled & ! buff.death_and_decay.up & ( pet.apoc_ghoul.active || pet.abomination.active || pet.gargoyle.active )",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & variable.spend_rp || boss & fight_remains < 10",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack < 4 & ( ! variable.pop_wounds || buff.festering_scythe.react )",
["action"] = "festering_strike",
},
{
["enabled"] = true,
["criteria"] = "variable.pop_wounds",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "! variable.pop_wounds & debuff.festering_wound.stack >= 4",
["action"] = "wound_spender",
},
},
["default"] = {
{
["action"] = "mind_freeze",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Call Action Lists",
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.vampiric_strike.enabled",
["list_name"] = "san_trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! talent.vampiric_strike.enabled",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "racials",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds_shared",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.vampiric_strike.enabled & active_enemies >= 2",
["list_name"] = "cds_aoe_san",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! talent.vampiric_strike.enabled & active_enemies >= 2",
["list_name"] = "cds_aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.vampiric_strike.enabled & active_enemies = 1",
["list_name"] = "cds_san",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! talent.vampiric_strike.enabled & active_enemies = 1",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 2",
["list_name"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 3 & ! death_and_decay.ticking & cooldown.death_and_decay.remains < 10",
["action"] = "call_action_list",
["list_name"] = "aoe_setup",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 3 & ( death_and_decay.ticking || buff.death_and_decay.up & death_knight.fwounded_targets >= ( cycle_enemies * 0.5 ) )",
["list_name"] = "aoe_burst",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 3 & ! death_and_decay.ticking",
["action"] = "call_action_list",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1 & talent.vampiric_strike.enabled",
["list_name"] = "san_st",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1 & ! talent.vampiric_strike.enabled",
["list_name"] = "st",
},
},
["precombat"] = {
{
["action"] = "raise_dead",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "army_of_the_dead",
["precombat_time"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || trinket.t1.is.mirror_of_fractured_tomorrows || trinket.t1.is.treacherous_transmitter",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || trinket.t2.is.mirror_of_fractured_tomorrows || trinket.t2.is.treacherous_transmitter",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_duration",
["criteria"] = "trinket.t1.is.mirror_of_fractured_tomorrows || trinket.t1.is.treacherous_transmitter",
["value_else"] = "trinket.t1.buff_duration",
["value"] = "20",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_duration",
["criteria"] = "trinket.t2.is.mirror_of_fractured_tomorrows || trinket.t2.is.treacherous_transmitter",
["value_else"] = "trinket.t2.buff_duration",
["value"] = "20",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["criteria"] = "variable.trinket_1_buffs & ( talent.apocalypse.enabled & trinket.t1.cooldown.duration % cooldown.apocalypse.duration = 0 || talent.dark_transformation.enabled & trinket.t1.cooldown.duration % cooldown.dark_transformation.duration = 0 ) || trinket.t1.is.treacherous_transmitter",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "variable.trinket_2_buffs & ( talent.apocalypse.enabled & trinket.t2.cooldown.duration % cooldown.apocalypse.duration = 0 || talent.dark_transformation.enabled & trinket.t2.cooldown.duration % cooldown.dark_transformation.duration = 0 ) || trinket.t2.is.treacherous_transmitter",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs & ( trinket.t2.has_cooldown || ! trinket.t1.has_cooldown ) || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / variable.trinket_2_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) * ( 1 + ( ( trinket.t2.ilvl - trinket.t1.ilvl ) / 100 ) ) ) > ( ( trinket.t1.cooldown.duration / variable.trinket_1_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) * ( 1 + ( ( trinket.t1.ilvl - trinket.t2.ilvl ) / 100 ) ) )",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "damage_trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_2_buffs & trinket.t2.ilvl >= trinket.t1.ilvl",
["value_else"] = "1",
["value"] = "2",
},
},
["racials"] = {
{
["enabled"] = true,
["description"] = "Racials",
["criteria"] = "runic_power < 20 & rune < 2",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "( buff.blood_fury.duration + 3 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.blood_fury.duration + 3 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.blood_fury.duration + 3 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.blood_fury.duration + 3",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "( buff.berserking.duration + 3 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.berserking.duration + 3 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.berserking.duration + 3 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.berserking.duration + 3",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.unholy_strength.up & ( ! talent.festermight.enabled || buff.festermight.remains < target.time_to_die || buff.unholy_strength.remains < target.time_to_die )",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "( 18 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= 18 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 18 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= 18",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 || ( rune.deficit >= 5 & runic_power.deficit >= 60 )",
["action"] = "arcane_pulse",
},
{
["enabled"] = true,
["criteria"] = "( buff.fireblood.duration + 3 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.fireblood.duration + 3 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.fireblood.duration + 3 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.fireblood.duration + 3",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & ( buff.unholy_strength.up || boss & fight_remains < 5 )",
["action"] = "bag_of_tricks",
},
},
["cds"] = {
{
["enabled"] = true,
["description"] = "Non-San'layn Cooldowns",
["criteria"] = "variable.st_planning & ( cooldown.apocalypse.remains < 8 || ! talent.apocalypse.enabled || active_enemies >= 1 ) || boss & fight_remains < 20",
["action"] = "dark_transformation",
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning & ( cooldown.apocalypse.remains < gcd.max * 2 || ! talent.apocalypse.enabled || active_enemies >= 2 & buff.dark_transformation.up ) || boss & fight_remains < 20",
["action"] = "unholy_assault",
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning",
["action"] = "apocalypse",
},
{
["enabled"] = true,
["action"] = "outbreak",
["criteria"] = "target.time_to_die > dot.virulent_plague.remains & dot.virulent_plague.ticks_remain < 5 & ( dot.virulent_plague.refreshable || talent.superstrain.enabled & ( dot.frost_fever.refreshable || dot.blood_plague.refreshable ) ) & ( ! talent.unholy_blight.enabled || talent.plaguebringer.enabled ) & ( ! talent.raise_abomination.enabled || talent.raise_abomination.enabled & cooldown.raise_abomination.remains > dot.virulent_plague.ticks_remain * 3 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning & ! buff.sudden_doom.react & ( buff.festermight.up & buff.festermight.stack > 8 || ! talent.festermight.enabled ) & ( pet.apoc_ghoul.remains < 5 || ! talent.apocalypse.enabled ) & debuff.festering_wound.stack <= 2 || boss & fight_remains < 12",
["action"] = "abomination_limb",
},
},
["cds_san"] = {
{
["enabled"] = true,
["description"] = "San'layn Cooldowns",
["criteria"] = "active_enemies >= 1 & variable.st_planning & ( talent.apocalypse.enabled & pet.apoc_ghoul.active || ! talent.apocalypse.enabled ) || boss & fight_remains < 20",
["action"] = "dark_transformation",
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning & ( buff.dark_transformation.up & buff.dark_transformation.remains < 12 ) || boss & fight_remains < 20",
["action"] = "unholy_assault",
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning & debuff.festering_wound.stack >= 3 || boss & fight_remains < 20",
["action"] = "apocalypse",
},
{
["enabled"] = true,
["action"] = "outbreak",
["criteria"] = "target.time_to_die > dot.virulent_plague.remains & dot.virulent_plague.ticks_remain < 5 & ( dot.virulent_plague.refreshable || talent.morbidity.enabled & buff.infliction_of_sorrow.up & talent.superstrain.enabled & dot.frost_fever.refreshable & dot.blood_plague.refreshable ) & ( ! talent.unholy_blight.enabled || talent.unholy_blight.enabled & cooldown.dark_transformation.remains ) & ( ! talent.raise_abomination.enabled || talent.raise_abomination.enabled & cooldown.raise_abomination.remains )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 1 & variable.st_planning & ! buff.gift_of_the_sanlayn.up & ! buff.sudden_doom.react & buff.festermight.up & debuff.festering_wound.stack <= 2 || ! buff.gift_of_the_sanlayn.up & fight_remains < 12",
["action"] = "abomination_limb",
},
},
["aoe_burst"] = {
{
["enabled"] = true,
["description"] = "AoE Burst",
["criteria"] = "! buff.vampiric_strike.react & ( ! talent.bursting_sores.enabled || talent.bursting_sores.enabled & death_knight.fwounded_targets < cycle_enemies & death_knight.fwounded_targets < active_enemies * 0.4 & buff.sudden_doom.react || buff.sudden_doom.react & ( buff.a_feast_of_souls.up || debuff.death_rot.remains < gcd.max || debuff.death_rot.stack < 10 ) )",
["action"] = "epidemic",
},
{
["enabled"] = true,
["action"] = "wound_spender",
["criteria"] = "debuff.chains_of_ice_trollbane_slow.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.festering_scythe.up",
["action"] = "festering_strike",
},
{
["enabled"] = true,
["action"] = "wound_spender",
["criteria"] = "debuff.festering_wound.stack >= 1 || buff.vampiric_strike.react",
["cycle_targets"] = 1,
},
{
["action"] = "epidemic",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "festering_strike",
["criteria"] = "debuff.festering_wound.stack <= 2",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "wound_spender",
["cycle_targets"] = 1,
},
},
},
["version"] = 20240828,
["warnings"] = "The import for 'aoe_setup' required some automated changes.\nLine 1: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 1: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\n\nThe import for 'cds_aoe' required some automated changes.\nLine 2: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\nLine 3: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\nLine 4: Converted 'talent.morbidity' to 'talent.morbidity.enabled' (1x).\nLine 4: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 4: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 4: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 4: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 4: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 2: Converted 'talent.improved_death_coil' to 'talent.improved_death_coil.enabled' (1x).\nLine 3: Converted 'talent.improved_death_coil' to 'talent.improved_death_coil.enabled' (1x).\n\nThe import for 'cds_shared' required some automated changes.\nLine 1: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 2: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 2: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 4: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 1: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 1: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 1: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 3: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 3: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 3: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 3: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 4: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 4: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 4: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 4: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 5: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 5: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 5: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 5: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 6: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 6: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 6: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 6: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 6: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 6: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 6: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 6: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 6: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 6: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 6: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\n\nThe import for 'san_fishing' required some automated changes.\nLine 3: Converted 'talent.doomed_bidding' to 'talent.doomed_bidding.enabled' (1x).\n\nThe import for 'cds_aoe_san' required some automated changes.\nLine 3: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\nLine 4: Converted 'talent.morbidity' to 'talent.morbidity.enabled' (1x).\nLine 4: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 4: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 4: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 4: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 4: Converted 'talent.ebon_fever' to 'talent.ebon_fever.enabled' (1x).\nLine 4: Converted 'talent.plaguebringer' to 'talent.plaguebringer.enabled' (1x).\nLine 4: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 4: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 4: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 4: Converted 'talent.ebon_fever' to 'talent.ebon_fever.enabled' (1x).\nLine 4: Converted 'talent.plaguebringer' to 'talent.plaguebringer.enabled' (1x).\nLine 4: Converted operations in '(dot.virulent_plague.refreshable||talent.morbidity.enabled&!buff.gift_of_the_sanlayn.up&talent.superstrain.enabled&dot.frost_fever.refreshable&dot.blood_plague.refreshable)&(!talent.unholy_blight.enabled||talent.unholy_blight.enabled&cooldown.dark_transformation.remains>15%((2*talent.superstrain.enabled)+(2*talent.ebon_fever.enabled)+(2*talent.plaguebringer.enabled)))&(!talent.raise_abomination.enabled||talent.raise_abomination.enabled&cooldown.raise_abomination.remains>15%((2*talent.superstrain.enabled)+(2*talent.ebon_fever.enabled)+(2*talent.plaguebringer.enabled)))' to '(dot.virulent_plague.refreshable||talent.morbidity.enabled&!buff.gift_of_the_sanlayn.up&talent.superstrain.enabled&dot.frost_fever.refreshable&dot.blood_plague.refreshable)&(!talent.unholy_blight.enabled||talent.unholy_blight.enabled&cooldown.dark_transformation.remains>15/((2*talent.superstrain.enabled)+(2*talent.ebon_fever.enabled)+(2*talent.plaguebringer.enabled)))&(!talent.raise_abomination.enabled||talent.raise_abomination.enabled&cooldown.raise_abomination.remains>15/((2*talent.superstrain.enabled)+(2*talent.ebon_fever.enabled)+(2*talent.plaguebringer.enabled)))'.\n\nThe import for 'san_st' required some automated changes.\nLine 1: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\nLine 2: Converted 'talent.doomed_bidding' to 'talent.doomed_bidding.enabled' (1x).\nLine 2: Converted 'talent.rotten_touch' to 'talent.rotten_touch.enabled' (1x).\nLine 3: Converted 'talent.gift_of_the_sanlayn' to 'talent.gift_of_the_sanlayn.enabled' (1x).\nLine 5: Converted 'talent.gift_of_the_sanlayn' to 'talent.gift_of_the_sanlayn.enabled' (1x).\nLine 5: Converted 'talent.gift_of_the_sanlayn' to 'talent.gift_of_the_sanlayn.enabled' (1x).\n\nThe import for 'variables' required some automated changes.\nLine 4: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 4: Converted 'talent.unholy_assault' to 'talent.unholy_assault.enabled' (1x).\nLine 5: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\nLine 6: Converted 'talent.rotten_touch' to 'talent.rotten_touch.enabled' (1x).\nLine 6: Converted 'talent.rotten_touch' to 'talent.rotten_touch.enabled' (1x).\nLine 6: Converted 'talent.improved_death_coil' to 'talent.improved_death_coil.enabled' (1x).\nLine 6: Converted 'talent.coil_of_devastation' to 'talent.coil_of_devastation.enabled' (1x).\n\nThe import for 'san_trinkets' required some automated changes.\nLine 1: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 1: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 5: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 5: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 5: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 5: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 6: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 6: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 6: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 6: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 6: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 6: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 6: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 6: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 6: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 6: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 6: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 2: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\n\nThe import for 'cds_san' required some automated changes.\nLine 1: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 1: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 4: Converted 'talent.morbidity' to 'talent.morbidity.enabled' (1x).\nLine 4: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 4: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 4: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 4: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 4: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 3: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 4: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 5: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 5: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 5: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 5: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 6: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 6: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 7: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'talent.dark_transformation' to 'talent.dark_transformation.enabled' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 7: Converted operations in 'variable.trinket_1_buffs&(talent.apocalypse.enabled&trinket.t1.cooldown.duration%%cooldown.apocalypse.duration=0||talent.dark_transformation.enabled&trinket.t1.cooldown.duration%%cooldown.dark_transformation.duration=0)||trinket.t1.is.treacherous_transmitter' to 'variable.trinket_1_buffs&(talent.apocalypse.enabled&trinket.t1.cooldown.duration%cooldown.apocalypse.duration=0||talent.dark_transformation.enabled&trinket.t1.cooldown.duration%cooldown.dark_transformation.duration=0)||trinket.t1.is.treacherous_transmitter'.\nLine 8: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 8: Converted 'talent.dark_transformation' to 'talent.dark_transformation.enabled' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 8: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 8: Converted operations in 'variable.trinket_2_buffs&(talent.apocalypse.enabled&trinket.t2.cooldown.duration%%cooldown.apocalypse.duration=0||talent.dark_transformation.enabled&trinket.t2.cooldown.duration%%cooldown.dark_transformation.duration=0)||trinket.t2.is.treacherous_transmitter' to 'variable.trinket_2_buffs&(talent.apocalypse.enabled&trinket.t2.cooldown.duration%cooldown.apocalypse.duration=0||talent.dark_transformation.enabled&trinket.t2.cooldown.duration%cooldown.dark_transformation.duration=0)||trinket.t2.is.treacherous_transmitter'.\nLine 9: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 9: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 9: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 9: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 9: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 9: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 9: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%variable.trinket_2_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(1+((trinket.t2.ilvl-trinket.t1.ilvl)%100)))>((trinket.t1.cooldown.duration%variable.trinket_1_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)%100)))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/variable.trinket_2_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(1+((trinket.t2.ilvl-trinket.t1.ilvl)/100)))>((trinket.t1.cooldown.duration/variable.trinket_1_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)/100)))'.\nLine 10: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 10: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\n\nThe import for 'racials' required some automated changes.\nLine 2: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 3: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 4: Converted 'talent.festermight' to 'talent.festermight.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 7: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 2: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 4: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 4: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 4: Converted 'talent.plaguebringer' to 'talent.plaguebringer.enabled' (1x).\nLine 4: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 4: Converted 'talent.raise_abomination' to 'talent.raise_abomination.enabled' (1x).\nLine 5: Converted 'talent.festermight' to 'talent.festermight.enabled' (1x).\nLine 5: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\n\nThe import for 'aoe_burst' required some automated changes.\nLine 1: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 1: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 3: Converted 'talent.vampiric_strike' to 'talent.vampiric_strike.enabled' (1x).\nLine 4: Converted 'talent.vampiric_strike' to 'talent.vampiric_strike.enabled' (1x).\nLine 7: Converted 'talent.vampiric_strike' to 'talent.vampiric_strike.enabled' (1x).\nLine 8: Converted 'talent.vampiric_strike' to 'talent.vampiric_strike.enabled' (1x).\nLine 9: Converted 'talent.vampiric_strike' to 'talent.vampiric_strike.enabled' (1x).\nLine 10: Converted 'talent.vampiric_strike' to 'talent.vampiric_strike.enabled' (1x).\nLine 15: Converted 'talent.vampiric_strike' to 'talent.vampiric_strike.enabled' (1x).\nLine 16: Converted 'talent.vampiric_strike' to 'talent.vampiric_strike.enabled' (1x).\n\nImported 18 action lists.\n",
["profile"] = "actions.precombat+=/raise_dead\nactions.precombat+=/army_of_the_dead,precombat_time=2\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||trinket.1.is.mirror_of_fractured_tomorrows||trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||trinket.2.is.mirror_of_fractured_tomorrows||trinket.2.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_1_duration,op=setif,value=20,value_else=trinket.1.proc.any_dps.duration,condition=trinket.1.is.mirror_of_fractured_tomorrows||trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_duration,op=setif,value=20,value_else=trinket.2.proc.any_dps.duration,condition=trinket.2.is.mirror_of_fractured_tomorrows||trinket.2.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(talent.apocalypse&trinket.1.cooldown.duration%%cooldown.apocalypse.duration=0||talent.dark_transformation&trinket.1.cooldown.duration%%cooldown.dark_transformation.duration=0)||trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(talent.apocalypse&trinket.2.cooldown.duration%%cooldown.apocalypse.duration=0||talent.dark_transformation&trinket.2.cooldown.duration%%cooldown.dark_transformation.duration=0)||trinket.2.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.2.has_cooldown||!trinket.1.has_cooldown)||variable.trinket_2_buffs&((trinket.2.cooldown.duration%variable.trinket_2_duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync)*(1+((trinket.2.ilvl-trinket.1.ilvl)%100)))>((trinket.1.cooldown.duration%variable.trinket_1_duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync)*(1+((trinket.1.ilvl-trinket.2.ilvl)%100)))\nactions.precombat+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&!variable.trinket_2_buffs&trinket.2.ilvl>=trinket.1.ilvl\n\nactions+=/mind_freeze\n# Call Action Lists\nactions+=/call_action_list,name=variables\nactions+=/call_action_list,name=san_trinkets,strict=1,if=talent.vampiric_strike\nactions+=/call_action_list,name=trinkets,strict=1,if=!talent.vampiric_strike\nactions+=/call_action_list,name=racials\nactions+=/call_action_list,name=cds_shared\nactions+=/call_action_list,name=cds_aoe_san,strict=1,if=talent.vampiric_strike&active_enemies>=2\nactions+=/call_action_list,name=cds_aoe,strict=1,if=!talent.vampiric_strike&active_enemies>=2\nactions+=/call_action_list,name=cds_san,strict=1,if=talent.vampiric_strike&active_enemies=1\nactions+=/call_action_list,name=cds,strict=1,if=!talent.vampiric_strike&active_enemies=1\nactions+=/call_action_list,name=cleave,strict=1,if=active_enemies=2\nactions+=/call_action_list,name=aoe_setup,if=active_enemies>=3&!death_and_decay.ticking&cooldown.death_and_decay.remains<10\nactions+=/call_action_list,name=aoe_burst,strict=1,if=active_enemies>=3&(death_and_decay.ticking||buff.death_and_decay.up&death_knight.fwounded_targets>=(cycle_enemies*0.5))\nactions+=/call_action_list,name=aoe,if=active_enemies>=3&!death_and_decay.ticking\nnactions+=/run_action_list,name=san_fishing,if=active_enemies=1&talent.gift_of_the_sanlayn&!cooldown.dark_transformation.ready&!buff.gift_of_the_sanlayn.up&buff.essence_of_the_blood_queen.remains<cooldown.dark_transformation.remains+2\nactions+=/call_action_list,name=san_st,strict=1,if=active_enemies=1&talent.vampiric_strike\nactions+=/call_action_list,name=st,strict=1,if=active_enemies=1&!talent.vampiric_strike\n\n# AOE\nactions.aoe+=/wound_spender,cycle_targets=1,if=debuff.festering_wound.stack>=1&buff.death_and_decay.up&talent.bursting_sores&cooldown.apocalypse.remains>variable.apoc_timing\nactions.aoe+=/epidemic,if=!variable.pooling_runic_power\nactions.aoe+=/wound_spender,cycle_targets=1,if=debuff.chains_of_ice_trollbane_slow.up&debuff.chains_of_ice_trollbane_slow.remains<gcd\nactions.aoe+=/festering_strike,cycle_targets=1,if=cooldown.apocalypse.remains<variable.apoc_timing||buff.festering_scythe.react\nactions.aoe+=/festering_strike,cycle_targets=1,if=debuff.festering_wound.stack<2\nactions.aoe+=/wound_spender,cycle_targets=1,if=debuff.festering_wound.stack>=1&cooldown.apocalypse.remains>gcd||buff.vampiric_strike.react&dot.virulent_plague.ticking\n\n# AoE Burst\nactions.aoe_burst+=/epidemic,if=!buff.vampiric_strike.react&(!talent.bursting_sores||talent.bursting_sores&death_knight.fwounded_targets<cycle_enemies&death_knight.fwounded_targets<active_enemies*0.4&buff.sudden_doom.react||buff.sudden_doom.react&(buff.a_feast_of_souls.up||debuff.death_rot.remains<gcd||debuff.death_rot.stack<10))\nactions.aoe_burst+=/wound_spender,cycle_targets=1,if=debuff.chains_of_ice_trollbane_slow.up\nactions.aoe_burst+=/festering_strike,if=buff.festering_scythe.up\nactions.aoe_burst+=/wound_spender,cycle_targets=1,if=debuff.festering_wound.stack>=1||buff.vampiric_strike.react\nactions.aoe_burst+=/epidemic\nactions.aoe_burst+=/festering_strike,cycle_targets=1,if=debuff.festering_wound.stack<=2\nactions.aoe_burst+=/wound_spender,cycle_targets=1\n\n# AoE Setup\nactions.aoe_setup+=/any_dnd,if=!death_and_decay.ticking&(!talent.bursting_sores&!talent.vile_contagion||death_knight.fwounded_targets>=cycle_enemies||death_knight.fwounded_targets>=8||raid_event.adds.exists&raid_event.adds.remains<=11&raid_event.adds.remains>5)\nactions.aoe_setup+=/wound_spender,cycle_targets=1,if=debuff.chains_of_ice_trollbane_slow.up&debuff.chains_of_ice_trollbane_slow.remains<gcd\nactions.aoe_setup+=/festering_strike,cycle_targets=1,if=cooldown.vile_contagion.remains<5||death_knight.fwounded_targets>=cycle_enemies&debuff.festering_wound.stack<=4||buff.festering_scythe.react\nactions.aoe_setup+=/epidemic,if=!variable.pooling_runic_power&buff.sudden_doom.react\nactions.aoe_setup+=/festering_strike,cycle_targets=1,if=cooldown.apocalypse.remains<gcd&debuff.festering_wound.stack=0||death_knight.fwounded_targets<cycle_enemies\nactions.aoe_setup+=/epidemic,if=!variable.pooling_runic_power\n\n# Non-San'layn Cooldowns\nactions.cds+=/dark_transformation,if=variable.st_planning&(cooldown.apocalypse.remains<8||!talent.apocalypse||active_enemies>=1)||boss&fight_remains<20\nactions.cds+=/unholy_assault,if=variable.st_planning&(cooldown.apocalypse.remains<gcd*2||!talent.apocalypse||active_enemies>=2&buff.dark_transformation.up)||boss&fight_remains<20\nactions.cds+=/apocalypse,if=variable.st_planning\nactions.cds+=/outbreak,cycle_targets=1,if=target.time_to_die>dot.virulent_plague.remains&dot.virulent_plague.ticks_remain<5&(dot.virulent_plague.refreshable||talent.superstrain&(dot.frost_fever.refreshable||dot.blood_plague.refreshable))&(!talent.unholy_blight||talent.plaguebringer)&(!talent.raise_abomination||talent.raise_abomination&cooldown.raise_abomination.remains>dot.virulent_plague.ticks_remain*3)\nactions.cds+=/abomination_limb,if=variable.st_planning&!buff.sudden_doom.react&(buff.festermight.up&buff.festermight.stack>8||!talent.festermight)&(pet.apoc_ghoul.remains<5||!talent.apocalypse)&debuff.festering_wound.stack<=2||boss&fight_remains<12\n\n# Non-San'layn AoE Cooldowns\nactions.cds_aoe+=/vile_contagion,cycle_targets=1,if=debuff.festering_wound.stack>=4&(raid_event.adds.remains>4||!raid_event.adds.exists&fight_remains>4)&(raid_event.adds.exists&raid_event.adds.remains<=11||cooldown.any_dnd.remains<3||buff.death_and_decay.up&debuff.festering_wound.stack>=4)||variable.adds_remain&debuff.festering_wound.stack=6\nactions.cds_aoe+=/unholy_assault,cycle_targets=1,if=variable.adds_remain&(debuff.festering_wound.stack>=2&cooldown.vile_contagion.remains<3||!talent.vile_contagion)\nactions.cds_aoe+=/dark_transformation,if=variable.adds_remain&(cooldown.vile_contagion.remains>5||!talent.vile_contagion||death_and_decay.ticking||cooldown.death_and_decay.remains<3)\nactions.cds_aoe+=/outbreak,if=dot.virulent_plague.ticks_remain<5&(dot.virulent_plague.refreshable||talent.morbidity&!buff.gift_of_the_sanlayn.up&talent.superstrain&dot.frost_fever.refreshable&dot.blood_plague.refreshable)&(!talent.unholy_blight||talent.unholy_blight&cooldown.dark_transformation.remains)&(!talent.raise_abomination||talent.raise_abomination&cooldown.raise_abomination.remains)\nactions.cds_aoe+=/apocalypse,cycle_targets=1,if=variable.adds_remain&rune<=3\nactions.cds_aoe+=/abomination_limb,if=variable.adds_remain\n\n# San'layn AoE Cooldowns\nactions.cds_aoe_san+=/dark_transformation,if=variable.adds_remain&buff.death_and_decay.up\nactions.cds_aoe_san+=/vile_contagion,cycle_targets=1,if=debuff.festering_wound.stack>=4&(raid_event.adds.remains>4||!raid_event.adds.exists&fight_remains>4)&(raid_event.adds.exists&raid_event.adds.remains<=11||cooldown.any_dnd.remains<3||buff.death_and_decay.up&debuff.festering_wound.stack>=4)||variable.adds_remain&debuff.festering_wound.stack=6\nactions.cds_aoe_san+=/unholy_assault,cycle_targets=1,if=variable.adds_remain&(debuff.festering_wound.stack>=2&cooldown.vile_contagion.remains<6||!talent.vile_contagion)\nactions.cds_aoe_san+=/outbreak,if=(dot.virulent_plague.refreshable||talent.morbidity&!buff.gift_of_the_sanlayn.up&talent.superstrain&dot.frost_fever.refreshable&dot.blood_plague.refreshable)&(!talent.unholy_blight||talent.unholy_blight&cooldown.dark_transformation.remains>15%((2*talent.superstrain)+(2*talent.ebon_fever)+(2*talent.plaguebringer)))&(!talent.raise_abomination||talent.raise_abomination&cooldown.raise_abomination.remains>15%((2*talent.superstrain)+(2*talent.ebon_fever)+(2*talent.plaguebringer)))\nactions.cds_aoe_san+=/apocalypse,cycle_targets=1,if=variable.adds_remain&rune<=3\nactions.cds_aoe_san+=/abomination_limb,if=variable.adds_remain\n\n# San'layn Cooldowns\nactions.cds_san+=/dark_transformation,if=active_enemies>=1&variable.st_planning&(talent.apocalypse&pet.apoc_ghoul.active||!talent.apocalypse)||boss&fight_remains<20\nactions.cds_san+=/unholy_assault,if=variable.st_planning&(buff.dark_transformation.up&buff.dark_transformation.remains<12)||boss&fight_remains<20\nactions.cds_san+=/apocalypse,if=variable.st_planning&debuff.festering_wound.stack>=3||boss&fight_remains<20\nactions.cds_san+=/outbreak,cycle_targets=1,if=target.time_to_die>dot.virulent_plague.remains&dot.virulent_plague.ticks_remain<5&(dot.virulent_plague.refreshable||talent.morbidity&buff.infliction_of_sorrow.up&talent.superstrain&dot.frost_fever.refreshable&dot.blood_plague.refreshable)&(!talent.unholy_blight||talent.unholy_blight&cooldown.dark_transformation.remains)&(!talent.raise_abomination||talent.raise_abomination&cooldown.raise_abomination.remains)\nactions.cds_san+=/abomination_limb,if=active_enemies>=1&variable.st_planning&!buff.gift_of_the_sanlayn.up&!buff.sudden_doom.react&buff.festermight.up&debuff.festering_wound.stack<=2||!buff.gift_of_the_sanlayn.up&fight_remains<12\n\n# Shared Cooldowns\nactions.cds_shared+=/potion,if=active_enemies>=1&(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(buff.dark_transformation.up&30>=buff.dark_transformation.remains||pet.army_ghoul.active&pet.army_ghoul.remains<=30||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=30||pet.abomination.active&pet.abomination.remains<=30)||boss&fight_remains<=30\n## Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=49206/summon-gargoyle'>Gargoyle</a> is up, as well as <a href='https://www.wowhead.com/spell=275699/apocalypse'>Apocalypse</a> or with <a href='https://www.wowhead.com/spell=63560/dark-transformation'>Dark Transformation</a> if <a href='https://www.wowhead.com/spell=275699/apocalypse'>Apocalypse</a> or <a href='https://www.wowhead.com/spell=49206/summon-gargoyle'>Gargoyle</a> are not talented\n## actions.cds_shared+=/invoke_external_buff,name=power_infusion,if=active_enemies>=1&(variable.st_planning||variable.adds_remain)&(pet.gargoyle.active&pet.gargoyle.remains<=22||!talent.summon_gargoyle&talent.army_of_the_dead&(talent.raise_abomination&pet.abomination.active&pet.abomination.remains<18||!talent.raise_abomination&pet.army_ghoul.active&pet.army_ghoul.remains<=18)||!talent.summon_gargoyle&!talent.army_of_the_dead&buff.dark_transformation.up||!talent.summon_gargoyle&buff.dark_transformation.up||!pet.gargoyle.active&cooldown.summon_gargoyle.remains+10>cooldown.invoke_external_buff_power_infusion.duration||active_enemies>=3&(buff.dark_transformation.up||death_and_decay.ticking))\nactions.cds_shared+=/army_of_the_dead,if=(variable.st_planning||variable.adds_remain)&(talent.commander_of_the_dead&cooldown.dark_transformation.remains<5||!talent.commander_of_the_dead&active_enemies>=1)||boss&fight_remains<35\nactions.cds_shared+=/raise_abomination,if=(variable.st_planning||variable.adds_remain)||boss&fight_remains<30\nactions.cds_shared+=/summon_gargoyle,use_off_gcd=1,if=(variable.st_planning||variable.adds_remain)&(buff.commander_of_the_dead.up||!talent.commander_of_the_dead&active_enemies>=1)\nactions.cds_shared+=/antimagic_shell,if=death_knight.ams_absorb_percent>0&runic_power<30&rune<2\n\n# Cleave\nactions.cleave+=/any_dnd,if=!death_and_decay.ticking\nactions.cleave+=/death_coil,if=!variable.pooling_runic_power&talent.improved_death_coil\nactions.cleave+=/epidemic,if=!variable.pooling_runic_power&!talent.improved_death_coil\nactions.cleave+=/festering_strike,cycle_targets=1,if=!variable.pop_wounds&debuff.festering_wound.stack<4||buff.festering_scythe.react\nactions.cleave+=/festering_strike,cycle_targets=1,if=cooldown.apocalypse.remains<variable.apoc_timing&debuff.festering_wound.stack<4\nactions.cleave+=/wound_spender,if=variable.pop_wounds\n\n# Racials\nactions.racials+=/arcane_torrent,if=runic_power<20&rune<2\nactions.racials+=/blood_fury,if=(buff.blood_fury.duration+3>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.blood_fury.duration+3||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.blood_fury.duration+3||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.blood_fury.duration+3\nactions.racials+=/berserking,if=(buff.berserking.duration+3>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.berserking.duration+3||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.berserking.duration+3||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.berserking.duration+3\nactions.racials+=/lights_judgment,if=buff.unholy_strength.up&(!talent.festermight||buff.festermight.remains<target.time_to_die||buff.unholy_strength.remains<target.time_to_die)\nactions.racials+=/ancestral_call,if=(18>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=18||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=18||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=18\nactions.racials+=/arcane_pulse,if=active_enemies>=2||(rune.deficit>=5&runic_power.deficit>=60)\nactions.racials+=/fireblood,if=(buff.fireblood.duration+3>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.fireblood.duration+3||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.fireblood.duration+3||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.fireblood.duration+3\nactions.racials+=/bag_of_tricks,if=active_enemies=1&(buff.unholy_strength.up||boss&fight_remains<5)\n\n# San'layn Fishing\nactions.san_fishing+=/antimagic_shell,if=death_knight.ams_absorb_percent>0&runic_power<40\nactions.san_fishing+=/any_dnd,if=!buff.death_and_decay.up&!buff.vampiric_strike.up\nactions.san_fishing+=/death_coil,if=buff.sudden_doom.up&talent.doomed_bidding\nactions.san_fishing+=/soul_reaper,if=target.health.pct<=35&fight_remains>5\nactions.san_fishing+=/death_coil,if=!buff.vampiric_strike.up\nactions.san_fishing+=/wound_spender,if=(debuff.festering_wound.stack>=3-pet.abomination.active&cooldown.apocalypse.remains>variable.apoc_timing)||buff.vampiric_strike.up\nactions.san_fishing+=/festering_strike,if=debuff.festering_wound.stack<3-pet.abomination.active\n\n# Single Target San'layn\nactions.san_st+=/any_dnd,if=!death_and_decay.ticking&talent.unholy_ground&cooldown.dark_transformation.remains<5\nactions.san_st+=/death_coil,if=buff.sudden_doom.react&buff.gift_of_the_sanlayn.remains&(talent.doomed_bidding||talent.rotten_touch)||rune<2&!buff.runic_corruption.up\nactions.san_st+=/wound_spender,if=buff.essence_of_the_blood_queen.remains<3&buff.vampiric_strike.up||talent.gift_of_the_sanlayn&buff.dark_transformation.up&buff.dark_transformation.remains<gcd\nactions.san_st+=/soul_reaper,if=target.health.pct<=35&!buff.gift_of_the_sanlayn.up&fight_remains>5\nactions.san_st+=/festering_strike,if=(debuff.festering_wound.stack<4&cooldown.apocalypse.remains<variable.apoc_timing)||(talent.gift_of_the_sanlayn&!buff.gift_of_the_sanlayn.up||!talent.gift_of_the_sanlayn)&(buff.festering_scythe.up||debuff.festering_wound.stack<=1-pet.abomination.active)\nactions.san_st+=/wound_spender,if=(debuff.festering_wound.stack>=3-pet.abomination.active&cooldown.apocalypse.remains>variable.apoc_timing)||buff.vampiric_strike.up&cooldown.apocalypse.remains>variable.apoc_timing\nactions.san_st+=/death_coil,if=!variable.pooling_runic_power&debuff.death_rot.remains<gcd||(buff.sudden_doom.up&debuff.festering_wound.stack>=1||rune<2)\nactions.san_st+=/wound_spender,if=debuff.festering_wound.stack>4\nactions.san_st+=/death_coil,if=!variable.pooling_runic_power\n\n# Trinkets San'layn\nactions.san_trinkets+=/use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking&(active_enemies<5||active_enemies>21||boss&fight_remains<4)&(pet.abomination.active||pet.army_ghoul.active||!talent.raise_abomination&!talent.army_of_the_dead||time>15)\n## actions.san_trinkets+=/do_treacherous_transmitter_task,use_off_gcd=1,if=buff.errant_manaforge_emission.up&buff.dark_transformation.up&buff.errant_manaforge_emission.remains<2||buff.cryptic_instructions.up&buff.dark_transformation.up&buff.cryptic_instructions.remains<2||buff.realigning_nexus_convergence_divergence.up&buff.dark_transformation.up&buff.realigning_nexus_convergence_divergence.remains<2\nactions.san_trinkets+=/use_item,name=treacherous_transmitter,if=(variable.adds_remain||variable.st_planning)&cooldown.dark_transformation.remains<3\nactions.san_trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&(buff.dark_transformation.up&buff.dark_transformation.remains<variable.trinket_1_duration*0.73&(variable.trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown))||boss&variable.trinket_1_duration>=fight_remains\nactions.san_trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&(buff.dark_transformation.up&buff.dark_transformation.remains<variable.trinket_2_duration*0.73&(variable.trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown))||boss&variable.trinket_2_duration>=fight_remains\nactions.san_trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&(variable.damage_trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination||!talent.summon_gargoyle&talent.army_of_the_dead&(!talent.raise_abomination&cooldown.army_of_the_dead.remains>20||talent.raise_abomination&cooldown.raise_abomination.remains>20)||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination&cooldown.dark_transformation.remains>20||talent.summon_gargoyle&cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||boss&fight_remains<15\nactions.san_trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&(variable.damage_trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination||!talent.summon_gargoyle&talent.army_of_the_dead&(!talent.raise_abomination&cooldown.army_of_the_dead.remains>20||talent.raise_abomination&cooldown.raise_abomination.remains>20)||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination&cooldown.dark_transformation.remains>20||talent.summon_gargoyle&cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||boss&fight_remains<15\n\n# Single Taget Non-San'layn\nactions.st+=/soul_reaper,if=target.health.pct<=35&fight_remains>5\nactions.st+=/any_dnd,if=talent.unholy_ground&!buff.death_and_decay.up&(pet.apoc_ghoul.active||pet.abomination.active||pet.gargoyle.active)\nactions.st+=/death_coil,if=!variable.pooling_runic_power&variable.spend_rp||boss&fight_remains<10\nactions.st+=/festering_strike,if=debuff.festering_wound.stack<4&(!variable.pop_wounds||buff.festering_scythe.react)\nactions.st+=/wound_spender,if=variable.pop_wounds\nactions.st+=/death_coil,if=!variable.pooling_runic_power\nactions.st+=/wound_spender,if=!variable.pop_wounds&debuff.festering_wound.stack>=4\n\n# Trinkets Non-San'layn\nactions.trinkets+=/use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking&(active_enemies<5||active_enemies>21||boss&fight_remains<4)&(pet.abomination.active||pet.army_ghoul.active||!talent.raise_abomination&!talent.army_of_the_dead||time>15)\n## actions.trinkets+=/do_treacherous_transmitter_task,use_off_gcd=1,if=buff.errant_manaforge_emission.up&(pet.apoc_ghoul.active||!talent.apocalypse&buff.dark_transformation.up)||buff.cryptic_instructions.up&(pet.apoc_ghoul.active||!talent.apocalypse&buff.dark_transformation.up)||buff.realigning_nexus_convergence_divergence.up&(pet.apoc_ghoul.active||!talent.apocalypse&buff.dark_transformation.up)\nactions.trinkets+=/use_item,name=treacherous_transmitter,if=(variable.adds_remain||variable.st_planning)&cooldown.dark_transformation.remains<3\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&((!talent.summon_gargoyle&((!talent.army_of_the_dead||talent.army_of_the_dead&cooldown.army_of_the_dead.remains>trinket.1.cooldown.duration*0.51||death_knight.disable_aotd||talent.raise_abomination&cooldown.raise_abomination.remains>trinket.1.cooldown.duration*0.51)&((20>variable.trinket_1_duration&pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=variable.trinket_1_duration*1.2||20<=variable.trinket_1_duration&cooldown.apocalypse.remains<gcd&buff.dark_transformation.up)||(!talent.apocalypse||active_enemies>=2)&buff.dark_transformation.up)||pet.army_ghoul.active&pet.army_ghoul.remains<variable.trinket_1_duration*1.2||pet.abomination.active&pet.abomination.remains<variable.trinket_1_duration*1.2)||talent.summon_gargoyle&pet.gargoyle.active&pet.gargoyle.remains<variable.trinket_1_duration*1.2||cooldown.summon_gargoyle.remains>80)&(variable.trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown))||boss&variable.trinket_1_duration>=fight_remains\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&((!talent.summon_gargoyle&((!talent.army_of_the_dead||talent.army_of_the_dead&cooldown.army_of_the_dead.remains>trinket.2.cooldown.duration*0.51||death_knight.disable_aotd||talent.raise_abomination&cooldown.raise_abomination.remains>trinket.2.cooldown.duration*0.51)&((20>variable.trinket_2_duration&pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=variable.trinket_2_duration*1.2||20<=variable.trinket_2_duration&cooldown.apocalypse.remains<gcd&buff.dark_transformation.up)||(!talent.apocalypse||active_enemies>=2)&buff.dark_transformation.up)||pet.army_ghoul.active&pet.army_ghoul.remains<variable.trinket_2_duration*1.2||pet.abomination.active&pet.abomination.remains<variable.trinket_2_duration*1.2)||talent.summon_gargoyle&pet.gargoyle.active&pet.gargoyle.remains<variable.trinket_2_duration*1.2||cooldown.summon_gargoyle.remains>80)&(variable.trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown))||boss&variable.trinket_2_duration>=fight_remains\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&(variable.damage_trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination||!talent.summon_gargoyle&talent.army_of_the_dead&(!talent.raise_abomination&cooldown.army_of_the_dead.remains>20||talent.raise_abomination&cooldown.raise_abomination.remains>20)||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination&cooldown.dark_transformation.remains>20||talent.summon_gargoyle&cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||boss&fight_remains<15\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&(variable.damage_trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination||!talent.summon_gargoyle&talent.army_of_the_dead&(!talent.raise_abomination&cooldown.army_of_the_dead.remains>20||talent.raise_abomination&cooldown.raise_abomination.remains>20)||!talent.summon_gargoyle&!talent.army_of_the_dead&!talent.raise_abomination&cooldown.dark_transformation.remains>20||talent.summon_gargoyle&cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||boss&fight_remains<15\n\n# Variables\nactions.variables+=/variable,name=st_planning,op=setif,value=1,value_else=0,condition=active_enemies=1&(!raid_event.adds.exists||raid_event.adds.in>15)\nactions.variables+=/variable,name=adds_remain,op=setif,value=1,value_else=0,condition=active_enemies>=2&(!raid_event.adds.exists&fight_remains>6||raid_event.adds.exists&raid_event.adds.remains>6)\nactions.variables+=/variable,name=apoc_timing,op=setif,value=7,value_else=3,condition=cooldown.apocalypse.remains<10&debuff.festering_wound.stack<=4&cooldown.unholy_assault.remains>10\nactions.variables+=/variable,name=pop_wounds,op=setif,value=1,value_else=0,condition=(cooldown.apocalypse.remains>variable.apoc_timing||!talent.apocalypse)&(debuff.festering_wound.stack>=1&cooldown.unholy_assault.remains<20&talent.unholy_assault&variable.st_planning||debuff.rotten_touch.up&debuff.festering_wound.stack>=1||debuff.festering_wound.stack>=4-pet.abomination.active)||fight_remains<5&debuff.festering_wound.stack>=1\nactions.variables+=/variable,name=pooling_runic_power,op=setif,value=1,value_else=0,condition=talent.vile_contagion&cooldown.vile_contagion.remains<5&runic_power<30\n\nactions.variables+=/variable,name=spend_rp,op=setif,value=1,value_else=0,condition=(!talent.rotten_touch||talent.rotten_touch&!debuff.rotten_touch.up||runic_power.deficit<20)&((talent.improved_death_coil&(active_enemies=2||talent.coil_of_devastation)||rune<3||pet.gargoyle.active||buff.sudden_doom.up||!variable.pop_wounds&debuff.festering_wound.stack>=4))",
["author"] = "SimulationCraft",
},
["Fury"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240903,
["author"] = "SimC",
["desc"] = "2024-09-03: SimC update\n\n2024-08-25: Update using Icy-Veins\n\n2024-08-15: Sim update\n\n2024-07-30: Sim update\n\n2024-07-23: The War Within",
["profile"] = "actions.precombat+=/battle_shout\nactions.precombat+=/berserker_stance,toggle=on\nactions.precombat+=/recklessness,if=!equipped.fyralath_the_dreamrender\nactions.precombat+=/avatar,if=!talent.titans_torment\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.treacherous_transmitter\n# Evaluates a trinkets cooldown, divided by avatar or odyns fur. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(trinket.1.cooldown.duration%%cooldown.avatar.duration=0||trinket.1.cooldown.duration%%cooldown.odyns_fury.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(trinket.2.cooldown.duration%%cooldown.avatar.duration=0||trinket.2.cooldown.duration%%cooldown.odyns_fury.duration=0)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_stat.any_dps&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_stat.any_dps&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\n\nactions+=/pummel,if=target.debuff.casting.react\nactions+=/charge,if=time<=0.5||movement.distance>5\nactions+=/heroic_leap,if=(raid_event.movement.distance>25&raid_event.movement.in>45)\nactions+=/potion\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=variables\nactions+=/lights_judgment,if=variable.on_gcd_racials\nactions+=/bag_of_tricks,if=variable.on_gcd_racials\nactions+=/berserking,if=buff.recklessness.up\nactions+=/blood_fury\nactions+=/fireblood\nactions+=/ancestral_call\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.avatar.remains>15&fight_remains>=135||variable.execute_phase&buff.avatar.up||fight_remains<=25\nactions+=/run_action_list,name=slayer_st,strict=1,if=talent.slayers_dominance&active_enemies=1\nactions+=/run_action_list,name=slayer_mt,strict=1,if=talent.slayers_dominance&active_enemies>1\nactions+=/run_action_list,name=thane_st,strict=1,if=!talent.slayers_dominance&active_enemies=1\nactions+=/run_action_list,name=thane_mt,strict=1,if=!talent.slayers_dominance&active_enemies>1\n\nactions.slayer_st+=/recklessness,if=(!talent.anger_management&cooldown.avatar.remains<1&talent.titans_torment)||talent.anger_management||!talent.titans_torment\nactions.slayer_st+=/avatar,if=(talent.titans_torment&(buff.enrage.up||talent.titanic_rage)&(debuff.champions_might.up||!talent.champions_might))||!talent.titans_torment\nactions.slayer_st+=/thunderous_roar,if=buff.enrage.up\nactions.slayer_st+=/champions_spear,if=(buff.enrage.up&talent.titans_torment&cooldown.avatar.remains<gcd)||(buff.enrage.up&!talent.titans_torment)\nactions.slayer_st+=/odyns_fury,if=dot.odyns_fury_torment_mh.remains<1&(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.slayer_st+=/execute,if=talent.ashen_juggernaut&buff.ashen_juggernaut.remains<=gcd&buff.enrage.up\nactions.slayer_st+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.slayer_st+=/bladestorm,if=buff.enrage.up&cooldown.avatar.remains>=9\nactions.slayer_st+=/onslaught,if=talent.tenderize&buff.brutal_finish.up\nactions.slayer_st+=/rampage,if=talent.anger_management\nactions.slayer_st+=/crushing_blow\nactions.slayer_st+=/onslaught,if=talent.tenderize\nactions.slayer_st+=/bloodbath,if=buff.enrage.up\nactions.slayer_st+=/raging_blow,if=talent.slaughtering_strikes&rage<110&talent.reckless_abandon\nactions.slayer_st+=/execute,if=buff.enrage.up&debuff.marked_for_execution.up\nactions.slayer_st+=/rampage,if=talent.reckless_abandon\nactions.slayer_st+=/bloodthirst,if=!talent.reckless_abandon&buff.enrage.up\nactions.slayer_st+=/raging_blow\nactions.slayer_st+=/onslaught\nactions.slayer_st+=/execute\nactions.slayer_st+=/bloodthirst\nactions.slayer_st+=/whirlwind,if=talent.meat_cleaver\nactions.slayer_st+=/slam\nactions.slayer_st+=/storm_bolt,if=buff.bladestorm.up\n\nactions.slayer_mt+=/recklessness,if=(!talent.anger_management&cooldown.avatar.remains<1&talent.titans_torment)||talent.anger_management||!talent.titans_torment\nactions.slayer_mt+=/avatar,if=(talent.titans_torment&(buff.enrage.up||talent.titanic_rage)&(debuff.champions_might.up||!talent.champions_might))||!talent.titans_torment\nactions.slayer_mt+=/thunderous_roar,if=buff.enrage.up\nactions.slayer_mt+=/champions_spear,if=(buff.enrage.up&talent.titans_torment&cooldown.avatar.remains<gcd)||(buff.enrage.up&!talent.titans_torment)\nactions.slayer_mt+=/odyns_fury,if=dot.odyns_fury_torment_mh.remains<1&(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.slayer_mt+=/whirlwind,if=buff.meat_cleaver.stack=0&talent.meat_cleaver\nactions.slayer_mt+=/execute,if=talent.ashen_juggernaut&buff.ashen_juggernaut.remains<=gcd&buff.enrage.up\nactions.slayer_mt+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.slayer_mt+=/bladestorm,if=buff.enrage.up&cooldown.avatar.remains>=9\nactions.slayer_mt+=/onslaught,if=talent.tenderize&buff.brutal_finish.up\nactions.slayer_mt+=/rampage,if=talent.anger_management\nactions.slayer_mt+=/crushing_blow\nactions.slayer_mt+=/onslaught,if=talent.tenderize\nactions.slayer_mt+=/bloodbath,if=buff.enrage.up\nactions.slayer_mt+=/rampage,if=talent.reckless_abandon\nactions.slayer_mt+=/execute,if=buff.enrage.up&debuff.marked_for_execution.up\nactions.slayer_mt+=/bloodbath\nactions.slayer_mt+=/raging_blow,if=talent.slaughtering_strikes\nactions.slayer_mt+=/onslaught\nactions.slayer_mt+=/execute\nactions.slayer_mt+=/bloodthirst\nactions.slayer_mt+=/raging_blow\nactions.slayer_mt+=/whirlwind\nactions.slayer_mt+=/storm_bolt,if=buff.bladestorm.up\n\nactions.thane_st+=/recklessness,if=(!talent.anger_management&cooldown.avatar.remains<1&talent.titans_torment)||talent.anger_management||!talent.titans_torment\nactions.thane_st+=/thunder_blast,if=buff.enrage.up\nactions.thane_st+=/avatar,if=(talent.titans_torment&(buff.enrage.up||talent.titanic_rage)&(debuff.champions_might.up||!talent.champions_might))||!talent.titans_torment\nactions.thane_st+=/ravager\nactions.thane_st+=/thunderous_roar,if=buff.enrage.up\nactions.thane_st+=/champions_spear,if=buff.enrage.up&(cooldown.avatar.remains<gcd||!talent.titans_torment)\nactions.thane_st+=/odyns_fury,if=dot.odyns_fury_torment_mh.remains<1&(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.thane_st+=/execute,if=talent.ashen_juggernaut&buff.ashen_juggernaut.remains<=gcd&buff.enrage.up\nactions.thane_st+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.thane_st+=/bladestorm,if=buff.enrage.up&talent.unhinged\nactions.thane_st+=/rampage,if=talent.anger_management\nactions.thane_st+=/crushing_blow\nactions.thane_st+=/onslaught,if=talent.tenderize\nactions.thane_st+=/bloodbath\nactions.thane_st+=/rampage,if=talent.reckless_abandon\nactions.thane_st+=/raging_blow\nactions.thane_st+=/execute\nactions.thane_st+=/bloodthirst,if=buff.enrage.up&(!buff.burst_of_power.up||!talent.reckless_abandon)\nactions.thane_st+=/onslaught\nactions.thane_st+=/bloodthirst\nactions.thane_st+=/thunder_clap\nactions.thane_st+=/whirlwind,if=talent.meat_cleaver\nactions.thane_st+=/slam\n\nactions.thane_mt+=/recklessness,if=(!talent.anger_management&cooldown.avatar.remains<1&talent.titans_torment)||talent.anger_management||!talent.titans_torment\nactions.thane_mt+=/thunder_blast,if=buff.enrage.up\nactions.thane_mt+=/avatar,if=(talent.titans_torment&(buff.enrage.up||talent.titanic_rage)&(debuff.champions_might.up||!talent.champions_might))||!talent.titans_torment\nactions.thane_mt+=/thunder_clap,if=buff.meat_cleaver.stack=0&talent.meat_cleaver\nactions.thane_mt+=/thunderous_roar,if=buff.enrage.up\nactions.thane_mt+=/ravager\nactions.thane_mt+=/champions_spear,if=buff.enrage.up\nactions.thane_mt+=/odyns_fury,if=dot.odyns_fury_torment_mh.remains<1&(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.thane_mt+=/execute,if=talent.ashen_juggernaut&buff.ashen_juggernaut.remains<=gcd&buff.enrage.up\nactions.thane_mt+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.thane_mt+=/bladestorm,if=buff.enrage.up\nactions.thane_mt+=/rampage,if=talent.anger_management\nactions.thane_mt+=/crushing_blow,if=buff.enrage.up\nactions.thane_mt+=/onslaught,if=talent.tenderize\nactions.thane_mt+=/bloodbath\nactions.thane_mt+=/rampage,if=talent.reckless_abandon\nactions.thane_mt+=/bloodthirst\nactions.thane_mt+=/thunder_clap\nactions.thane_mt+=/onslaught\nactions.thane_mt+=/execute\nactions.thane_mt+=/raging_blow\nactions.thane_mt+=/whirlwind\n\n# Trinkets\n## actions.trinkets+=/do_treacherous_transmitter_task,use_off_gcd=1\nactions.trinkets+=/use_item,use_off_gcd=1,name=treacherous_transmitter,if=variable.adds_remain||variable.st_planning\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!buff.avatar.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&((talent.titans_torment&cooldown.avatar.ready)||(buff.avatar.up&!talent.titans_torment))&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains&boss\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!buff.avatar.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&((talent.titans_torment&cooldown.avatar.ready)||(buff.avatar.up&!talent.titans_torment))&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains&boss\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\n\n# Variables\nactions.variables+=/variable,name=st_planning,value=active_enemies=1&(raid_event.adds.in>15||!raid_event.adds.exists)\nactions.variables+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>5)\nactions.variables+=/variable,name=execute_phase,value=(talent.massacre.enabled&target.health.pct<35)||target.health.pct<20\nactions.variables+=/variable,name=on_gcd_racials,value=buff.recklessness.down&buff.avatar.down&rage<80&buff.bloodbath.down&buff.crushing_blow.down&buff.sudden_death.down&!cooldown.bladestorm.ready&(!cooldown.execute.ready||!variable.execute_phase)",
["version"] = 20240903,
["warnings"] = "The import for 'slayer_st' required some automated changes.\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 2: Converted 'talent.champions_might' to 'talent.champions_might.enabled' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 4: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 4: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 5: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 6: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\nLine 7: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 9: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 10: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 12: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 14: Converted 'talent.slaughtering_strikes' to 'talent.slaughtering_strikes.enabled' (1x).\nLine 14: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 16: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 17: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 22: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\n\nThe import for 'slayer_mt' required some automated changes.\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 2: Converted 'talent.champions_might' to 'talent.champions_might.enabled' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 4: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 4: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 5: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 6: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\nLine 7: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\nLine 8: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 10: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 11: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 13: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 15: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 18: Converted 'talent.slaughtering_strikes' to 'talent.slaughtering_strikes.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 13: Converted 'talent.slayers_dominance' to 'talent.slayers_dominance.enabled' (1x).\nLine 14: Converted 'talent.slayers_dominance' to 'talent.slayers_dominance.enabled' (1x).\nLine 15: Converted 'talent.slayers_dominance' to 'talent.slayers_dominance.enabled' (1x).\nLine 16: Converted 'talent.slayers_dominance' to 'talent.slayers_dominance.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 4: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 5: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 6: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 7: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted operations in 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%%cooldown.avatar.duration=0||trinket.t1.cooldown.duration%%cooldown.odyns_fury.duration=0)' to 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%cooldown.avatar.duration=0||trinket.t1.cooldown.duration%cooldown.odyns_fury.duration=0)'.\nLine 8: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 8: Converted operations in 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%%cooldown.avatar.duration=0||trinket.t2.cooldown.duration%%cooldown.odyns_fury.duration=0)' to 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%cooldown.avatar.duration=0||trinket.t2.cooldown.duration%cooldown.odyns_fury.duration=0)'.\nLine 9: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 9: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 10: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 10: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 11: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 11: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 11: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 11: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 11: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 11: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 11: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 11: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 11: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 11: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 11: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 11: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 11: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 12: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 13: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\n\nThe import for 'thane_st' required some automated changes.\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 3: Converted 'talent.champions_might' to 'talent.champions_might.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 6: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 7: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 8: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\nLine 9: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 10: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\nLine 11: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 13: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 15: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 18: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 22: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\n\nThe import for 'thane_mt' required some automated changes.\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 3: Converted 'talent.champions_might' to 'talent.champions_might.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 4: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\nLine 8: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 9: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\nLine 10: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 12: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 14: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 16: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\n\nImported 8 action lists.\n",
["spec"] = 72,
["lists"] = {
["slayer_st"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.anger_management.enabled & cooldown.avatar.remains < 1 & talent.titans_torment.enabled ) || talent.anger_management.enabled || ! talent.titans_torment.enabled",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "( talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) & ( debuff.champions_might.up || ! talent.champions_might.enabled ) ) || ! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "( buff.enrage.up & talent.titans_torment.enabled & cooldown.avatar.remains < gcd.max ) || ( buff.enrage.up & ! talent.titans_torment.enabled )",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "dot.odyns_fury_torment_mh.remains < 1 & ( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled & buff.ashen_juggernaut.remains <= gcd.max & buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & cooldown.avatar.remains >= 9",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled & buff.brutal_finish.up",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "talent.anger_management.enabled",
["action"] = "rampage",
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "talent.slaughtering_strikes.enabled & rage < 110 & talent.reckless_abandon.enabled",
["action"] = "raging_blow",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & debuff.marked_for_execution.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.reckless_abandon.enabled",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "! talent.reckless_abandon.enabled & buff.enrage.up",
["action"] = "bloodthirst",
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "onslaught",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.meat_cleaver.enabled",
["action"] = "whirlwind",
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["slayer_mt"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.anger_management.enabled & cooldown.avatar.remains < 1 & talent.titans_torment.enabled ) || talent.anger_management.enabled || ! talent.titans_torment.enabled",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "( talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) & ( debuff.champions_might.up || ! talent.champions_might.enabled ) ) || ! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "( buff.enrage.up & talent.titans_torment.enabled & cooldown.avatar.remains < gcd.max ) || ( buff.enrage.up & ! talent.titans_torment.enabled )",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "dot.odyns_fury_torment_mh.remains < 1 & ( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.meat_cleaver.stack = 0 & talent.meat_cleaver.enabled",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled & buff.ashen_juggernaut.remains <= gcd.max & buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & cooldown.avatar.remains >= 9",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled & buff.brutal_finish.up",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "talent.anger_management.enabled",
["action"] = "rampage",
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "talent.reckless_abandon.enabled",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & debuff.marked_for_execution.up",
["action"] = "execute",
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.slaughtering_strikes.enabled",
["action"] = "raging_blow",
},
{
["action"] = "onslaught",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["thane_mt"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.anger_management.enabled & cooldown.avatar.remains < 1 & talent.titans_torment.enabled ) || talent.anger_management.enabled || ! talent.titans_torment.enabled",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) & ( debuff.champions_might.up || ! talent.champions_might.enabled ) ) || ! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "buff.meat_cleaver.stack = 0 & talent.meat_cleaver.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "dot.odyns_fury_torment_mh.remains < 1 & ( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled & buff.ashen_juggernaut.remains <= gcd.max & buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "talent.anger_management.enabled",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "crushing_blow",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.reckless_abandon.enabled",
["action"] = "rampage",
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["action"] = "onslaught",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "battle_shout",
["enabled"] = true,
},
{
["toggle"] = "on",
["action"] = "berserker_stance",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! equipped.fyralath_the_dreamrender",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.treacherous_transmitter",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.treacherous_transmitter",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by avatar or odyns fur. If it's value has no remainder return 1, else return 0.5.",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["action"] = "variable",
["value_else"] = "0.5",
["criteria"] = "trinket.t1.has_use_buff & ( trinket.t1.cooldown.duration % cooldown.avatar.duration = 0 || trinket.t1.cooldown.duration % cooldown.odyns_fury.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration % cooldown.avatar.duration = 0 || trinket.t2.cooldown.duration % cooldown.odyns_fury.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_stat.any_dps & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_stat.any_dps & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
},
["thane_st"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.anger_management.enabled & cooldown.avatar.remains < 1 & talent.titans_torment.enabled ) || talent.anger_management.enabled || ! talent.titans_torment.enabled",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) & ( debuff.champions_might.up || ! talent.champions_might.enabled ) ) || ! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( cooldown.avatar.remains < gcd.max || ! talent.titans_torment.enabled )",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "dot.odyns_fury_torment_mh.remains < 1 & ( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled & buff.ashen_juggernaut.remains <= gcd.max & buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.unhinged.enabled",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "talent.anger_management.enabled",
["action"] = "rampage",
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.reckless_abandon.enabled",
["action"] = "rampage",
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( ! buff.burst_of_power.up || ! talent.reckless_abandon.enabled )",
["action"] = "bloodthirst",
},
{
["action"] = "onslaught",
["enabled"] = true,
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.meat_cleaver.enabled",
["action"] = "whirlwind",
},
{
["action"] = "slam",
["enabled"] = true,
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["use_off_gcd"] = 1,
["description"] = "Trinkets",
["criteria"] = "variable.adds_remain || variable.st_planning",
["action"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.",
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! buff.avatar.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & ( ( talent.titans_torment.enabled & cooldown.avatar.ready ) || ( buff.avatar.up & ! talent.titans_torment.enabled ) ) & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains & boss",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! buff.avatar.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & ( ( talent.titans_torment.enabled & cooldown.avatar.ready ) || ( buff.avatar.up & ! talent.titans_torment.enabled ) ) & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains & boss",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.react",
["action"] = "pummel",
},
{
["enabled"] = true,
["criteria"] = "time <= 0.5 || movement.distance > 5",
["action"] = "charge",
},
{
["enabled"] = true,
["criteria"] = "( raid_event.movement.distance > 25 & raid_event.movement.in > 45 )",
["action"] = "heroic_leap",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["criteria"] = "variable.on_gcd_racials",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "variable.on_gcd_racials",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness.up",
["action"] = "berserking",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.slayers_dominance.enabled & active_enemies = 1",
["list_name"] = "slayer_st",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.slayers_dominance.enabled & active_enemies > 1",
["list_name"] = "slayer_mt",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.slayers_dominance.enabled & active_enemies = 1",
["list_name"] = "thane_st",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.slayers_dominance.enabled & active_enemies > 1",
["list_name"] = "thane_mt",
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1 & ( raid_event.adds.in > 15 || ! raid_event.adds.exists )",
["var_name"] = "st_planning",
["description"] = "Variables",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 5 )",
["var_name"] = "adds_remain",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.massacre.enabled & target.health.pct < 35 ) || target.health.pct < 20",
["var_name"] = "execute_phase",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.recklessness.down & buff.avatar.down & rage < 80 & buff.bloodbath.down & buff.crushing_blow.down & buff.sudden_death.down & ! cooldown.bladestorm.ready & ( ! cooldown.execute.ready || ! variable.execute_phase )",
["var_name"] = "on_gcd_racials",
},
},
},
},
["Subtlety"] = {
["builtIn"] = true,
["date"] = 20240822,
["spec"] = 261,
["desc"] = "2024-08-15, 22: SimC updates\n\n2024-07-28: The War Within",
["lists"] = {
["items"] = {
{
["enabled"] = true,
["action"] = "ashes_of_the_embersoul",
["criteria"] = "( buff.cold_blood.up || ( ! talent.danse_macabre.enabled & buff.shadow_dance.up || buff.danse_macabre.stack >= 3 ) & ! talent.cold_blood.enabled ) || boss & fight_remains < 10",
["name"] = "ashes_of_the_embersoul",
},
{
["enabled"] = true,
["action"] = "witherbarks_branch",
["criteria"] = "buff.flagellation_buff.up & talent.invigorating_shadowdust.enabled || buff.shadow_blades.up || equipped.bandolier_of_twisted_blades & raid_event.adds.up",
["name"] = "witherbarks_branch",
},
{
["enabled"] = true,
["action"] = "mirror_of_fractured_tomorrows",
["criteria"] = "buff.shadow_dance.up & ( target.time_to_die >= 15 || equipped.ashes_of_the_embersoul )",
["name"] = "mirror_of_fractured_tomorrows",
},
{
["enabled"] = true,
["action"] = "beacon_to_the_beyond",
["use_off_gcd"] = 1,
["criteria"] = "! stealthed.all & ( buff.deeper_daggers.up || ! talent.deeper_daggers.enabled ) & ( ! raid_event.adds.up || ! equipped.stormeaters_boon || cooldown.stormeaters_boon.remains > 20 )",
["name"] = "beacon_to_the_beyond",
},
{
["enabled"] = true,
["action"] = "manic_grieftorch",
["use_off_gcd"] = 1,
["criteria"] = "! stealthed.all & ( ! raid_event.adds.up || ! equipped.stormeaters_boon || cooldown.stormeaters_boon.remains > 20 )",
["name"] = "manic_grieftorch",
},
{
["enabled"] = true,
["action"] = "treacherous_transmitter",
["criteria"] = "buff.shadow_blades.up || fight_remains <= 15",
["name"] = "treacherous_transmitter",
},
{
["enabled"] = false,
["use_off_gcd"] = 1,
["criteria"] = "dot.rupture.ticking & buff.flagellation_buff.up",
["name"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "( variable.trinket_sync_slot = 1 & ( buff.shadow_blades.up || ( 1 + cooldown.shadow_blades.remains ) >= trinket.t1.cooldown.duration || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 2 & ( ! trinket.t2.cooldown.ready & ! buff.shadow_blades.up & cooldown.shadow_blades.remains > 20 ) ) || ! variable.trinket_sync_slot )",
["slots"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "( variable.trinket_sync_slot = 2 & ( buff.shadow_blades.up || ( 1 + cooldown.shadow_blades.remains ) >= trinket.t2.cooldown.duration || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 1 & ( ! trinket.t1.cooldown.ready & ! buff.shadow_blades.up & cooldown.shadow_blades.remains > 20 ) ) || ! variable.trinket_sync_slot )",
["slots"] = "trinket2",
},
},
["finish"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! buff.darkest_night.up & ( buff.danse_macabre.stack >= 2 || ! talent.danse_macabre.enabled || ( talent.unseen_blade.enabled & buff.shadow_dance.up & buff.escalating_blade.stack >= 2 ) )",
["var_name"] = "secret_condition",
},
{
["enabled"] = true,
["action"] = "rupture",
["description"] = "Apply Rupture if its not up.",
["criteria"] = "! dot.rupture.ticking & target.time_to_die - remains > 6",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.thistle_tea.up & spell_targets.shuriken_storm = 1 || buff.shadow_dance.up & ( spell_targets.shuriken_storm = 1 || dot.rupture.ticking & spell_targets.shuriken_storm >= 2 ) || buff.darkest_night.up",
["var_name"] = "skip_rupture",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.skip_rupture || priority_rotation ) & target.time_to_die - remains > 6 & refreshable",
["action"] = "rupture",
},
{
["enabled"] = true,
["criteria"] = "debuff.fazed.up & ( buff.shadow_dance.up || ( buff.symbols_of_death.up & cooldown.shadow_dance.charges_fractional <= 0.85 ) )",
["action"] = "dispatch",
},
{
["enabled"] = true,
["criteria"] = "variable.secret_condition & cooldown.secret_technique.ready",
["action"] = "cold_blood",
},
{
["enabled"] = true,
["criteria"] = "variable.secret_condition & ( ! talent.cold_blood.enabled || cooldown.cold_blood.remains > buff.shadow_dance.remains - 2 || ! talent.improved_shadow_dance.enabled )",
["action"] = "secret_technique",
},
{
["enabled"] = true,
["criteria"] = "! variable.skip_rupture & buff.finality_rupture.up & ( cooldown.symbols_of_death.remains <= 3 || buff.symbols_of_death.up )",
["action"] = "rupture",
},
{
["enabled"] = true,
["action"] = "black_powder",
["description"] = "deathstalker bp",
["criteria"] = "! variable.priority_rotation & talent.deathstalkers_mark.enabled & spell_targets >= 3 & ! buff.darkest_night.up",
},
{
["enabled"] = true,
["action"] = "black_powder",
["description"] = "trickster bp",
["criteria"] = "! variable.priority_rotation & talent.unseen_blade.enabled & ( ( buff.escalating_blade.stack = 4 & ! buff.shadow_dance.up ) || spell_targets >= 3 & ! buff.flawless_form.up || spell_targets > 10 || ( ! used_for_danse & buff.shadow_dance.up & talent.shuriken_tornado.enabled & spell_targets >= 3 ) )",
},
{
["enabled"] = true,
["criteria"] = "debuff.fazed.up",
["action"] = "dispatch",
},
{
["action"] = "eviscerate",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "stealth",
["enabled"] = true,
},
{
["action"] = "kick",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.slice_and_dice.up",
["var_name"] = "snd_condition",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "variable.trinket_sync_slot = 1",
["list_name"] = "items",
},
{
["enabled"] = true,
["criteria"] = "combo_points >= 1 & ! variable.snd_condition",
["action"] = "slice_and_dice",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "stealthed.all",
["list_name"] = "stealthed",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "stealth_cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "buff.darkest_night.up & combo_points = cp_max_spend || effective_combo_points >= cp_max_spend & ! buff.darkest_night.up || ( combo_points.deficit <= 1 + talent.deathstalkers_mark.enabled || fight_remains <= 1 & effective_combo_points >= 3 ) & ! buff.darkest_night.up",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "energy.deficit <= 20 + talent.vigor.rank * 25 + talent.thistle_tea.enabled * 20 + talent.shadowcraft.enabled * 20",
["list_name"] = "build",
},
{
["enabled"] = true,
["criteria"] = "energy.deficit >= 15 + energy.regen",
["action"] = "arcane_torrent",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "stealth",
["enabled"] = true,
},
{
["action"] = "apply_poison",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "3",
["var_name"] = "algethar_puzzle_box_precombat_cast",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["action"] = "slice_and_dice",
["precombat_seconds"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "priority_rotation",
["var_name"] = "priority_rotation",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "trinket_sync_slot",
["value"] = "1",
["description"] = "This is here until transmitter is added onto the has_stat_any_dps list",
["criteria"] = "trinket.t1.is.treacherous_transmitter",
},
},
["stealthed"] = {
{
["enabled"] = true,
["criteria"] = "talent.deathstalkers_mark.enabled & ! debuff.deathstalkers_mark.up & ! buff.darkest_night.up",
["action"] = "shadowstrike",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "buff.darkest_night.up & combo_points = cp_max_spend",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "effective_combo_points >= cp_max_spend & ! buff.darkest_night.up",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "buff.shuriken_tornado.up & combo_points.deficit <= 2 & ! buff.darkest_night.up",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "( combo_points.deficit <= 1 + talent.deathstalkers_mark.enabled ) & ! buff.darkest_night.up",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "shadowstrike",
["description"] = "Use shadowstrike for Danse Macabre on aoe and for Trickster use it instead of storm on 2+ targets",
["criteria"] = "( ! used_for_danse & buff.shadow_blades.up ) || ( talent.unseen_blade.enabled & spell_targets >= 2 )",
},
{
["enabled"] = true,
["criteria"] = "! buff.premeditation.up & spell_targets >= 4",
["action"] = "shuriken_storm",
},
{
["enabled"] = true,
["criteria"] = "buff.lingering_shadow.remains >= 10 & buff.shadow_blades.up & spell_targets = 1",
["action"] = "gloomblade",
},
{
["action"] = "shadowstrike",
["enabled"] = true,
},
},
["cds"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets <= 4 || talent.invigorating_shadowdust.enabled & ! talent.follow_the_blood.enabled || ( talent.replicating_shadows.enabled & ( spell_targets >= 5 & active_dot.rupture >= spell_targets - 2 ) ) || ! talent.replicating_shadows.enabled",
["var_name"] = "ruptures_before_flag",
["description"] = "Shuriken Tornado with Symbols of Death on 3 and more targets",
},
{
["enabled"] = true,
["criteria"] = "! talent.secret_technique.enabled & combo_points >= 6",
["action"] = "cold_blood",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & ( cooldown.shadow_blades.remains <= 3 & cooldown.symbols_of_death.remains <= 3 || fight_remains <= 12 )",
["action"] = "sepsis",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & variable.ruptures_before_flag & combo_points >= 6 & target.time_to_die > 10 & ( cooldown.shadow_blades.remains <= 2 || boss & fight_remains <= 24 ) & ( ! talent.invigorating_shadowdust.enabled || cooldown.symbols_of_death.remains <= 3 || buff.symbols_of_death.remains > 3 )",
["action"] = "flagellation",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "symbols_of_death",
["description"] = "Symbols without Invigorating Shadowdust",
["criteria"] = "! talent.invigorating_shadowdust.enabled & variable.snd_condition & ( buff.shadow_blades.up || cooldown.shadow_blades.remains > 20 )",
},
{
["enabled"] = true,
["action"] = "symbols_of_death",
["description"] = "Symbols with Invigorating Shadowdust",
["criteria"] = "talent.invigorating_shadowdust.enabled & variable.snd_condition & buff.symbols_of_death.remains <= 3 & ! buff.the_rotten.up & ( cooldown.flagellation.remains > 10 || cooldown.flagellation.up & cooldown.shadow_blades.remains >= 20 || buff.shadow_dance.remains >= 2 )",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & combo_points <= 1 & ( buff.flagellation_buff.up || ! talent.flagellation.enabled ) || fight_remains <= 20",
["action"] = "shadow_blades",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & combo_points.deficit >= 3 & ( ! talent.the_rotten.enabled || ! talent.reverberation.enabled || buff.shadow_dance.up )",
["action"] = "echoing_reprimand",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & buff.symbols_of_death.up & combo_points <= 2 & ! buff.premeditation.up & ( ! talent.flagellation.enabled || cooldown.flagellation.remains > 20 ) & spell_targets.shuriken_storm >= 3",
["action"] = "shuriken_tornado",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & ! buff.shadow_dance.up & ! buff.flagellation_buff.up & ! buff.flagellation_persist.up & ! buff.shadow_blades.up & spell_targets.shuriken_storm <= 2 & ! raid_event.adds.up",
["action"] = "shuriken_tornado",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish during dance & Dances during subterfuge that varies depending on hero talents, yes its cursed that they have to be here",
["criteria"] = "buff.shadow_dance.up & talent.invigorating_shadowdust.enabled & talent.unseen_blade.enabled & ( combo_points.deficit > 1 ) & ( cooldown.flagellation.remains >= 60 || ! talent.flagellation.enabled || fight_remains <= ( 30 * cooldown.vanish.charges ) ) & cooldown.secret_technique.remains >= 10",
},
{
["enabled"] = true,
["criteria"] = "! buff.shadow_dance.up & boss & fight_remains <= 8 + talent.subterfuge.enabled",
["action"] = "shadow_dance",
},
{
["enabled"] = true,
["criteria"] = "! buff.shadow_dance.up & talent.invigorating_shadowdust.enabled & talent.deathstalkers_mark.enabled & buff.shadow_blades.up & ( buff.subterfuge.up & spell_targets >= 4 || buff.subterfuge.remains >= 3 )",
["action"] = "shadow_dance",
},
{
["enabled"] = true,
["criteria"] = "! buff.shadow_dance.up & talent.unseen_blade.enabled & talent.invigorating_shadowdust.enabled & dot.rupture.ticking & variable.snd_condition & ( buff.symbols_of_death.remains >= 6 & ! buff.flagellation_buff.up || buff.symbols_of_death.up & buff.shadow_blades.up || buff.shadow_blades.up & ! talent.invigorating_shadowdust.enabled ) & ( cooldown.secret_technique.remains < 10 + 12 * ! talent.invigorating_shadowdust.enabled || buff.shadow_blades.up ) & ( ! talent.the_first_dance.enabled || ( combo_points.deficit >= 7 & ! buff.shadow_blades.up || buff.shadow_blades.up ) )",
["action"] = "shadow_dance",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & combo_points.deficit >= 3 & ( ! cooldown.shadow_dance.up || talent.double_dance.enabled & buff.shadow_dance.up & ! talent.invigorating_shadowdust.enabled || spell_targets.shuriken_storm < 4 & ! talent.invigorating_shadowdust.enabled || talent.the_rotten.enabled || raid_event.adds.up )",
["action"] = "goremaws_bite",
},
{
["enabled"] = true,
["criteria"] = "! buff.thistle_tea.up & ( buff.shadow_dance.remains >= 4 & buff.shadow_blades.up || buff.shadow_dance.remains >= 4 & cooldown.cold_blood.remains <= 3 ) || fight_remains <= ( 6 * cooldown.thistle_tea.charges )",
["action"] = "thistle_tea",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.react || boss & fight_remains < 30 || buff.symbols_of_death.up & ( buff.shadow_blades.up || cooldown.shadow_blades.remains <= 10 )",
["action"] = "potion",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.shadow_blades.up || ! talent.shadow_blades.enabled & buff.symbols_of_death.up || boss & fight_remains < 20",
["var_name"] = "racial_sync",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync & buff.shadow_dance.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "ancestral_call",
},
},
["stealth_cds"] = {
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "No dust vanish",
["criteria"] = "! talent.invigorating_shadowdust.enabled & ! talent.subterfuge.enabled & combo_points.deficit >= 3 & ( ! dot.rupture.ticking || ( buff.shadow_blades.up & buff.symbols_of_death.up ) || talent.premeditation.enabled || boss & fight_remains < 10 )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Dust Vanish",
["criteria"] = "! buff.shadow_dance.up & talent.invigorating_shadowdust.enabled & talent.deathstalkers_mark.enabled & ( combo_points.deficit > 1 || buff.shadow_blades.up ) & ( cooldown.flagellation.remains >= 60 || ! talent.flagellation.enabled || fight_remains <= ( 30 * cooldown.vanish.charges ) ) & cooldown.secret_technique.remains >= 10",
},
{
["enabled"] = true,
["criteria"] = "dot.rupture.ticking & variable.snd_condition & ( buff.symbols_of_death.remains >= 6 & ! buff.flagellation_buff.up || buff.symbols_of_death.up & buff.shadow_blades.up || buff.shadow_blades.up & ! talent.invigorating_shadowdust.enabled ) & cooldown.secret_technique.remains < 10 + 12 * ! talent.invigorating_shadowdust.enabled & ( ! talent.the_first_dance.enabled || ( combo_points.deficit >= 7 & ! buff.shadow_blades.up || buff.shadow_blades.up ) )",
["action"] = "shadow_dance",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "No Dust subterfuge vanish",
["criteria"] = "! talent.invigorating_shadowdust.enabled & talent.subterfuge.enabled & combo_points.deficit >= 3 & ( buff.symbols_of_death.up || cooldown.symbols_of_death.remains >= 3 )",
},
{
["enabled"] = true,
["criteria"] = "energy >= 40 & combo_points.deficit > 3",
["action"] = "shadowmeld",
},
},
["build"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets >= 2 + ( talent.gloomblade.enabled & buff.lingering_shadow.remains >= 6 || buff.perforated_veins.up ) & ( buff.flawless_form.up || ! talent.unseen_blade.enabled )",
["action"] = "shuriken_storm",
},
{
["enabled"] = true,
["action"] = "shuriken_storm",
["description"] = "Deathstalker shuriken storm on singletarget",
["criteria"] = "buff.clear_the_witnesses.up & ( ! buff.symbols_of_death.up || ! talent.inevitability.enabled ) & ( buff.lingering_shadow.remains <= 6 || ! talent.lingering_shadow.enabled )",
},
{
["action"] = "gloomblade",
["enabled"] = true,
},
{
["action"] = "backstab",
["enabled"] = true,
},
},
},
["version"] = 20240822,
["warnings"] = "The import for 'items' required some automated changes.\nLine 1: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 1: Converted 'talent.cold_blood' to 'talent.cold_blood.enabled' (1x).\nLine 2: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 4: Converted 'talent.deeper_daggers' to 'talent.deeper_daggers.enabled' (1x).\nLine 4: Converted 'trinket.stormeaters_boon.cooldown.remains' to 'cooldown.stormeaters_boon.remains'.\nLine 5: Converted 'trinket.stormeaters_boon.cooldown.remains' to 'cooldown.stormeaters_boon.remains'.\nLine 7: Unsupported use_item action [ imperfect_ascendancy_serum]; entry disabled.\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 8: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 9: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\n\nThe import for 'stealthed' required some automated changes.\nLine 1: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 2: Converted operations in 'buff.darkest_night.up&combo_points==cp_max_spend' to 'buff.darkest_night.up&combo_points=cp_max_spend'.\nLine 5: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 6: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 9: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 10: Converted 'talent.thistle_tea' to 'talent.thistle_tea.enabled' (1x).\nLine 10: Converted 'talent.shadowcraft' to 'talent.shadowcraft.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 7: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 7: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 8: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 8: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\n\nThe import for 'finish' required some automated changes.\nLine 1: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 1: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\nLine 7: Converted 'talent.cold_blood' to 'talent.cold_blood.enabled' (1x).\nLine 7: Converted 'talent.improved_shadow_dance' to 'talent.improved_shadow_dance.enabled' (1x).\nLine 9: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 10: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\nLine 10: Converted 'talent.shuriken_tornado' to 'talent.shuriken_tornado.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 1: Converted 'talent.follow_the_blood' to 'talent.follow_the_blood.enabled' (1x).\nLine 1: Converted 'talent.replicating_shadows' to 'talent.replicating_shadows.enabled' (1x).\nLine 1: Converted 'talent.replicating_shadows' to 'talent.replicating_shadows.enabled' (1x).\nLine 2: Converted 'talent.secret_technique' to 'talent.secret_technique.enabled' (1x).\nLine 4: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 5: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 6: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 7: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 8: Converted 'talent.the_rotten' to 'talent.the_rotten.enabled' (1x).\nLine 8: Converted 'talent.reverberation' to 'talent.reverberation.enabled' (1x).\nLine 9: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 11: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 11: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\nLine 11: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 13: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 13: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 14: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\nLine 14: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 14: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 14: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 14: Converted 'talent.the_first_dance' to 'talent.the_first_dance.enabled' (1x).\nLine 15: Converted 'talent.double_dance' to 'talent.double_dance.enabled' (1x).\nLine 15: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 15: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 15: Converted 'talent.the_rotten' to 'talent.the_rotten.enabled' (1x).\nLine 18: Converted 'talent.shadow_blades' to 'talent.shadow_blades.enabled' (1x).\n\nThe import for 'stealth_cds' required some automated changes.\nLine 1: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 1: Converted 'talent.subterfuge' to 'talent.subterfuge.enabled' (1x).\nLine 1: Converted 'talent.premeditation' to 'talent.premeditation.enabled' (1x).\nLine 2: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 2: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 2: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 3: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 3: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 3: Converted 'talent.the_first_dance' to 'talent.the_first_dance.enabled' (1x).\nLine 4: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 4: Converted 'talent.subterfuge' to 'talent.subterfuge.enabled' (1x).\n\nThe import for 'build' required some automated changes.\nLine 1: Converted 'talent.gloomblade' to 'talent.gloomblade.enabled' (1x).\nLine 1: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\nLine 2: Converted 'talent.inevitability' to 'talent.inevitability.enabled' (1x).\nLine 2: Converted 'talent.lingering_shadow' to 'talent.lingering_shadow.enabled' (1x).\n\nImported 8 action lists.\n",
["profile"] = "actions.precombat+=/stealth\nactions.precombat+=/apply_poison\nactions.precombat+=/variable,name=algethar_puzzle_box_precombat_cast,value=3\nactions.precombat+=/use_item,name=algethar_puzzle_box\nactions.precombat+=/slice_and_dice,precombat_seconds=1\nactions.precombat+=/variable,name=priority_rotation,value=priority_rotation\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)\n# This is here until transmitter is added onto the has_stat_any_dps list\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.is.treacherous_transmitter\n\nactions+=/stealth\nactions+=/kick\nactions+=/variable,name=snd_condition,value=buff.slice_and_dice.up\nactions+=/call_action_list,name=cds\nactions+=/call_action_list,name=items,if=variable.trinket_sync_slot=1\nactions+=/slice_and_dice,if=combo_points>=1&!variable.snd_condition\nactions+=/run_action_list,name=stealthed,strict=1,if=stealthed.all\nactions+=/call_action_list,name=stealth_cds\nactions+=/call_action_list,name=finish,strict=1,if=buff.darkest_night.up&combo_points=cp_max_spend||effective_combo_points>=cp_max_spend&!buff.darkest_night.up||(combo_points.deficit<=1+talent.deathstalkers_mark||fight_remains<=1&effective_combo_points>=3)&!buff.darkest_night.up\nactions+=/call_action_list,name=build,if=energy.deficit<=20+talent.vigor.rank*25+talent.thistle_tea*20+talent.shadowcraft*20\nactions+=/arcane_torrent,if=energy.deficit>=15+energy.regen\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\nactions.build+=/shuriken_storm,if=spell_targets>=2+(talent.gloomblade&buff.lingering_shadow.remains>=6||buff.perforated_veins.up)&(buff.flawless_form.up||!talent.unseen_blade)\n# Deathstalker shuriken storm on singletarget\nactions.build+=/shuriken_storm,if=buff.clear_the_witnesses.up&(!buff.symbols_of_death.up||!talent.inevitability)&(buff.lingering_shadow.remains<=6||!talent.lingering_shadow)\nactions.build+=/gloomblade\nactions.build+=/backstab\n\n# Shuriken Tornado with Symbols of Death on 3 and more targets\nactions.cds+=/variable,name=ruptures_before_flag,value=spell_targets<=4||talent.invigorating_shadowdust&!talent.follow_the_blood||(talent.replicating_shadows&(spell_targets>=5&active_dot.rupture>=spell_targets-2))||!talent.replicating_shadows\nactions.cds+=/cold_blood,if=!talent.secret_technique&combo_points>=6\nactions.cds+=/sepsis,if=variable.snd_condition&(cooldown.shadow_blades.remains<=3&cooldown.symbols_of_death.remains<=3||fight_remains<=12)\nactions.cds+=/flagellation,cycle_targets=1,if=variable.snd_condition&variable.ruptures_before_flag&combo_points>=6&target.time_to_die>10&(cooldown.shadow_blades.remains<=2||boss&fight_remains<=24)&(!talent.invigorating_shadowdust||cooldown.symbols_of_death.remains<=3||buff.symbols_of_death.remains>3)\n# Symbols without Invigorating Shadowdust\nactions.cds+=/symbols_of_death,if=!talent.invigorating_shadowdust&variable.snd_condition&(buff.shadow_blades.up||cooldown.shadow_blades.remains>20)\n# Symbols with Invigorating Shadowdust\nactions.cds+=/symbols_of_death,if=talent.invigorating_shadowdust&variable.snd_condition&buff.symbols_of_death.remains<=3&!buff.the_rotten.up&(cooldown.flagellation.remains>10||cooldown.flagellation.up&cooldown.shadow_blades.remains>=20||buff.shadow_dance.remains>=2)\nactions.cds+=/shadow_blades,if=variable.snd_condition&combo_points<=1&(buff.flagellation_buff.up||!talent.flagellation)||fight_remains<=20\nactions.cds+=/echoing_reprimand,if=variable.snd_condition&combo_points.deficit>=3&(!talent.the_rotten||!talent.reverberation||buff.shadow_dance.up)\nactions.cds+=/shuriken_tornado,if=variable.snd_condition&buff.symbols_of_death.up&combo_points<=2&!buff.premeditation.up&(!talent.flagellation||cooldown.flagellation.remains>20)&spell_targets.shuriken_storm>=3\nactions.cds+=/shuriken_tornado,if=variable.snd_condition&!buff.shadow_dance.up&!buff.flagellation_buff.up&!buff.flagellation_persist.up&!buff.shadow_blades.up&spell_targets.shuriken_storm<=2&!raid_event.adds.up\n# Vanish during dance & Dances during subterfuge that varies depending on hero talents, yes its cursed that they have to be here\nactions.cds+=/vanish,if=buff.shadow_dance.up&talent.invigorating_shadowdust&talent.unseen_blade&(combo_points.deficit>1)&(cooldown.flagellation.remains>=60||!talent.flagellation||fight_remains<=(30*cooldown.vanish.charges))&cooldown.secret_technique.remains>=10\n\nactions.cds+=/shadow_dance,if=!buff.shadow_dance.up&boss&fight_remains<=8+talent.subterfuge.enabled\nactions.cds+=/shadow_dance,if=!buff.shadow_dance.up&talent.invigorating_shadowdust&talent.deathstalkers_mark&buff.shadow_blades.up&(buff.subterfuge.up&spell_targets>=4||buff.subterfuge.remains>=3)\nactions.cds+=/shadow_dance,if=!buff.shadow_dance.up&talent.unseen_blade&talent.invigorating_shadowdust&dot.rupture.ticking&variable.snd_condition&(buff.symbols_of_death.remains>=6&!buff.flagellation_buff.up||buff.symbols_of_death.up&buff.shadow_blades.up||buff.shadow_blades.up&!talent.invigorating_shadowdust)&(cooldown.secret_technique.remains<10+12*!talent.invigorating_shadowdust||buff.shadow_blades.up)&(!talent.the_first_dance||(combo_points.deficit>=7&!buff.shadow_blades.up||buff.shadow_blades.up))\nactions.cds+=/goremaws_bite,if=variable.snd_condition&combo_points.deficit>=3&(!cooldown.shadow_dance.up||talent.double_dance&buff.shadow_dance.up&!talent.invigorating_shadowdust||spell_targets.shuriken_storm<4&!talent.invigorating_shadowdust||talent.the_rotten||raid_event.adds.up)\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&(buff.shadow_dance.remains>=4&buff.shadow_blades.up||buff.shadow_dance.remains>=4&cooldown.cold_blood.remains<=3)||fight_remains<=(6*cooldown.thistle_tea.charges)\nactions.cds+=/potion,if=buff.bloodlust.react||boss&fight_remains<30||buff.symbols_of_death.up&(buff.shadow_blades.up||cooldown.shadow_blades.remains<=10)\nactions.cds+=/variable,name=racial_sync,value=buff.shadow_blades.up||!talent.shadow_blades&buff.symbols_of_death.up||boss&fight_remains<20\nactions.cds+=/blood_fury,if=variable.racial_sync\nactions.cds+=/berserking,if=variable.racial_sync\nactions.cds+=/fireblood,if=variable.racial_sync&buff.shadow_dance.up\nactions.cds+=/ancestral_call,if=variable.racial_sync\n\nactions.items+=/use_item,name=ashes_of_the_embersoul,if=(buff.cold_blood.up||(!talent.danse_macabre&buff.shadow_dance.up||buff.danse_macabre.stack>=3)&!talent.cold_blood)||boss&fight_remains<10\nactions.items+=/use_item,name=witherbarks_branch,if=buff.flagellation_buff.up&talent.invigorating_shadowdust||buff.shadow_blades.up||equipped.bandolier_of_twisted_blades&raid_event.adds.up\nactions.items+=/use_item,name=mirror_of_fractured_tomorrows,if=buff.shadow_dance.up&(target.time_to_die>=15||equipped.ashes_of_the_embersoul)\nactions.items+=/use_item,name=beacon_to_the_beyond,use_off_gcd=1,if=!stealthed.all&(buff.deeper_daggers.up||!talent.deeper_daggers)&(!raid_event.adds.up||!equipped.stormeaters_boon||trinket.stormeaters_boon.cooldown.remains>20)\nactions.items+=/use_item,name=manic_grieftorch,use_off_gcd=1,if=!stealthed.all&(!raid_event.adds.up||!equipped.stormeaters_boon||trinket.stormeaters_boon.cooldown.remains>20)\nactions.items+=/use_item,name=treacherous_transmitter,if=buff.shadow_blades.up||fight_remains<=15\n## actions.items+=/do_treacherous_transmitter_task,if=buff.shadow_blades.up||fight_remains<=15\nactions.items+=/use_item,name=imperfect_ascendancy_serum,use_off_gcd=1,if=dot.rupture.ticking&buff.flagellation_buff.up\nactions.items+=/use_items,slots=trinket1,if=(variable.trinket_sync_slot=1&(buff.shadow_blades.up||(1+cooldown.shadow_blades.remains)>=trinket.1.cooldown.duration||boss&fight_remains<=20)||(variable.trinket_sync_slot=2&(!trinket.2.cooldown.ready&!buff.shadow_blades.up&cooldown.shadow_blades.remains>20))||!variable.trinket_sync_slot)\nactions.items+=/use_items,slots=trinket2,if=(variable.trinket_sync_slot=2&(buff.shadow_blades.up||(1+cooldown.shadow_blades.remains)>=trinket.2.cooldown.duration||boss&fight_remains<=20)||(variable.trinket_sync_slot=1&(!trinket.1.cooldown.ready&!buff.shadow_blades.up&cooldown.shadow_blades.remains>20))||!variable.trinket_sync_slot)\n\nactions.finish+=/variable,name=secret_condition,value=!buff.darkest_night.up&(buff.danse_macabre.stack>=2||!talent.danse_macabre||(talent.unseen_blade&buff.shadow_dance.up&buff.escalating_blade.stack>=2))\n# Apply Rupture if its not up.\nactions.finish+=/rupture,if=!dot.rupture.ticking&target.time_to_die-remains>6\nactions.finish+=/variable,name=skip_rupture,value=buff.thistle_tea.up&spell_targets.shuriken_storm=1||buff.shadow_dance.up&(spell_targets.shuriken_storm=1||dot.rupture.ticking&spell_targets.shuriken_storm>=2)||buff.darkest_night.up\nactions.finish+=/rupture,if=(!variable.skip_rupture||priority_rotation)&target.time_to_die-remains>6&refreshable\nactions.finish+=/coup_de_grace,if=debuff.fazed.up&(buff.shadow_dance.up||(buff.symbols_of_death.up&cooldown.shadow_dance.charges_fractional<=0.85))\nactions.finish+=/cold_blood,if=variable.secret_condition&cooldown.secret_technique.ready\nactions.finish+=/secret_technique,if=variable.secret_condition&(!talent.cold_blood||cooldown.cold_blood.remains>buff.shadow_dance.remains-2||!talent.improved_shadow_dance)\nactions.finish+=/rupture,if=!variable.skip_rupture&buff.finality_rupture.up&(cooldown.symbols_of_death.remains<=3||buff.symbols_of_death.up)\n# deathstalker bp\nactions.finish+=/black_powder,if=!variable.priority_rotation&talent.deathstalkers_mark&spell_targets>=3&!buff.darkest_night.up\n# trickster bp\nactions.finish+=/black_powder,if=!variable.priority_rotation&talent.unseen_blade&((buff.escalating_blade.stack=4&!buff.shadow_dance.up)||spell_targets>=3&!buff.flawless_form.up||spell_targets>10||(!used_for_danse&buff.shadow_dance.up&talent.shuriken_tornado&spell_targets>=3))\nactions.finish+=/coup_de_grace,if=debuff.fazed.up\nactions.finish+=/eviscerate\n\n# No dust vanish\nactions.stealth_cds+=/vanish,if=!talent.invigorating_shadowdust&!talent.subterfuge&combo_points.deficit>=3&(!dot.rupture.ticking||(buff.shadow_blades.up&buff.symbols_of_death.up)||talent.premeditation||boss&fight_remains<10)\n# Dust Vanish\nactions.stealth_cds+=/vanish,if=!buff.shadow_dance.up&talent.invigorating_shadowdust&talent.deathstalkers_mark&(combo_points.deficit>1||buff.shadow_blades.up)&(cooldown.flagellation.remains>=60||!talent.flagellation||fight_remains<=(30*cooldown.vanish.charges))&cooldown.secret_technique.remains>=10\nactions.stealth_cds+=/shadow_dance,if=dot.rupture.ticking&variable.snd_condition&(buff.symbols_of_death.remains>=6&!buff.flagellation_buff.up||buff.symbols_of_death.up&buff.shadow_blades.up||buff.shadow_blades.up&!talent.invigorating_shadowdust)&cooldown.secret_technique.remains<10+12*!talent.invigorating_shadowdust&(!talent.the_first_dance||(combo_points.deficit>=7&!buff.shadow_blades.up||buff.shadow_blades.up))\n# No Dust subterfuge vanish\nactions.stealth_cds+=/vanish,if=!talent.invigorating_shadowdust&talent.subterfuge&combo_points.deficit>=3&(buff.symbols_of_death.up||cooldown.symbols_of_death.remains>=3)\nactions.stealth_cds+=/shadowmeld,if=energy>=40&combo_points.deficit>3\n\nactions.stealthed+=/shadowstrike,if=talent.deathstalkers_mark&!debuff.deathstalkers_mark.up&!buff.darkest_night.up\nactions.stealthed+=/call_action_list,name=finish,if=buff.darkest_night.up&combo_points==cp_max_spend\nactions.stealthed+=/call_action_list,name=finish,if=effective_combo_points>=cp_max_spend&!buff.darkest_night.up\nactions.stealthed+=/call_action_list,name=finish,if=buff.shuriken_tornado.up&combo_points.deficit<=2&!buff.darkest_night.up\nactions.stealthed+=/call_action_list,name=finish,if=(combo_points.deficit<=1+talent.deathstalkers_mark)&!buff.darkest_night.up\n# Use shadowstrike for Danse Macabre on aoe and for Trickster use it instead of storm on 2+ targets\nactions.stealthed+=/shadowstrike,if=(!used_for_danse&buff.shadow_blades.up)||(talent.unseen_blade&spell_targets>=2)\nactions.stealthed+=/shuriken_storm,if=!buff.premeditation.up&spell_targets>=4\nactions.stealthed+=/gloomblade,if=buff.lingering_shadow.remains>=10&buff.shadow_blades.up&spell_targets=1\nactions.stealthed+=/shadowstrike",
["author"] = "SimC",
},
["Blood"] = {
["source"] = "SimulationCraft",
["builtIn"] = true,
["date"] = 20240828,
["spec"] = 250,
["desc"] = "2024-08-28: Sim update\n\n2024-07-24: The War Within",
["lists"] = {
["drw_up"] = {
{
["enabled"] = true,
["criteria"] = "! dot.blood_plague.ticking",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.stack > 5 & rune >= 2 & runic_power.deficit >= 30 & ! talent.shattering_bone.enabled || ( talent.shattering_bone.enabled & death_and_decay.ticking )",
["action"] = "tombstone",
},
{
["enabled"] = true,
["criteria"] = "buff.coagulopathy.remains <= gcd.max || buff.icy_talons.remains <= gcd.max",
["action"] = "death_strike",
},
{
["enabled"] = true,
["criteria"] = "( buff.bone_shield.remains <= 4 || buff.bone_shield.stack < variable.bone_shield_refresh_value ) & runic_power.deficit > 20",
["action"] = "marrowrend",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & target.time_to_pct_35 < 5 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_pct_35 < 5 & active_enemies >= 2 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
["target_if"] = "dot.soul_reaper.remains",
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & ( talent.sanguine_ground.enabled || talent.unholy_ground.enabled )",
["action"] = "death_and_decay",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.blood_boil > 2 & charges_fractional >= 1.1",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( 25 + spell_targets.heart_strike * talent.heartbreaker.enabled * 2 )",
["var_name"] = "heart_strike_rp_drw",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit <= variable.heart_strike_rp_drw || runic_power >= variable.death_strike_dump_amount",
["action"] = "death_strike",
},
{
["action"] = "consumption",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "charges_fractional >= 1.1 & buff.hemostasis.stack < 5",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "rune.time_to_2 < gcd.max || runic_power.deficit >= variable.heart_strike_rp_drw",
["action"] = "heart_strike",
},
},
["default"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "settings.death_strike_pool_amount",
["var_name"] = "death_strike_dump_amount",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "bone_shield_refresh_value",
["value"] = "4",
["value_else"] = "5",
["criteria"] = "talent.consumption.enabled || talent.blooddrinker.enabled",
},
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.react",
["action"] = "mind_freeze",
},
{
["enabled"] = true,
["criteria"] = "buff.dancing_rune_weapon.up",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["action"] = "raise_dead",
["enabled"] = true,
},
{
["action"] = "reapers_mark",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "tanking & incoming_damage_5s >= ibf_damage & ! ( buff.dancing_rune_weapon.up || buff.vampiric_blood.up )",
["action"] = "icebound_fortitude",
["description"] = "Use Icebound Fortitude if you're taking sufficient damage and you don't have Dancing Rune Weapon or Vampiric Blood up.",
},
{
["enabled"] = true,
["criteria"] = "tanking & incoming_damage_5s >= rt_damage & ! ( buff.dancing_rune_weapon.up || buff.vampiric_blood.up || buff.icebound_fortitude.up )",
["action"] = "rune_tap",
["description"] = "Use Rune Tap if you're taking sufficient damage and you don't have Dancing Rune Weapon, Vampiric Blood, or Icebound Fortitude up.",
},
{
["enabled"] = true,
["criteria"] = "settings.save_blood_shield & buff.blood_shield.up & buff.blood_shield.remains <= gcd.max",
["action"] = "death_strike",
["description"] = "Use Death Strike if your Blood Shield is going to expire.",
},
{
["enabled"] = true,
["criteria"] = "! buff.bone_shield.up",
["action"] = "deaths_caress",
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & ( talent.unholy_ground.enabled || talent.sanguine_ground.enabled || spell_targets.death_and_decay > 3 || buff.crimson_scourge.up )",
["action"] = "death_and_decay",
},
{
["enabled"] = true,
["criteria"] = "buff.coagulopathy.remains <= gcd.max || buff.icy_talons.remains <= gcd.max || runic_power >= variable.death_strike_dump_amount || runic_power.deficit <= variable.heart_strike_rp || target.time_to_die < 10",
["action"] = "death_strike",
},
{
["enabled"] = true,
["criteria"] = "! buff.dancing_rune_weapon.up",
["action"] = "blooddrinker",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "racials",
},
{
["enabled"] = true,
["criteria"] = "! buff.dancing_rune_weapon.up & ( pet.ghoul.remains < 2 || target.time_to_die < gcd.max )",
["action"] = "sacrificial_pact",
},
{
["enabled"] = true,
["criteria"] = "( rune <= 2 & rune.time_to_4 > gcd.max & charges_fractional >= 1.8 ) || rune.time_to_3 > gcd.max",
["action"] = "blood_tap",
},
{
["enabled"] = true,
["criteria"] = "talent.tightening_grasp.enabled",
["action"] = "gorefiends_grasp",
},
{
["enabled"] = true,
["criteria"] = "rune < 6 & runic_power.deficit > 5",
["action"] = "empower_rune_weapon",
},
{
["action"] = "abomination_limb",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.dancing_rune_weapon.up",
["action"] = "dancing_rune_weapon",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "buff.dancing_rune_weapon.up",
["list_name"] = "drw_up",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "standard",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff ) || trinket.t1.is.mirror_of_fractured_tomorrows",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff ) || trinket.t2.is.mirror_of_fractured_tomorrows",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "damage_trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_2_buffs & trinket.t2.ilvl >= trinket.t1.ilvl || variable.trinket_1_buffs",
},
},
["standard"] = {
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.stack > 5 & rune >= 2 & runic_power.deficit >= 30 & ! talent.shattering_bone.enabled || ( talent.shattering_bone.enabled & death_and_decay.ticking ) & cooldown.dancing_rune_weapon.remains >= 25",
["action"] = "tombstone",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( 10 + spell_targets.heart_strike * talent.heartbreaker.enabled * 2 )",
["var_name"] = "heart_strike_rp",
},
{
["enabled"] = true,
["criteria"] = "buff.coagulopathy.remains <= gcd.max || buff.icy_talons.remains <= gcd.max || runic_power >= variable.death_strike_dump_amount || runic_power.deficit <= variable.heart_strike_rp || target.time_to_die < 10",
["action"] = "death_strike",
},
{
["enabled"] = true,
["criteria"] = "( buff.bone_shield.remains <= 4 || ( buff.bone_shield.stack < variable.bone_shield_refresh_value + 1 ) ) & runic_power.deficit > 10 & ! ( talent.insatiable_blade.enabled & cooldown.dancing_rune_weapon.remains < buff.bone_shield.remains ) & ! talent.consumption.enabled & ! talent.blooddrinker.enabled & rune.time_to_3 > gcd.max",
["action"] = "deaths_caress",
},
{
["enabled"] = true,
["criteria"] = "( buff.bone_shield.remains <= 4 || buff.bone_shield.stack < variable.bone_shield_refresh_value ) & runic_power.deficit > 20 & ! ( talent.insatiable_blade.enabled & cooldown.dancing_rune_weapon.remains < buff.bone_shield.remains )",
["action"] = "marrowrend",
},
{
["action"] = "consumption",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & target.time_to_pct_35 < 5 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_pct_35 < 5 & active_enemies >= 2 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
["target_if"] = "dot.soul_reaper.remains",
},
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.stack >= 5",
["action"] = "bonestorm",
},
{
["enabled"] = true,
["criteria"] = "charges_fractional >= 1.8 & ( buff.hemostasis.stack <= ( 5 - spell_targets.blood_boil ) || spell_targets.blood_boil > 2 )",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "rune.time_to_4 < gcd.max",
["action"] = "heart_strike",
},
{
["enabled"] = true,
["criteria"] = "charges_fractional >= 1.1",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "( rune > 1 & ( rune.time_to_3 < gcd.max || buff.bone_shield.stack > 7 ) )",
["action"] = "heart_strike",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "fyralath_the_dreamrender",
["action"] = "fyralath_the_dreamrender",
["criteria"] = "dot.mark_of_fyralath.ticking",
["description"] = "Trinkets",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["description"] = "Prioritize damage dealing on use trinkets over trinkets that give buffs",
["criteria"] = "! variable.trinket_1_buffs & ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_1_buffs & ( buff.dancing_rune_weapon.up || ! talent.dancing_rune_weapon.enabled || cooldown.dancing_rune_weapon.remains > 20 ) & ( trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown || variable.trinket_2_buffs )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ( buff.dancing_rune_weapon.up || ! talent.dancing_rune_weapon.enabled || cooldown.dancing_rune_weapon.remains > 20 ) & ( trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown || variable.trinket_1_buffs )",
},
},
["racials"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.dancing_rune_weapon.ready & ( ! cooldown.blooddrinker.ready || ! talent.blooddrinker.enabled )",
["action"] = "blood_fury",
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 || rune < 1 & runic_power.deficit > 60",
["action"] = "arcane_pulse",
},
{
["enabled"] = true,
["criteria"] = "buff.unholy_strength.up",
["action"] = "lights_judgment",
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 20",
["action"] = "arcane_torrent",
},
},
},
["version"] = 20240828,
["warnings"] = "The import for 'drw_up' required some automated changes.\nLine 2: Converted 'talent.shattering_bone' to 'talent.shattering_bone.enabled' (1x).\nLine 7: Converted 'talent.sanguine_ground' to 'talent.sanguine_ground.enabled' (1x).\nLine 7: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 12: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\nLine 12: Converted 'talent.sanguine_ground' to 'talent.sanguine_ground.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 1: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 1: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 1: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 1: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 1: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 2: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 2: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 2: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 2: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 2: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 3: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 3: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'talent.dancing_rune_weapon' to 'talent.dancing_rune_weapon.enabled' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 6: Converted 'talent.dancing_rune_weapon' to 'talent.dancing_rune_weapon.enabled' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\n\nThe import for 'standard' required some automated changes.\nLine 1: Converted 'talent.shattering_bone' to 'talent.shattering_bone.enabled' (1x).\nLine 4: Converted 'talent.insatiable_blade' to 'talent.insatiable_blade.enabled' (1x).\nLine 5: Converted 'talent.insatiable_blade' to 'talent.insatiable_blade.enabled' (1x).\n\nImported 6 action lists.\n",
["profile"] = "actions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit)||trinket.1.is.mirror_of_fractured_tomorrows\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit)||trinket.2.is.mirror_of_fractured_tomorrows\nactions.precombat+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_2_buffs&trinket.2.ilvl>=trinket.1.ilvl||variable.trinket_1_buffs\n\nactions+=/variable,name=death_strike_dump_amount,value=settings.death_strike_pool_amount\nactions+=/variable,name=bone_shield_refresh_value,value=4,op=setif,condition=talent.consumption.enabled||talent.blooddrinker.enabled,value_else=5\nactions+=/mind_freeze,if=target.debuff.casting.react\n## Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=49028/dancing-rune-weapon'>Dancing Rune Weapon</a> is up, or on cooldown if <a href='https://www.wowhead.com/spell=49028/dancing-rune-weapon'>Dancing Rune Weapon</a> is not talented\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.dancing_rune_weapon.up||!talent.dancing_rune_weapon\nactions+=/potion,if=buff.dancing_rune_weapon.up\nactions+=/call_action_list,name=trinkets\nactions+=/raise_dead\nactions+=/reapers_mark\n# Use Icebound Fortitude if you're taking sufficient damage and you don't have Dancing Rune Weapon or Vampiric Blood up.\nactions+=/icebound_fortitude,if=tanking&incoming_damage_5s>=ibf_damage&!(buff.dancing_rune_weapon.up||buff.vampiric_blood.up)\n# Use Rune Tap if you're taking sufficient damage and you don't have Dancing Rune Weapon, Vampiric Blood, or Icebound Fortitude up.\nactions+=/rune_tap,if=tanking&incoming_damage_5s>=rt_damage&!(buff.dancing_rune_weapon.up||buff.vampiric_blood.up||buff.icebound_fortitude.up)\n# Use Death Strike if your Blood Shield is going to expire.\nactions+=/death_strike,if=settings.save_blood_shield&buff.blood_shield.up&buff.blood_shield.remains<=gcd.max\nactions+=/deaths_caress,if=!buff.bone_shield.up\nactions+=/death_and_decay,if=!death_and_decay.ticking&(talent.unholy_ground||talent.sanguine_ground||spell_targets.death_and_decay>3||buff.crimson_scourge.up)\nactions+=/death_strike,if=buff.coagulopathy.remains<=gcd||buff.icy_talons.remains<=gcd||runic_power>=variable.death_strike_dump_amount||runic_power.deficit<=variable.heart_strike_rp||target.time_to_die<10\nactions+=/blooddrinker,if=!buff.dancing_rune_weapon.up\nactions+=/call_action_list,name=racials\nactions+=/sacrificial_pact,if=!buff.dancing_rune_weapon.up&(pet.ghoul.remains<2||target.time_to_die<gcd)\nactions+=/blood_tap,if=(rune<=2&rune.time_to_4>gcd&charges_fractional>=1.8)||rune.time_to_3>gcd\nactions+=/gorefiends_grasp,if=talent.tightening_grasp.enabled\nactions+=/empower_rune_weapon,if=rune<6&runic_power.deficit>5\nactions+=/abomination_limb\nactions+=/dancing_rune_weapon,if=!buff.dancing_rune_weapon.up\nactions+=/run_action_list,name=drw_up,strict=1,if=buff.dancing_rune_weapon.up\nactions+=/call_action_list,name=standard\n\nactions.drw_up=blood_boil,if=!dot.blood_plague.ticking\nactions.drw_up+=/tombstone,if=buff.bone_shield.stack>5&rune>=2&runic_power.deficit>=30&!talent.shattering_bone||(talent.shattering_bone.enabled&death_and_decay.ticking)\nactions.drw_up+=/death_strike,if=buff.coagulopathy.remains<=gcd||buff.icy_talons.remains<=gcd\nactions.drw_up+=/marrowrend,if=(buff.bone_shield.remains<=4||buff.bone_shield.stack<variable.bone_shield_refresh_value)&runic_power.deficit>20\nactions.drw_up+=/soul_reaper,if=active_enemies=1&target.time_to_pct_35<5&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.drw_up+=/soul_reaper,target_if=min:dot.soul_reaper.remains,if=target.time_to_pct_35<5&active_enemies>=2&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.drw_up+=/death_and_decay,if=!death_and_decay.ticking&(talent.sanguine_ground||talent.unholy_ground)\nactions.drw_up+=/blood_boil,if=spell_targets.blood_boil>2&charges_fractional>=1.1\nactions.drw_up+=/variable,name=heart_strike_rp_drw,value=(25+spell_targets.heart_strike*talent.heartbreaker.enabled*2)\nactions.drw_up+=/death_strike,if=runic_power.deficit<=variable.heart_strike_rp_drw||runic_power>=variable.death_strike_dump_amount\nactions.drw_up+=/consumption\nactions.drw_up+=/blood_boil,if=charges_fractional>=1.1&buff.hemostasis.stack<5\nactions.drw_up+=/heart_strike,if=rune.time_to_2<gcd||runic_power.deficit>=variable.heart_strike_rp_drw\n\nactions.racials=blood_fury,if=cooldown.dancing_rune_weapon.ready&(!cooldown.blooddrinker.ready||!talent.blooddrinker.enabled)\nactions.racials+=/berserking\nactions.racials+=/arcane_pulse,if=active_enemies>=2||rune<1&runic_power.deficit>60\nactions.racials+=/lights_judgment,if=buff.unholy_strength.up\nactions.racials+=/ancestral_call\nactions.racials+=/fireblood\nactions.racials+=/bag_of_tricks\nactions.racials+=/arcane_torrent,if=runic_power.deficit>20\n\nactions.standard=tombstone,if=buff.bone_shield.stack>5&rune>=2&runic_power.deficit>=30&!talent.shattering_bone||(talent.shattering_bone.enabled&death_and_decay.ticking)&cooldown.dancing_rune_weapon.remains>=25\nactions.standard+=/variable,name=heart_strike_rp,value=(10+spell_targets.heart_strike*talent.heartbreaker.enabled*2)\nactions.standard+=/death_strike,if=buff.coagulopathy.remains<=gcd||buff.icy_talons.remains<=gcd||runic_power>=variable.death_strike_dump_amount||runic_power.deficit<=variable.heart_strike_rp||target.time_to_die<10\nactions.standard+=/deaths_caress,if=(buff.bone_shield.remains<=4||(buff.bone_shield.stack<variable.bone_shield_refresh_value+1))&runic_power.deficit>10&!(talent.insatiable_blade&cooldown.dancing_rune_weapon.remains<buff.bone_shield.remains)&!talent.consumption.enabled&!talent.blooddrinker.enabled&rune.time_to_3>gcd\nactions.standard+=/marrowrend,if=(buff.bone_shield.remains<=4||buff.bone_shield.stack<variable.bone_shield_refresh_value)&runic_power.deficit>20&!(talent.insatiable_blade&cooldown.dancing_rune_weapon.remains<buff.bone_shield.remains)\nactions.standard+=/consumption\nactions.standard+=/soul_reaper,if=active_enemies=1&target.time_to_pct_35<5&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.standard+=/soul_reaper,target_if=min:dot.soul_reaper.remains,if=target.time_to_pct_35<5&active_enemies>=2&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.standard+=/bonestorm,if=buff.bone_shield.stack>=5\nactions.standard+=/blood_boil,if=charges_fractional>=1.8&(buff.hemostasis.stack<=(5-spell_targets.blood_boil)||spell_targets.blood_boil>2)\nactions.standard+=/heart_strike,if=rune.time_to_4<gcd\nactions.standard+=/blood_boil,if=charges_fractional>=1.1\nactions.standard+=/heart_strike,if=(rune>1&(rune.time_to_3<gcd||buff.bone_shield.stack>7))\n\n# Trinkets\nactions.trinkets=use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking\n# Prioritize damage dealing on use trinkets over trinkets that give buffs\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&(variable.damage_trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&(variable.damage_trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(variable.trinket_1_buffs||trinket.1.cooldown.remains)&(variable.trinket_2_buffs||trinket.2.cooldown.remains)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&(buff.dancing_rune_weapon.up||!talent.dancing_rune_weapon||cooldown.dancing_rune_weapon.remains>20)&(trinket.2.cooldown.remains||!trinket.2.has_cooldown||variable.trinket_2_buffs)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&(buff.dancing_rune_weapon.up||!talent.dancing_rune_weapon||cooldown.dancing_rune_weapon.remains>20)&(trinket.1.cooldown.remains||!trinket.1.has_cooldown||variable.trinket_1_buffs)",
["author"] = "SimC",
},
["Mistweaver"] = {
["builtIn"] = true,
["date"] = 20240730,
["spec"] = 270,
["desc"] = "Healer priorities are DPS-oriented only\n\n2024-07-30: The War Within",
["lists"] = {
["default"] = {
{
["action"] = "spear_hand_strike",
["enabled"] = true,
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "pet.chiji.up",
["list_name"] = "crane",
},
{
["enabled"] = true,
["criteria"] = "! settings.save_faeline || talent.ancient_concordance.enabled & buff.ancient_concordance.down || talent.awakened_faeline.enabled & buff.awakened_faeline.down || talent.ancient_teachings.enabled & buff.ancient_teachings.down",
["action"] = "jadefire_stomp",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 3",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies < 3",
["list_name"] = "st",
},
},
["precombat"] = {
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies <= 3",
["action"] = "thunder_focus_tea",
},
{
["enabled"] = true,
["criteria"] = "buff.zen_pulse.up",
["action"] = "vivify",
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 3 || settings.aoe_rsk",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "! talent.teachings_of_the_monastery.enabled || buff.teachings_of_the_monastery.up & active_enemies <= 3",
["action"] = "blackout_kick",
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["action"] = "spinning_crane_kick",
["enabled"] = true,
},
},
["st"] = {
{
["action"] = "thunder_focus_tea",
["enabled"] = true,
},
{
["action"] = "rising_sun_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.teachings_of_the_monastery.enabled || ( ! talent.awakened_faeline.enabled & buff.teachings_of_the_monastery.up || buff.teachings_of_the_monastery.stack > 3 ) & cooldown.rising_sun_kick.remains > gcd.max",
["action"] = "blackout_kick",
},
{
["enabled"] = true,
["criteria"] = "settings.single_zen_pulse & buff.zen_pulse.up",
["action"] = "vivify",
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["action"] = "tiger_palm",
["enabled"] = true,
},
},
["crane"] = {
{
["enabled"] = true,
["criteria"] = "time_to_max_charges <= gcd.max",
["action"] = "renewing_mist",
},
{
["enabled"] = true,
["criteria"] = "talent.ancient_teachings.enabled & buff.ancient_teachings.remains < gcd.max",
["action"] = "thunder_focus_tea",
},
{
["enabled"] = true,
["criteria"] = "talent.ancient_teachings.enabled & buff.ancient_teachings.remains < gcd.max",
["action"] = "essence_font",
},
{
["enabled"] = true,
["criteria"] = "talent.ancient_teachings.enabled & buff.ancient_teachings.remains < gcd.max",
["action"] = "jadefire_stomp",
},
{
["enabled"] = true,
["criteria"] = "buff.invoke_chiji.stack > 1",
["action"] = "enveloping_mist",
},
{
["action"] = "rising_sun_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 3 || active_enemies > 1 & ! talent.ancient_concordance.enabled & ! talent.awakened_jadefire.enabled",
["action"] = "spinning_crane_kick",
},
{
["action"] = "blackout_kick",
["enabled"] = true,
},
{
["action"] = "tiger_palm",
["enabled"] = true,
},
},
},
["version"] = 20240730,
["warnings"] = "The import for 'default' required some automated changes.\nLine 11: Converted 'talent.ancient_concordance' to 'talent.ancient_concordance.enabled' (1x).\nLine 11: Converted 'talent.awakened_faeline' to 'talent.awakened_faeline.enabled' (1x).\nLine 11: Converted 'talent.ancient_teachings' to 'talent.ancient_teachings.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 4: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - zen_pulse\n\nThe import for 'st' required some automated changes.\nLine 3: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\nLine 3: Converted 'talent.awakened_faeline' to 'talent.awakened_faeline.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - zen_pulse\n\nThe import for 'crane' required some automated changes.\nLine 2: Converted 'talent.ancient_teachings' to 'talent.ancient_teachings.enabled' (1x).\nLine 3: Converted 'talent.ancient_teachings' to 'talent.ancient_teachings.enabled' (1x).\nLine 4: Converted 'talent.ancient_teachings' to 'talent.ancient_teachings.enabled' (1x).\nLine 7: Converted 'talent.ancient_concordance' to 'talent.ancient_concordance.enabled' (1x).\nLine 7: Converted 'talent.awakened_jadefire' to 'talent.awakened_jadefire.enabled' (1x).\n\nImported 5 action lists.\n",
["author"] = "Aikanaka",
["profile"] = "actions.precombat+=/potion\nactions.precombat+=/chi_burst\n\nactions+=/spear_hand_strike\nactions+=/use_items\nactions+=/blood_fury\nactions+=/berserking\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/potion\nactions+=/run_action_list,name=crane,strict=1,if=pet.chiji.up\nactions+=/jadefire_stomp,if=!settings.save_faeline||talent.ancient_concordance&buff.ancient_concordance.down||talent.awakened_faeline&buff.awakened_faeline.down||talent.ancient_teachings&buff.ancient_teachings.down\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>=3\nactions+=/call_action_list,name=st,strict=1,if=active_enemies<3\n\nactions.st+=/thunder_focus_tea\nactions.st+=/rising_sun_kick\nactions.st+=/blackout_kick,if=!talent.teachings_of_the_monastery||(!talent.awakened_faeline&buff.teachings_of_the_monastery.up||buff.teachings_of_the_monastery.stack>3)&cooldown.rising_sun_kick.remains>gcd.max\nactions.st+=/vivify,if=settings.single_zen_pulse&buff.zen_pulse.up\nactions.st+=/chi_burst\nactions.st+=/tiger_palm\n\nactions.aoe+=/thunder_focus_tea,if=active_enemies<=3\nactions.aoe+=/vivify,if=buff.zen_pulse.up\nactions.aoe+=/rising_sun_kick,if=active_enemies<=3||settings.aoe_rsk\nactions.aoe+=/blackout_kick,if=!talent.teachings_of_the_monastery||buff.teachings_of_the_monastery.up&active_enemies<=3\nactions.aoe+=/chi_burst\nactions.aoe+=/spinning_crane_kick\n\nactions.crane+=/renewing_mist,if=time_to_max_charges<=gcd.max\nactions.crane+=/thunder_focus_tea,if=talent.ancient_teachings&buff.ancient_teachings.remains<gcd.max\nactions.crane+=/essence_font,if=talent.ancient_teachings&buff.ancient_teachings.remains<gcd.max\nactions.crane+=/jadefire_stomp,if=talent.ancient_teachings&buff.ancient_teachings.remains<gcd.max\nactions.crane+=/enveloping_mist,if=buff.invoke_chiji.stack>1\nactions.crane+=/rising_sun_kick\nactions.crane+=/spinning_crane_kick,if=active_enemies>3||active_enemies>1&!talent.ancient_concordance&!talent.awakened_jadefire\nactions.crane+=/blackout_kick\nactions.crane+=/tiger_palm",
},
["Frost DK"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240828,
["author"] = "SimC",
["desc"] = "2024-08-26, 08-28: Sim update\n\n2024-07-30, 08-14, 08-15, 08-24: Sim update\n\n2024-07-23: The War Within",
["lists"] = {
["single_target"] = {
{
["enabled"] = true,
["description"] = "Single Target Rotation",
["criteria"] = "talent.a_feast_of_souls.enabled & debuff.razorice.stack = 5 & talent.shattering_blade.enabled & buff.a_feast_of_souls.up",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.react = 2 || buff.exterminate.up || buff.exterminate_painful_death.up",
["action"] = "obliterate",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.breath_of_sindragosa.enabled || variable.true_breath_cooldown > cooldown.horn_of_winter.duration - 15 ) & cooldown.pillar_of_frost.remains < variable.oblit_pooling_time",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["criteria"] = "( debuff.razorice.stack = 5 & talent.shattering_blade.enabled ) || ( rune < 2 & ! talent.icebreaker.enabled )",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "variable.rime_buffs",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & ! variable.pooling_runes",
["action"] = "obliterate",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! death_knight.runeforge.razorice & ( debuff.razorice.stack < 5 || debuff.razorice.remains < gcd.max * 3 )",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ( variable.rp_buffs || ( ! talent.shattering_blade.enabled & runic_power.deficit < 20 ) )",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! ( main_hand.2h || talent.shattering_blade.enabled )",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runes",
["action"] = "obliterate",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "! dot.frost_fever.ticking",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "talent.breath_of_sindragosa.enabled & ! buff.breath_of_sindragosa.up & ! variable.true_breath_cooldown & rune < 2 & ! buff.death_and_decay.up",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "rune < 2 & runic_power.deficit > 25 & ( ! talent.breath_of_sindragosa.enabled || variable.true_breath_cooldown > cooldown.horn_of_winter.duration - 15 )",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["criteria"] = "! talent.breath_of_sindragosa.enabled & runic_power.deficit > 20",
["action"] = "arcane_torrent",
},
},
["cold_heart"] = {
{
["enabled"] = true,
["description"] = "Cold Heart",
["criteria"] = "fight_remains < gcd.max & ( rune < 2 || ! buff.killing_machine.up & ( ! main_hand.2h & buff.cold_heart.stack >= 4 || main_hand.2h & buff.cold_heart.stack > 8 ) || buff.killing_machine.up & ( ! main_hand.2h & buff.cold_heart.stack > 8 || main_hand.2h & buff.cold_heart.stack > 10 ) )",
["action"] = "chains_of_ice",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & buff.pillar_of_frost.up & buff.cold_heart.stack >= 10 & ( buff.pillar_of_frost.remains < gcd.max * ( 1 + ( talent.frostwyrms_fury.enabled & cooldown.frostwyrms_fury.ready ) ) || buff.unholy_strength.up & buff.unholy_strength.remains < gcd.max )",
["action"] = "chains_of_ice",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & death_knight.runeforge.fallen_crusader & ! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains > 15 & ( buff.cold_heart.stack >= 10 & buff.unholy_strength.up || buff.cold_heart.stack >= 13 )",
["action"] = "chains_of_ice",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & ! death_knight.runeforge.fallen_crusader & buff.cold_heart.stack >= 10 & ! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains > 20",
["action"] = "chains_of_ice",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! buff.pillar_of_frost.up & ( buff.cold_heart.stack >= 14 & buff.unholy_strength.up || buff.cold_heart.stack >= 19 || cooldown.pillar_of_frost.remains < 3 & buff.cold_heart.stack >= 14 )",
["action"] = "chains_of_ice",
},
},
["obliteration"] = {
{
["enabled"] = true,
["action"] = "obliterate",
["cycle_targets"] = 1,
["criteria"] = "buff.killing_machine.react & ( buff.exterminate.up || buff.exterminate_painful_death.up || fight_remains < gcd.max * 2 )",
["description"] = "Obliteration Active Rotation",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.react < 2 & buff.pillar_of_frost.remains < gcd.max & variable.rime_buffs",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.stack < 2 & buff.pillar_of_frost.remains < gcd.max & ! buff.death_and_decay.up & variable.ga_priority",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["action"] = "frost_strike",
["criteria"] = "buff.killing_machine.stack < 2 & buff.pillar_of_frost.remains < gcd.max & ! buff.death_and_decay.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "frost_strike",
["criteria"] = "debuff.razorice.stack = 5 & talent.shattering_blade.enabled & talent.a_feast_of_souls.enabled & buff.a_feast_of_souls.up & ! talent.arctic_assault.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "obliterate",
["criteria"] = "buff.killing_machine.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "howling_blast",
["criteria"] = "! buff.killing_machine.up & ( ! dot.frost_fever.ticking )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "glacial_advance",
["criteria"] = "( variable.ga_priority || debuff.razorice.stack < 5 ) & ( ! death_knight.runeforge.razorice & ( debuff.razorice.stack < 5 || debuff.razorice.remains < gcd.max * 3 ) || ( ( variable.rp_buffs || rune < 2 ) & active_enemies > 1 ) )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "frost_strike",
["criteria"] = "( rune < 2 || variable.rp_buffs || debuff.razorice.stack = 5 & talent.shattering_blade.enabled || hero_tree.rider_of_the_apocalypse ) & ! variable.pooling_runic_power & ( ! talent.glacial_advance.enabled || active_enemies = 1 || talent.shattered_frost.enabled )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["action"] = "frost_strike",
["criteria"] = "! variable.pooling_runic_power & ( ! talent.glacial_advance.enabled || active_enemies = 1 || talent.shattered_frost.enabled )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "glacial_advance",
["criteria"] = "! variable.pooling_runic_power & variable.ga_priority",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "frost_strike",
["criteria"] = "! variable.pooling_runic_power",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "rune < 3",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["criteria"] = "rune < 1 & runic_power < 30",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up",
["action"] = "howling_blast",
},
},
["breath"] = {
{
["enabled"] = true,
["description"] = "Breath Active Rotation",
["criteria"] = "variable.rime_buffs & runic_power > ( variable.breath_rime_rp_threshold - ( talent.rage_of_the_frozen_champion.enabled * 6 ) )",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "rune < 2 & runic_power.deficit > 30 & ( ! buff.empower_rune_weapon.up || variable.breath_dying )",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["action"] = "obliterate",
["criteria"] = "buff.killing_machine.up || runic_power.deficit > 20",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.breath_dying",
["action"] = "remorseless_winter",
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & variable.st_planning & talent.unholy_ground.enabled & runic_power.deficit >= 10 & ! talent.obliteration.enabled || variable.breath_dying",
["action"] = "death_and_decay",
},
{
["enabled"] = true,
["criteria"] = "variable.breath_dying",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "runic_power < 60",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up",
["action"] = "howling_blast",
},
},
["default"] = {
{
["action"] = "mind_freeze",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Choose Action list to run",
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "high_prio",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "racials",
},
{
["enabled"] = true,
["criteria"] = "talent.cold_heart.enabled & ( ! buff.killing_machine.up || talent.breath_of_sindragosa.enabled ) & ( ( debuff.razorice.stack = 5 || ! death_knight.runeforge.razorice & ! talent.glacial_advance.enabled & ! talent.avalanche.enabled & ! talent.arctic_assault.enabled ) || boss & fight_remains <= gcd.max )",
["action"] = "call_action_list",
["list_name"] = "cold_heart",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "buff.breath_of_sindragosa.up",
["list_name"] = "breath",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & buff.pillar_of_frost.up & ! buff.breath_of_sindragosa.up",
["action"] = "run_action_list",
["list_name"] = "obliteration",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 2",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1",
["list_name"] = "single_target",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["description"] = "Cooldowns",
["criteria"] = "( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up || ! talent.pillar_of_frost.enabled & buff.empower_rune_weapon.up || ! talent.pillar_of_frost.enabled & ! talent.empower_rune_weapon.enabled || active_enemies >= 2 & buff.pillar_of_frost.up ) || boss & fight_remains < 25",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! buff.pillar_of_frost.up & variable.sending_cds || boss & fight_remains < 15",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & variable.sending_cds",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["criteria"] = "variable.rw_buffs & variable.sending_cds & ( ! talent.arctic_assault.enabled || ! buff.pillar_of_frost.up ) & fight_remains > 10",
["action"] = "remorseless_winter",
},
{
["enabled"] = true,
["criteria"] = "variable.sending_cds & ( ! talent.arctic_assault.enabled || ! buff.pillar_of_frost.up )",
["action"] = "chill_streak",
},
{
["enabled"] = true,
["action"] = "reapers_mark",
["criteria"] = "debuff.reapers_mark_debuff.down",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! talent.breath_of_sindragosa.enabled & buff.pillar_of_frost.up || boss & fight_remains < 20",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["criteria"] = "buff.breath_of_sindragosa.up & runic_power < variable.erw_breath_rp_trigger & rune < variable.erw_breath_rune_trigger",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["criteria"] = "! talent.breath_of_sindragosa.enabled & ! talent.obliteration.enabled & ! buff.empower_rune_weapon.up & rune < 5 & ( cooldown.pillar_of_frost.remains < 7 || buff.pillar_of_frost.up || ! talent.pillar_of_frost.enabled )",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! talent.breath_of_sindragosa.enabled & variable.sending_cds || boss & fight_remains < 20",
["action"] = "pillar_of_frost",
},
{
["enabled"] = true,
["criteria"] = "talent.breath_of_sindragosa.enabled & variable.sending_cds & cooldown.breath_of_sindragosa.remains",
["action"] = "pillar_of_frost",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & ! talent.breath_of_sindragosa.enabled & variable.sending_cds",
["action"] = "pillar_of_frost",
},
{
["enabled"] = true,
["action"] = "breath_of_sindragosa",
["criteria"] = "! buff.breath_of_sindragosa.up & runic_power > variable.breath_rp_threshold & ( cooldown.pillar_of_frost.ready & variable.sending_cds || boss & fight_remains < 30 ) || ( time < 10 & rune < 1 )",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "hero_tree.rider_of_the_apocalypse & talent.apocalypse_now.enabled & variable.sending_cds & ( ! talent.breath_of_sindragosa.enabled & buff.pillar_of_frost.up || buff.breath_of_sindragosa.up ) || boss & fight_remains < 20",
["action"] = "frostwyrms_fury",
},
{
["enabled"] = true,
["criteria"] = "! talent.apocalypse_now.enabled & active_enemies = 1 & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up & ! talent.obliteration.enabled || ! talent.pillar_of_frost.enabled ) & ( ! raid_event.adds.exists || ( raid_event.adds.in > 15 + raid_event.adds.duration || talent.absolute_zero.enabled & raid_event.adds.in > 15 + raid_event.adds.duration ) ) || boss & fight_remains < 3",
["action"] = "frostwyrms_fury",
},
{
["enabled"] = true,
["criteria"] = "! talent.apocalypse_now.enabled & active_enemies >= 2 & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up || raid_event.adds.exists & raid_event.adds.up & raid_event.adds.in < cooldown.pillar_of_frost.remains - raid_event.adds.in - raid_event.adds.duration )",
["action"] = "frostwyrms_fury",
},
{
["enabled"] = true,
["criteria"] = "! talent.apocalypse_now.enabled & talent.obliteration.enabled & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up & ! main_hand.2h || ! buff.pillar_of_frost.up & main_hand.2h & cooldown.pillar_of_frost.remains || ! talent.pillar_of_frost.enabled ) & ( ( buff.pillar_of_frost.remains < gcd.max || buff.unholy_strength.up || ( talent.bonegrinder.rank = 2 & buff.bonegrinder_frost.remains < gcd.max ) ) & ( debuff.razorice.stack = 5 || ! death_knight.runeforge.razorice & ! talent.glacial_advance.enabled || talent.shattering_blade.enabled ) )",
["action"] = "frostwyrms_fury",
},
{
["action"] = "raise_dead",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 5 & target.time_to_pct_35 < 5 & target.time_to_pct_0 > 5 & active_enemies <= 2 & ( talent.obliteration.enabled & ( buff.pillar_of_frost.up & ! buff.killing_machine.react & rune > 2 || ! buff.pillar_of_frost.up || buff.killing_machine.react < 2 & ! buff.exterminate.up & ! buff.exterminate_painful_death.up & buff.pillar_of_frost.remains < gcd.max ) || talent.breath_of_sindragosa.enabled & ( buff.breath_of_sindragosa.up & runic_power > 50 || ! buff.breath_of_sindragosa.up ) || ! talent.breath_of_sindragosa.enabled & ! talent.obliteration.enabled )",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up & ( ! talent.arctic_assault.enabled || ! buff.pillar_of_frost.up )",
["action"] = "frostscythe",
},
{
["enabled"] = true,
["criteria"] = "! buff.death_and_decay.up & ! buff.mograines_might.up & variable.adds_remain & ( buff.pillar_of_frost.up & buff.killing_machine.up & ( talent.enduring_strength.enabled || buff.pillar_of_frost.remains > 5 ) || ! buff.pillar_of_frost.up & ( cooldown.death_and_decay.charges = 2 || cooldown.pillar_of_frost.remains > cooldown.death_and_decay.duration || ! talent.the_long_winter.enabled & cooldown.pillar_of_frost.remains < gcd.max * 2 ) || boss & fight_remains < 15 ) & ( active_enemies > 5 || talent.cleaving_strikes.enabled & active_enemies >= 2 )",
["action"] = "any_dnd",
},
},
["high_prio"] = {
{
["enabled"] = true,
["description"] = "Interrupt",
["criteria"] = "target.debuff.casting.up",
["action"] = "mind_freeze",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 40 & death_knight.first_ams_cast < time & ( ! talent.breath_of_sindragosa.enabled || talent.breath_of_sindragosa.enabled & variable.true_breath_cooldown > cooldown.antimagic_shell.duration )",
["action"] = "antimagic_shell",
},
{
["enabled"] = true,
["description"] = "Maintain Frost Fever, Icy Talons and Unleashed Frenzy",
["criteria"] = "! dot.frost_fever.ticking & active_enemies >= 2 & ( ( ! talent.obliteration.enabled || talent.obliteration.enabled & ( ! cooldown.pillar_of_frost.ready || buff.pillar_of_frost.up & ! buff.killing_machine.up ) ) || ( equipped.fyralath_the_dreamrender & ! dot.mark_of_fyralath.ticking ) )",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "variable.ga_priority & variable.rp_buffs & talent.obliteration.enabled & talent.breath_of_sindragosa.enabled & ! buff.pillar_of_frost.up & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "variable.ga_priority & variable.rp_buffs & talent.breath_of_sindragosa.enabled & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "variable.ga_priority & variable.rp_buffs & ! talent.breath_of_sindragosa.enabled & talent.obliteration.enabled & ! buff.pillar_of_frost.up & ! talent.shattered_frost.enabled",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["action"] = "frost_strike",
["criteria"] = "active_enemies = 1 & variable.rp_buffs & talent.obliteration.enabled & talent.breath_of_sindragosa.enabled & ! buff.pillar_of_frost.up & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "frost_strike",
["criteria"] = "active_enemies = 1 & variable.rp_buffs & talent.breath_of_sindragosa.enabled & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "frost_strike",
["criteria"] = "active_enemies = 1 & variable.rp_buffs & ! talent.breath_of_sindragosa.enabled & talent.obliteration.enabled & ! buff.pillar_of_frost.up",
["cycle_targets"] = 1,
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by pillar of frost, empower rune weapon, or breath of sindragosa's cooldown. If it's value has no remainder return 1, else return 0.5.",
["criteria"] = "trinket.t1.has_use_buff & ( talent.pillar_of_frost.enabled & ! talent.breath_of_sindragosa.enabled & ( trinket.t1.cooldown.duration % cooldown.pillar_of_frost.duration = 0 ) || talent.breath_of_sindragosa.enabled & ( cooldown.breath_of_sindragosa.duration % trinket.t1.cooldown.duration = 0 ) )",
["value"] = "1",
["action"] = "variable",
["value_else"] = "0.5",
["var_name"] = "trinket_1_sync",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "trinket.t2.has_use_buff & ( talent.pillar_of_frost.enabled & ! talent.breath_of_sindragosa.enabled & ( trinket.t2.cooldown.duration % cooldown.pillar_of_frost.duration = 0 ) || talent.breath_of_sindragosa.enabled & ( cooldown.breath_of_sindragosa.duration % trinket.t2.cooldown.duration = 0 ) )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_cooldown & ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_cooldown & ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_duration",
["criteria"] = "trinket.t1.is.treacherous_transmitter",
["value_else"] = "trinket.t1.buff_duration",
["value"] = "15",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_duration",
["criteria"] = "trinket.t2.is.treacherous_transmitter",
["value_else"] = "trinket.t2.buff_duration",
["value"] = "15",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs & ( trinket.t2.has_cooldown || ! trinket.t1.has_cooldown ) || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / variable.trinket_2_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) * ( 1 + ( ( trinket.t2.ilvl - trinket.t1.ilvl ) / 100 ) ) ) > ( ( trinket.t1.cooldown.duration / variable.trinket_1_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) * ( 1 + ( ( trinket.t1.ilvl - trinket.t2.ilvl ) / 100 ) ) )",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "damage_trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_2_buffs & trinket.t2.ilvl >= trinket.t1.ilvl",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box || trinket.t1.is.treacherous_transmitter",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box || trinket.t2.is.treacherous_transmitter",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.gathering_storm.enabled || talent.biting_cold.enabled",
["var_name"] = "rw_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "17",
["var_name"] = "breath_rp_cost",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.rage_of_the_frozen_champion.enabled || talent.icebreaker.enabled",
["var_name"] = "static_rime_buffs",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "breath_rp_threshold",
["default"] = "60",
["description"] = "APL Variable Option: How much Runic Power to pool before casting Breath of Sindragosa",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "erw_breath_rp_trigger",
["default"] = "70",
["description"] = "APL Variable Option: Used with erw_breath_rune_trigger to determine when resources are low enough to use Empower Rune Weapon",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "erw_breath_rune_trigger",
["default"] = "3",
["description"] = "APL Variable Option: Used with erw_breath_rp_trigger to determine when resources are low enough to use Empower Rune Weapon",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "oblit_rune_pooling",
["default"] = "4",
["description"] = "APL Variable Option: How many Runes the APL will try to pool for Pillar of Frost with Obliteration. It is not a guarantee, just a goal.",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "breath_rime_rp_threshold",
["default"] = "60",
["description"] = "APL Variable Option: Amount of Runic Power pooled during Breath of Sindragosa to be able to use Rime",
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1 & ( raid_event.adds.in > 15 || ! raid_event.adds.exists )",
["description"] = "Variables",
["var_name"] = "st_planning",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 5 )",
["var_name"] = "adds_remain",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( variable.st_planning || variable.adds_remain )",
["var_name"] = "sending_cds",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.rime.up & ( ! dot.frost_fever.ticking || variable.static_rime_buffs || talent.avalanche.enabled & ! talent.arctic_assault.enabled & debuff.razorice.stack < 5 )",
["var_name"] = "rime_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.unleashed_frenzy.enabled & ( buff.unleashed_frenzy.remains < gcd.max * 3 || buff.unleashed_frenzy.stack < 3 ) || talent.icy_talons.enabled & ( buff.icy_talons.remains < gcd.max * 3 || buff.icy_talons.stack < ( 3 + ( 2 * talent.smothering_offense.enabled ) + ( 2 * talent.dark_talons.enabled ) ) )",
["var_name"] = "rp_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.pillar_of_frost.enabled & buff.pillar_of_frost.up & ( talent.obliteration.enabled & buff.pillar_of_frost.remains > 10 || ! talent.obliteration.enabled ) || ! talent.pillar_of_frost.enabled & buff.empower_rune_weapon.up || ! talent.pillar_of_frost.enabled & ! talent.empower_rune_weapon.enabled || active_enemies >= 2 & buff.pillar_of_frost.up",
["var_name"] = "cooldown_check",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Formulaic approach to determine the time before these abilities come off cooldown that the simulation should star to pool resources. Capped at 15s in the run_action_list call.",
["criteria"] = "cooldown.breath_of_sindragosa.remains > cooldown.pillar_of_frost.remains",
["value"] = "cooldown.breath_of_sindragosa.remains",
["action"] = "variable",
["value_else"] = "cooldown.pillar_of_frost.remains",
["var_name"] = "true_breath_cooldown",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "oblit_pooling_time",
["criteria"] = "runic_power < 35 & rune < 2 & cooldown.pillar_of_frost.remains_expected < 10",
["value_else"] = "3",
["value"] = "( ( cooldown.pillar_of_frost.remains_expected + 1 ) / gcd.max ) / ( ( rune + 1 ) * ( ( runic_power + 5 ) ) ) * 100",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "breath_pooling_time",
["criteria"] = "runic_power.deficit > 10 & variable.true_breath_cooldown < 10",
["value_else"] = "2",
["value"] = "( ( variable.true_breath_cooldown + 1 ) / gcd.max ) / ( ( rune + 1 ) * ( runic_power + 20 ) ) * 100",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "rune < variable.oblit_rune_pooling & talent.obliteration.enabled & ( ! talent.breath_of_sindragosa.enabled || variable.true_breath_cooldown ) & cooldown.pillar_of_frost.remains_expected < variable.oblit_pooling_time",
["var_name"] = "pooling_runes",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.breath_of_sindragosa.enabled & variable.true_breath_cooldown < variable.breath_pooling_time || talent.obliteration.enabled & runic_power < 35 & cooldown.pillar_of_frost.remains_expected < variable.oblit_pooling_time",
["var_name"] = "pooling_runic_power",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ! talent.shattered_frost.enabled & talent.shattering_blade.enabled & active_enemies >= 4 ) || ( ! talent.shattered_frost.enabled & ! talent.shattering_blade.enabled & active_enemies >= 2 )",
["var_name"] = "ga_priority",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "runic_power < variable.breath_rp_cost * 2 & rune.time_to_2 > runic_power / variable.breath_rp_cost",
["var_name"] = "breath_dying",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["use_off_gcd"] = 1,
["action"] = "treacherous_transmitter",
["criteria"] = "cooldown.pillar_of_frost.remains < 6 & ( ! talent.breath_of_sindragosa.enabled || ( buff.breath_of_sindragosa.up || variable.true_breath_cooldown < 6 ) ) || boss & fight_remains < 30",
["description"] = "Trinkets",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! talent.breath_of_sindragosa.enabled & buff.pillar_of_frost.remains > 10 || talent.breath_of_sindragosa.enabled ) & ( ! buff.pillar_of_frost.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & ( buff.breath_of_sindragosa.up & buff.pillar_of_frost.up || ! talent.breath_of_sindragosa.enabled ) & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || variable.trinket_1_duration >= fight_remains & boss",
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Pillar of Frost.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! talent.breath_of_sindragosa.enabled & buff.pillar_of_frost.remains > 10 || talent.breath_of_sindragosa.enabled ) & ( ! buff.pillar_of_frost.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & ( buff.breath_of_sindragosa.up & buff.pillar_of_frost.up || ! talent.breath_of_sindragosa.enabled ) & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || variable.trinket_2_duration >= fight_remains & boss",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( variable.damage_trinket_priority = 1 || ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains ) ) & ( ( trinket.t1.cast_time > 0 & ! buff.pillar_of_frost.up || ! trinket.t1.cast_time > 0 ) & ( ! variable.trinket_2_buffs || cooldown.pillar_of_frost.remains > 20 ) || ! talent.pillar_of_frost.enabled ) || boss & fight_remains < 15",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( variable.damage_trinket_priority = 2 || ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains ) ) & ( ( trinket.t2.cast_time > 0 & ! buff.pillar_of_frost.up || ! trinket.t2.cast_time > 0 ) & ( ! variable.trinket_1_buffs || cooldown.pillar_of_frost.remains > 20 ) || ! talent.pillar_of_frost.enabled ) || boss & fight_remains < 15",
},
},
["racials"] = {
{
["enabled"] = true,
["description"] = "Racial Abilities",
["criteria"] = "variable.cooldown_check",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "arcane_pulse",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! buff.pillar_of_frost.up & buff.unholy_strength.up",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & buff.pillar_of_frost.up & ( buff.unholy_strength.up & buff.unholy_strength.remains < gcd.max * 3 || buff.pillar_of_frost.remains < gcd.max * 3 )",
["action"] = "bag_of_tricks",
},
},
["aoe"] = {
{
["enabled"] = true,
["description"] = "AoE Action List",
["criteria"] = "buff.killing_machine.up & talent.cleaving_strikes.enabled & buff.death_and_decay.up",
["action"] = "obliterate",
},
{
["enabled"] = true,
["action"] = "howling_blast",
["criteria"] = "! dot.frost_fever.ticking",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "frost_strike",
["criteria"] = "! variable.pooling_runic_power & debuff.razorice.stack = 5 & talent.shattering_blade.enabled & ( talent.shattered_frost.enabled || active_enemies < 4 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["action"] = "glacial_advance",
["criteria"] = "! variable.pooling_runic_power & ( variable.ga_priority || debuff.razorice.stack < 5 )",
["cycle_targets"] = 1,
},
{
["action"] = "obliterate",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "frost_strike",
["criteria"] = "! variable.pooling_runic_power",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "rune < 2 & runic_power.deficit > 25 & ( ! talent.breath_of_sindragosa.enabled || variable.true_breath_cooldown > cooldown.horn_of_winter.duration - 15 )",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 25",
["action"] = "arcane_torrent",
},
},
},
["version"] = 20240828,
["warnings"] = "The import for 'single_target' required some automated changes.\nLine 1: Converted 'talent.a_feast_of_souls' to 'talent.a_feast_of_souls.enabled' (1x).\nLine 1: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 4: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 4: Converted 'talent.icebreaker' to 'talent.icebreaker.enabled' (1x).\nLine 8: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 10: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 14: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 15: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 16: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\n\nThe import for 'cold_heart' required some automated changes.\nLine 2: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 2: Converted 'talent.frostwyrms_fury' to 'talent.frostwyrms_fury.enabled' (1x).\nLine 3: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'obliteration' required some automated changes.\nLine 5: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 5: Converted 'talent.a_feast_of_souls' to 'talent.a_feast_of_souls.enabled' (1x).\nLine 5: Converted 'talent.arctic_assault' to 'talent.arctic_assault.enabled' (1x).\nLine 9: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 9: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 9: Converted 'talent.shattered_frost' to 'talent.shattered_frost.enabled' (1x).\nLine 11: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 11: Converted 'talent.shattered_frost' to 'talent.shattered_frost.enabled' (1x).\n\nThe import for 'breath' required some automated changes.\nLine 1: Converted 'talent.rage_of_the_frozen_champion' to 'talent.rage_of_the_frozen_champion.enabled' (1x).\nLine 5: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'variables' required some automated changes.\nLine 4: Converted 'talent.avalanche' to 'talent.avalanche.enabled' (1x).\nLine 4: Converted 'talent.arctic_assault' to 'talent.arctic_assault.enabled' (1x).\nLine 5: Converted 'talent.unleashed_frenzy' to 'talent.unleashed_frenzy.enabled' (1x).\nLine 5: Converted 'talent.icy_talons' to 'talent.icy_talons.enabled' (1x).\nLine 5: Converted 'talent.smothering_offense' to 'talent.smothering_offense.enabled' (1x).\nLine 5: Converted 'talent.dark_talons' to 'talent.dark_talons.enabled' (1x).\nLine 6: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 6: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 6: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 6: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 6: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 6: Converted 'talent.empower_rune_weapon' to 'talent.empower_rune_weapon.enabled' (1x).\nLine 8: Converted operations in '((cooldown.pillar_of_frost.remains_expected+1)%gcd.max)%((rune+1)*((runic_power+5)))*100' to '((cooldown.pillar_of_frost.remains_expected+1)/gcd.max)/((rune+1)*((runic_power+5)))*100'.\nLine 9: Converted operations in '((variable.true_breath_cooldown+1)%gcd.max)%((rune+1)*(runic_power+20))*100' to '((variable.true_breath_cooldown+1)/gcd.max)/((rune+1)*(runic_power+20))*100'.\nLine 10: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 10: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 11: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 11: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 12: Converted 'talent.shattered_frost' to 'talent.shattered_frost.enabled' (1x).\nLine 12: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 12: Converted 'talent.shattered_frost' to 'talent.shattered_frost.enabled' (1x).\nLine 12: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 13: Converted operations in 'runic_power<variable.breath_rp_cost*2&rune.time_to_2>runic_power%variable.breath_rp_cost' to 'runic_power<variable.breath_rp_cost*2&rune.time_to_2>runic_power/variable.breath_rp_cost'.\n\nThe import for 'racials' required some automated changes.\nLine 7: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 8: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'high_prio' required some automated changes.\nLine 2: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 2: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 3: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 3: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 5: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 6: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 6: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 6: Converted 'talent.shattered_frost' to 'talent.shattered_frost.enabled' (1x).\nLine 7: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 7: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 8: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 9: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 9: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 1: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 1: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 1: Converted operations in 'trinket.t1.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t1.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%%trinket.t1.cooldown.duration=0))' to 'trinket.t1.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t1.cooldown.duration%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%trinket.t1.cooldown.duration=0))'.\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 2: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted operations in 'trinket.t2.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t2.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%%trinket.t2.cooldown.duration=0))' to 'trinket.t2.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t2.cooldown.duration%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%trinket.t2.cooldown.duration=0))'.\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 3: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 3: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 3: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 3: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 3: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 4: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 4: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 4: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 4: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 4: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 5: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 5: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 6: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 7: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 7: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 7: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 7: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 7: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 7: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%variable.trinket_2_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(1+((trinket.t2.ilvl-trinket.t1.ilvl)%100)))>((trinket.t1.cooldown.duration%variable.trinket_1_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)%100)))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/variable.trinket_2_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync)*(1+((trinket.t2.ilvl-trinket.t1.ilvl)/100)))>((trinket.t1.cooldown.duration/variable.trinket_1_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)/100)))'.\nLine 8: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 8: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 9: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 9: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 10: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 10: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 11: Converted 'talent.gathering_storm' to 'talent.gathering_storm.enabled' (1x).\nLine 11: Converted 'talent.biting_cold' to 'talent.biting_cold.enabled' (1x).\nLine 13: Converted 'talent.rage_of_the_frozen_champion' to 'talent.rage_of_the_frozen_champion.enabled' (1x).\nLine 13: Converted 'talent.icebreaker' to 'talent.icebreaker.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'cooldowns' required some automated changes.\nLine 1: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 1: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 1: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 1: Converted 'talent.empower_rune_weapon' to 'talent.empower_rune_weapon.enabled' (1x).\nLine 2: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 3: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.arctic_assault' to 'talent.arctic_assault.enabled' (1x).\nLine 5: Converted 'talent.arctic_assault' to 'talent.arctic_assault.enabled' (1x).\nLine 7: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 7: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 9: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 9: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 9: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 10: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 10: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 11: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 12: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 12: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 14: Converted 'talent.apocalypse_now' to 'talent.apocalypse_now.enabled' (1x).\nLine 14: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 15: Converted 'talent.apocalypse_now' to 'talent.apocalypse_now.enabled' (1x).\nLine 15: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 15: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 15: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 15: Converted 'talent.absolute_zero' to 'talent.absolute_zero.enabled' (1x).\nLine 16: Converted 'talent.apocalypse_now' to 'talent.apocalypse_now.enabled' (1x).\nLine 16: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 17: Converted 'talent.apocalypse_now' to 'talent.apocalypse_now.enabled' (1x).\nLine 17: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 17: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 17: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 17: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 17: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 19: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 19: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 19: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 19: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 20: Converted 'talent.arctic_assault' to 'talent.arctic_assault.enabled' (1x).\nLine 21: Converted 'talent.enduring_strength' to 'talent.enduring_strength.enabled' (1x).\nLine 21: Converted 'talent.the_long_winter' to 'talent.the_long_winter.enabled' (1x).\nLine 21: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 1: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 2: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 2: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 7: Converted 'talent.cold_heart' to 'talent.cold_heart.enabled' (1x).\nLine 7: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 7: Converted 'talent.avalanche' to 'talent.avalanche.enabled' (1x).\nLine 7: Converted 'talent.arctic_assault' to 'talent.arctic_assault.enabled' (1x).\nLine 9: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 1: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 3: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 3: Converted 'talent.shattered_frost' to 'talent.shattered_frost.enabled' (1x).\nLine 8: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\n\nImported 12 action lists.\n",
["spec"] = 251,
["profile"] = "# Evaluates a trinkets cooldown, divided by pillar of frost, empower rune weapon, or breath of sindragosa's cooldown. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(talent.pillar_of_frost&!talent.breath_of_sindragosa&(trinket.1.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa&(cooldown.breath_of_sindragosa.duration%%trinket.1.cooldown.duration=0))\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(talent.pillar_of_frost&!talent.breath_of_sindragosa&(trinket.2.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa&(cooldown.breath_of_sindragosa.duration%%trinket.2.cooldown.duration=0))\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_cooldown&(trinket.1.has_use_buff||trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_cooldown&(trinket.2.has_use_buff||trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit)\nactions.precombat+=/variable,name=trinket_1_duration,op=setif,value=15,value_else=trinket.1.proc.any_dps.duration,condition=trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_duration,op=setif,value=15,value_else=trinket.2.proc.any_dps.duration,condition=trinket.2.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.2.has_cooldown||!trinket.1.has_cooldown)||variable.trinket_2_buffs&((trinket.2.cooldown.duration%variable.trinket_2_duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync)*(1+((trinket.2.ilvl-trinket.1.ilvl)%100)))>((trinket.1.cooldown.duration%variable.trinket_1_duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync)*(1+((trinket.1.ilvl-trinket.2.ilvl)%100)))\nactions.precombat+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&!variable.trinket_2_buffs&trinket.2.ilvl>=trinket.1.ilvl\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box||trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box||trinket.2.is.treacherous_transmitter\nactions.precombat+=/variable,name=rw_buffs,value=talent.gathering_storm||talent.biting_cold\nactions.precombat+=/variable,name=breath_rp_cost,value=17\nactions.precombat+=/variable,name=static_rime_buffs,value=talent.rage_of_the_frozen_champion||talent.icebreaker\n# APL Variable Option: How much Runic Power to pool before casting Breath of Sindragosa\nactions.precombat+=/variable,name=breath_rp_threshold,default=60,op=reset\n# APL Variable Option: Used with erw_breath_rune_trigger to determine when resources are low enough to use Empower Rune Weapon\nactions.precombat+=/variable,name=erw_breath_rp_trigger,default=70,op=reset\n# APL Variable Option: Used with erw_breath_rp_trigger to determine when resources are low enough to use Empower Rune Weapon\nactions.precombat+=/variable,name=erw_breath_rune_trigger,default=3,op=reset\n# APL Variable Option: How many Runes the APL will try to pool for Pillar of Frost with Obliteration. It is not a guarantee, just a goal.\nactions.precombat+=/variable,name=oblit_rune_pooling,default=4,op=reset\n# APL Variable Option: Amount of Runic Power pooled during Breath of Sindragosa to be able to use Rime\nactions.precombat+=/variable,name=breath_rime_rp_threshold,default=60,op=reset\n\nactions+=/mind_freeze\n# Choose Action list to run\nactions+=/call_action_list,name=variables\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=high_prio\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=racials\nactions+=/call_action_list,name=cold_heart,if=talent.cold_heart&(!buff.killing_machine.up||talent.breath_of_sindragosa)&((debuff.razorice.stack=5||!death_knight.runeforge.razorice&!talent.glacial_advance&!talent.avalanche&!talent.arctic_assault)||boss&fight_remains<=gcd)\nactions+=/run_action_list,name=breath,strict=1,if=buff.breath_of_sindragosa.up\nactions+=/run_action_list,name=obliteration,if=talent.obliteration&buff.pillar_of_frost.up&!buff.breath_of_sindragosa.up\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>=2\nactions+=/call_action_list,name=single_target,strict=1,if=active_enemies=1\n\n# AoE Action List\nactions.aoe+=/obliterate,if=buff.killing_machine.up&talent.cleaving_strikes&buff.death_and_decay.up\nactions.aoe+=/howling_blast,cycle_targets=1,if=!dot.frost_fever.ticking\nactions.aoe+=/frost_strike,cycle_targets=1,if=!variable.pooling_runic_power&debuff.razorice.stack=5&talent.shattering_blade&(talent.shattered_frost||active_enemies<4)\nactions.aoe+=/howling_blast,if=buff.rime.up\nactions.aoe+=/glacial_advance,cycle_targets=1,if=!variable.pooling_runic_power&(variable.ga_priority||debuff.razorice.stack<5)\nactions.aoe+=/obliterate\nactions.aoe+=/frost_strike,cycle_targets=1,if=!variable.pooling_runic_power\nactions.aoe+=/horn_of_winter,if=rune<2&runic_power.deficit>25&(!talent.breath_of_sindragosa||variable.true_breath_cooldown>cooldown.horn_of_winter.duration-15)\nactions.aoe+=/arcane_torrent,if=runic_power.deficit>25\n\n# Breath Active Rotation\nactions.breath+=/howling_blast,if=variable.rime_buffs&runic_power>(variable.breath_rime_rp_threshold-(talent.rage_of_the_frozen_champion*6))\nactions.breath+=/horn_of_winter,if=rune<2&runic_power.deficit>30&(!buff.empower_rune_weapon.up||variable.breath_dying)\nactions.breath+=/obliterate,cycle_targets=1,if=buff.killing_machine.up||runic_power.deficit>20\nactions.breath+=/remorseless_winter,if=variable.breath_dying\nactions.breath+=/death_and_decay,if=!death_and_decay.ticking&variable.st_planning&talent.unholy_ground&runic_power.deficit>=10&!talent.obliteration||variable.breath_dying\nactions.breath+=/howling_blast,if=variable.breath_dying\nactions.breath+=/arcane_torrent,if=runic_power<60\nactions.breath+=/howling_blast,if=buff.rime.up\n\n# Cold Heart\nactions.cold_heart+=/chains_of_ice,if=fight_remains<gcd&(rune<2||!buff.killing_machine.up&(!main_hand.2h&buff.cold_heart.stack>=4||main_hand.2h&buff.cold_heart.stack>8)||buff.killing_machine.up&(!main_hand.2h&buff.cold_heart.stack>8||main_hand.2h&buff.cold_heart.stack>10))\nactions.cold_heart+=/chains_of_ice,if=!talent.obliteration&buff.pillar_of_frost.up&buff.cold_heart.stack>=10&(buff.pillar_of_frost.remains<gcd*(1+(talent.frostwyrms_fury&cooldown.frostwyrms_fury.ready))||buff.unholy_strength.up&buff.unholy_strength.remains<gcd)\nactions.cold_heart+=/chains_of_ice,if=!talent.obliteration&death_knight.runeforge.fallen_crusader&!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains>15&(buff.cold_heart.stack>=10&buff.unholy_strength.up||buff.cold_heart.stack>=13)\nactions.cold_heart+=/chains_of_ice,if=!talent.obliteration&!death_knight.runeforge.fallen_crusader&buff.cold_heart.stack>=10&!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains>20\nactions.cold_heart+=/chains_of_ice,if=talent.obliteration&!buff.pillar_of_frost.up&(buff.cold_heart.stack>=14&buff.unholy_strength.up||buff.cold_heart.stack>=19||cooldown.pillar_of_frost.remains<3&buff.cold_heart.stack>=14)\n\n# Cooldowns\nactions.cooldowns+=/potion,if=(talent.pillar_of_frost&buff.pillar_of_frost.up||!talent.pillar_of_frost&buff.empower_rune_weapon.up||!talent.pillar_of_frost&!talent.empower_rune_weapon||active_enemies>=2&buff.pillar_of_frost.up)||boss&fight_remains<25\nactions.cooldowns+=/abomination_limb,if=talent.obliteration&!buff.pillar_of_frost.up&variable.sending_cds||boss&fight_remains<15\nactions.cooldowns+=/abomination_limb,if=!talent.obliteration&variable.sending_cds\nactions.cooldowns+=/remorseless_winter,if=variable.rw_buffs&variable.sending_cds&(!talent.arctic_assault||!buff.pillar_of_frost.up)&fight_remains>10\nactions.cooldowns+=/chill_streak,if=variable.sending_cds&(!talent.arctic_assault||!buff.pillar_of_frost.up)\nactions.cooldowns+=/reapers_mark,cycle_targets=1,if=debuff.reapers_mark_debuff.down\nactions.cooldowns+=/empower_rune_weapon,if=talent.obliteration&!talent.breath_of_sindragosa&buff.pillar_of_frost.up||boss&fight_remains<20\nactions.cooldowns+=/empower_rune_weapon,if=buff.breath_of_sindragosa.up&runic_power<variable.erw_breath_rp_trigger&rune<variable.erw_breath_rune_trigger\nactions.cooldowns+=/empower_rune_weapon,if=!talent.breath_of_sindragosa&!talent.obliteration&!buff.empower_rune_weapon.up&rune<5&(cooldown.pillar_of_frost.remains<7||buff.pillar_of_frost.up||!talent.pillar_of_frost)\nactions.cooldowns+=/pillar_of_frost,if=talent.obliteration&!talent.breath_of_sindragosa&variable.sending_cds||boss&fight_remains<20\nactions.cooldowns+=/pillar_of_frost,if=talent.breath_of_sindragosa&variable.sending_cds&cooldown.breath_of_sindragosa.remains\nactions.cooldowns+=/pillar_of_frost,if=!talent.obliteration&!talent.breath_of_sindragosa&variable.sending_cds\nactions.cooldowns+=/breath_of_sindragosa,use_off_gcd=1,if=!buff.breath_of_sindragosa.up&runic_power>variable.breath_rp_threshold&(cooldown.pillar_of_frost.ready&variable.sending_cds||boss&fight_remains<30)||(time<10&rune<1)\nactions.cooldowns+=/frostwyrms_fury,if=hero_tree.rider_of_the_apocalypse&talent.apocalypse_now&variable.sending_cds&(!talent.breath_of_sindragosa&buff.pillar_of_frost.up||buff.breath_of_sindragosa.up)||boss&fight_remains<20\nactions.cooldowns+=/frostwyrms_fury,if=!talent.apocalypse_now&active_enemies=1&(talent.pillar_of_frost&buff.pillar_of_frost.up&!talent.obliteration||!talent.pillar_of_frost)&(!raid_event.adds.exists||(raid_event.adds.in>15+raid_event.adds.duration||talent.absolute_zero&raid_event.adds.in>15+raid_event.adds.duration))||boss&fight_remains<3\nactions.cooldowns+=/frostwyrms_fury,if=!talent.apocalypse_now&active_enemies>=2&(talent.pillar_of_frost&buff.pillar_of_frost.up||raid_event.adds.exists&raid_event.adds.up&raid_event.adds.in<cooldown.pillar_of_frost.remains-raid_event.adds.in-raid_event.adds.duration)\nactions.cooldowns+=/frostwyrms_fury,if=!talent.apocalypse_now&talent.obliteration&(talent.pillar_of_frost&buff.pillar_of_frost.up&!main_hand.2h||!buff.pillar_of_frost.up&main_hand.2h&cooldown.pillar_of_frost.remains||!talent.pillar_of_frost)&((buff.pillar_of_frost.remains<gcd||buff.unholy_strength.up||(talent.bonegrinder.rank=2&buff.bonegrinder_frost.remains<gcd))&(debuff.razorice.stack=5||!death_knight.runeforge.razorice&!talent.glacial_advance||talent.shattering_blade))\nactions.cooldowns+=/raise_dead\nactions.cooldowns+=/soul_reaper,if=fight_remains>5&target.time_to_pct_35<5&target.time_to_pct_0>5&active_enemies<=2&(talent.obliteration&(buff.pillar_of_frost.up&!buff.killing_machine.react&rune>2||!buff.pillar_of_frost.up||buff.killing_machine.react<2&!buff.exterminate.up&!buff.exterminate_painful_death.up&buff.pillar_of_frost.remains<gcd)||talent.breath_of_sindragosa&(buff.breath_of_sindragosa.up&runic_power>50||!buff.breath_of_sindragosa.up)||!talent.breath_of_sindragosa&!talent.obliteration)\nactions.cooldowns+=/frostscythe,if=!buff.killing_machine.up&(!talent.arctic_assault||!buff.pillar_of_frost.up)\nactions.cooldowns+=/any_dnd,if=!buff.death_and_decay.up&!buff.mograines_might.up&variable.adds_remain&(buff.pillar_of_frost.up&buff.killing_machine.up&(talent.enduring_strength||buff.pillar_of_frost.remains>5)||!buff.pillar_of_frost.up&(cooldown.death_and_decay.charges=2||cooldown.pillar_of_frost.remains>cooldown.death_and_decay.duration||!talent.the_long_winter&cooldown.pillar_of_frost.remains<gcd.max*2)||boss&fight_remains<15)&(active_enemies>5||talent.cleaving_strikes&active_enemies>=2)\n\n## High Priority Actions Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=51271/pillar-of-frost'>Pillar of Frost</a> is up, as well as <a href='https://www.wowhead.com/spell=152279/breath-of-sindragosa'>Breath of Sindragosa</a> or on cooldown if <a href='https://www.wowhead.com/spell=51271/pillar-of-frost'>Pillar of Frost</a> and <a href='https://www.wowhead.com/spell=152279/breath-of-sindragosa'>Breath of Sindragosa</a> are not talented\n## actions.high_prio+=/invoke_external_buff,name=power_infusion,if=(buff.pillar_of_frost.up||!talent.pillar_of_frost)&(talent.obliteration||talent.breath_of_sindragosa&buff.breath_of_sindragosa.up||!talent.breath_of_sindragosa&!talent.obliteration)\n# Interrupt\nactions.high_prio+=/mind_freeze,if=target.debuff.casting.up\nactions.high_prio+=/antimagic_shell,if=runic_power.deficit>40&death_knight.first_ams_cast<time&(!talent.breath_of_sindragosa||talent.breath_of_sindragosa&variable.true_breath_cooldown>cooldown.antimagic_shell.duration)\n# Maintain Frost Fever, Icy Talons and Unleashed Frenzy\nactions.high_prio+=/howling_blast,if=!dot.frost_fever.ticking&active_enemies>=2&((!talent.obliteration||talent.obliteration&(!cooldown.pillar_of_frost.ready||buff.pillar_of_frost.up&!buff.killing_machine.up))||(equipped.fyralath_the_dreamrender&!dot.mark_of_fyralath.ticking))\nactions.high_prio+=/glacial_advance,if=variable.ga_priority&variable.rp_buffs&talent.obliteration&talent.breath_of_sindragosa&!buff.pillar_of_frost.up&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions.high_prio+=/glacial_advance,if=variable.ga_priority&variable.rp_buffs&talent.breath_of_sindragosa&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions.high_prio+=/glacial_advance,if=variable.ga_priority&variable.rp_buffs&!talent.breath_of_sindragosa&talent.obliteration&!buff.pillar_of_frost.up&!talent.shattered_frost\nactions.high_prio+=/frost_strike,cycle_targets=1,if=active_enemies=1&variable.rp_buffs&talent.obliteration&talent.breath_of_sindragosa&!buff.pillar_of_frost.up&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions.high_prio+=/frost_strike,cycle_targets=1,if=active_enemies=1&variable.rp_buffs&talent.breath_of_sindragosa&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions.high_prio+=/frost_strike,cycle_targets=1,if=active_enemies=1&variable.rp_buffs&!talent.breath_of_sindragosa&talent.obliteration&!buff.pillar_of_frost.up\n\n# Obliteration Active Rotation\nactions.obliteration+=/obliterate,cycle_targets=1,if=buff.killing_machine.react&(buff.exterminate.up||buff.exterminate_painful_death.up||fight_remains<gcd*2)\nactions.obliteration+=/howling_blast,if=buff.killing_machine.react<2&buff.pillar_of_frost.remains<gcd&variable.rime_buffs\nactions.obliteration+=/glacial_advance,if=buff.killing_machine.stack<2&buff.pillar_of_frost.remains<gcd&!buff.death_and_decay.up&variable.ga_priority\nactions.obliteration+=/frost_strike,cycle_targets=1,if=buff.killing_machine.stack<2&buff.pillar_of_frost.remains<gcd&!buff.death_and_decay.up\nactions.obliteration+=/frost_strike,cycle_targets=1,if=debuff.razorice.stack=5&talent.shattering_blade&talent.a_feast_of_souls&buff.a_feast_of_souls.up&!talent.arctic_assault\nactions.obliteration+=/obliterate,cycle_targets=1,if=buff.killing_machine.up\nactions.obliteration+=/howling_blast,cycle_targets=1,if=!buff.killing_machine.up&(!dot.frost_fever.ticking)\nactions.obliteration+=/glacial_advance,cycle_targets=1,if=(variable.ga_priority||debuff.razorice.stack<5)&(!death_knight.runeforge.razorice&(debuff.razorice.stack<5||debuff.razorice.remains<gcd*3)||((variable.rp_buffs||rune<2)&active_enemies>1))\nactions.obliteration+=/frost_strike,cycle_targets=1,if=(rune<2||variable.rp_buffs||debuff.razorice.stack=5&talent.shattering_blade||hero_tree.rider_of_the_apocalypse)&!variable.pooling_runic_power&(!talent.glacial_advance||active_enemies=1||talent.shattered_frost)\nactions.obliteration+=/howling_blast,if=buff.rime.up\nactions.obliteration+=/frost_strike,cycle_targets=1,if=!variable.pooling_runic_power&(!talent.glacial_advance||active_enemies=1||talent.shattered_frost)\nactions.obliteration+=/glacial_advance,cycle_targets=1,if=!variable.pooling_runic_power&variable.ga_priority\nactions.obliteration+=/frost_strike,cycle_targets=1,if=!variable.pooling_runic_power\nactions.obliteration+=/horn_of_winter,if=rune<3\nactions.obliteration+=/arcane_torrent,if=rune<1&runic_power<30\nactions.obliteration+=/howling_blast,if=!buff.killing_machine.up\n\n# Racial Abilities\nactions.racials+=/blood_fury,if=variable.cooldown_check\nactions.racials+=/berserking,if=variable.cooldown_check\nactions.racials+=/arcane_pulse,if=variable.cooldown_check\nactions.racials+=/lights_judgment,if=variable.cooldown_check\nactions.racials+=/ancestral_call,if=variable.cooldown_check\nactions.racials+=/fireblood,if=variable.cooldown_check\nactions.racials+=/bag_of_tricks,if=talent.obliteration&!buff.pillar_of_frost.up&buff.unholy_strength.up\nactions.racials+=/bag_of_tricks,if=!talent.obliteration&buff.pillar_of_frost.up&(buff.unholy_strength.up&buff.unholy_strength.remains<gcd*3||buff.pillar_of_frost.remains<gcd*3)\n\n# Single Target Rotation\nactions.single_target+=/frost_strike,if=talent.a_feast_of_souls&debuff.razorice.stack=5&talent.shattering_blade&buff.a_feast_of_souls.up\nactions.single_target+=/obliterate,if=buff.killing_machine.react=2||buff.exterminate.up||buff.exterminate_painful_death.up\nactions.single_target+=/horn_of_winter,if=(!talent.breath_of_sindragosa||variable.true_breath_cooldown>cooldown.horn_of_winter.duration-15)&cooldown.pillar_of_frost.remains<variable.oblit_pooling_time\nactions.single_target+=/frost_strike,if=(debuff.razorice.stack=5&talent.shattering_blade)||(rune<2&!talent.icebreaker)\nactions.single_target+=/howling_blast,if=variable.rime_buffs\nactions.single_target+=/obliterate,if=buff.killing_machine.up&!variable.pooling_runes\nactions.single_target+=/glacial_advance,if=!variable.pooling_runic_power&!death_knight.runeforge.razorice&(debuff.razorice.stack<5||debuff.razorice.remains<gcd*3)\nactions.single_target+=/frost_strike,if=!variable.pooling_runic_power&(variable.rp_buffs||(!talent.shattering_blade&runic_power.deficit<20))\nactions.single_target+=/howling_blast,if=buff.rime.up\nactions.single_target+=/frost_strike,if=!variable.pooling_runic_power&!(main_hand.2h||talent.shattering_blade)\nactions.single_target+=/obliterate,if=!variable.pooling_runes\nactions.single_target+=/frost_strike,if=!variable.pooling_runic_power\nactions.single_target+=/howling_blast,if=!dot.frost_fever.ticking\nactions.single_target+=/any_dnd,if=talent.breath_of_sindragosa&!buff.breath_of_sindragosa.up&!variable.true_breath_cooldown&rune<2&!buff.death_and_decay.up\nactions.single_target+=/horn_of_winter,if=rune<2&runic_power.deficit>25&(!talent.breath_of_sindragosa||variable.true_breath_cooldown>cooldown.horn_of_winter.duration-15)\nactions.single_target+=/arcane_torrent,if=!talent.breath_of_sindragosa&runic_power.deficit>20\n\n# Trinkets\nactions.trinkets+=/use_item,use_off_gcd=1,name=treacherous_transmitter,if=cooldown.pillar_of_frost.remains<6&(!talent.breath_of_sindragosa||(buff.breath_of_sindragosa.up||variable.true_breath_cooldown<6))||boss&fight_remains<30\n### When to complete the Tracherous Transmitter task given.\n## actions.trinkets+=/do_treacherous_transmitter_task,use_off_gcd=1,if=buff.pillar_of_frost.up||fight_remains<15\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Pillar of Frost.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!talent.breath_of_sindragosa&buff.pillar_of_frost.remains>10||talent.breath_of_sindragosa)&(!buff.pillar_of_frost.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&(buff.breath_of_sindragosa.up&buff.pillar_of_frost.up||!talent.breath_of_sindragosa)&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||variable.trinket_1_duration>=fight_remains&boss\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!talent.breath_of_sindragosa&buff.pillar_of_frost.remains>10||talent.breath_of_sindragosa)&(!buff.pillar_of_frost.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&(buff.breath_of_sindragosa.up&buff.pillar_of_frost.up||!talent.breath_of_sindragosa)&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||variable.trinket_2_duration>=fight_remains&boss\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&(variable.damage_trinket_priority=1||(!trinket.2.has_cooldown||trinket.2.cooldown.remains))&((trinket.1.cast_time>0&!buff.pillar_of_frost.up||!trinket.1.cast_time>0)&(!variable.trinket_2_buffs||cooldown.pillar_of_frost.remains>20)||!talent.pillar_of_frost)||boss&fight_remains<15\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&(variable.damage_trinket_priority=2||(!trinket.1.has_cooldown||trinket.1.cooldown.remains))&((trinket.2.cast_time>0&!buff.pillar_of_frost.up||!trinket.2.cast_time>0)&(!variable.trinket_1_buffs||cooldown.pillar_of_frost.remains>20)||!talent.pillar_of_frost)||boss&fight_remains<15\n\n# Variables\nactions.variables+=/variable,name=st_planning,value=active_enemies=1&(raid_event.adds.in>15||!raid_event.adds.exists)\nactions.variables+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>5)\nactions.variables+=/variable,name=sending_cds,value=(variable.st_planning||variable.adds_remain)\nactions.variables+=/variable,name=rime_buffs,value=buff.rime.up&(!dot.frost_fever.ticking||variable.static_rime_buffs||talent.avalanche&!talent.arctic_assault&debuff.razorice.stack<5)\nactions.variables+=/variable,name=rp_buffs,value=talent.unleashed_frenzy&(buff.unleashed_frenzy.remains<gcd.max*3||buff.unleashed_frenzy.stack<3)||talent.icy_talons&(buff.icy_talons.remains<gcd.max*3||buff.icy_talons.stack<(3+(2*talent.smothering_offense)+(2*talent.dark_talons)))\nactions.variables+=/variable,name=cooldown_check,value=talent.pillar_of_frost&buff.pillar_of_frost.up&(talent.obliteration&buff.pillar_of_frost.remains>10||!talent.obliteration)||!talent.pillar_of_frost&buff.empower_rune_weapon.up||!talent.pillar_of_frost&!talent.empower_rune_weapon||active_enemies>=2&buff.pillar_of_frost.up\n# Formulaic approach to determine the time before these abilities come off cooldown that the simulation should star to pool resources. Capped at 15s in the run_action_list call.\nactions.variables+=/variable,name=true_breath_cooldown,op=setif,value=cooldown.breath_of_sindragosa.remains,value_else=cooldown.pillar_of_frost.remains,condition=cooldown.breath_of_sindragosa.remains>cooldown.pillar_of_frost.remains\nactions.variables+=/variable,name=oblit_pooling_time,op=setif,value=((cooldown.pillar_of_frost.remains_expected+1)%gcd.max)%((rune+1)*((runic_power+5)))*100,value_else=3,condition=runic_power<35&rune<2&cooldown.pillar_of_frost.remains_expected<10\nactions.variables+=/variable,name=breath_pooling_time,op=setif,value=((variable.true_breath_cooldown+1)%gcd.max)%((rune+1)*(runic_power+20))*100,value_else=2,condition=runic_power.deficit>10&variable.true_breath_cooldown<10\nactions.variables+=/variable,name=pooling_runes,value=rune<variable.oblit_rune_pooling&talent.obliteration&(!talent.breath_of_sindragosa||variable.true_breath_cooldown)&cooldown.pillar_of_frost.remains_expected<variable.oblit_pooling_time\nactions.variables+=/variable,name=pooling_runic_power,value=talent.breath_of_sindragosa&variable.true_breath_cooldown<variable.breath_pooling_time||talent.obliteration&runic_power<35&cooldown.pillar_of_frost.remains_expected<variable.oblit_pooling_time\nactions.variables+=/variable,name=ga_priority,value=(!talent.shattered_frost&talent.shattering_blade&active_enemies>=4)||(!talent.shattered_frost&!talent.shattering_blade&active_enemies>=2)\nactions.variables+=/variable,name=breath_dying,value=runic_power<variable.breath_rp_cost*2&rune.time_to_2>runic_power%variable.breath_rp_cost",
},
["Arms"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240903,
["author"] = "SimulationCraft",
["desc"] = "2024-09-03: SimC update\n\n2024-08-25: Updates based on Icy-Veins\n\n2024-08-15: Sim update\n\n2024-07-23: The War Within",
["lists"] = {
["slayer_st"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.marked_for_execution.stack = 3",
["action"] = "execute",
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.opportunist.up",
["action"] = "overpower",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max * 5",
["action"] = "rend",
},
{
["enabled"] = true,
["criteria"] = "buff.martial_prowess.down",
["action"] = "cleave",
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["colossus_st"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max",
["action"] = "ravager",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15",
["action"] = "avatar",
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "demolish",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "charges = 2",
["action"] = "overpower",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max * 5",
["action"] = "rend",
},
{
["action"] = "slam",
["enabled"] = true,
},
},
["colossus_aoe"] = {
{
["enabled"] = true,
["criteria"] = "buff.collateral_damage.up & buff.merciless_bonegrinder.up",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "! dot.rend.remains",
["action"] = "thunder_clap",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "skullsplitter",
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.unhinged.enabled || talent.merciless_bonegrinder.enabled",
["action"] = "bladestorm",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "cleave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "demolish",
},
{
["enabled"] = true,
["criteria"] = "talent.unhinged.enabled",
["action"] = "bladestorm",
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "execute",
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
},
["slayer_aoe"] = {
{
["enabled"] = true,
["criteria"] = "! dot.rend.remains",
["action"] = "thunder_clap",
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "cleave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.up & buff.imminent_demise.stack < 3",
["action"] = "execute",
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up & debuff.executioners_precision.stack < 2",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up & debuff.executioners_precision.stack = 2",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "debuff.marked_for_execution.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.dreadnaught.enabled",
["action"] = "overpower",
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["colossus_execute"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies = 2",
["action"] = "sweeping_strikes",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & ! talent.bloodletting.enabled",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max",
["action"] = "ravager",
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "demolish",
},
{
["enabled"] = true,
["criteria"] = "debuff.executioners_precision.stack = 2 & ! dot.ravager.remains & ( buff.lethal_blows.stack = 2 || ! set_bonus.tww1_4pc )",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "rage >= 40",
["action"] = "execute",
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
},
["slayer_execute"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies = 2",
["action"] = "sweeping_strikes",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & ! talent.bloodletting.enabled",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.juggernaut.remains <= gcd.max",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "debuff.executioners_precision.stack = 2 & debuff.colossus_smash.remains > 4 || debuff.executioners_precision.stack = 2 & cooldown.colossus_smash.remains > 15 || ! talent.executioners_precision.enabled",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "debuff.executioners_precision.stack = 2 & ( buff.lethal_blows.stack = 2 || ! set_bonus.tww1_4pc )",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "rage < 85",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "buff.opportunist.up & rage < 80 & buff.martial_prowess.stack < 2",
["action"] = "overpower",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.executioners_precision.enabled",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "time <= 0.5 || movement.distance > 8",
["action"] = "charge",
},
{
["enabled"] = true,
["criteria"] = "gcd.remains = 0 & debuff.colossus_smash.remains > 8 || boss & fight_remains < 25",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.react",
["action"] = "pummel",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "cooldown.mortal_strike.remains > 1.5 & rage < 50",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.down & cooldown.mortal_strike.remains",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.down & cooldown.mortal_strike.remains",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 180 & buff.avatar.up || boss & target.time_to_die < 180 & variable.execute_phase & buff.avatar.up || boss & fight_remains < 20",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.demolish.enabled & active_enemies > 2",
["list_name"] = "colossus_aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["cycle_targets"] = 1,
["strict"] = 1,
["criteria"] = "talent.demolish.enabled & variable.execute_phase",
["list_name"] = "colossus_execute",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["srtict"] = "1",
["criteria"] = "talent.demolish.enabled & active_enemies = 2 & ! variable.execute_phase",
["list_name"] = "colossus_sweep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.demolish.enabled",
["list_name"] = "colossus_st",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled & active_enemies > 2",
["list_name"] = "slayer_aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["cycle_targets"] = 1,
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled & variable.execute_phase",
["list_name"] = "slayer_execute",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled & active_enemies = 2 & ! variable.execute_phase",
["list_name"] = "slayer_sweep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled",
["list_name"] = "slayer_st",
},
},
["precombat"] = {
{
["action"] = "battle_shout",
["enabled"] = true,
},
{
["toggle"] = "on",
["action"] = "battle_stance",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.treacherous_transmitter",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.treacherous_transmitter",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by avatar. If it's value has no remainder return 1, else return 0.5.",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["action"] = "variable",
["value_else"] = "0.5",
["criteria"] = "trinket.t1.has_use_buff & ( trinket.t1.cooldown.duration % cooldown.avatar.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration % cooldown.avatar.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_stat.any_dps & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_stat.any_dps & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1 & ( raid_event.adds.in > 15 || ! raid_event.adds.exists )",
["var_name"] = "st_planning",
["description"] = "Variables",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 5 )",
["var_name"] = "adds_remain",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.massacre.enabled & target.health.pct < 35 ) || target.health.pct < 20",
["var_name"] = "execute_phase",
},
},
["slayer_sweep"] = {
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max",
["action"] = "rend",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "debuff.marked_for_execution.stack = 3",
["action"] = "execute",
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.dreadnaught.enabled || buff.opportunist.up",
["action"] = "overpower",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "cleave",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 8 & buff.sweeping_strikes.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 5",
["action"] = "rend",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "whirlwind",
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["use_off_gcd"] = 1,
["description"] = "Trinkets",
["criteria"] = "( variable.adds_remain || variable.st_planning ) & cooldown.avatar.remains < 3",
["action"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.",
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! buff.avatar.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains & boss",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! buff.avatar.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains & boss",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
},
["colossus_sweep"] = {
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & buff.sweeping_strikes.up",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.ready",
["action"] = "ravager",
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "action.overpower.charges = 2 & talent.dreadnaught.enabled || buff.sweeping_strikes.up",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up & debuff.colossus_smash.up",
["action"] = "demolish",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.down",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.avatar.up || debuff.colossus_smash.up & cooldown.avatar.remains >= 35",
["action"] = "demolish",
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness_warlords_torment.up || buff.sweeping_strikes.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "charges = 2 || buff.sweeping_strikes.up",
["action"] = "overpower",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 8 & buff.sweeping_strikes.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 5",
["action"] = "rend",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "whirlwind",
},
{
["action"] = "slam",
["enabled"] = true,
},
},
},
["version"] = 20240903,
["warnings"] = "The import for 'colossus_aoe' required some automated changes.\nLine 9: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\nLine 9: Converted 'talent.merciless_bonegrinder' to 'talent.merciless_bonegrinder.enabled' (1x).\nLine 14: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\n\nThe import for 'slayer_aoe' required some automated changes.\nLine 17: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\n\nThe import for 'colossus_execute' required some automated changes.\nLine 2: Converted 'talent.bloodletting' to 'talent.bloodletting.enabled' (1x).\n\nThe import for 'slayer_execute' required some automated changes.\nLine 2: Converted 'talent.bloodletting' to 'talent.bloodletting.enabled' (1x).\nLine 9: Converted 'talent.executioners_precision' to 'talent.executioners_precision.enabled' (1x).\nLine 15: Converted 'talent.executioners_precision' to 'talent.executioners_precision.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 13: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 14: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 15: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 16: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 17: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 18: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 19: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 20: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 4: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted operations in 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%%cooldown.avatar.duration=0)' to 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%cooldown.avatar.duration=0)'.\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted operations in 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%%cooldown.avatar.duration=0)' to 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%cooldown.avatar.duration=0)'.\nLine 7: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 8: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 9: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 10: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 11: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\n\nThe import for 'slayer_sweep' required some automated changes.\nLine 11: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\nLine 13: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\nLine 18: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\n\nThe import for 'colossus_sweep' required some automated changes.\nLine 9: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\nLine 20: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\nLine 21: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\n\nImported 12 action lists.\n",
["spec"] = 71,
["profile"] = "actions.precombat+=/battle_shout\nactions.precombat+=/battle_stance,toggle=on\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.treacherous_transmitter\n# Evaluates a trinkets cooldown, divided by avatar. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(trinket.1.cooldown.duration%%cooldown.avatar.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(trinket.2.cooldown.duration%%cooldown.avatar.duration=0)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_stat.any_dps&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_stat.any_dps&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\n\nactions+=/charge,if=time<=0.5||movement.distance>8\nactions+=/potion,if=gcd.remains=0&debuff.colossus_smash.remains>8||boss&fight_remains<25\nactions+=/pummel,if=target.debuff.casting.react\nactions+=/call_action_list,name=variables\nactions+=/call_action_list,name=trinkets\nactions+=/arcane_torrent,if=cooldown.mortal_strike.remains>1.5&rage<50\nactions+=/lights_judgment,if=debuff.colossus_smash.down&cooldown.mortal_strike.remains\nactions+=/bag_of_tricks,if=debuff.colossus_smash.down&cooldown.mortal_strike.remains\nactions+=/berserking,if=fight_remains>180&buff.avatar.up||boss&target.time_to_die<180&variable.execute_phase&buff.avatar.up||boss&fight_remains<20\nactions+=/blood_fury,if=debuff.colossus_smash.up\nactions+=/fireblood,if=debuff.colossus_smash.up\nactions+=/ancestral_call,if=debuff.colossus_smash.up\n## actions+=/invoke_external_buff,name=power_infusion,if=debuff.colossus_smash.up&fight_remains>=135||variable.execute_phase&buff.avatar.up||fight_remains<=25\nactions+=/run_action_list,name=colossus_aoe,strict=1,if=talent.demolish&active_enemies>2\nactions+=/run_action_list,name=colossus_execute,cycle_targets=1,strict=1,if=talent.demolish&variable.execute_phase\nactions+=/run_action_list,name=colossus_sweep,srtict=1,if=talent.demolish&active_enemies=2&!variable.execute_phase\nactions+=/run_action_list,name=colossus_st,strict=1,if=talent.demolish\nactions+=/run_action_list,name=slayer_aoe,strict=1,if=!talent.demolish&active_enemies>2\nactions+=/run_action_list,name=slayer_execute,cycle_targets=1,strict=1,if=!talent.demolish&variable.execute_phase\nactions+=/run_action_list,name=slayer_sweep,strict=1,if=!talent.demolish&active_enemies=2&!variable.execute_phase\nactions+=/run_action_list,name=slayer_st,strict=1,if=!talent.demolish\n\nactions.colossus_st+=/rend,if=dot.rend.remains<=gcd\nactions.colossus_st+=/thunderous_roar\nactions.colossus_st+=/champions_spear\nactions.colossus_st+=/ravager,if=cooldown.colossus_smash.remains<=gcd\nactions.colossus_st+=/avatar,if=raid_event.adds.in>15\nactions.colossus_st+=/colossus_smash\nactions.colossus_st+=/warbreaker\nactions.colossus_st+=/mortal_strike\nactions.colossus_st+=/demolish\nactions.colossus_st+=/skullsplitter\nactions.colossus_st+=/overpower,if=charges=2\nactions.colossus_st+=/execute\nactions.colossus_st+=/overpower\nactions.colossus_st+=/rend,if=dot.rend.remains<=gcd*5\nactions.colossus_st+=/slam\n\nactions.colossus_execute+=/sweeping_strikes,if=active_enemies=2\nactions.colossus_execute+=/rend,if=dot.rend.remains<=gcd&!talent.bloodletting\nactions.colossus_execute+=/thunderous_roar\nactions.colossus_execute+=/champions_spear\nactions.colossus_execute+=/ravager,if=cooldown.colossus_smash.remains<=gcd\nactions.colossus_execute+=/avatar\nactions.colossus_execute+=/colossus_smash\nactions.colossus_execute+=/warbreaker\nactions.colossus_execute+=/demolish,if=debuff.colossus_smash.up\nactions.colossus_execute+=/mortal_strike,if=debuff.executioners_precision.stack=2&!dot.ravager.remains&(buff.lethal_blows.stack=2||!set_bonus.tww1_4pc)\nactions.colossus_execute+=/execute,if=rage>=40\nactions.colossus_execute+=/skullsplitter\nactions.colossus_execute+=/overpower\nactions.colossus_execute+=/bladestorm\nactions.colossus_execute+=/execute\nactions.colossus_execute+=/mortal_strike\n\nactions.colossus_sweep+=/sweeping_strikes\nactions.colossus_sweep+=/rend,if=dot.rend.remains<=gcd&buff.sweeping_strikes.up\nactions.colossus_sweep+=/thunderous_roar\nactions.colossus_sweep+=/champions_spear\nactions.colossus_sweep+=/ravager,if=cooldown.colossus_smash.ready\nactions.colossus_sweep+=/avatar\nactions.colossus_sweep+=/colossus_smash\nactions.colossus_sweep+=/warbreaker\nactions.colossus_sweep+=/overpower,if=action.overpower.charges=2&talent.dreadnaught||buff.sweeping_strikes.up\nactions.colossus_sweep+=/mortal_strike,if=buff.sweeping_strikes.up\nactions.colossus_sweep+=/skullsplitter,if=buff.sweeping_strikes.up\nactions.colossus_sweep+=/demolish,if=buff.sweeping_strikes.up&debuff.colossus_smash.up\nactions.colossus_sweep+=/mortal_strike,if=buff.sweeping_strikes.down\nactions.colossus_sweep+=/demolish,if=buff.avatar.up||debuff.colossus_smash.up&cooldown.avatar.remains>=35\nactions.colossus_sweep+=/execute,if=buff.recklessness_warlords_torment.up||buff.sweeping_strikes.up\nactions.colossus_sweep+=/overpower,if=charges=2||buff.sweeping_strikes.up\nactions.colossus_sweep+=/execute\nactions.colossus_sweep+=/thunder_clap,if=dot.rend.remains<=8&buff.sweeping_strikes.down\nactions.colossus_sweep+=/rend,if=dot.rend.remains<=5\nactions.colossus_sweep+=/cleave,if=talent.fervor_of_battle\nactions.colossus_sweep+=/whirlwind,if=talent.fervor_of_battle\nactions.colossus_sweep+=/slam\n\nactions.colossus_aoe+=/cleave,if=buff.collateral_damage.up&buff.merciless_bonegrinder.up\nactions.colossus_aoe+=/thunder_clap,if=!dot.rend.remains\nactions.colossus_aoe+=/thunderous_roar\nactions.colossus_aoe+=/avatar\nactions.colossus_aoe+=/ravager\nactions.colossus_aoe+=/sweeping_strikes\nactions.colossus_aoe+=/skullsplitter,if=buff.sweeping_strikes.up\nactions.colossus_aoe+=/warbreaker\nactions.colossus_aoe+=/bladestorm,if=talent.unhinged||talent.merciless_bonegrinder\nactions.colossus_aoe+=/champions_spear\nactions.colossus_aoe+=/colossus_smash\nactions.colossus_aoe+=/cleave\nactions.colossus_aoe+=/demolish,if=buff.sweeping_strikes.up\nactions.colossus_aoe+=/bladestorm,if=talent.unhinged\nactions.colossus_aoe+=/overpower\nactions.colossus_aoe+=/mortal_strike,if=buff.sweeping_strikes.up\nactions.colossus_aoe+=/overpower,if=buff.sweeping_strikes.up\nactions.colossus_aoe+=/execute,if=buff.sweeping_strikes.up\nactions.colossus_aoe+=/thunder_clap\nactions.colossus_aoe+=/mortal_strike\nactions.colossus_aoe+=/execute\nactions.colossus_aoe+=/bladestorm\nactions.colossus_aoe+=/whirlwind\n\nactions.slayer_st+=/rend,if=dot.rend.remains<=gcd\nactions.slayer_st+=/thunderous_roar\nactions.slayer_st+=/champions_spear\nactions.slayer_st+=/avatar\nactions.slayer_st+=/colossus_smash\nactions.slayer_st+=/warbreaker\nactions.slayer_st+=/execute,if=debuff.marked_for_execution.stack=3\nactions.slayer_st+=/bladestorm\nactions.slayer_st+=/overpower,if=buff.opportunist.up\nactions.slayer_st+=/mortal_strike\nactions.slayer_st+=/skullsplitter\nactions.slayer_st+=/execute\nactions.slayer_st+=/overpower\nactions.slayer_st+=/rend,if=dot.rend.remains<=gcd*5\nactions.slayer_st+=/cleave,if=buff.martial_prowess.down\nactions.slayer_st+=/slam\nactions.slayer_st+=/storm_bolt,if=buff.bladestorm.up\n\nactions.slayer_execute+=/sweeping_strikes,if=active_enemies=2\nactions.slayer_execute+=/rend,if=dot.rend.remains<=gcd&!talent.bloodletting\nactions.slayer_execute+=/thunderous_roar\nactions.slayer_execute+=/champions_spear\nactions.slayer_execute+=/avatar\nactions.slayer_execute+=/warbreaker\nactions.slayer_execute+=/colossus_smash\nactions.slayer_execute+=/execute,if=buff.juggernaut.remains<=gcd\nactions.slayer_execute+=/bladestorm,if=debuff.executioners_precision.stack=2&debuff.colossus_smash.remains>4||debuff.executioners_precision.stack=2&cooldown.colossus_smash.remains>15||!talent.executioners_precision\nactions.slayer_execute+=/mortal_strike,if=debuff.executioners_precision.stack=2&(buff.lethal_blows.stack=2||!set_bonus.tww1_4pc)\nactions.slayer_execute+=/skullsplitter,if=rage<85\nactions.slayer_execute+=/overpower,if=buff.opportunist.up&rage<80&buff.martial_prowess.stack<2\nactions.slayer_execute+=/execute\nactions.slayer_execute+=/overpower\nactions.slayer_execute+=/mortal_strike,if=!talent.executioners_precision\nactions.slayer_execute+=/storm_bolt,if=buff.bladestorm.up\n\nactions.slayer_sweep+=/thunderous_roar\nactions.slayer_sweep+=/sweeping_strikes\nactions.slayer_sweep+=/rend,if=dot.rend.remains<=gcd\nactions.slayer_sweep+=/champions_spear\nactions.slayer_sweep+=/avatar\nactions.slayer_sweep+=/colossus_smash\nactions.slayer_sweep+=/warbreaker\nactions.slayer_sweep+=/skullsplitter,if=buff.sweeping_strikes.up\nactions.slayer_sweep+=/execute,if=debuff.marked_for_execution.stack=3\nactions.slayer_sweep+=/bladestorm\nactions.slayer_sweep+=/overpower,if=talent.dreadnaught||buff.opportunist.up\nactions.slayer_sweep+=/mortal_strike\nactions.slayer_sweep+=/cleave,if=talent.fervor_of_battle\nactions.slayer_sweep+=/execute\nactions.slayer_sweep+=/overpower\nactions.slayer_sweep+=/thunder_clap,if=dot.rend.remains<=8&buff.sweeping_strikes.down\nactions.slayer_sweep+=/rend,if=dot.rend.remains<=5\nactions.slayer_sweep+=/whirlwind,if=talent.fervor_of_battle\nactions.slayer_sweep+=/slam\nactions.slayer_sweep+=/storm_bolt,if=buff.bladestorm.up\n\nactions.slayer_aoe+=/thunder_clap,if=!dot.rend.remains\nactions.slayer_aoe+=/sweeping_strikes\nactions.slayer_aoe+=/thunderous_roar\nactions.slayer_aoe+=/avatar\nactions.slayer_aoe+=/champions_spear\nactions.slayer_aoe+=/warbreaker\nactions.slayer_aoe+=/colossus_smash\nactions.slayer_aoe+=/cleave\nactions.slayer_aoe+=/overpower,if=buff.sweeping_strikes.up\nactions.slayer_aoe+=/execute,if=buff.sudden_death.up&buff.imminent_demise.stack<3\nactions.slayer_aoe+=/bladestorm\nactions.slayer_aoe+=/skullsplitter,if=buff.sweeping_strikes.up\nactions.slayer_aoe+=/execute,if=buff.sweeping_strikes.up&debuff.executioners_precision.stack<2\nactions.slayer_aoe+=/mortal_strike,if=buff.sweeping_strikes.up&debuff.executioners_precision.stack=2\nactions.slayer_aoe+=/execute,if=debuff.marked_for_execution.up\nactions.slayer_aoe+=/mortal_strike,if=buff.sweeping_strikes.up\nactions.slayer_aoe+=/overpower,if=talent.dreadnaught\nactions.slayer_aoe+=/thunder_clap\nactions.slayer_aoe+=/overpower\nactions.slayer_aoe+=/execute\nactions.slayer_aoe+=/mortal_strike\nactions.slayer_aoe+=/whirlwind\nactions.slayer_aoe+=/skullsplitter\nactions.slayer_aoe+=/slam\nactions.slayer_aoe+=/storm_bolt,if=buff.bladestorm.up\n\n# Trinkets\n## actions.trinkets+=/do_treacherous_transmitter_task,use_off_gcd=1\nactions.trinkets+=/use_item,use_off_gcd=1,name=treacherous_transmitter,if=(variable.adds_remain||variable.st_planning)&cooldown.avatar.remains<3\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!buff.avatar.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&buff.avatar.up&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains&boss\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!buff.avatar.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&buff.avatar.up&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains&boss\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\n\n# Variables\nactions.variables+=/variable,name=st_planning,value=active_enemies=1&(raid_event.adds.in>15||!raid_event.adds.exists)\nactions.variables+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>5)\nactions.variables+=/variable,name=execute_phase,value=(talent.massacre.enabled&target.health.pct<35)||target.health.pct<20",
},
["Outlaw"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240825,
["author"] = "SimC",
["desc"] = "2024-08-25: SimC rtb_reroll tweak\n\n2024-08-22: Respect LD Opener setting\n\n2024-08-15: Major revisions from SimC\n\n2024-08-09: Update finisher conditions from SimC\n\n2024-08-06: Respect Vanish CD when considering BtE with Crackshot\n\n2024-07-28: The War Within",
["lists"] = {
["finish"] = {
{
["enabled"] = true,
["action"] = "between_the_eyes",
["description"] = "Finishers  Use Between the Eyes to keep the crit buff up, but on cooldown if Improved/Greenskins, and avoid overriding Greenskins",
["criteria"] = "! talent.crackshot.enabled & ( buff.between_the_eyes.remains < 4 || talent.improved_between_the_eyes.enabled || talent.greenskins_wickers.enabled ) & ! buff.greenskins_wickers.up",
},
{
["enabled"] = true,
["action"] = "between_the_eyes",
["description"] = "Crackshot builds use Between the Eyes outside of Stealth if we are unlikely to enter a Stealth window before the next BtE cast or if we are unlikely to lose Adrenaline Rush uptime by hitting BtE before the next cast of Vanish",
["criteria"] = "talent.crackshot.enabled & ( cooldown.vanish.true_remains > 45 || talent.underhanded_upper_hand.enabled & talent.without_a_trace.enabled & ( buff.adrenaline_rush.remains > 10 || buff.adrenaline_rush.down & cooldown.adrenaline_rush.true_remains > 45 ) ) & ( raid_event.adds.remains > 8 || raid_event.adds.in < raid_event.adds.remains || ! raid_event.adds.up )",
},
{
["enabled"] = true,
["criteria"] = "buff.slice_and_dice.remains < fight_remains & refreshable",
["action"] = "slice_and_dice",
},
{
["action"] = "cold_blood",
["enabled"] = true,
},
{
["action"] = "dispatch",
["enabled"] = true,
},
{
["action"] = "dispatch",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Restealth if possible (no vulnerable enemies in combat)",
["action"] = "stealth",
},
{
["enabled"] = true,
["description"] = "Interrupt on cooldown to allow simming interactions with that",
["action"] = "kick",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "rtb_buffs_will_lose = ( rtb_buffs_will_lose_buff.buried_treasure + rtb_buffs_will_lose_buff.grand_melee & spell_targets.blade_flurry < 2 & raid_event.adds.in > 12 & raid_event.adds.count < 2 )",
["var_name"] = "rtb_reroll",
["description"] = "Variables that define the reroll rules for Roll the Bones  Default rule: reroll if the only buff that will be rolled away is Buried Treasure, or Grand Melee in single target without upcoming adds",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "rtb_reroll",
["value"] = "rtb_buffs_will_lose = buff.loaded_dice.up",
["description"] = "If Loaded Dice is talented, then keep any 1 buff from Roll the Bones but roll it into 2 buffs when Loaded Dice is active",
["criteria"] = "talent.loaded_dice.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.rtb_reroll & rtb_buffs_longer = 0 || rtb_buffs_normal = 0 & rtb_buffs_longer >= 1 & rtb_buffs < 6 & rtb_buffs_max_remains <= 39 & ! stealthed.all & buff.loaded_dice.up",
["var_name"] = "rtb_reroll",
["description"] = "If all active Roll the Bones buffs are ahead of its container buff and have under 40s remaining, then reroll again with Loaded Dice active in an attempt to get even more buffs",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "rtb_reroll",
["description"] = "Avoid rerolls when we will not have time remaining on the fight or add wave to recoup the opportunity cost of the global",
["criteria"] = "! ( raid_event.adds.remains > 12 || raid_event.adds.up & ( raid_event.adds.in - raid_event.adds.remains ) < 6 || target.time_to_die > 12 ) || fight_remains < 12",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.hidden_opportunity.enabled || combo_points.deficit >= 2 + talent.improved_ambush.enabled + buff.broadside.up ) & energy >= 50",
["var_name"] = "ambush_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "effective_combo_points >= cp_max_spend - 1 - ( stealthed.all & talent.crackshot.enabled || ( talent.hand_of_fate.enabled || talent.flawless_form.enabled ) & talent.hidden_opportunity.enabled & ( buff.audacity.up || buff.opportunity.up ) )",
["var_name"] = "finish_condition",
["description"] = "Use finishers if at -1 from max combo points, or -2 in Stealth with Crackshot. With the hero trees, Hidden Opportunity builds also finish at -2 if Audacity or Opportunity is active",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.blade_flurry < 2 & raid_event.adds.in > 20 || buff.blade_flurry.remains > gcd.max",
["var_name"] = "blade_flurry_sync",
["description"] = "With multiple targets, this variable is checked to decide whether some CDs should be synced with Blade Flurry",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "High priority stealth list, will fall through if no conditions are met",
["strict"] = 1,
["criteria"] = "stealthed.all",
["list_name"] = "stealth",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "variable.finish_condition",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "build",
},
{
["enabled"] = true,
["criteria"] = "energy.base_deficit >= 15 + energy.regen",
["action"] = "arcane_torrent",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["precombat"] = {
{
["name"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["action"] = "stealth",
["precombat_seconds"] = "2",
},
{
["enabled"] = true,
["action"] = "adrenaline_rush",
["precombat_seconds"] = "2",
["description"] = "Builds with Keep it Rolling prepull Adrenaline Rush before Roll the Bones to consume Loaded Dice immediately instead of on the next pandemic roll",
["criteria"] = "settings.ld_opener & talent.improved_adrenaline_rush.enabled & buff.adrenaline_rush.down & talent.keep_it_rolling.enabled & talent.loaded_dice.enabled",
},
{
["enabled"] = true,
["criteria"] = "buff.roll_the_bones.down",
["action"] = "roll_the_bones",
["precombat_seconds"] = "2",
},
{
["enabled"] = true,
["criteria"] = "! settings.use_ld_opener & talent.improved_adrenaline_rush.enabled & buff.adrenaline_rush.down",
["action"] = "adrenaline_rush",
["precombat_seconds"] = "1",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "slice_and_dice",
["precombat_seconds"] = "1",
},
},
["stealth"] = {
{
["enabled"] = true,
["action"] = "cold_blood",
["description"] = "Stealth",
["criteria"] = "variable.finish_condition",
},
{
["enabled"] = true,
["action"] = "pool_resource",
["description"] = "Ensure Crackshot BtE is not skipped because of low energy",
["for_next"] = 1,
},
{
["enabled"] = true,
["action"] = "between_the_eyes",
["description"] = "High priority Between the Eyes for Crackshot, except not directly out of Shadowmeld",
["criteria"] = "variable.finish_condition & talent.crackshot.enabled & ( ! buff.shadowmeld.up || stealthed.rogue )",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition",
["action"] = "dispatch",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "2 Fan the Hammer Crackshot builds can consume Opportunity in stealth with max stacks, Broadside, and low CPs, or with Greenskins active",
["criteria"] = "talent.crackshot.enabled & talent.fan_the_hammer.rank >= 2 & buff.opportunity.stack >= 6 & ( buff.broadside.up & combo_points <= 1 || buff.greenskins_wickers.up )",
},
{
["enabled"] = true,
["criteria"] = "talent.hidden_opportunity.enabled",
["action"] = "ambush",
},
},
["cds"] = {
{
["enabled"] = true,
["action"] = "adrenaline_rush",
["description"] = "Cooldowns  Use Adrenaline Rush if it is not active and the finisher condition is not met, but Crackshot builds can refresh it with 2cp or lower inside stealth",
["criteria"] = "! buff.adrenaline_rush.up & ( ! variable.finish_condition || ! talent.improved_adrenaline_rush.enabled ) || stealthed.all & talent.crackshot.enabled & talent.improved_adrenaline_rush.enabled & combo_points <= 2",
},
{
["enabled"] = true,
["action"] = "blade_flurry",
["description"] = "Maintain Blade Flurry on 2+ targets",
["criteria"] = "spell_targets >= 2 & buff.blade_flurry.remains < gcd.max",
},
{
["enabled"] = true,
["action"] = "blade_flurry",
["description"] = "With Deft Maneuvers, use Blade Flurry on cooldown at 5+ targets, or at 3-4 targets if missing combo points equal to the amount given",
["criteria"] = "talent.deft_maneuvers.enabled & ! variable.finish_condition & ( spell_targets >= 3 & combo_points.deficit = spell_targets + buff.broadside.up || spell_targets >= 5 )",
},
{
["enabled"] = true,
["action"] = "roll_the_bones",
["description"] = "Use Roll the Bones if reroll conditions are met, or with no buffs",
["criteria"] = "variable.rtb_reroll || rtb_buffs = 0",
},
{
["enabled"] = true,
["action"] = "keep_it_rolling",
["description"] = "Use Keep it Rolling with any 4 buffs. If Broadside is not active, then wait until just before the lowest buff expires in an attempt to obtain it from Count the Odds.",
["criteria"] = "rtb_buffs >= 4 & ( rtb_buffs_min_remains < 2 || buff.broadside.up )",
},
{
["enabled"] = true,
["criteria"] = "combo_points < cp_max_spend",
["action"] = "ghostly_strike",
},
{
["enabled"] = true,
["name"] = "manic_grieftorch",
["action"] = "manic_grieftorch",
["criteria"] = "! stealthed.all & buff.between_the_eyes.up || fight_remains <= 5",
["description"] = "Trinkets that should not be used during stealth and have higher priority than entering stealth",
},
{
["enabled"] = true,
["action"] = "beacon_to_the_beyond",
["criteria"] = "! stealthed.all & buff.between_the_eyes.up || fight_remains <= 5",
["name"] = "beacon_to_the_beyond",
},
{
["enabled"] = false,
["criteria"] = "! stealthed.all || fight_remains <= 22",
["name"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["action"] = "killing_spree",
["description"] = "Killing Spree has higher priority than stealth cooldowns",
["criteria"] = "variable.finish_condition & ! stealthed.all",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Crackshot builds use stealth cooldowns if Between the Eyes is ready",
["criteria"] = "! stealthed.all & ( ! talent.crackshot.enabled || cooldown.between_the_eyes.ready )",
["list_name"] = "stealth_cds",
},
{
["enabled"] = true,
["criteria"] = "! buff.thistle_tea.up & ( energy.base_deficit >= 150 || fight_remains < charges * 6 )",
["action"] = "thistle_tea",
},
{
["enabled"] = true,
["action"] = "blade_rush",
["description"] = "Use Blade Rush at minimal energy outside of stealth",
["criteria"] = "energy.base_time_to_max > 4 & ! stealthed.all",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.react || fight_remains < 30 || buff.adrenaline_rush.up",
["action"] = "potion",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "elementium_pocket_anvil",
["use_off_gcd"] = 1,
["description"] = "Default conditions for usable items.",
["criteria"] = "gcd.remains <= action.sinister_strike.gcd / 2",
["name"] = "elementium_pocket_anvil",
},
{
["enabled"] = true,
["action"] = "dragonfire_bomb_dispenser",
["use_off_gcd"] = 1,
["description"] = "Use Bomb Dispenser on cooldown, but hold if 2nd trinket is nearly off cooldown, unless at max charges or sim duration ends soon",
["criteria"] = "gcd.remains <= action.sinister_strike.gcd / 2 & ( ( ! trinket.t1.is.dragonfire_bomb_dispenser & trinket.t1.cooldown.remains > 10 || trinket.t2.cooldown.remains > 10 ) || cooldown.dragonfire_bomb_dispenser.charges > 2 || boss & fight_remains < 20 || ! trinket.t2.has_cooldown || ! trinket.t1.has_cooldown )",
["name"] = "dragonfire_bomb_dispenser",
},
{
["enabled"] = true,
["action"] = "stormeaters_boon",
["criteria"] = "spell_targets.blade_flurry > desired_targets || raid_event.adds.in > 60 || raid_event.adds.count < 2 || boss & fight_remains < 10",
["name"] = "stormeaters_boon",
},
{
["enabled"] = true,
["action"] = "enduring_dreadplate",
["criteria"] = "spell_targets.blade_flurry > desired_targets || raid_event.adds.in > 60 || raid_event.adds.count < 2 || boss & fight_remains < 16",
["name"] = "enduring_dreadplate",
},
{
["enabled"] = true,
["action"] = "windscar_whetstone",
["criteria"] = "spell_targets.blade_flurry > desired_targets || raid_event.adds.in > 60 || raid_event.adds.count < 2 || boss & fight_remains < 7",
["name"] = "windscar_whetstone",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "buff.between_the_eyes.up || trinket.t1.has_stat.any_dps || boss & fight_remains <= 20",
["slots"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "buff.between_the_eyes.up || trinket.t2.has_stat.any_dps || boss & fight_remains <= 20",
["slots"] = "trinket2",
},
},
["stealth_cds"] = {
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Stealth Cooldowns  Builds with Underhanded Upper Hand and Subterfuge (and Without a Trace for Crackshot) must use Vanish while Adrenaline Rush is active",
["criteria"] = "talent.underhanded_upper_hand.enabled & talent.subterfuge.enabled & ( buff.adrenaline_rush.up || ! talent.without_a_trace.enabled & talent.crackshot.enabled ) & ( variable.finish_condition || ! talent.crackshot.enabled & ( variable.ambush_condition || ! talent.hidden_opportunity.enabled ) )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Builds without Underhanded Upper Hand but with Crackshot must still use Vanish into Between the Eyes on cooldown",
["criteria"] = "! talent.underhanded_upper_hand.enabled & talent.crackshot.enabled & variable.finish_condition",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Builds without Underhanded Upper Hand and Crackshot but still Hidden Opportunity use Vanish into Ambush when Audacity is not active and under max Opportunity stacks",
["criteria"] = "! talent.underhanded_upper_hand.enabled & ! talent.crackshot.enabled & talent.hidden_opportunity.enabled & ! buff.audacity.up & buff.opportunity.stack < buff.opportunity.max_stack & variable.ambush_condition",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Builds without Underhanded Upper Hand, Crackshot, and Hidden Opportunity but with Fatebound use Vanish at five stacks of either Fatebound coin in order to proc the Lucky Coin if it's not already active, and otherwise continue to Vanish into a Dispatch to proc Double Jeopardy on a biased coin",
["criteria"] = "! talent.underhanded_upper_hand.enabled & ! talent.crackshot.enabled & ! talent.hidden_opportunity.enabled & talent.fateful_ending.enabled & ( ! buff.fatebound_lucky_coin.up & ( buff.fatebound_coin_tails.stack >= 5 || buff.fatebound_coin_heads.stack >= 5 ) || buff.fatebound_lucky_coin.up & ! cooldown.between_the_eyes.ready )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Builds with none of the above can use Vanish to maintain Take 'em By Surprise",
["criteria"] = "! talent.underhanded_upper_hand.enabled & ! talent.crackshot.enabled & ! talent.hidden_opportunity.enabled & ! talent.fateful_ending.enabled & talent.take_em_by_surprise.enabled & ! buff.take_em_by_surprise.up",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition & ! cooldown.vanish.ready",
["action"] = "shadowmeld",
},
},
["build"] = {
{
["enabled"] = true,
["description"] = "Builders",
["action"] = "echoing_reprimand",
},
{
["enabled"] = true,
["action"] = "ambush",
["description"] = "High priority Ambush for Hidden Opportunity builds",
["criteria"] = "talent.hidden_opportunity.enabled & buff.audacity.up",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "With Audacity + Hidden Opportunity + Fan the Hammer, consume Opportunity to proc Audacity any time Ambush is not available",
["criteria"] = "talent.fan_the_hammer.enabled & talent.audacity.enabled & talent.hidden_opportunity.enabled & buff.opportunity.up & ! buff.audacity.up",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "With Fan the Hammer, consume Opportunity as a higher priority if at max stacks or if it will expire",
["criteria"] = "talent.fan_the_hammer.enabled & buff.opportunity.up & ( buff.opportunity.stack >= buff.opportunity.max_stack || buff.opportunity.remains < 2 )",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "With Fan the Hammer, consume Opportunity if it will not overcap CPs, or with 1 CP at minimum",
["criteria"] = "talent.fan_the_hammer.enabled & buff.opportunity.up & ( combo_points.deficit >= ( 1 + ( talent.quick_draw.enabled + buff.broadside.up ) * ( talent.fan_the_hammer.rank + 1 ) ) || combo_points <= talent.ruthlessness.enabled )",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "If not using Fan the Hammer, then consume Opportunity based on energy, when it will exactly cap CPs, or when using Quick Draw",
["criteria"] = "! talent.fan_the_hammer.enabled & buff.opportunity.up & ( energy.base_deficit > energy.regen * 1.5 || combo_points.deficit <= 1 + buff.broadside.up || talent.quick_draw.enabled || talent.audacity.enabled & ! buff.audacity.up )",
},
{
["enabled"] = true,
["action"] = "pool_resource",
["description"] = "Fallback pooling just so Sinister Strike is never casted if Ambush is available for Hidden Opportunity builds",
["for_next"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.hidden_opportunity.enabled",
["action"] = "ambush",
},
{
["action"] = "sinister_strike",
["enabled"] = true,
},
},
},
["version"] = 20240825,
["warnings"] = "The import for 'finish' required some automated changes.\nLine 1: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 1: Converted 'talent.improved_between_the_eyes' to 'talent.improved_between_the_eyes.enabled' (1x).\nLine 1: Converted 'talent.greenskins_wickers' to 'talent.greenskins_wickers.enabled' (1x).\nLine 2: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 2: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 2: Converted 'talent.without_a_trace' to 'talent.without_a_trace.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 3: Converted 'rtb_buffs.will_lose.buried_treasure' to 'rtb_buffs_will_lose_buff.buried_treasure' (1x).\nLine 3: Converted 'rtb_buffs.will_lose.grand_melee' to 'rtb_buffs_will_lose_buff.grand_melee' (1x).\nLine 4: Converted 'talent.loaded_dice' to 'talent.loaded_dice.enabled' (1x).\nLine 7: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 7: Converted 'talent.improved_ambush' to 'talent.improved_ambush.enabled' (1x).\nLine 8: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 8: Converted 'talent.hand_of_fate' to 'talent.hand_of_fate.enabled' (1x).\nLine 8: Converted 'talent.flawless_form' to 'talent.flawless_form.enabled' (1x).\nLine 8: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Unsupported use_item action [ imperfect_ascendancy_serum]; entry disabled.\nLine 3: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\nLine 3: Converted 'talent.keep_it_rolling' to 'talent.keep_it_rolling.enabled' (1x).\nLine 3: Converted 'talent.loaded_dice' to 'talent.loaded_dice.enabled' (1x).\nLine 5: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\n\nThe import for 'stealth' required some automated changes.\nLine 3: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 5: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 6: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\nLine 1: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 1: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\nLine 3: Converted 'talent.deft_maneuvers' to 'talent.deft_maneuvers.enabled' (1x).\nLine 9: Unsupported use_item action [ imperfect_ascendancy_serum]; entry disabled.\nLine 11: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 19: Converted operations in 'gcd.remains<=action.sinister_strike.gcd%2' to 'gcd.remains<=action.sinister_strike.gcd/2'.\nLine 20: Converted 'trinket.1.is.dragonfire_bomb_dispenser' to 'trinket.t1.is.dragonfire_bomb_dispenser' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 20: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 20: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 20: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 20: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 20: Converted operations in 'gcd.remains<=action.sinister_strike.gcd%2&((!trinket.t1.is.dragonfire_bomb_dispenser&trinket.t1.cooldown.remains>10||trinket.t2.cooldown.remains>10)||cooldown.dragonfire_bomb_dispenser.charges>2||boss&fight_remains<20||!trinket.t2.has_cooldown||!trinket.t1.has_cooldown)' to 'gcd.remains<=action.sinister_strike.gcd/2&((!trinket.t1.is.dragonfire_bomb_dispenser&trinket.t1.cooldown.remains>10||trinket.t2.cooldown.remains>10)||cooldown.dragonfire_bomb_dispenser.charges>2||boss&fight_remains<20||!trinket.t2.has_cooldown||!trinket.t1.has_cooldown)'.\nLine 24: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 25: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\n\nThe import for 'stealth_cds' required some automated changes.\nLine 1: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 1: Converted 'talent.subterfuge' to 'talent.subterfuge.enabled' (1x).\nLine 1: Converted 'talent.without_a_trace' to 'talent.without_a_trace.enabled' (1x).\nLine 1: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 1: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 1: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 2: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 2: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 3: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 3: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 3: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 4: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 4: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 4: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 4: Converted 'talent.fateful_ending' to 'talent.fateful_ending.enabled' (1x).\nLine 5: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 5: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 5: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 5: Converted 'talent.fateful_ending' to 'talent.fateful_ending.enabled' (1x).\nLine 5: Converted 'talent.take_em_by_surprise' to 'talent.take_em_by_surprise.enabled' (1x).\n\nThe import for 'build' required some automated changes.\nLine 2: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 3: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 3: Converted 'talent.audacity' to 'talent.audacity.enabled' (1x).\nLine 3: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 4: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 5: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 5: Converted 'talent.quick_draw' to 'talent.quick_draw.enabled' (1x).\nLine 5: Converted 'talent.ruthlessness' to 'talent.ruthlessness.enabled' (1x).\nLine 6: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 8: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\n\nImported 7 action lists.\n",
["profile"] = "actions.precombat+=/use_item,name=imperfect_ascendancy_serum\nactions.precombat+=/stealth,precombat_seconds=2\n# Builds with Keep it Rolling prepull Adrenaline Rush before Roll the Bones to consume Loaded Dice immediately instead of on the next pandemic roll\nactions.precombat+=/adrenaline_rush,precombat_seconds=2,if=settings.ld_opener&talent.improved_adrenaline_rush&buff.adrenaline_rush.down&talent.keep_it_rolling&talent.loaded_dice\nactions.precombat+=/roll_the_bones,precombat_seconds=2,if=buff.roll_the_bones.down\nactions.precombat+=/adrenaline_rush,precombat_seconds=1,if=!settings.use_ld_opener&talent.improved_adrenaline_rush&buff.adrenaline_rush.down\nactions.precombat+=/slice_and_dice,precombat_seconds=1,if=refreshable\n\n# Restealth if possible (no vulnerable enemies in combat)\nactions+=/stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick\n# Variables that define the reroll rules for Roll the Bones  Default rule: reroll if the only buff that will be rolled away is Buried Treasure, or Grand Melee in single target without upcoming adds\nactions+=/variable,name=rtb_reroll,value=rtb_buffs.will_lose=(rtb_buffs.will_lose.buried_treasure+rtb_buffs.will_lose.grand_melee&spell_targets.blade_flurry<2&raid_event.adds.in>12&raid_event.adds.count<2)\n# If Loaded Dice is talented, then keep any 1 buff from Roll the Bones but roll it into 2 buffs when Loaded Dice is active\nactions+=/variable,name=rtb_reroll,if=talent.loaded_dice,value=rtb_buffs.will_lose=buff.loaded_dice.up\n# If all active Roll the Bones buffs are ahead of its container buff and have under 40s remaining, then reroll again with Loaded Dice active in an attempt to get even more buffs\nactions+=/variable,name=rtb_reroll,value=variable.rtb_reroll&rtb_buffs.longer=0||rtb_buffs.normal=0&rtb_buffs.longer>=1&rtb_buffs<6&rtb_buffs.max_remains<=39&!stealthed.all&buff.loaded_dice.up\n# Avoid rerolls when we will not have time remaining on the fight or add wave to recoup the opportunity cost of the global\nactions+=/variable,name=rtb_reroll,op=reset,if=!(raid_event.adds.remains>12||raid_event.adds.up&(raid_event.adds.in-raid_event.adds.remains)<6||target.time_to_die>12)||fight_remains<12\nactions+=/variable,name=ambush_condition,value=(talent.hidden_opportunity||combo_points.deficit>=2+talent.improved_ambush+buff.broadside.up)&energy>=50\n# Use finishers if at -1 from max combo points, or -2 in Stealth with Crackshot. With the hero trees, Hidden Opportunity builds also finish at -2 if Audacity or Opportunity is active\nactions+=/variable,name=finish_condition,value=effective_combo_points>=cp_max_spend-1-(stealthed.all&talent.crackshot||(talent.hand_of_fate||talent.flawless_form)&talent.hidden_opportunity&(buff.audacity.up||buff.opportunity.up))\n# With multiple targets, this variable is checked to decide whether some CDs should be synced with Blade Flurry\nactions+=/variable,name=blade_flurry_sync,value=spell_targets.blade_flurry<2&raid_event.adds.in>20||buff.blade_flurry.remains>gcd\nactions+=/call_action_list,name=cds\n# High priority stealth list, will fall through if no conditions are met\nactions+=/call_action_list,name=stealth,strict=1,if=stealthed.all\nactions+=/run_action_list,name=finish,strict=1,if=variable.finish_condition\nactions+=/call_action_list,name=build\nactions+=/arcane_torrent,if=energy.base_deficit>=15+energy.regen\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n# Builders\nactions.build+=/echoing_reprimand\n# High priority Ambush for Hidden Opportunity builds\nactions.build+=/ambush,if=talent.hidden_opportunity&buff.audacity.up\n# With Audacity + Hidden Opportunity + Fan the Hammer, consume Opportunity to proc Audacity any time Ambush is not available\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&talent.audacity&talent.hidden_opportunity&buff.opportunity.up&!buff.audacity.up\n# With Fan the Hammer, consume Opportunity as a higher priority if at max stacks or if it will expire\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&buff.opportunity.up&(buff.opportunity.stack>=buff.opportunity.max_stack||buff.opportunity.remains<2)\n# With Fan the Hammer, consume Opportunity if it will not overcap CPs, or with 1 CP at minimum\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&buff.opportunity.up&(combo_points.deficit>=(1+(talent.quick_draw+buff.broadside.up)*(talent.fan_the_hammer.rank+1))||combo_points<=talent.ruthlessness)\n# If not using Fan the Hammer, then consume Opportunity based on energy, when it will exactly cap CPs, or when using Quick Draw\nactions.build+=/pistol_shot,if=!talent.fan_the_hammer&buff.opportunity.up&(energy.base_deficit>energy.regen*1.5||combo_points.deficit<=1+buff.broadside.up||talent.quick_draw.enabled||talent.audacity.enabled&!buff.audacity.up)\n# Fallback pooling just so Sinister Strike is never casted if Ambush is available for Hidden Opportunity builds\nactions.build+=/pool_resource,for_next=1\nactions.build+=/ambush,if=talent.hidden_opportunity\nactions.build+=/sinister_strike\n\n# Cooldowns  Use Adrenaline Rush if it is not active and the finisher condition is not met, but Crackshot builds can refresh it with 2cp or lower inside stealth\nactions.cds+=/adrenaline_rush,if=!buff.adrenaline_rush.up&(!variable.finish_condition||!talent.improved_adrenaline_rush)||stealthed.all&talent.crackshot&talent.improved_adrenaline_rush&combo_points<=2\n# Maintain Blade Flurry on 2+ targets\nactions.cds+=/blade_flurry,if=spell_targets>=2&buff.blade_flurry.remains<gcd\n# With Deft Maneuvers, use Blade Flurry on cooldown at 5+ targets, or at 3-4 targets if missing combo points equal to the amount given\nactions.cds+=/blade_flurry,if=talent.deft_maneuvers&!variable.finish_condition&(spell_targets>=3&combo_points.deficit=spell_targets+buff.broadside.up||spell_targets>=5)\n# Use Roll the Bones if reroll conditions are met, or with no buffs\nactions.cds+=/roll_the_bones,if=variable.rtb_reroll||rtb_buffs=0\n# Use Keep it Rolling with any 4 buffs. If Broadside is not active, then wait until just before the lowest buff expires in an attempt to obtain it from Count the Odds.\nactions.cds+=/keep_it_rolling,if=rtb_buffs>=4&(rtb_buffs.min_remains<2||buff.broadside.up)\nactions.cds+=/ghostly_strike,if=combo_points<cp_max_spend\n# Trinkets that should not be used during stealth and have higher priority than entering stealth\nactions.cds+=/use_item,name=manic_grieftorch,if=!stealthed.all&buff.between_the_eyes.up||fight_remains<=5\nactions.cds+=/use_item,name=beacon_to_the_beyond,if=!stealthed.all&buff.between_the_eyes.up||fight_remains<=5\nactions.cds+=/use_item,name=imperfect_ascendancy_serum,if=!stealthed.all||fight_remains<=22\n# Killing Spree has higher priority than stealth cooldowns\nactions.cds+=/killing_spree,if=variable.finish_condition&!stealthed.all\n# Crackshot builds use stealth cooldowns if Between the Eyes is ready\nactions.cds+=/call_action_list,name=stealth_cds,if=!stealthed.all&(!talent.crackshot||cooldown.between_the_eyes.ready)\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&(energy.base_deficit>=150||fight_remains<charges*6)\n# Use Blade Rush at minimal energy outside of stealth\nactions.cds+=/blade_rush,if=energy.base_time_to_max>4&!stealthed.all\nactions.cds+=/potion,if=buff.bloodlust.react||fight_remains<30||buff.adrenaline_rush.up\nactions.cds+=/blood_fury\nactions.cds+=/berserking\nactions.cds+=/fireblood\nactions.cds+=/ancestral_call\n# Default conditions for usable items.\nactions.cds+=/use_item,name=elementium_pocket_anvil,use_off_gcd=1,if=gcd.remains<=action.sinister_strike.gcd%2\n# Use Bomb Dispenser on cooldown, but hold if 2nd trinket is nearly off cooldown, unless at max charges or sim duration ends soon\nactions.cds+=/use_item,name=dragonfire_bomb_dispenser,use_off_gcd=1,if=gcd.remains<=action.sinister_strike.gcd%2&((!trinket.1.is.dragonfire_bomb_dispenser&trinket.1.cooldown.remains>10||trinket.2.cooldown.remains>10)||cooldown.dragonfire_bomb_dispenser.charges>2||boss&fight_remains<20||!trinket.2.has_cooldown||!trinket.1.has_cooldown)\nactions.cds+=/use_item,name=stormeaters_boon,if=spell_targets.blade_flurry>desired_targets||raid_event.adds.in>60||raid_event.adds.count<2||boss&fight_remains<10\nactions.cds+=/use_item,name=enduring_dreadplate,if=spell_targets.blade_flurry>desired_targets||raid_event.adds.in>60||raid_event.adds.count<2||boss&fight_remains<16\nactions.cds+=/use_item,name=windscar_whetstone,if=spell_targets.blade_flurry>desired_targets||raid_event.adds.in>60||raid_event.adds.count<2||boss&fight_remains<7\nactions.cds+=/use_items,slots=trinket1,if=buff.between_the_eyes.up||trinket.1.has_stat.any_dps||boss&fight_remains<=20\nactions.cds+=/use_items,slots=trinket2,if=buff.between_the_eyes.up||trinket.2.has_stat.any_dps||boss&fight_remains<=20\n\n# Finishers  Use Between the Eyes to keep the crit buff up, but on cooldown if Improved/Greenskins, and avoid overriding Greenskins\nactions.finish+=/between_the_eyes,if=!talent.crackshot&(buff.between_the_eyes.remains<4||talent.improved_between_the_eyes||talent.greenskins_wickers)&!buff.greenskins_wickers.up\n# Crackshot builds use Between the Eyes outside of Stealth if we are unlikely to enter a Stealth window before the next BtE cast or if we are unlikely to lose Adrenaline Rush uptime by hitting BtE before the next cast of Vanish\nactions.finish+=/between_the_eyes,if=talent.crackshot&(cooldown.vanish.true_remains>45||talent.underhanded_upper_hand&talent.without_a_trace&(buff.adrenaline_rush.remains>10||buff.adrenaline_rush.down&cooldown.adrenaline_rush.true_remains>45))&(raid_event.adds.remains>8||raid_event.adds.in<raid_event.adds.remains||!raid_event.adds.up)\nactions.finish+=/slice_and_dice,if=buff.slice_and_dice.remains<fight_remains&refreshable\nactions.finish+=/cold_blood\nactions.finish+=/coup_de_grace\nactions.finish+=/dispatch\n\n# Stealth\nactions.stealth+=/cold_blood,if=variable.finish_condition\n# Ensure Crackshot BtE is not skipped because of low energy\nactions.stealth+=/pool_resource,for_next=1\n# High priority Between the Eyes for Crackshot, except not directly out of Shadowmeld\nactions.stealth+=/between_the_eyes,if=variable.finish_condition&talent.crackshot&(!buff.shadowmeld.up||stealthed.rogue)\nactions.stealth+=/dispatch,if=variable.finish_condition\n# 2 Fan the Hammer Crackshot builds can consume Opportunity in stealth with max stacks, Broadside, and low CPs, or with Greenskins active\nactions.stealth+=/pistol_shot,if=talent.crackshot&talent.fan_the_hammer.rank>=2&buff.opportunity.stack>=6&(buff.broadside.up&combo_points<=1||buff.greenskins_wickers.up)\nactions.stealth+=/ambush,if=talent.hidden_opportunity\n\n# Stealth Cooldowns  Builds with Underhanded Upper Hand and Subterfuge (and Without a Trace for Crackshot) must use Vanish while Adrenaline Rush is active\nactions.stealth_cds+=/vanish,if=talent.underhanded_upper_hand&talent.subterfuge&(buff.adrenaline_rush.up||!talent.without_a_trace&talent.crackshot)&(variable.finish_condition||!talent.crackshot&(variable.ambush_condition||!talent.hidden_opportunity))\n# Builds without Underhanded Upper Hand but with Crackshot must still use Vanish into Between the Eyes on cooldown\nactions.stealth_cds+=/vanish,if=!talent.underhanded_upper_hand&talent.crackshot&variable.finish_condition\n# Builds without Underhanded Upper Hand and Crackshot but still Hidden Opportunity use Vanish into Ambush when Audacity is not active and under max Opportunity stacks\nactions.stealth_cds+=/vanish,if=!talent.underhanded_upper_hand&!talent.crackshot&talent.hidden_opportunity&!buff.audacity.up&buff.opportunity.stack<buff.opportunity.max_stack&variable.ambush_condition\n# Builds without Underhanded Upper Hand, Crackshot, and Hidden Opportunity but with Fatebound use Vanish at five stacks of either Fatebound coin in order to proc the Lucky Coin if it's not already active, and otherwise continue to Vanish into a Dispatch to proc Double Jeopardy on a biased coin\nactions.stealth_cds+=/vanish,if=!talent.underhanded_upper_hand&!talent.crackshot&!talent.hidden_opportunity&talent.fateful_ending&(!buff.fatebound_lucky_coin.up&(buff.fatebound_coin_tails.stack>=5||buff.fatebound_coin_heads.stack>=5)||buff.fatebound_lucky_coin.up&!cooldown.between_the_eyes.ready)\n# Builds with none of the above can use Vanish to maintain Take 'em By Surprise\nactions.stealth_cds+=/vanish,if=!talent.underhanded_upper_hand&!talent.crackshot&!talent.hidden_opportunity&!talent.fateful_ending&talent.take_em_by_surprise&!buff.take_em_by_surprise.up\nactions.stealth_cds+=/shadowmeld,if=variable.finish_condition&!cooldown.vanish.ready",
["spec"] = 260,
},
["Protection Paladin"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20270822,
["author"] = "SimC",
["desc"] = "2024-08-11, 22: Update from SimC\n\n2024-07-23: The War Within",
["lists"] = {
["default"] = {
{
["action"] = "rebuke",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "standard",
},
},
["precombat"] = {
{
["action"] = "devotion_aura",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "consecration",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["criteria"] = "trinket.t1.has_cooldown & trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration ) || ! trinket.t2.has_cooldown",
["var_name"] = "trinket_sync_slot",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["criteria"] = "trinket.t2.has_cooldown & trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration ) || ! trinket.t1.has_cooldown",
["var_name"] = "trinket_sync_slot",
},
},
["standard"] = {
{
["enabled"] = true,
["criteria"] = "talent.lights_guidance.enabled & ( cooldown.eye_of_tyr.remains < 2 || buff.hammer_of_light_ready.up ) & ( ! talent.redoubt.enabled || buff.redoubt.stack >= 2 || ! talent.bastion_of_light.enabled ) & talent.of_dusk_and_dawn.enabled",
["action"] = "call_action_list",
["list_name"] = "hammer_of_light",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.redoubt.enabled || buff.redoubt.stack = 3 ) & ( buff.blessing_of_dawn.stack >= 1 || ! talent.of_dusk_and_dawn.enabled )",
["action"] = "hammer_of_light",
},
{
["enabled"] = true,
["criteria"] = "( ( ( ! talent.righteous_protector.enabled || cooldown.righteous_protector_icd.remains = 0 ) & holy_power > 2 ) || buff.bastion_of_light.up || buff.divine_purpose.up ) & ! ( ( buff.hammer_of_light_ready.up || buff.hammer_of_light_free.up ) )",
["action"] = "shield_of_the_righteous",
},
{
["enabled"] = true,
["criteria"] = "next_armament = sacred_weapon & ( ! buff.sacred_weapon.up || ( buff.sacred_weapon.remains < 6 & ! buff.avenging_wrath.up & cooldown.avenging_wrath.remains <= 30 ) )",
["action"] = "holy_armaments",
},
{
["enabled"] = true,
["action"] = "judgment",
["criteria"] = "spell_targets.shield_of_the_righteous > 3 & buff.bulwark_of_righteous_fury.stack >= 3 & holy_power < 3",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.bulwark_of_righteous_fury.up & talent.bulwark_of_righteous_fury.enabled & spell_targets.shield_of_the_righteous >= 3",
["action"] = "avengers_shield",
["description"] = "The following line has been edited for your own sanity, it is technically a dps gain to only use AS to refresh barricade of faith and strength in adversary as templar in large aoe However, it is very cursed, and nobody should actually do this, but if you REALLY wanted to, uncomment this line and comment out the next avenger's shield line. actions.standard+=/avengers_shield,if=!buff.bulwark_of_righteous_fury.up&talent.bulwark_of_righteous_fury.enabled&spell_targets.shield_of_the_righteous>=3&!((talent.lights_guidance.enabled&spell_targets.shield_of_the_righteous>=10)||!buff.barricade_of_faith.up)",
},
{
["action"] = "hammer_of_wrath",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "judgment",
["criteria"] = "charges >= 2 || full_recharge_time <= gcd.max",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "next_armament = holy_bulwark & charges = 2",
["action"] = "holy_armaments",
},
{
["enabled"] = true,
["criteria"] = "( ! raid_event.adds.exists || raid_event.adds.in > 10 )",
["action"] = "divine_toll",
},
{
["enabled"] = true,
["action"] = "judgment",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! talent.lights_guidance.enabled",
["action"] = "avengers_shield",
["description"] = "In single target, Templar should prioritize maintaining Shake the Heavens by casting spells listed in Higher Calling.",
},
{
["enabled"] = true,
["criteria"] = "! consecration.up",
["action"] = "consecration",
},
{
["enabled"] = true,
["criteria"] = "( talent.inmost_light.enabled & raid_event.adds.in >= 45 || spell_targets.shield_of_the_righteous >= 3 ) & ! talent.lights_deliverance.enabled",
["action"] = "eye_of_tyr",
},
{
["enabled"] = true,
["criteria"] = "next_armament = holy_bulwark",
["action"] = "holy_armaments",
},
{
["action"] = "blessed_hammer",
["enabled"] = true,
},
{
["action"] = "hammer_of_the_righteous",
["enabled"] = true,
},
{
["action"] = "crusader_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.shining_light_free.up & talent.lights_guidance.enabled",
["action"] = "word_of_glory",
},
{
["action"] = "avengers_shield",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.lights_deliverance.enabled",
["action"] = "eye_of_tyr",
},
{
["enabled"] = true,
["criteria"] = "buff.shining_light_free.up",
["action"] = "word_of_glory",
},
{
["enabled"] = true,
["criteria"] = "holy_power < 5",
["action"] = "arcane_torrent",
},
{
["action"] = "consecration",
["enabled"] = true,
},
},
["trinkets"] = {
{
["enabled"] = true,
["slots"] = "trinket1",
["action"] = "trinket1",
["criteria"] = "( variable.trinket_sync_slot = 1 & ( buff.avenging_wrath.up || fight_remains <= 40 ) || ( variable.trinket_sync_slot = 2 & ( ! trinket.t2.cooldown.ready || ! buff.avenging_wrath.up ) ) || ! variable.trinket_sync_slot )",
},
{
["enabled"] = true,
["slots"] = "trinket2",
["action"] = "trinket2",
["criteria"] = "( variable.trinket_sync_slot = 2 & ( buff.avenging_wrath.up || fight_remains <= 40 ) || ( variable.trinket_sync_slot = 1 & ( ! trinket.t1.cooldown.ready || ! buff.avenging_wrath.up ) ) || ! variable.trinket_sync_slot )",
},
},
["hammer_of_light"] = {
{
["enabled"] = true,
["criteria"] = "buff.blessing_of_dawn.stack > 0 || spell_targets.shield_of_the_righteous >= 5",
["action"] = "hammer_of_light",
},
{
["enabled"] = true,
["criteria"] = "hpg_to_2dawn = 5",
["action"] = "eye_of_tyr",
},
{
["enabled"] = true,
["criteria"] = "hpg_to_2dawn = 4",
["action"] = "shield_of_the_righteous",
},
{
["enabled"] = true,
["criteria"] = "hpg_to_2dawn = 1 || buff.blessing_of_dawn.stack > 0",
["action"] = "eye_of_tyr",
},
{
["action"] = "hammer_of_wrath",
["enabled"] = true,
},
{
["action"] = "judgment",
["enabled"] = true,
},
{
["action"] = "blessed_hammer",
["enabled"] = true,
},
{
["action"] = "hammer_of_the_righteous",
["enabled"] = true,
},
{
["action"] = "crusader_strike",
["enabled"] = true,
},
{
["action"] = "divine_toll",
["enabled"] = true,
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.lights_judgment >= 2 || ! raid_event.adds.exists || raid_event.adds.in > 75 || raid_event.adds.up",
["action"] = "lights_judgment",
},
{
["action"] = "avenging_wrath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "( buff.avenging_wrath.remains < 15 || ( time > 10 ) )",
["action"] = "moment_of_glory",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.shield_of_the_righteous >= 3",
["action"] = "divine_toll",
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up || cooldown.avenging_wrath.remains <= 30",
["action"] = "bastion_of_light",
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.remains > 8",
["action"] = "fireblood",
},
},
},
["version"] = 20270822,
["warnings"] = "The import for 'precombat' required some automated changes.\nLine 5: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 5: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 5: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 6: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 6: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 6: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 1: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 1: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 2: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 2: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\n\nImported 6 action lists.\n",
["spec"] = 66,
["profile"] = "## actions.precombat+=/rite_of_sanctification\n## actions.precombat+=/rite_of_adjuration\nactions.precombat+=/devotion_aura\nactions.precombat+=/lights_judgment\nactions.precombat+=/arcane_torrent\nactions.precombat+=/consecration\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_cooldown&trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)||!trinket.2.has_cooldown\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_cooldown&trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)||!trinket.1.has_cooldown\n\nactions+=/rebuke\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=standard\n\nactions.cooldowns+=/lights_judgment,if=spell_targets.lights_judgment>=2||!raid_event.adds.exists||raid_event.adds.in>75||raid_event.adds.up\nactions.cooldowns+=/avenging_wrath\nactions.cooldowns+=/potion,if=buff.avenging_wrath.up\nactions.cooldowns+=/moment_of_glory,if=(buff.avenging_wrath.remains<15||(time>10))\nactions.cooldowns+=/divine_toll,if=spell_targets.shield_of_the_righteous>=3\nactions.cooldowns+=/bastion_of_light,if=buff.avenging_wrath.up||cooldown.avenging_wrath.remains<=30\n## actions.cooldowns+=/invoke_external_buff,name=power_infusion,if=buff.avenging_wrath.up\nactions.cooldowns+=/fireblood,if=buff.avenging_wrath.remains>8\n\nactions.standard+=/call_action_list,name=hammer_of_light,if=talent.lights_guidance.enabled&(cooldown.eye_of_tyr.remains<2||buff.hammer_of_light_ready.up)&(!talent.redoubt.enabled||buff.redoubt.stack>=2||!talent.bastion_of_light.enabled)&talent.of_dusk_and_dawn.enabled\nactions.standard+=/hammer_of_light,if=(!talent.redoubt.enabled||buff.redoubt.stack=3)&(buff.blessing_of_dawn.stack>=1||!talent.of_dusk_and_dawn.enabled)\nactions.standard+=/shield_of_the_righteous,if=(((!talent.righteous_protector.enabled||cooldown.righteous_protector_icd.remains=0)&holy_power>2)||buff.bastion_of_light.up||buff.divine_purpose.up)&!((buff.hammer_of_light_ready.up||buff.hammer_of_light_free.up))\nactions.standard+=/holy_armaments,if=next_armament=sacred_weapon&(!buff.sacred_weapon.up||(buff.sacred_weapon.remains<6&!buff.avenging_wrath.up&cooldown.avenging_wrath.remains<=30))\nactions.standard+=/judgment,cycle_targets=1,if=spell_targets.shield_of_the_righteous>3&buff.bulwark_of_righteous_fury.stack>=3&holy_power<3\n# The following line has been edited for your own sanity, it is technically a dps gain to only use AS to refresh barricade of faith and strength in adversary as templar in large aoe However, it is very cursed, and nobody should actually do this, but if you REALLY wanted to, uncomment this line and comment out the next avenger's shield line. actions.standard+=/avengers_shield,if=!buff.bulwark_of_righteous_fury.up&talent.bulwark_of_righteous_fury.enabled&spell_targets.shield_of_the_righteous>=3&!((talent.lights_guidance.enabled&spell_targets.shield_of_the_righteous>=10)||!buff.barricade_of_faith.up)\nactions.standard+=/avengers_shield,if=!buff.bulwark_of_righteous_fury.up&talent.bulwark_of_righteous_fury.enabled&spell_targets.shield_of_the_righteous>=3\nactions.standard+=/hammer_of_wrath\nactions.standard+=/judgment,cycle_targets=1,if=charges>=2||full_recharge_time<=gcd.max\nactions.standard+=/holy_armaments,if=next_armament=holy_bulwark&charges=2\nactions.standard+=/divine_toll,if=(!raid_event.adds.exists||raid_event.adds.in>10)\nactions.standard+=/judgment,cycle_targets=1\n# In single target, Templar should prioritize maintaining Shake the Heavens by casting spells listed in Higher Calling.\nactions.standard+=/avengers_shield,if=!talent.lights_guidance.enabled\nactions.standard+=/consecration,if=!consecration.up\nactions.standard+=/eye_of_tyr,if=(talent.inmost_light.enabled&raid_event.adds.in>=45||spell_targets.shield_of_the_righteous>=3)&!talent.lights_deliverance.enabled\nactions.standard+=/holy_armaments,if=next_armament=holy_bulwark\nactions.standard+=/blessed_hammer\nactions.standard+=/hammer_of_the_righteous\nactions.standard+=/crusader_strike\nactions.standard+=/word_of_glory,if=buff.shining_light_free.up&talent.lights_guidance.enabled\nactions.standard+=/avengers_shield\nactions.standard+=/eye_of_tyr,if=!talent.lights_deliverance.enabled\nactions.standard+=/word_of_glory,if=buff.shining_light_free.up\nactions.standard+=/arcane_torrent,if=holy_power<5\nactions.standard+=/consecration\n\nactions.hammer_of_light+=/hammer_of_light,if=buff.blessing_of_dawn.stack>0||spell_targets.shield_of_the_righteous>=5\nactions.hammer_of_light+=/eye_of_tyr,if=hpg_to_2dawn=5\nactions.hammer_of_light+=/shield_of_the_righteous,if=hpg_to_2dawn=4\nactions.hammer_of_light+=/eye_of_tyr,if=hpg_to_2dawn=1||buff.blessing_of_dawn.stack>0\nactions.hammer_of_light+=/hammer_of_wrath\nactions.hammer_of_light+=/judgment\nactions.hammer_of_light+=/blessed_hammer\nactions.hammer_of_light+=/hammer_of_the_righteous\nactions.hammer_of_light+=/crusader_strike\nactions.hammer_of_light+=/divine_toll\n\nactions.trinkets+=/use_items,slots=trinket1,if=(variable.trinket_sync_slot=1&(buff.avenging_wrath.up||fight_remains<=40)||(variable.trinket_sync_slot=2&(!trinket.2.cooldown.ready||!buff.avenging_wrath.up))||!variable.trinket_sync_slot)\nactions.trinkets+=/use_items,slots=trinket2,if=(variable.trinket_sync_slot=2&(buff.avenging_wrath.up||fight_remains<=40)||(variable.trinket_sync_slot=1&(!trinket.1.cooldown.ready||!buff.avenging_wrath.up))||!variable.trinket_sync_slot)",
},
["Protection Warrior"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240815,
["spec"] = 73,
["desc"] = "2024-08-15: SimC priority updates\n\n2024-07-24: The War Within",
["profile"] = "actions.precombat+=/battle_stance,toggle=on\nactions.precombat+=/battle_shout\n\nactions+=/pummel\nactions+=/charge,if=time=0||movement.distance>8\nactions+=/use_items\nactions+=/avatar\nactions+=/shield_wall,if=talent.immovable_object.enabled&buff.avatar.down\nactions+=/blood_fury\nactions+=/berserking\nactions+=/arcane_torrent\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/potion,if=buff.avatar.up||buff.avatar.up&target.health.pct<=20\nactions+=/ignore_pain,if=target.health.pct>=20&(rage.deficit<=15&cooldown.shield_slam.ready||rage.deficit<=40&cooldown.shield_charge.ready&talent.champions_bulwark.enabled||rage.deficit<=20&cooldown.shield_charge.ready||rage.deficit<=30&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled||rage.deficit<=20&cooldown.avatar.ready||rage.deficit<=45&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=30&cooldown.avatar.ready&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=20||rage.deficit<=40&cooldown.shield_slam.ready&buff.violent_outburst.up&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=55&cooldown.shield_slam.ready&buff.violent_outburst.up&buff.last_stand.up&talent.unnerving_focus.enabled&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=17&cooldown.shield_slam.ready&talent.heavy_repercussions.enabled||rage.deficit<=18&cooldown.shield_slam.ready&talent.impenetrable_wall.enabled)||(rage>=70||buff.seeing_red.stack=7&rage>=35)&cooldown.shield_slam.remains<=1&buff.shield_block.remains>=4&set_bonus.tier31_2pc,use_off_gcd=1\nactions+=/last_stand,if=(target.health.pct>=90&talent.unnerving_focus.enabled||target.health.pct<=20&talent.unnerving_focus.enabled)||talent.bolster.enabled||set_bonus.tier30_2pc||set_bonus.tier30_4pc\nactions+=/ravager\nactions+=/demoralizing_shout,if=talent.booming_voice.enabled\nactions+=/champions_spear\nactions+=/demolish,if=buff.colossal_might.stack>=3\nactions+=/thunderous_roar\nactions+=/shockwave,if=talent.rumbling_earth.enabled&spell_targets.shockwave>=3\nactions+=/shield_charge\nactions+=/shield_block,if=buff.shield_block.duration<=10\nactions+=/run_action_list,name=aoe,strict=1,if=spell_targets.thunder_clap>=3\nactions+=/call_action_list,name=generic\n\nactions.aoe+=/thunder_blast,if=dot.rend.remains<=1\nactions.aoe+=/thunder_clap,if=dot.rend.remains<=1\nactions.aoe+=/thunder_blast,if=buff.violent_outburst.up&spell_targets.thunderclap>=2&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/thunder_clap,if=buff.violent_outburst.up&spell_targets.thunderclap>=4&buff.avatar.up&talent.unstoppable_force.enabled&talent.crashing_thunder.enabled||buff.violent_outburst.up&spell_targets.thunderclap>6&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/revenge,if=rage>=70&talent.seismic_reverberation.enabled&spell_targets.revenge>=3\nactions.aoe+=/shield_slam,if=rage<=60||buff.violent_outburst.up&spell_targets.thunderclap<=4&talent.crashing_thunder.enabled\nactions.aoe+=/thunder_blast\nactions.aoe+=/thunder_clap\nactions.aoe+=/revenge,if=rage>=30||rage>=40&talent.barbaric_training.enabled\n\nactions.generic+=/thunder_blast,if=(buff.thunder_blast.stack=2&buff.burst_of_power.stack<=1&buff.avatar.up&talent.unstoppable_force.enabled)||rage<=70&talent.demolish.enabled\nactions.generic+=/shield_slam,if=(buff.burst_of_power.stack=2&buff.thunder_blast.stack<=1||buff.violent_outburst.up)||rage<=70&talent.demolish.enabled\nactions.generic+=/execute,if=rage>=70||(rage>=40&cooldown.shield_slam.remains&talent.demolish.enabled||rage>=50&cooldown.shield_slam.remains)||buff.sudden_death.up&talent.sudden_death.enabled\nactions.generic+=/shield_slam\nactions.generic+=/thunder_blast,if=dot.rend.remains<=2&buff.violent_outburst.down\nactions.generic+=/thunder_clap,if=dot.rend.remains<=2&buff.violent_outburst.down\nactions.generic+=/thunder_blast,if=(spell_targets.thunder_clap>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/thunder_clap,if=(spell_targets.thunder_clap>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/revenge,if=(rage>=80&target.health.pct>20||buff.revenge.up&target.health.pct<=20&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>20)||(rage>=80&target.health.pct>35||buff.revenge.up&target.health.pct<=35&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>35)&talent.massacre.enabled\nactions.generic+=/execute\nactions.generic+=/revenge,if=target.health>20\nactions.generic+=/thunder_blast,if=(spell_targets.thunder_clap>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/thunder_clap,if=(spell_targets.thunder_clap>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/devastate",
["version"] = 20240815,
["warnings"] = "Imported 4 action lists.\n",
["lists"] = {
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 1",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 1",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.violent_outburst.up & spell_targets.thunderclap >= 2 & buff.avatar.up & talent.unstoppable_force.enabled",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.violent_outburst.up & spell_targets.thunderclap >= 4 & buff.avatar.up & talent.unstoppable_force.enabled & talent.crashing_thunder.enabled || buff.violent_outburst.up & spell_targets.thunderclap > 6 & buff.avatar.up & talent.unstoppable_force.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "rage >= 70 & talent.seismic_reverberation.enabled & spell_targets.revenge >= 3",
["action"] = "revenge",
},
{
["enabled"] = true,
["criteria"] = "rage <= 60 || buff.violent_outburst.up & spell_targets.thunderclap <= 4 & talent.crashing_thunder.enabled",
["action"] = "shield_slam",
},
{
["action"] = "thunder_blast",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "rage >= 50 || rage >= 60 & talent.barbaric_training.enabled",
["action"] = "revenge",
},
},
["generic"] = {
{
["enabled"] = true,
["criteria"] = "( buff.thunder_blast.stack = 2 & buff.burst_of_power.stack <= 1 & buff.avatar.up & talent.unstoppable_force.enabled ) || rage <= 70 & talent.demolish.enabled",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( buff.burst_of_power.stack = 2 & buff.thunder_blast.stack <= 1 || buff.violent_outburst.up ) || rage <= 70 & talent.demolish.enabled",
["action"] = "shield_slam",
},
{
["enabled"] = true,
["criteria"] = "rage >= 70 || ( rage >= 50 & cooldown.shield_slam.remains & talent.demolish.enabled || rage >= 60 & cooldown.shield_slam.remains ) || buff.sudden_death.up & talent.sudden_death.enabled",
["action"] = "execute",
},
{
["action"] = "shield_slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 2 & buff.violent_outburst.down",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 2 & buff.violent_outburst.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "( rage >= 80 & target.health.pct > 20 || buff.revenge.up & target.health.pct <= 20 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 20 ) || ( rage >= 80 & target.health.pct > 35 || buff.revenge.up & target.health.pct <= 35 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 35 ) & talent.massacre.enabled",
["action"] = "revenge",
},
{
["action"] = "execute",
["enabled"] = false,
},
{
["enabled"] = false,
["criteria"] = "target.health > 20",
["action"] = "revenge",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["action"] = "devastate",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "pummel",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "time = 0 || movement.distance > 8",
["action"] = "charge",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = false,
},
{
["enabled"] = true,
["criteria"] = "talent.immovable_object.enabled & buff.avatar.down",
["action"] = "shield_wall",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.avatar.up || buff.avatar.up & target.health.pct <= 20",
["action"] = "potion",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "target.health.pct >= 20 & ( rage.deficit <= 15 & cooldown.shield_slam.ready || rage.deficit <= 40 & cooldown.shield_charge.ready & talent.champions_bulwark.enabled || rage.deficit <= 20 & cooldown.shield_charge.ready || rage.deficit <= 30 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled || rage.deficit <= 20 & cooldown.avatar.ready || rage.deficit <= 45 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 30 & cooldown.avatar.ready & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 20 || rage.deficit <= 40 & cooldown.shield_slam.ready & buff.violent_outburst.up & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 55 & cooldown.shield_slam.ready & buff.violent_outburst.up & buff.last_stand.up & talent.unnerving_focus.enabled & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 17 & cooldown.shield_slam.ready & talent.heavy_repercussions.enabled || rage.deficit <= 18 & cooldown.shield_slam.ready & talent.impenetrable_wall.enabled ) || ( rage >= 70 || buff.seeing_red.stack = 7 & rage >= 35 ) & cooldown.shield_slam.remains <= 1 & buff.shield_block.remains >= 4 & set_bonus.tier31_2pc",
["action"] = "ignore_pain",
},
{
["enabled"] = true,
["criteria"] = "( target.health.pct >= 90 & talent.unnerving_focus.enabled || target.health.pct <= 20 & talent.unnerving_focus.enabled ) || talent.bolster.enabled || set_bonus.tier30_2pc || set_bonus.tier30_4pc",
["action"] = "last_stand",
},
{
["action"] = "ravager",
["enabled"] = false,
},
{
["enabled"] = true,
["criteria"] = "talent.booming_voice.enabled",
["action"] = "demoralizing_shout",
},
{
["action"] = "champions_spear",
["enabled"] = false,
},
{
["enabled"] = true,
["criteria"] = "buff.colossal_might.stack >= 3",
["action"] = "demolish",
},
{
["action"] = "thunderous_roar",
["enabled"] = false,
},
{
["enabled"] = true,
["criteria"] = "talent.rumbling_earth.enabled & spell_targets.shockwave >= 3",
["action"] = "shockwave",
},
{
["action"] = "shield_charge",
["enabled"] = false,
},
{
["enabled"] = true,
["criteria"] = "buff.shield_block.duration <= 10",
["action"] = "shield_block",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "spell_targets.thunder_clap >= 3",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "generic",
},
},
["precombat"] = {
{
["toggle"] = "on",
["action"] = "battle_stance",
["enabled"] = true,
},
{
["action"] = "battle_shout",
["enabled"] = true,
},
},
},
["author"] = "SimulationCraft",
},
["Retribution"] = {
["builtIn"] = true,
["date"] = 20240828,
["spec"] = 70,
["desc"] = "2024-08-28: Fix HoL and update from SimC\n\n2024-08-24: Fix Hammer of Light\n\n2024-07-23: The War Within",
["profile"] = "actions.precombat+=/shield_of_vengeance\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.1.cooldown.duration=0||trinket.1.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.2.cooldown.duration=0||trinket.2.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.2.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\n\nactions+=/rebuke\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=generators\n\nactions.cooldowns+=/potion,if=buff.avenging_wrath.up||buff.crusade.up||debuff.execution_sentence.up||boss&fight_remains<30\n## actions.cooldowns+=/invoke_external_buff,name=power_infusion,if=buff.avenging_wrath.up||buff.crusade.up||debuff.execution_sentence.up\nactions.cooldowns+=/lights_judgment,if=spell_targets.lights_judgment>=2||!raid_event.adds.exists||raid_event.adds.in>75||raid_event.adds.up\nactions.cooldowns+=/fireblood,if=buff.avenging_wrath.up||buff.crusade.up&buff.crusade.stack=10||debuff.execution_sentence.up\nactions.cooldowns+=/use_item,slot=trinket1,if=((buff.avenging_wrath.up&cooldown.avenging_wrath.remains>40||buff.crusade.up&buff.crusade.stack=10)&!talent.radiant_glory||talent.radiant_glory&(!talent.execution_sentence&cooldown.wake_of_ashes.remains=0||debuff.execution_sentence.up))&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains&boss\nactions.cooldowns+=/use_item,slot=trinket2,if=((buff.avenging_wrath.up&cooldown.avenging_wrath.remains>40||buff.crusade.up&buff.crusade.stack=10)&!talent.radiant_glory||talent.radiant_glory&(!talent.execution_sentence&cooldown.wake_of_ashes.remains=0||debuff.execution_sentence.up))&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains&boss\nactions.cooldowns+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs||!buff.crusade.up&cooldown.crusade.remains>20||!buff.avenging_wrath.up&cooldown.avenging_wrath.remains>20)\nactions.cooldowns+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs||!buff.crusade.up&cooldown.crusade.remains>20||!buff.avenging_wrath.up&cooldown.avenging_wrath.remains>20)\nactions.cooldowns+=/shield_of_vengeance,if=fight_remains>15&(!talent.execution_sentence||!debuff.execution_sentence.up)\nactions.cooldowns+=/execution_sentence,if=(!buff.crusade.up&cooldown.crusade.remains>15||buff.crusade.stack=10||cooldown.avenging_wrath.remains<0.75||cooldown.avenging_wrath.remains>15||talent.radiant_glory)&(holy_power>=4&time<5||holy_power>=3&time>5||holy_power>=2&(talent.divine_auxiliary||talent.radiant_glory))&(target.time_to_die>8&!talent.executioners_will||target.time_to_die>12)&cooldown.wake_of_ashes.remains<gcd\nactions.cooldowns+=/avenging_wrath,if=(holy_power>=4&time<5||holy_power>=3&time>5||holy_power>=2&talent.divine_auxiliary&(cooldown.execution_sentence.remains=0||cooldown.final_reckoning.remains=0))&(!raid_event.adds.up||target.time_to_die>10)\nactions.cooldowns+=/crusade,if=holy_power>=5&time<5||holy_power>=3&time>5\nactions.cooldowns+=/final_reckoning,if=(holy_power>=4&time<8||holy_power>=3&time>=8||holy_power>=2&(talent.divine_auxiliary||talent.radiant_glory))&(cooldown.avenging_wrath.remains>10||cooldown.crusade.remains&(!buff.crusade.up||buff.crusade.stack>=10)||talent.radiant_glory&(buff.avenging_wrath.up||talent.crusade&cooldown.wake_of_ashes.remains<gcd))&(!raid_event.adds.exists||raid_event.adds.up||raid_event.adds.in>40)\n\nactions.finishers+=/variable,name=ds_castable,value=(spell_targets.divine_storm>=2||buff.empyrean_power.up)&!buff.empyrean_legacy.up&!(buff.divine_arbiter.up&buff.divine_arbiter.stack>24)\nactions.finishers+=/hammer_of_light\nactions.finishers+=/divine_hammer,if=holy_power=5\nactions.finishers+=/divine_storm,if=variable.ds_castable&!buff.hammer_of_light_ready.up&(!talent.crusade||cooldown.crusade.remains>gcd*3||buff.crusade.up&buff.crusade.stack<10||talent.radiant_glory)&(!buff.divine_hammer.up||cooldown.divine_hammer.remains>110&holy_power>=4)\nactions.finishers+=/justicars_vengeance,if=(!talent.crusade||cooldown.crusade.remains>gcd*3||buff.crusade.up&buff.crusade.stack<10||talent.radiant_glory)&!buff.hammer_of_light_ready.up&(!buff.divine_hammer.up||cooldown.divine_hammer.remains>110&holy_power>=4)\nactions.finishers+=/templars_verdict,if=(!talent.crusade||cooldown.crusade.remains>gcd*3||buff.crusade.up&buff.crusade.stack<10||talent.radiant_glory)&!buff.hammer_of_light_ready.up&(!buff.divine_hammer.up||cooldown.divine_hammer.remains>110&holy_power>=4)\n\nactions.generators+=/call_action_list,name=finishers,strict=1,if=holy_power=5||holy_power=4&buff.divine_resonance.up\nactions.generators+=/wake_of_ashes,if=(holy_power<=2&!talent.lights_guidance||holy_power>=2&talent.lights_guidance)&(cooldown.avenging_wrath.remains>6||cooldown.crusade.remains>6||talent.radiant_glory)&(!talent.execution_sentence||cooldown.execution_sentence.remains>4||target.time_to_die<8)&(!raid_event.adds.exists||raid_event.adds.in>10||raid_event.adds.up)\nactions.generators+=/divine_toll,if=holy_power<=2&(!raid_event.adds.exists||raid_event.adds.in>10||raid_event.adds.up)&(cooldown.avenging_wrath.remains>15||cooldown.crusade.remains>15||talent.radiant_glory||fight_remains<8)\nactions.generators+=/call_action_list,name=finishers,strict=1,if=holy_power>=3&buff.crusade.up&buff.crusade.stack<10\nactions.generators+=/templar_slash,if=buff.templar_strikes.remains<gcd&spell_targets.divine_storm>=2\nactions.generators+=/blade_of_justice,if=(holy_power<=3||!talent.holy_blade)&(spell_targets.divine_storm>=2&talent.blade_of_vengeance)\nactions.generators+=/templar_slash,if=buff.templar_strikes.remains<gcd*2\nactions.generators+=/hammer_of_wrath,if=(spell_targets.divine_storm<2||!talent.blessed_champion)&(holy_power<=3||target.health.pct>20||!talent.vanguards_momentum)&target.health.pct<35&talent.vengeful_wrath\nactions.generators+=/judgment,if=holy_power<=3||!talent.boundless_judgment\nactions.generators+=/blade_of_justice,if=holy_power<=3||!talent.holy_blade\nactions.generators+=/hammer_of_wrath,if=(spell_targets.divine_storm<2||!talent.blessed_champion)&(holy_power<=3||target.health.pct>20||!talent.vanguards_momentum)\nactions.generators+=/templar_slash\nactions.generators+=/templar_strike\nactions.generators+=/call_action_list,name=finishers,strict=1,if=(target.health.pct<=20||buff.avenging_wrath.up||buff.crusade.up||buff.empyrean_power.up)\nactions.generators+=/crusader_strike,if=cooldown.crusader_strike.charges_fractional>=1.75&(holy_power<=2||holy_power<=3&cooldown.blade_of_justice.remains>gcd*2||holy_power=4&cooldown.blade_of_justice.remains>gcd*2&cooldown.judgment.remains>gcd*2)\nactions.generators+=/call_action_list,name=finishers\nactions.generators+=/hammer_of_wrath,if=holy_power<=3||target.health.pct>20||!talent.vanguards_momentum\nactions.generators+=/crusader_strike\nactions.generators+=/arcane_torrent",
["version"] = 20240828,
["warnings"] = "The import for 'precombat' required some automated changes.\nLine 2: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 2: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 3: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.t1.cooldown.duration=0||trinket.t1.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.t1.cooldown.duration=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.crusade.duration=0||cooldown.crusade.duration%trinket.t1.cooldown.duration=0||trinket.t1.cooldown.duration%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%trinket.t1.cooldown.duration=0)'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.t2.cooldown.duration=0||trinket.t2.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.t2.cooldown.duration=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.crusade.duration=0||cooldown.crusade.duration%trinket.t2.cooldown.duration=0||trinket.t2.cooldown.duration%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%trinket.t2.cooldown.duration=0)'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 6: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 6: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'cooldowns' required some automated changes.\nLine 4: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 4: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 4: Converted 'talent.execution_sentence' to 'talent.execution_sentence.enabled' (1x).\nLine 4: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 4: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 5: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 5: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 5: Converted 'talent.execution_sentence' to 'talent.execution_sentence.enabled' (1x).\nLine 5: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 5: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 8: Converted 'talent.execution_sentence' to 'talent.execution_sentence.enabled' (1x).\nLine 9: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 9: Converted 'talent.divine_auxiliary' to 'talent.divine_auxiliary.enabled' (1x).\nLine 9: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 9: Converted 'talent.executioners_will' to 'talent.executioners_will.enabled' (1x).\nLine 10: Converted 'talent.divine_auxiliary' to 'talent.divine_auxiliary.enabled' (1x).\nLine 12: Converted 'talent.divine_auxiliary' to 'talent.divine_auxiliary.enabled' (1x).\nLine 12: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 12: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 12: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\n\nThe import for 'finishers' required some automated changes.\nLine 4: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 4: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 5: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 5: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 6: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 6: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\n\nThe import for 'generators' required some automated changes.\nLine 2: Converted 'talent.lights_guidance' to 'talent.lights_guidance.enabled' (1x).\nLine 2: Converted 'talent.lights_guidance' to 'talent.lights_guidance.enabled' (1x).\nLine 2: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 2: Converted 'talent.execution_sentence' to 'talent.execution_sentence.enabled' (1x).\nLine 3: Converted 'talent.radiant_glory' to 'talent.radiant_glory.enabled' (1x).\nLine 6: Converted 'talent.holy_blade' to 'talent.holy_blade.enabled' (1x).\nLine 6: Converted 'talent.blade_of_vengeance' to 'talent.blade_of_vengeance.enabled' (1x).\nLine 8: Converted 'talent.blessed_champion' to 'talent.blessed_champion.enabled' (1x).\nLine 8: Converted 'talent.vanguards_momentum' to 'talent.vanguards_momentum.enabled' (1x).\nLine 8: Converted 'talent.vengeful_wrath' to 'talent.vengeful_wrath.enabled' (1x).\nLine 9: Converted 'talent.boundless_judgment' to 'talent.boundless_judgment.enabled' (1x).\nLine 10: Converted 'talent.holy_blade' to 'talent.holy_blade.enabled' (1x).\nLine 11: Converted 'talent.blessed_champion' to 'talent.blessed_champion.enabled' (1x).\nLine 11: Converted 'talent.vanguards_momentum' to 'talent.vanguards_momentum.enabled' (1x).\nLine 17: Converted 'talent.vanguards_momentum' to 'talent.vanguards_momentum.enabled' (1x).\n\nImported 5 action lists.\n",
["lists"] = {
["default"] = {
{
["action"] = "rebuke",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "generators",
},
},
["precombat"] = {
{
["action"] = "shield_of_vengeance",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.crusade.duration = 0 || cooldown.crusade.duration % trinket.t1.cooldown.duration = 0 || trinket.t1.cooldown.duration % cooldown.avenging_wrath.duration = 0 || cooldown.avenging_wrath.duration % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.crusade.duration = 0 || cooldown.crusade.duration % trinket.t2.cooldown.duration = 0 || trinket.t2.cooldown.duration % cooldown.avenging_wrath.duration = 0 || cooldown.avenging_wrath.duration % trinket.t2.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
},
},
["generators"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "holy_power = 5 || holy_power = 4 & buff.divine_resonance.up",
["list_name"] = "finishers",
},
{
["enabled"] = true,
["criteria"] = "( holy_power <= 2 & ! talent.lights_guidance.enabled || holy_power >= 2 & talent.lights_guidance.enabled ) & ( cooldown.avenging_wrath.remains > 6 || cooldown.crusade.remains > 6 || talent.radiant_glory.enabled ) & ( ! talent.execution_sentence.enabled || cooldown.execution_sentence.remains > 4 || target.time_to_die < 8 ) & ( ! raid_event.adds.exists || raid_event.adds.in > 10 || raid_event.adds.up )",
["action"] = "wake_of_ashes",
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 2 & ( ! raid_event.adds.exists || raid_event.adds.in > 10 || raid_event.adds.up ) & ( cooldown.avenging_wrath.remains > 15 || cooldown.crusade.remains > 15 || talent.radiant_glory.enabled || fight_remains < 8 )",
["action"] = "divine_toll",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "holy_power >= 3 & buff.crusade.up & buff.crusade.stack < 10",
["list_name"] = "finishers",
},
{
["enabled"] = true,
["criteria"] = "buff.templar_strikes.remains < gcd.max & spell_targets.divine_storm >= 2",
["action"] = "templar_slash",
},
{
["enabled"] = true,
["criteria"] = "( holy_power <= 3 || ! talent.holy_blade.enabled ) & ( spell_targets.divine_storm >= 2 & talent.blade_of_vengeance.enabled )",
["action"] = "blade_of_justice",
},
{
["enabled"] = true,
["criteria"] = "buff.templar_strikes.remains < gcd.max * 2",
["action"] = "templar_slash",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.divine_storm < 2 || ! talent.blessed_champion.enabled ) & ( holy_power <= 3 || target.health.pct > 20 || ! talent.vanguards_momentum.enabled ) & target.health.pct < 35 & talent.vengeful_wrath.enabled",
["action"] = "hammer_of_wrath",
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 3 || ! talent.boundless_judgment.enabled",
["action"] = "judgment",
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 3 || ! talent.holy_blade.enabled",
["action"] = "blade_of_justice",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.divine_storm < 2 || ! talent.blessed_champion.enabled ) & ( holy_power <= 3 || target.health.pct > 20 || ! talent.vanguards_momentum.enabled )",
["action"] = "hammer_of_wrath",
},
{
["action"] = "templar_slash",
["enabled"] = true,
},
{
["action"] = "templar_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "( target.health.pct <= 20 || buff.avenging_wrath.up || buff.crusade.up || buff.empyrean_power.up )",
["list_name"] = "finishers",
},
{
["enabled"] = true,
["criteria"] = "cooldown.crusader_strike.charges_fractional >= 1.75 & ( holy_power <= 2 || holy_power <= 3 & cooldown.blade_of_justice.remains > gcd.max * 2 || holy_power = 4 & cooldown.blade_of_justice.remains > gcd.max * 2 & cooldown.judgment.remains > gcd.max * 2 )",
["action"] = "crusader_strike",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "finishers",
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 3 || target.health.pct > 20 || ! talent.vanguards_momentum.enabled",
["action"] = "hammer_of_wrath",
},
{
["action"] = "crusader_strike",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
},
["finishers"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( spell_targets.divine_storm >= 2 || buff.empyrean_power.up ) & ! buff.empyrean_legacy.up & ! ( buff.divine_arbiter.up & buff.divine_arbiter.stack > 24 )",
["var_name"] = "ds_castable",
},
{
["action"] = "hammer_of_light",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "holy_power = 5",
["action"] = "divine_hammer",
},
{
["enabled"] = true,
["criteria"] = "variable.ds_castable & ! buff.hammer_of_light_ready.up & ( ! talent.crusade.enabled || cooldown.crusade.remains > gcd.max * 3 || buff.crusade.up & buff.crusade.stack < 10 || talent.radiant_glory.enabled ) & ( ! buff.divine_hammer.up || cooldown.divine_hammer.remains > 110 & holy_power >= 4 )",
["action"] = "divine_storm",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.crusade.enabled || cooldown.crusade.remains > gcd.max * 3 || buff.crusade.up & buff.crusade.stack < 10 || talent.radiant_glory.enabled ) & ! buff.hammer_of_light_ready.up & ( ! buff.divine_hammer.up || cooldown.divine_hammer.remains > 110 & holy_power >= 4 )",
["action"] = "justicars_vengeance",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.crusade.enabled || cooldown.crusade.remains > gcd.max * 3 || buff.crusade.up & buff.crusade.stack < 10 || talent.radiant_glory.enabled ) & ! buff.hammer_of_light_ready.up & ( ! buff.divine_hammer.up || cooldown.divine_hammer.remains > 110 & holy_power >= 4 )",
["action"] = "templars_verdict",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up || buff.crusade.up || debuff.execution_sentence.up || boss & fight_remains < 30",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.lights_judgment >= 2 || ! raid_event.adds.exists || raid_event.adds.in > 75 || raid_event.adds.up",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up || buff.crusade.up & buff.crusade.stack = 10 || debuff.execution_sentence.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "( ( buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 40 || buff.crusade.up & buff.crusade.stack = 10 ) & ! talent.radiant_glory.enabled || talent.radiant_glory.enabled & ( ! talent.execution_sentence.enabled & cooldown.wake_of_ashes.remains = 0 || debuff.execution_sentence.up ) ) & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains & boss",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "( ( buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 40 || buff.crusade.up & buff.crusade.stack = 10 ) & ! talent.radiant_glory.enabled || talent.radiant_glory.enabled & ( ! talent.execution_sentence.enabled & cooldown.wake_of_ashes.remains = 0 || debuff.execution_sentence.up ) ) & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains & boss",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs || ! buff.crusade.up & cooldown.crusade.remains > 20 || ! buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 20 )",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs || ! buff.crusade.up & cooldown.crusade.remains > 20 || ! buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 20 )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 15 & ( ! talent.execution_sentence.enabled || ! debuff.execution_sentence.up )",
["action"] = "shield_of_vengeance",
},
{
["enabled"] = true,
["criteria"] = "( ! buff.crusade.up & cooldown.crusade.remains > 15 || buff.crusade.stack = 10 || cooldown.avenging_wrath.remains < 0.75 || cooldown.avenging_wrath.remains > 15 || talent.radiant_glory.enabled ) & ( holy_power >= 4 & time < 5 || holy_power >= 3 & time > 5 || holy_power >= 2 & ( talent.divine_auxiliary.enabled || talent.radiant_glory.enabled ) ) & ( target.time_to_die > 8 & ! talent.executioners_will.enabled || target.time_to_die > 12 ) & cooldown.wake_of_ashes.remains < gcd.max",
["action"] = "execution_sentence",
},
{
["enabled"] = true,
["criteria"] = "( holy_power >= 4 & time < 5 || holy_power >= 3 & time > 5 || holy_power >= 2 & talent.divine_auxiliary.enabled & ( cooldown.execution_sentence.remains = 0 || cooldown.final_reckoning.remains = 0 ) ) & ( ! raid_event.adds.up || target.time_to_die > 10 )",
["action"] = "avenging_wrath",
},
{
["enabled"] = true,
["criteria"] = "holy_power >= 5 & time < 5 || holy_power >= 3 & time > 5",
["action"] = "crusade",
},
{
["enabled"] = true,
["criteria"] = "( holy_power >= 4 & time < 8 || holy_power >= 3 & time >= 8 || holy_power >= 2 & ( talent.divine_auxiliary.enabled || talent.radiant_glory.enabled ) ) & ( cooldown.avenging_wrath.remains > 10 || cooldown.crusade.remains & ( ! buff.crusade.up || buff.crusade.stack >= 10 ) || talent.radiant_glory.enabled & ( buff.avenging_wrath.up || talent.crusade.enabled & cooldown.wake_of_ashes.remains < gcd.max ) ) & ( ! raid_event.adds.exists || raid_event.adds.up || raid_event.adds.in > 40 )",
["action"] = "final_reckoning",
},
},
},
["author"] = "SimC",
},
["Brewmaster"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240822,
["author"] = "SimC",
["desc"] = "2024-08-22: Avoid nonsensical Purifying Brews\n\n2024-07-26: The War Within",
["lists"] = {
["items"] = {
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < cooldown_duration || ( debuff.weapons_of_order_debuff.stack > 3 || fight_remains > cooldown_remains )",
["action"] = "main_hand",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < cooldown_duration || ( debuff.weapons_of_order_debuff.stack > 3 || fight_remains > cooldown_remains )",
["action"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < cooldown_duration || ( debuff.weapons_of_order_debuff.stack > 3 || fight_remains > cooldown_remains )",
["action"] = "mydas_talisman",
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.react",
["action"] = "spear_hand_strike",
},
{
["action"] = "diffuse_magic",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "health.pct <= settings.vivify_percent & buff.vivacious_vivification.up",
["action"] = "vivify",
},
{
["enabled"] = true,
["criteria"] = "tanking & settings.purify_for_celestial & ( time_to_max_charges < gcd.max || buff.purified_chi.up & buff.purified_chi.remains < 1.5 * gcd.max ) || cooldown.celestial_brew.remains < 2 * gcd.max & charges_fractional > 1.5",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "tanking & ( ! talent.improved_celestial_brew.enabled || buff.purified_chi.up ) & ( ! settings.max_damage || buff.blackout_combo.down )",
["action"] = "celestial_brew",
},
{
["enabled"] = true,
["criteria"] = "group & ( ! settings.max_damage || buff.blackout_combo.down ) & settings.purify_stagger_currhp > 0 & stagger.pct >= settings.purify_stagger_currhp",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "solo & ( ! settings.max_damage || buff.blackout_combo.down ) & settings.purify_stagger_currhp > 0 & stagger.pct >= settings.purify_stagger_currhp * 0.5",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "group & ( settings.max_damage & buff.blackout_combo.down ) & settings.purify_stagger_maxhp > 0 & stagger.pct >= settings.purify_stagger_maxhp",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "solo & ( ! settings.max_damage || buff.blackout_combo.down ) & settings.purify_stagger_maxhp > 0 & stagger.pct >= settings.purify_stagger_maxhp * 0.5",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "group & ( ! settings.max_damage || buff.blackout_combo.down ) & settings.purify_stagger_currhp = 0 & settings.purify_stagger_maxhp = 0 & stagger.pct > 20",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "solo & ( ! settings.max_damage || buff.blackout_combo.down ) & settings.purify_stagger_currhp = 0 & settings.purify_stagger_maxhp = 0 & stagger.pct > 10",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 75 & incoming_damage_3s > health.max * ( 0.2 + ( 0.2 * group ) ) & buff.fortifying_brew.down",
["action"] = "dampen_harm",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 50 & incoming_damage_3s > health.max * ( 0.2 + ( 0.2 * group ) ) & ( buff.dampen_harm.down )",
["action"] = "fortifying_brew",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "touch_of_death",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "items",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.gift_of_the_ox.stack > 4 & health.pct < settings.eh_percent",
["action"] = "expel_harm",
["description"] = "Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> when <a href='https://www.wowhead.com/spell=387184/weapons-of-order'>Weapons of Order</a> reaches 4 stacks.",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.press_the_advantage.enabled",
["list_name"] = "rotation_pta",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! talent.press_the_advantage.enabled",
["list_name"] = "rotation_boc",
},
},
["precombat"] = {
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.chi_burst.enabled",
["action"] = "chi_burst",
},
},
["rotation_boc"] = {
{
["action"] = "blackout_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( buff.recent_purifies.up ) & talent.improved_invoke_niuzao_the_black_ox.enabled",
["action"] = "weapons_of_order",
},
{
["enabled"] = true,
["criteria"] = "( buff.invoke_niuzao_the_black_ox.down & buff.recent_purifies.up & buff.weapons_of_order.remains < 14 ) & talent.improved_invoke_niuzao_the_black_ox.enabled",
["action"] = "invoke_niuzao_the_black_ox",
},
{
["enabled"] = true,
["criteria"] = "( debuff.weapons_of_order_debuff.stack > 3 ) & ! talent.improved_invoke_niuzao_the_black_ox.enabled",
["action"] = "invoke_niuzao_the_black_ox",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.weapons_of_order.enabled )",
["action"] = "invoke_niuzao_the_black_ox",
},
{
["enabled"] = true,
["criteria"] = "( talent.weapons_of_order.enabled ) & ! talent.improved_invoke_niuzao_the_black_ox.enabled",
["action"] = "weapons_of_order",
},
{
["enabled"] = true,
["criteria"] = "( time - action.weapons_of_order.last_used < 2 )",
["action"] = "keg_smash",
},
{
["enabled"] = true,
["criteria"] = "( buff.weapons_of_order.remains < gcd.max * 2 & buff.weapons_of_order.up ) & ! talent.improved_invoke_niuzao_the_black_ox.enabled",
["action"] = "keg_smash",
},
{
["enabled"] = true,
["criteria"] = "( buff.weapons_of_order.remains < gcd.max * 2 ) & talent.improved_invoke_niuzao_the_black_ox.enabled",
["action"] = "keg_smash",
},
{
["action"] = "rising_sun_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( energy + energy.regen <= 40 )",
["action"] = "black_ox_brew",
},
{
["enabled"] = true,
["criteria"] = "( buff.blackout_combo.up & active_enemies = 1 )",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "( buff.charred_passions.remains < cooldown.blackout_kick.remains )",
["action"] = "breath_of_fire",
},
{
["enabled"] = true,
["criteria"] = "( buff.weapons_of_order.up & debuff.weapons_of_order_debuff.stack <= 3 )",
["action"] = "keg_smash",
},
{
["enabled"] = true,
["criteria"] = "( time < 10 & debuff.weapons_of_order_debuff.stack > 3 ) || ( time > 10 & talent.weapons_of_order.enabled )",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.weapons_of_order.enabled )",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["criteria"] = "( buff.bonedust_brew.up )",
["action"] = "exploding_keg",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.bonedust_brew.remains >= 20 )",
["action"] = "exploding_keg",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.bonedust_brew.enabled )",
["action"] = "exploding_keg",
},
{
["action"] = "keg_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.rushing_jade_wind.enabled",
["action"] = "rushing_jade_wind",
},
{
["action"] = "breath_of_fire",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & ! talent.blackout_combo.enabled",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "spinning_crane_kick",
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
},
["rotation_pta"] = {
{
["action"] = "invoke_niuzao_the_black_ox",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.press_the_advantage.stack < ( 7 + main_hand.2h )",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "buff.press_the_advantage.stack > 9 & active_enemies <= 3 & ( buff.blackout_combo.up || ! talent.blackout_combo.enabled )",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "( buff.press_the_advantage.stack > 9 ) & active_enemies > 3",
["action"] = "keg_smash",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 5 & buff.exploding_keg.up & buff.charred_passions.up",
["action"] = "spinning_crane_kick",
},
{
["action"] = "blackout_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "energy + energy.regen <= 40",
["action"] = "black_ox_brew",
},
{
["enabled"] = true,
["criteria"] = "buff.charred_passions.remains < cooldown.blackout_kick.remains & ( buff.blackout_combo.up || ! talent.blackout_combo.enabled )",
["action"] = "breath_of_fire",
},
{
["action"] = "bonedust_brew",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ( buff.bonedust_brew.up ) || ( cooldown.bonedust_brew.remains >= 20 ) )",
["action"] = "exploding_keg",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.bonedust_brew.enabled )",
["action"] = "exploding_keg",
},
{
["enabled"] = true,
["criteria"] = "( buff.blackout_combo.up || ! talent.blackout_combo.enabled )",
["action"] = "breath_of_fire",
},
{
["enabled"] = true,
["criteria"] = "buff.press_the_advantage.stack < 10",
["action"] = "keg_smash",
},
{
["enabled"] = true,
["criteria"] = "talent.rushing_jade_wind.enabled",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2",
["action"] = "spinning_crane_kick",
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
},
},
["version"] = 20240822,
["warnings"] = "The import for 'default' required some automated changes.\nLine 5: Converted 'talent.improved_celestial_brew' to 'talent.improved_celestial_brew.enabled' (1x).\n\nThis profile is missing support for generic trinkets.  It is recommended that every priority includes either:\n - [Use Items], which includes any trinkets not explicitly included in the priority; or\n - [Trinket 1] and [Trinket 2], which will recommend the trinket for the numbered slot.\nImported 5 action lists.\n",
["spec"] = 268,
["profile"] = "actions.precombat+=/potion\nactions.precombat+=/chi_burst,if=talent.chi_burst.enabled\n\nactions+=/spear_hand_strike,if=target.debuff.casting.react\nactions+=/diffuse_magic\nactions+=/vivify,if=health.pct<=settings.vivify_percent&buff.vivacious_vivification.up\nactions+=/purifying_brew,if=tanking&settings.purify_for_celestial&(time_to_max_charges<gcd.max||buff.purified_chi.up&buff.purified_chi.remains<1.5*gcd.max)||cooldown.celestial_brew.remains<2*gcd.max&charges_fractional>1.5\nactions+=/celestial_brew,if=tanking&(!talent.improved_celestial_brew||buff.purified_chi.up)&(!settings.max_damage||buff.blackout_combo.down)\n## actions+=/purifying_brew,line_cd=5,if=talent.improved_invoke_niuzao_the_black_ox&settings.purify_for_niuzao&pet.niuzao_the_black_ox.active\nactions+=/purifying_brew,if=group&(!settings.max_damage||buff.blackout_combo.down)&settings.purify_stagger_currhp>0&stagger.pct>=settings.purify_stagger_currhp\nactions+=/purifying_brew,if=solo&(!settings.max_damage||buff.blackout_combo.down)&settings.purify_stagger_currhp>0&stagger.pct>=settings.purify_stagger_currhp*0.5\nactions+=/purifying_brew,if=group&(settings.max_damage&buff.blackout_combo.down)&settings.purify_stagger_maxhp>0&stagger.pct>=settings.purify_stagger_maxhp\nactions+=/purifying_brew,if=solo&(!settings.max_damage||buff.blackout_combo.down)&settings.purify_stagger_maxhp>0&stagger.pct>=settings.purify_stagger_maxhp*0.5\nactions+=/purifying_brew,if=group&(!settings.max_damage||buff.blackout_combo.down)&settings.purify_stagger_currhp=0&settings.purify_stagger_maxhp=0&stagger.pct>20\nactions+=/purifying_brew,if=solo&(!settings.max_damage||buff.blackout_combo.down)&settings.purify_stagger_currhp=0&settings.purify_stagger_maxhp=0&stagger.pct>10\nactions+=/dampen_harm,if=health.pct<75&incoming_damage_3s>health.max*(0.2+(0.2*group))&buff.fortifying_brew.down\nactions+=/fortifying_brew,if=health.pct<50&incoming_damage_3s>health.max*(0.2+(0.2*group))&(buff.dampen_harm.down)\nactions+=/potion\nactions+=/touch_of_death\nactions+=/call_action_list,name=items\nactions+=/blood_fury\nactions+=/berserking\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\n## Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> when <a href='https://www.wowhead.com/spell=387184/weapons-of-order'>Weapons of Order</a> reaches 4 stacks.\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.weapons_of_order.remains<=20&talent.weapons_of_order.enabled\n# Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> when <a href='https://www.wowhead.com/spell=387184/weapons-of-order'>Weapons of Order</a> reaches 4 stacks.\n## actions+=/invoke_external_buff,name=power_infusion,if=!talent.weapons_of_order.enabled\nactions+=/expel_harm,if=buff.gift_of_the_ox.stack>4&health.pct<settings.eh_percent\nactions+=/call_action_list,name=rotation_pta,strict=1,if=talent.press_the_advantage.enabled\nactions+=/call_action_list,name=rotation_boc,strict=1,if=!talent.press_the_advantage.enabled\n\nactions.items+=/main_hand,if=boss&fight_remains<cooldown_duration||(debuff.weapons_of_order_debuff.stack>3||fight_remains>cooldown_remains)\nactions.items+=/trinket1,if=boss&fight_remains<cooldown_duration||(debuff.weapons_of_order_debuff.stack>3||fight_remains>cooldown_remains)\nactions.items+=/trinket2,if=boss&fight_remains<cooldown_duration||(debuff.weapons_of_order_debuff.stack>3||fight_remains>cooldown_remains)\n\nactions.rotation_pta+=/invoke_niuzao_the_black_ox\nactions.rotation_pta+=/rising_sun_kick,if=buff.press_the_advantage.stack<(7+main_hand.2h)\nactions.rotation_pta+=/rising_sun_kick,if=buff.press_the_advantage.stack>9&active_enemies<=3&(buff.blackout_combo.up||!talent.blackout_combo.enabled)\nactions.rotation_pta+=/keg_smash,if=(buff.press_the_advantage.stack>9)&active_enemies>3\nactions.rotation_pta+=/spinning_crane_kick,if=active_enemies>5&buff.exploding_keg.up&buff.charred_passions.up\nactions.rotation_pta+=/blackout_kick\n## actions.rotation_pta+=/purifying_brew,if=(!buff.blackout_combo.up)\nactions.rotation_pta+=/black_ox_brew,if=energy+energy.regen<=40\nactions.rotation_pta+=/breath_of_fire,if=buff.charred_passions.remains<cooldown.blackout_kick.remains&(buff.blackout_combo.up||!talent.blackout_combo.enabled)\nactions.rotation_pta+=/bonedust_brew\nactions.rotation_pta+=/exploding_keg,if=((buff.bonedust_brew.up)||(cooldown.bonedust_brew.remains>=20))\nactions.rotation_pta+=/exploding_keg,if=(!talent.bonedust_brew.enabled)\nactions.rotation_pta+=/breath_of_fire,if=(buff.blackout_combo.up||!talent.blackout_combo.enabled)\nactions.rotation_pta+=/keg_smash,if=buff.press_the_advantage.stack<10\nactions.rotation_pta+=/rushing_jade_wind,if=talent.rushing_jade_wind.enabled\nactions.rotation_pta+=/spinning_crane_kick,if=active_enemies>2\n## actions.rotation_pta+=/spinning_crane_kick,if=(1.1>(time-action.melee_main_hand.last_used)*(1+spell_haste)-main_hand.2h)\nactions.rotation_pta+=/chi_burst\n\nactions.rotation_boc+=/blackout_kick\n## actions.rotation_boc+=/purifying_brew,if=(buff.blackout_combo.down&(buff.recent_purifies.down||cooldown.purifying_brew.charges_fractional>(1+talent.improved_purifying_brew.enabled-0.1)))&talent.improved_invoke_niuzao_the_black_ox.enabled&(cooldown.weapons_of_order.remains>40||cooldown.weapons_of_order.remains<5)\nactions.rotation_boc+=/weapons_of_order,if=(buff.recent_purifies.up)&talent.improved_invoke_niuzao_the_black_ox.enabled\nactions.rotation_boc+=/invoke_niuzao_the_black_ox,if=(buff.invoke_niuzao_the_black_ox.down&buff.recent_purifies.up&buff.weapons_of_order.remains<14)&talent.improved_invoke_niuzao_the_black_ox.enabled\nactions.rotation_boc+=/invoke_niuzao_the_black_ox,if=(debuff.weapons_of_order_debuff.stack>3)&!talent.improved_invoke_niuzao_the_black_ox.enabled\nactions.rotation_boc+=/invoke_niuzao_the_black_ox,if=(!talent.weapons_of_order.enabled)\nactions.rotation_boc+=/weapons_of_order,if=(talent.weapons_of_order.enabled)&!talent.improved_invoke_niuzao_the_black_ox.enabled\nactions.rotation_boc+=/keg_smash,if=(time-action.weapons_of_order.last_used<2)\nactions.rotation_boc+=/keg_smash,if=(buff.weapons_of_order.remains<gcd*2&buff.weapons_of_order.up)&!talent.improved_invoke_niuzao_the_black_ox.enabled\nactions.rotation_boc+=/keg_smash,if=(buff.weapons_of_order.remains<gcd*2)&talent.improved_invoke_niuzao_the_black_ox.enabled\n## actions.rotation_boc+=/purifying_brew,if=(!buff.blackout_combo.up)&!talent.improved_invoke_niuzao_the_black_ox.enabled\nactions.rotation_boc+=/rising_sun_kick\nactions.rotation_boc+=/black_ox_brew,if=(energy+energy.regen<=40)\nactions.rotation_boc+=/tiger_palm,if=(buff.blackout_combo.up&active_enemies=1)\nactions.rotation_boc+=/breath_of_fire,if=(buff.charred_passions.remains<cooldown.blackout_kick.remains)\nactions.rotation_boc+=/keg_smash,if=(buff.weapons_of_order.up&debuff.weapons_of_order_debuff.stack<=3)\nactions.rotation_boc+=/bonedust_brew,if=(time<10&debuff.weapons_of_order_debuff.stack>3)||(time>10&talent.weapons_of_order.enabled)\nactions.rotation_boc+=/bonedust_brew,if=(!talent.weapons_of_order.enabled)\nactions.rotation_boc+=/exploding_keg,if=(buff.bonedust_brew.up)\nactions.rotation_boc+=/exploding_keg,if=(cooldown.bonedust_brew.remains>=20)\nactions.rotation_boc+=/exploding_keg,if=(!talent.bonedust_brew.enabled)\nactions.rotation_boc+=/keg_smash\nactions.rotation_boc+=/rushing_jade_wind,if=talent.rushing_jade_wind.enabled\nactions.rotation_boc+=/breath_of_fire\nactions.rotation_boc+=/tiger_palm,if=active_enemies=1&!talent.blackout_combo.enabled\nactions.rotation_boc+=/spinning_crane_kick,if=active_enemies>1\nactions.rotation_boc+=/chi_burst",
},
},
},
},
}
